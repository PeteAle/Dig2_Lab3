

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 10 17:59:44 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.10
    53                           ; Generated 31/07/2019 GMT
    54                           ; 
    55                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F887 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  0105                     	;# 
   150  0107                     	;# 
   151  0108                     	;# 
   152  0109                     	;# 
   153  010C                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  0185                     	;# 
   159  0187                     	;# 
   160  0188                     	;# 
   161  0189                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0013                     	;# 
   185  0014                     	;# 
   186  0015                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0017                     	;# 
   190  0018                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  001D                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  0081                     	;# 
   200  0085                     	;# 
   201  0086                     	;# 
   202  0087                     	;# 
   203  0088                     	;# 
   204  0089                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0095                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  0105                     	;# 
   228  0107                     	;# 
   229  0108                     	;# 
   230  0109                     	;# 
   231  010C                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  010E                     	;# 
   235  010F                     	;# 
   236  0185                     	;# 
   237  0187                     	;# 
   238  0188                     	;# 
   239  0189                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  000E                     	;# 
   258  000F                     	;# 
   259  0010                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0013                     	;# 
   263  0014                     	;# 
   264  0015                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001B                     	;# 
   273  001C                     	;# 
   274  001D                     	;# 
   275  001E                     	;# 
   276  001F                     	;# 
   277  0081                     	;# 
   278  0085                     	;# 
   279  0086                     	;# 
   280  0087                     	;# 
   281  0088                     	;# 
   282  0089                     	;# 
   283  008C                     	;# 
   284  008D                     	;# 
   285  008E                     	;# 
   286  008F                     	;# 
   287  0090                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0094                     	;# 
   294  0095                     	;# 
   295  0096                     	;# 
   296  0097                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009A                     	;# 
   300  009B                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  009F                     	;# 
   305  0105                     	;# 
   306  0107                     	;# 
   307  0108                     	;# 
   308  0109                     	;# 
   309  010C                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  010F                     	;# 
   314  0185                     	;# 
   315  0187                     	;# 
   316  0188                     	;# 
   317  0189                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320  0000                     	;# 
   321  0001                     	;# 
   322  0002                     	;# 
   323  0003                     	;# 
   324  0004                     	;# 
   325  0005                     	;# 
   326  0006                     	;# 
   327  0007                     	;# 
   328  0008                     	;# 
   329  0009                     	;# 
   330  000A                     	;# 
   331  000B                     	;# 
   332  000C                     	;# 
   333  000D                     	;# 
   334  000E                     	;# 
   335  000E                     	;# 
   336  000F                     	;# 
   337  0010                     	;# 
   338  0011                     	;# 
   339  0012                     	;# 
   340  0013                     	;# 
   341  0014                     	;# 
   342  0015                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0017                     	;# 
   346  0018                     	;# 
   347  0019                     	;# 
   348  001A                     	;# 
   349  001B                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  001D                     	;# 
   353  001E                     	;# 
   354  001F                     	;# 
   355  0081                     	;# 
   356  0085                     	;# 
   357  0086                     	;# 
   358  0087                     	;# 
   359  0088                     	;# 
   360  0089                     	;# 
   361  008C                     	;# 
   362  008D                     	;# 
   363  008E                     	;# 
   364  008F                     	;# 
   365  0090                     	;# 
   366  0091                     	;# 
   367  0092                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0095                     	;# 
   373  0096                     	;# 
   374  0097                     	;# 
   375  0098                     	;# 
   376  0099                     	;# 
   377  009A                     	;# 
   378  009B                     	;# 
   379  009C                     	;# 
   380  009D                     	;# 
   381  009E                     	;# 
   382  009F                     	;# 
   383  0105                     	;# 
   384  0107                     	;# 
   385  0108                     	;# 
   386  0109                     	;# 
   387  010C                     	;# 
   388  010C                     	;# 
   389  010D                     	;# 
   390  010E                     	;# 
   391  010F                     	;# 
   392  0185                     	;# 
   393  0187                     	;# 
   394  0188                     	;# 
   395  0189                     	;# 
   396  018C                     	;# 
   397  018D                     	;# 
   398  0000                     	;# 
   399  0001                     	;# 
   400  0002                     	;# 
   401  0003                     	;# 
   402  0004                     	;# 
   403  0005                     	;# 
   404  0006                     	;# 
   405  0007                     	;# 
   406  0008                     	;# 
   407  0009                     	;# 
   408  000A                     	;# 
   409  000B                     	;# 
   410  000C                     	;# 
   411  000D                     	;# 
   412  000E                     	;# 
   413  000E                     	;# 
   414  000F                     	;# 
   415  0010                     	;# 
   416  0011                     	;# 
   417  0012                     	;# 
   418  0013                     	;# 
   419  0014                     	;# 
   420  0015                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0017                     	;# 
   424  0018                     	;# 
   425  0019                     	;# 
   426  001A                     	;# 
   427  001B                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  001D                     	;# 
   431  001E                     	;# 
   432  001F                     	;# 
   433  0081                     	;# 
   434  0085                     	;# 
   435  0086                     	;# 
   436  0087                     	;# 
   437  0088                     	;# 
   438  0089                     	;# 
   439  008C                     	;# 
   440  008D                     	;# 
   441  008E                     	;# 
   442  008F                     	;# 
   443  0090                     	;# 
   444  0091                     	;# 
   445  0092                     	;# 
   446  0093                     	;# 
   447  0093                     	;# 
   448  0093                     	;# 
   449  0094                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009A                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  009F                     	;# 
   461  0105                     	;# 
   462  0107                     	;# 
   463  0108                     	;# 
   464  0109                     	;# 
   465  010C                     	;# 
   466  010C                     	;# 
   467  010D                     	;# 
   468  010E                     	;# 
   469  010F                     	;# 
   470  0185                     	;# 
   471  0187                     	;# 
   472  0188                     	;# 
   473  0189                     	;# 
   474  018C                     	;# 
   475  018D                     	;# 
   476                           
   477                           	psect	strings
   478  1000                     __pstrings:	
   479  1000                     stringtab:	
   480  1000                     __stringtab:	
   481                           
   482                           ;	String table - string pointers are 1 byte each
   483  1000  1BFF               	btfsc	btemp+1,7
   484  1001  280A               	ljmp	stringcode
   485  1002  1383               	bcf	3,7
   486  1003  187F               	btfsc	btemp+1,0
   487  1004  1783               	bsf	3,7
   488  1005  0800               	movf	0,w
   489  1006  0A84               	incf	4,f
   490  1007  1903               	skipnz
   491  1008  0AFF               	incf	btemp+1,f
   492  1009  0008               	return
   493  100A                     stringcode:	
   494  100A                     stringdir:	
   495  100A  3010               	movlw	high stringdir
   496  100B  008A               	movwf	10
   497  100C  0804               	movf	4,w
   498  100D  0A84               	incf	4,f
   499  100E  0782               	addwf	2,f
   500  100F                     __stringbase:	
   501  100F  3400               	retlw	0
   502  1010                     __end_of__stringtab:	
   503  1010                     __powers_:	
   504  1010  3400               	retlw	0
   505  1011  3400               	retlw	0
   506  1012  3480               	retlw	128
   507  1013  343F               	retlw	63
   508  1014  3400               	retlw	0
   509  1015  3400               	retlw	0
   510  1016  3420               	retlw	32
   511  1017  3441               	retlw	65
   512  1018  3400               	retlw	0
   513  1019  3400               	retlw	0
   514  101A  34C8               	retlw	200
   515  101B  3442               	retlw	66
   516  101C  3400               	retlw	0
   517  101D  3400               	retlw	0
   518  101E  347A               	retlw	122
   519  101F  3444               	retlw	68
   520  1020  3400               	retlw	0
   521  1021  3440               	retlw	64
   522  1022  341C               	retlw	28
   523  1023  3446               	retlw	70
   524  1024  3400               	retlw	0
   525  1025  3450               	retlw	80
   526  1026  34C3               	retlw	195
   527  1027  3447               	retlw	71
   528  1028  3400               	retlw	0
   529  1029  3424               	retlw	36
   530  102A  3474               	retlw	116
   531  102B  3449               	retlw	73
   532  102C  3480               	retlw	128
   533  102D  3496               	retlw	150
   534  102E  3418               	retlw	24
   535  102F  344B               	retlw	75
   536  1030  3420               	retlw	32
   537  1031  34BC               	retlw	188
   538  1032  34BE               	retlw	190
   539  1033  344C               	retlw	76
   540  1034  3428               	retlw	40
   541  1035  346B               	retlw	107
   542  1036  346E               	retlw	110
   543  1037  344E               	retlw	78
   544  1038  34F9               	retlw	249
   545  1039  3402               	retlw	2
   546  103A  3415               	retlw	21
   547  103B  3450               	retlw	80
   548  103C  34EC               	retlw	236
   549  103D  3478               	retlw	120
   550  103E  34AD               	retlw	173
   551  103F  3460               	retlw	96
   552  1040  34CA               	retlw	202
   553  1041  34F2               	retlw	242
   554  1042  3449               	retlw	73
   555  1043  3471               	retlw	113
   556  1044                     __end_of__powers_:	
   557  1044                     __npowers_:	
   558  1044  3400               	retlw	0
   559  1045  3400               	retlw	0
   560  1046  3480               	retlw	128
   561  1047  343F               	retlw	63
   562  1048  34CD               	retlw	205
   563  1049  34CC               	retlw	204
   564  104A  34CC               	retlw	204
   565  104B  343D               	retlw	61
   566  104C  340A               	retlw	10
   567  104D  34D7               	retlw	215
   568  104E  3423               	retlw	35
   569  104F  343C               	retlw	60
   570  1050  346F               	retlw	111
   571  1051  3412               	retlw	18
   572  1052  3483               	retlw	131
   573  1053  343A               	retlw	58
   574  1054  3417               	retlw	23
   575  1055  34B7               	retlw	183
   576  1056  34D1               	retlw	209
   577  1057  3438               	retlw	56
   578  1058  34AC               	retlw	172
   579  1059  34C5               	retlw	197
   580  105A  3427               	retlw	39
   581  105B  3437               	retlw	55
   582  105C  34BD               	retlw	189
   583  105D  3437               	retlw	55
   584  105E  3486               	retlw	134
   585  105F  3435               	retlw	53
   586  1060  3495               	retlw	149
   587  1061  34BF               	retlw	191
   588  1062  34D6               	retlw	214
   589  1063  3433               	retlw	51
   590  1064  3477               	retlw	119
   591  1065  34CC               	retlw	204
   592  1066  342B               	retlw	43
   593  1067  3432               	retlw	50
   594  1068  345F               	retlw	95
   595  1069  3470               	retlw	112
   596  106A  3489               	retlw	137
   597  106B  3430               	retlw	48
   598  106C  34FF               	retlw	255
   599  106D  34E6               	retlw	230
   600  106E  34DB               	retlw	219
   601  106F  342E               	retlw	46
   602  1070  3408               	retlw	8
   603  1071  34E5               	retlw	229
   604  1072  343C               	retlw	60
   605  1073  341E               	retlw	30
   606  1074  3460               	retlw	96
   607  1075  3442               	retlw	66
   608  1076  34A2               	retlw	162
   609  1077  340D               	retlw	13
   610  1078                     __end_of__npowers_:	
   611  1078                     _dpowers:	
   612  1078  3401               	retlw	1
   613  1079  3400               	retlw	0
   614  107A  3400               	retlw	0
   615  107B  3400               	retlw	0
   616  107C  340A               	retlw	10
   617  107D  3400               	retlw	0
   618  107E  3400               	retlw	0
   619  107F  3400               	retlw	0
   620  1080  3464               	retlw	100
   621  1081  3400               	retlw	0
   622  1082  3400               	retlw	0
   623  1083  3400               	retlw	0
   624  1084  34E8               	retlw	232
   625  1085  3403               	retlw	3
   626  1086  3400               	retlw	0
   627  1087  3400               	retlw	0
   628  1088  3410               	retlw	16
   629  1089  3427               	retlw	39
   630  108A  3400               	retlw	0
   631  108B  3400               	retlw	0
   632  108C  34A0               	retlw	160
   633  108D  3486               	retlw	134
   634  108E  3401               	retlw	1
   635  108F  3400               	retlw	0
   636  1090  3440               	retlw	64
   637  1091  3442               	retlw	66
   638  1092  340F               	retlw	15
   639  1093  3400               	retlw	0
   640  1094  3480               	retlw	128
   641  1095  3496               	retlw	150
   642  1096  3498               	retlw	152
   643  1097  3400               	retlw	0
   644  1098  3400               	retlw	0
   645  1099  34E1               	retlw	225
   646  109A  34F5               	retlw	245
   647  109B  3405               	retlw	5
   648  109C  3400               	retlw	0
   649  109D  34CA               	retlw	202
   650  109E  349A               	retlw	154
   651  109F  343B               	retlw	59
   652  10A0                     __end_of_dpowers:	
   653  0007                     _PORTCbits	set	7
   654  0008                     _PORTD	set	8
   655  0007                     _PORTC	set	7
   656  0006                     _PORTB	set	6
   657  0005                     _PORTA	set	5
   658  001E                     _ADRESH	set	30
   659  001F                     _ADCON0bits	set	31
   660  000C                     _PIR1bits	set	12
   661  000B                     _INTCONbits	set	11
   662  008F                     _OSCCONbits	set	143
   663  009F                     _ADCON1bits	set	159
   664  008C                     _PIE1bits	set	140
   665  0088                     _TRISD	set	136
   666  0087                     _TRISC	set	135
   667  0086                     _TRISB	set	134
   668  0085                     _TRISA	set	133
   669  0189                     _ANSELHbits	set	393
   670  0188                     _ANSEL	set	392
   671  10A0                     STR_4:	
   672  10A0  3425               	retlw	37	;'%'
   673  10A1  342E               	retlw	46	;'.'
   674  10A2  3431               	retlw	49	;'1'
   675  10A3  3466               	retlw	102	;'f'
   676  10A4  3400               	retlw	0
   677  10A5                     STR_1:	
   678  10A5  3453               	retlw	83	;'S'
   679  10A6  3431               	retlw	49	;'1'
   680  10A7  343A               	retlw	58	;':'
   681  10A8  3400               	retlw	0
   682  10A9                     STR_2:	
   683  10A9  3453               	retlw	83	;'S'
   684  10AA  3432               	retlw	50	;'2'
   685  10AB  343A               	retlw	58	;':'
   686  10AC  3400               	retlw	0
   687  10AD                     STR_3:	
   688  10AD  3453               	retlw	83	;'S'
   689  10AE  3433               	retlw	51	;'3'
   690  10AF  343A               	retlw	58	;':'
   691  10B0  3400               	retlw	0
   692  10A0                     
   693                           ; #config settings
   694  0000                     
   695                           	psect	cinit
   696  000F                     start_initialization:	
   697  000F                     __initialization:	
   698                           
   699                           ; Clear objects allocated to BANK0
   700  000F  1283               	bcf	3,5	;RP0=0, select bank0
   701  0010  1303               	bcf	3,6	;RP1=0, select bank0
   702  0011  01EF               	clrf	__pbssBANK0& (0+127)
   703                           
   704                           ; Clear objects allocated to BANK1
   705  0012  1383               	bcf	3,7	;select IRP bank0
   706  0013  30CA               	movlw	low __pbssBANK1
   707  0014  0084               	movwf	4
   708  0015  30E7               	movlw	low (__pbssBANK1+29)
   709  0016  160A  158A  20C6  120A  118A  	fcall	clear_ram0
   710  001B                     end_of_initialization:	
   711                           ;End of C runtime variable initialization code
   712                           
   713  001B                     __end_of__initialization:	
   714  001B  0183               	clrf	3
   715  001C  160A  158A  2E31   	ljmp	_main	;jump to C main() function
   716                           
   717                           	psect	bssBANK0
   718  006F                     __pbssBANK0:	
   719  006F                     _pot1:	
   720  006F                     	ds	1
   721                           
   722                           	psect	bssBANK1
   723  00CA                     __pbssBANK1:	
   724  00CA                     _pot2_val:	
   725  00CA                     	ds	4
   726  00CE                     _pot1_val:	
   727  00CE                     	ds	4
   728  00D2                     _pot2:	
   729  00D2                     	ds	1
   730  00D3                     _datos2:	
   731  00D3                     	ds	10
   732  00DD                     _datos1:	
   733  00DD                     	ds	10
   734                           
   735                           	psect	clrtext
   736  18C6                     clear_ram0:	
   737                           ;	Called with FSR containing the base address, and
   738                           ;	W with the last address+1
   739                           
   740  18C6  0064               	clrwdt	;clear the watchdog before getting into this loop
   741  18C7                     clrloop0:	
   742  18C7  0180               	clrf	0	;clear RAM location pointed to by FSR
   743  18C8  0A84               	incf	4,f	;increment pointer
   744  18C9  0604               	xorwf	4,w	;XOR with final address
   745  18CA  1903               	btfsc	3,2	;have we reached the end yet?
   746  18CB  3400               	retlw	0	;all done for this memory range, return
   747  18CC  0604               	xorwf	4,w	;XOR again to restore value
   748  18CD  28C7               	goto	clrloop0	;do the next byte
   749                           
   750                           	psect	cstackBANK1
   751  00A0                     __pcstackBANK1:	
   752  00A0                     ?___flsub:	
   753  00A0                     ___flsub@a:	
   754                           ; 4 bytes @ 0x0
   755                           
   756                           
   757                           ; 4 bytes @ 0x0
   758  00A0                     	ds	4
   759  00A4                     ___flsub@b:	
   760                           
   761                           ; 4 bytes @ 0x4
   762  00A4                     	ds	4
   763  00A8                     ??_sprintf:	
   764                           
   765                           ; 1 bytes @ 0x8
   766  00A8                     	ds	5
   767  00AD                     _sprintf$1111:	
   768                           
   769                           ; 4 bytes @ 0xD
   770  00AD                     	ds	4
   771  00B1                     sprintf@ap:	
   772                           
   773                           ; 1 bytes @ 0x11
   774  00B1                     	ds	1
   775  00B2                     sprintf@flag:	
   776                           
   777                           ; 2 bytes @ 0x12
   778  00B2                     	ds	2
   779  00B4                     sprintf@val:	
   780                           
   781                           ; 4 bytes @ 0x14
   782  00B4                     	ds	4
   783  00B8                     sprintf@eexp:	
   784                           
   785                           ; 2 bytes @ 0x18
   786  00B8                     	ds	2
   787  00BA                     sprintf@tmpval:	
   788                           
   789                           ; 4 bytes @ 0x1A
   790  00BA                     	ds	4
   791  00BE                     sprintf@sp:	
   792                           
   793                           ; 1 bytes @ 0x1E
   794  00BE                     	ds	1
   795  00BF                     sprintf@prec:	
   796                           
   797                           ; 2 bytes @ 0x1F
   798  00BF                     	ds	2
   799  00C1                     sprintf@fval:	
   800                           
   801                           ; 4 bytes @ 0x21
   802  00C1                     	ds	4
   803  00C5                     sprintf@c:	
   804                           
   805                           ; 1 bytes @ 0x25
   806  00C5                     	ds	1
   807  00C6                     ??_main:	
   808                           
   809                           ; 1 bytes @ 0x26
   810  00C6                     	ds	4
   811                           
   812                           	psect	cstackCOMMON
   813  0070                     __pcstackCOMMON:	
   814  0070                     ?_isdigit:	
   815  0070                     ?_setup:	
   816                           ; 1 bit 
   817                           
   818  0070                     ?_oscInt:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ?_lcd8_init2:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ?_adcSetup:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ?_analogInSel:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ?_adcFoscSel:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ?_intEnable:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ?_delay_1ms2:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_lcd8_cmd:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_isr:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ??_isr:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ?_main:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0070                     ?_lcd8_write:	
   852                           ; 1 bytes @ 0x0
   853                           
   854                           
   855                           ; 1 bytes @ 0x0
   856  0070                     	ds	3
   857  0073                     ?___fleq:	
   858  0073                     ?___flge:	
   859                           ; 1 bit 
   860                           
   861  0073                     ??_setup:	
   862                           ; 1 bit 
   863                           
   864  0073                     ??_oscInt:	
   865                           ; 1 bytes @ 0x3
   866                           
   867  0073                     ??_adcSetup:	
   868                           ; 1 bytes @ 0x3
   869                           
   870  0073                     ??_analogInSel:	
   871                           ; 1 bytes @ 0x3
   872                           
   873  0073                     ??_adcFoscSel:	
   874                           ; 1 bytes @ 0x3
   875                           
   876  0073                     ??_intEnable:	
   877                           ; 1 bytes @ 0x3
   878                           
   879  0073                     ??_delay_1ms2:	
   880                           ; 1 bytes @ 0x3
   881                           
   882  0073                     ??_isdigit:	
   883                           ; 1 bytes @ 0x3
   884                           
   885  0073                     ?__Umul8_16:	
   886                           ; 1 bytes @ 0x3
   887                           
   888  0073                     ?___wmul:	
   889                           ; 2 bytes @ 0x3
   890                           
   891  0073                     ?___awmod:	
   892                           ; 2 bytes @ 0x3
   893                           
   894  0073                     ?___lwmod:	
   895                           ; 2 bytes @ 0x3
   896                           
   897  0073                     ?__tdiv_to_l_:	
   898                           ; 2 bytes @ 0x3
   899                           
   900  0073                     ?__div_to_l_:	
   901                           ; 4 bytes @ 0x3
   902                           
   903  0073                     ?___lldiv:	
   904                           ; 4 bytes @ 0x3
   905                           
   906  0073                     ?___flneg:	
   907                           ; 4 bytes @ 0x3
   908                           
   909  0073                     ?___llmod:	
   910                           ; 4 bytes @ 0x3
   911                           
   912  0073                     ?___xxtofl:	
   913                           ; 4 bytes @ 0x3
   914                           
   915  0073                     _isdigit$932:	
   916                           ; 4 bytes @ 0x3
   917                           
   918  0073                     __Umul8_16@multiplicand:	
   919                           ; 1 bytes @ 0x3
   920                           
   921  0073                     delay_1ms2@i:	
   922                           ; 1 bytes @ 0x3
   923                           
   924  0073                     ___wmul@multiplier:	
   925                           ; 2 bytes @ 0x3
   926                           
   927  0073                     ___awmod@divisor:	
   928                           ; 2 bytes @ 0x3
   929                           
   930  0073                     ___lwmod@divisor:	
   931                           ; 2 bytes @ 0x3
   932                           
   933  0073                     ___lldiv@divisor:	
   934                           ; 2 bytes @ 0x3
   935                           
   936  0073                     __div_to_l_@f1:	
   937                           ; 4 bytes @ 0x3
   938                           
   939  0073                     ___fleq@ff1:	
   940                           ; 4 bytes @ 0x3
   941                           
   942  0073                     ___flge@ff1:	
   943                           ; 4 bytes @ 0x3
   944                           
   945  0073                     ___flneg@f1:	
   946                           ; 4 bytes @ 0x3
   947                           
   948  0073                     __tdiv_to_l_@f1:	
   949                           ; 4 bytes @ 0x3
   950                           
   951  0073                     ___llmod@divisor:	
   952                           ; 4 bytes @ 0x3
   953                           
   954  0073                     ___xxtofl@val:	
   955                           ; 4 bytes @ 0x3
   956                           
   957                           
   958                           ; 4 bytes @ 0x3
   959  0073                     	ds	1
   960  0074                     isdigit@c:	
   961                           
   962                           ; 1 bytes @ 0x4
   963  0074                     	ds	1
   964  0075                     ??_lcd8_cmd:	
   965  0075                     ??__Umul8_16:	
   966                           ; 1 bytes @ 0x5
   967                           
   968  0075                     ??_lcd8_write:	
   969                           ; 1 bytes @ 0x5
   970                           
   971  0075                     lcd8_cmd@cmd:	
   972                           ; 1 bytes @ 0x5
   973                           
   974  0075                     lcd8_write@dat:	
   975                           ; 1 bytes @ 0x5
   976                           
   977  0075                     analogInSel@analogIn:	
   978                           ; 1 bytes @ 0x5
   979                           
   980  0075                     adcFoscSel@fosc:	
   981                           ; 1 bytes @ 0x5
   982                           
   983  0075                     oscInt@freq:	
   984                           ; 1 bytes @ 0x5
   985                           
   986  0075                     ___wmul@multiplicand:	
   987                           ; 1 bytes @ 0x5
   988                           
   989  0075                     ___awmod@dividend:	
   990                           ; 2 bytes @ 0x5
   991                           
   992  0075                     ___lwmod@dividend:	
   993                           ; 2 bytes @ 0x5
   994                           
   995                           
   996                           ; 2 bytes @ 0x5
   997  0075                     	ds	1
   998  0076                     ??_lcd8_init2:	
   999  0076                     ?_lcd8_setCursor:	
  1000                           ; 1 bytes @ 0x6
  1001                           
  1002  0076                     ?_lcd8_display:	
  1003                           ; 1 bytes @ 0x6
  1004                           
  1005  0076                     lcd8_setCursor@columna:	
  1006                           ; 1 bytes @ 0x6
  1007                           
  1008  0076                     lcd8_display@value:	
  1009                           ; 1 bytes @ 0x6
  1010                           
  1011                           
  1012                           ; 2 bytes @ 0x6
  1013  0076                     	ds	1
  1014  0077                     ??_lcd8_setCursor:	
  1015  0077                     ??___wmul:	
  1016                           ; 1 bytes @ 0x7
  1017                           
  1018  0077                     ??___awmod:	
  1019                           ; 1 bytes @ 0x7
  1020                           
  1021  0077                     ??___flneg:	
  1022                           ; 1 bytes @ 0x7
  1023                           
  1024  0077                     ??___lwmod:	
  1025                           ; 1 bytes @ 0x7
  1026                           
  1027  0077                     ??___xxtofl:	
  1028                           ; 1 bytes @ 0x7
  1029                           
  1030  0077                     lcd8_setCursor@fila:	
  1031                           ; 1 bytes @ 0x7
  1032                           
  1033  0077                     ___wmul@product:	
  1034                           ; 1 bytes @ 0x7
  1035                           
  1036  0077                     ___lldiv@dividend:	
  1037                           ; 2 bytes @ 0x7
  1038                           
  1039  0077                     __div_to_l_@f2:	
  1040                           ; 4 bytes @ 0x7
  1041                           
  1042  0077                     ___fleq@ff2:	
  1043                           ; 4 bytes @ 0x7
  1044                           
  1045  0077                     ___flge@ff2:	
  1046                           ; 4 bytes @ 0x7
  1047                           
  1048  0077                     __tdiv_to_l_@f2:	
  1049                           ; 4 bytes @ 0x7
  1050                           
  1051  0077                     ___llmod@dividend:	
  1052                           ; 4 bytes @ 0x7
  1053                           
  1054                           
  1055                           ; 4 bytes @ 0x7
  1056  0077                     	ds	1
  1057  0078                     ??_lcd8_display:	
  1058  0078                     ___awmod@counter:	
  1059                           ; 1 bytes @ 0x8
  1060                           
  1061  0078                     ___lwmod@counter:	
  1062                           ; 1 bytes @ 0x8
  1063                           
  1064                           
  1065                           ; 1 bytes @ 0x8
  1066  0078                     	ds	1
  1067  0079                     ??___lwdiv:	
  1068  0079                     ___awmod@sign:	
  1069                           ; 1 bytes @ 0x9
  1070                           
  1071                           
  1072                           ; 1 bytes @ 0x9
  1073  0079                     	ds	1
  1074  007A                     ??___awdiv:	
  1075                           
  1076                           ; 1 bytes @ 0xA
  1077  007A                     	ds	1
  1078  007B                     ??___flsub:	
  1079                           
  1080                           	psect	cstackBANK0
  1081  0020                     __pcstackBANK0:	
  1082                           ; 1 bytes @ 0xB
  1083                           
  1084  0020                     ??__tdiv_to_l_:	
  1085  0020                     ??__div_to_l_:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  0020                     ??___lldiv:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0020                     ??___fleq:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  0020                     ??___flge:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097  0020                     ??___llmod:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100  0020                     ?___awdiv:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103  0020                     ?___lwdiv:	
  1104                           ; 2 bytes @ 0x0
  1105                           
  1106  0020                     ___xxtofl@sign:	
  1107                           ; 2 bytes @ 0x0
  1108                           
  1109  0020                     ___awdiv@divisor:	
  1110                           ; 1 bytes @ 0x0
  1111                           
  1112  0020                     ___lwdiv@divisor:	
  1113                           ; 2 bytes @ 0x0
  1114                           
  1115  0020                     __Umul8_16@product:	
  1116                           ; 2 bytes @ 0x0
  1117                           
  1118                           
  1119                           ; 2 bytes @ 0x0
  1120  0020                     	ds	1
  1121  0021                     ___llmod@counter:	
  1122  0021                     ___xxtofl@exp:	
  1123                           ; 1 bytes @ 0x1
  1124                           
  1125  0021                     ___lldiv@quotient:	
  1126                           ; 1 bytes @ 0x1
  1127                           
  1128  0021                     __div_to_l_@quot:	
  1129                           ; 4 bytes @ 0x1
  1130                           
  1131                           
  1132                           ; 4 bytes @ 0x1
  1133  0021                     	ds	1
  1134  0022                     ___awdiv@dividend:	
  1135  0022                     ___lwdiv@dividend:	
  1136                           ; 2 bytes @ 0x2
  1137                           
  1138  0022                     __Umul8_16@word_mpld:	
  1139                           ; 2 bytes @ 0x2
  1140                           
  1141  0022                     ___xxtofl@arg:	
  1142                           ; 2 bytes @ 0x2
  1143                           
  1144                           
  1145                           ; 4 bytes @ 0x2
  1146  0022                     	ds	2
  1147  0024                     ___awdiv@counter:	
  1148  0024                     __Umul8_16@multiplier:	
  1149                           ; 1 bytes @ 0x4
  1150                           
  1151  0024                     ___lwdiv@quotient:	
  1152                           ; 1 bytes @ 0x4
  1153                           
  1154  0024                     __tdiv_to_l_@quot:	
  1155                           ; 2 bytes @ 0x4
  1156                           
  1157                           
  1158                           ; 4 bytes @ 0x4
  1159  0024                     	ds	1
  1160  0025                     ___lldiv@counter:	
  1161  0025                     ___awdiv@sign:	
  1162                           ; 1 bytes @ 0x5
  1163                           
  1164  0025                     __div_to_l_@cntr:	
  1165                           ; 1 bytes @ 0x5
  1166                           
  1167                           
  1168                           ; 1 bytes @ 0x5
  1169  0025                     	ds	1
  1170  0026                     __div_to_l_@exp1:	
  1171  0026                     ___lwdiv@counter:	
  1172                           ; 1 bytes @ 0x6
  1173                           
  1174  0026                     ___awdiv@quotient:	
  1175                           ; 1 bytes @ 0x6
  1176                           
  1177                           
  1178                           ; 2 bytes @ 0x6
  1179  0026                     	ds	2
  1180  0028                     ?___flmul:	
  1181  0028                     __tdiv_to_l_@cntr:	
  1182                           ; 4 bytes @ 0x8
  1183                           
  1184  0028                     ___flmul@b:	
  1185                           ; 1 bytes @ 0x8
  1186                           
  1187                           
  1188                           ; 4 bytes @ 0x8
  1189  0028                     	ds	1
  1190  0029                     __tdiv_to_l_@exp1:	
  1191                           
  1192                           ; 1 bytes @ 0x9
  1193  0029                     	ds	3
  1194  002C                     ___flmul@a:	
  1195                           
  1196                           ; 4 bytes @ 0xC
  1197  002C                     	ds	4
  1198  0030                     ??___flmul:	
  1199                           
  1200                           ; 1 bytes @ 0x10
  1201  0030                     	ds	5
  1202  0035                     ___flmul@sign:	
  1203                           
  1204                           ; 1 bytes @ 0x15
  1205  0035                     	ds	1
  1206  0036                     ___flmul@grs:	
  1207                           
  1208                           ; 4 bytes @ 0x16
  1209  0036                     	ds	4
  1210  003A                     ___flmul@aexp:	
  1211                           
  1212                           ; 1 bytes @ 0x1A
  1213  003A                     	ds	1
  1214  003B                     ___flmul@bexp:	
  1215                           
  1216                           ; 1 bytes @ 0x1B
  1217  003B                     	ds	1
  1218  003C                     ___flmul@prod:	
  1219                           
  1220                           ; 4 bytes @ 0x1C
  1221  003C                     	ds	4
  1222  0040                     ___flmul@temp:	
  1223                           
  1224                           ; 2 bytes @ 0x20
  1225  0040                     	ds	2
  1226  0042                     ?_fround:	
  1227  0042                     ?_scale:	
  1228                           ; 4 bytes @ 0x22
  1229                           
  1230  0042                     ?___fldiv:	
  1231                           ; 4 bytes @ 0x22
  1232                           
  1233  0042                     ___fldiv@a:	
  1234                           ; 4 bytes @ 0x22
  1235                           
  1236                           
  1237                           ; 4 bytes @ 0x22
  1238  0042                     	ds	4
  1239  0046                     ??_fround:	
  1240  0046                     ??_scale:	
  1241                           ; 1 bytes @ 0x26
  1242                           
  1243  0046                     ___fldiv@b:	
  1244                           ; 1 bytes @ 0x26
  1245                           
  1246                           
  1247                           ; 4 bytes @ 0x26
  1248  0046                     	ds	4
  1249  004A                     ??___fldiv:	
  1250                           
  1251                           ; 1 bytes @ 0x2A
  1252  004A                     	ds	3
  1253  004D                     _fround$1109:	
  1254                           
  1255                           ; 4 bytes @ 0x2D
  1256  004D                     	ds	2
  1257  004F                     ___fldiv@rem:	
  1258                           
  1259                           ; 4 bytes @ 0x2F
  1260  004F                     	ds	1
  1261  0050                     _scale$1110:	
  1262                           
  1263                           ; 4 bytes @ 0x30
  1264  0050                     	ds	1
  1265  0051                     _fround$1108:	
  1266                           
  1267                           ; 4 bytes @ 0x31
  1268  0051                     	ds	2
  1269  0053                     ___fldiv@sign:	
  1270                           
  1271                           ; 1 bytes @ 0x33
  1272  0053                     	ds	1
  1273  0054                     scale@scl:	
  1274  0054                     ___fldiv@new_exp:	
  1275                           ; 1 bytes @ 0x34
  1276                           
  1277                           
  1278                           ; 2 bytes @ 0x34
  1279  0054                     	ds	1
  1280  0055                     ?___fltol:	
  1281  0055                     fround@prec:	
  1282                           ; 4 bytes @ 0x35
  1283                           
  1284  0055                     ___fltol@f1:	
  1285                           ; 1 bytes @ 0x35
  1286                           
  1287                           
  1288                           ; 4 bytes @ 0x35
  1289  0055                     	ds	1
  1290  0056                     ?___fladd:	
  1291  0056                     ___fladd@b:	
  1292                           ; 4 bytes @ 0x36
  1293                           
  1294  0056                     ___fldiv@grs:	
  1295                           ; 4 bytes @ 0x36
  1296                           
  1297                           
  1298                           ; 4 bytes @ 0x36
  1299  0056                     	ds	3
  1300  0059                     ??___fltol:	
  1301                           
  1302                           ; 1 bytes @ 0x39
  1303  0059                     	ds	1
  1304  005A                     ___fldiv@bexp:	
  1305  005A                     ___fladd@a:	
  1306                           ; 1 bytes @ 0x3A
  1307                           
  1308                           
  1309                           ; 4 bytes @ 0x3A
  1310  005A                     	ds	1
  1311  005B                     ___fldiv@aexp:	
  1312                           
  1313                           ; 1 bytes @ 0x3B
  1314  005B                     	ds	3
  1315  005E                     ??___fladd:	
  1316  005E                     ___fltol@sign1:	
  1317                           ; 1 bytes @ 0x3E
  1318                           
  1319                           
  1320                           ; 1 bytes @ 0x3E
  1321  005E                     	ds	1
  1322  005F                     ___fltol@exp1:	
  1323                           
  1324                           ; 1 bytes @ 0x3F
  1325  005F                     	ds	7
  1326  0066                     ___fladd@signs:	
  1327                           
  1328                           ; 1 bytes @ 0x46
  1329  0066                     	ds	1
  1330  0067                     ___fladd@aexp:	
  1331                           
  1332                           ; 1 bytes @ 0x47
  1333  0067                     	ds	1
  1334  0068                     ___fladd@bexp:	
  1335                           
  1336                           ; 1 bytes @ 0x48
  1337  0068                     	ds	1
  1338  0069                     ___fladd@grs:	
  1339                           
  1340                           ; 1 bytes @ 0x49
  1341  0069                     	ds	1
  1342  006A                     ?_sprintf:	
  1343  006A                     sprintf@f:	
  1344                           ; 2 bytes @ 0x4A
  1345                           
  1346                           
  1347                           ; 1 bytes @ 0x4A
  1348  006A                     	ds	5
  1349                           
  1350                           	psect	maintext
  1351  1E31                     __pmaintext:	
  1352 ;;
  1353 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1354 ;;
  1355 ;; *************** function _main *****************
  1356 ;; Defined at:
  1357 ;;		line 75 in file "Lab3_v2.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : B00/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1371 ;;      Params:         0       0       0       0       0
  1372 ;;      Locals:         0       0       0       0       0
  1373 ;;      Temps:          0       0       4       0       0
  1374 ;;      Totals:         0       0       4       0       0
  1375 ;;Total ram usage:        4 bytes
  1376 ;; Hardware stack levels required when called:    5
  1377 ;; This function calls:
  1378 ;;		___fldiv
  1379 ;;		___flmul
  1380 ;;		___xxtofl
  1381 ;;		_adcFoscSel
  1382 ;;		_adcSetup
  1383 ;;		_analogInSel
  1384 ;;		_delay_1ms2
  1385 ;;		_intEnable
  1386 ;;		_lcd8_display
  1387 ;;		_lcd8_init2
  1388 ;;		_lcd8_setCursor
  1389 ;;		_oscInt
  1390 ;;		_setup
  1391 ;;		_sprintf
  1392 ;; This function is called by:
  1393 ;;		Startup code after reset
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           
  1398                           ;psect for function _main
  1399  1E31                     _main:	
  1400  1E31                     l3777:	
  1401                           ;incstack = 0
  1402                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1403                           
  1404                           
  1405                           ;Lab3_v2.c: 76:     setup();
  1406  1E31  160A  158A  210D  160A  158A  	fcall	_setup
  1407  1E36                     l3779:	
  1408                           
  1409                           ;Lab3_v2.c: 77:     oscInt(1);
  1410  1E36  3001               	movlw	1
  1411  1E37  160A  158A  2523  160A  158A  	fcall	_oscInt
  1412  1E3C                     l3781:	
  1413                           
  1414                           ;Lab3_v2.c: 78:     lcd8_init2();
  1415  1E3C  160A  158A  22E2  160A  158A  	fcall	_lcd8_init2
  1416  1E41                     l3783:	
  1417                           
  1418                           ;Lab3_v2.c: 79:     adcSetup();
  1419  1E41  160A  118A  20B4  160A  158A  	fcall	_adcSetup
  1420  1E46                     l3785:	
  1421                           
  1422                           ;Lab3_v2.c: 80:     analogInSel(8);
  1423  1E46  3008               	movlw	8
  1424  1E47  160A  158A  2598  160A  158A  	fcall	_analogInSel
  1425  1E4C                     l3787:	
  1426                           
  1427                           ;Lab3_v2.c: 81:     adcFoscSel(1);
  1428  1E4C  3001               	movlw	1
  1429  1E4D  160A  158A  2152  160A  158A  	fcall	_adcFoscSel
  1430  1E52                     l3789:	
  1431                           
  1432                           ;Lab3_v2.c: 82:     intEnable();
  1433  1E52  160A  158A  20C0  160A  158A  	fcall	_intEnable
  1434  1E57                     l3791:	
  1435                           
  1436                           ;Lab3_v2.c: 84:         if (ADCON0bits.GO_DONE != 1){
  1437  1E57  1283               	bcf	3,5	;RP0=0, select bank0
  1438  1E58  1303               	bcf	3,6	;RP1=0, select bank0
  1439  1E59  189F               	btfsc	31,1	;volatile
  1440  1E5A  2E5C               	goto	u6201
  1441  1E5B  2E5D               	goto	u6200
  1442  1E5C                     u6201:	
  1443  1E5C  2E5E               	goto	l3795
  1444  1E5D                     u6200:	
  1445  1E5D                     l3793:	
  1446                           
  1447                           ;Lab3_v2.c: 85:             ADCON0bits.GO_DONE = 1;
  1448  1E5D  149F               	bsf	31,1	;volatile
  1449  1E5E                     l3795:	
  1450                           
  1451                           ;Lab3_v2.c: 87:         lcd8_setCursor(1,1);
  1452  1E5E  01F6               	clrf	lcd8_setCursor@columna
  1453  1E5F  0AF6               	incf	lcd8_setCursor@columna,f
  1454  1E60  3001               	movlw	1
  1455  1E61  160A  158A  2136  160A  158A  	fcall	_lcd8_setCursor
  1456                           
  1457                           ;Lab3_v2.c: 88:         delay_1ms2();
  1458  1E66  160A  158A  2120  160A  158A  	fcall	_delay_1ms2
  1459  1E6B                     l3797:	
  1460                           
  1461                           ;Lab3_v2.c: 89:         lcd8_display("S1:");
  1462  1E6B  3096               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1463  1E6C  00F6               	movwf	lcd8_display@value
  1464  1E6D  3080               	movlw	128
  1465  1E6E  00F7               	movwf	lcd8_display@value+1
  1466  1E6F  160A  158A  219C  160A  158A  	fcall	_lcd8_display
  1467  1E74                     l3799:	
  1468                           
  1469                           ;Lab3_v2.c: 90:         delay_1ms2();
  1470  1E74  160A  158A  2120  160A  158A  	fcall	_delay_1ms2
  1471  1E79                     l3801:	
  1472                           
  1473                           ;Lab3_v2.c: 91:         lcd8_setCursor(1,6);
  1474  1E79  3006               	movlw	6
  1475  1E7A  1683               	bsf	3,5	;RP0=1, select bank1
  1476  1E7B  1303               	bcf	3,6	;RP1=0, select bank1
  1477  1E7C  00C6               	movwf	??_main^(0+128)
  1478  1E7D  0846               	movf	??_main^(0+128),w
  1479  1E7E  00F6               	movwf	lcd8_setCursor@columna
  1480  1E7F  3001               	movlw	1
  1481  1E80  160A  158A  2136  160A  158A  	fcall	_lcd8_setCursor
  1482  1E85                     l3803:	
  1483                           
  1484                           ;Lab3_v2.c: 92:         delay_1ms2();
  1485  1E85  160A  158A  2120  160A  158A  	fcall	_delay_1ms2
  1486                           
  1487                           ;Lab3_v2.c: 93:         lcd8_display("S2:");
  1488  1E8A  309A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1489  1E8B  00F6               	movwf	lcd8_display@value
  1490  1E8C  3080               	movlw	128
  1491  1E8D  00F7               	movwf	lcd8_display@value+1
  1492  1E8E  160A  158A  219C  160A  158A  	fcall	_lcd8_display
  1493  1E93                     l3805:	
  1494                           
  1495                           ;Lab3_v2.c: 94:         delay_1ms2();
  1496  1E93  160A  158A  2120  160A  158A  	fcall	_delay_1ms2
  1497  1E98                     l3807:	
  1498                           
  1499                           ;Lab3_v2.c: 95:         lcd8_setCursor(1,11);
  1500  1E98  300B               	movlw	11
  1501  1E99  1683               	bsf	3,5	;RP0=1, select bank1
  1502  1E9A  1303               	bcf	3,6	;RP1=0, select bank1
  1503  1E9B  00C6               	movwf	??_main^(0+128)
  1504  1E9C  0846               	movf	??_main^(0+128),w
  1505  1E9D  00F6               	movwf	lcd8_setCursor@columna
  1506  1E9E  3001               	movlw	1
  1507  1E9F  160A  158A  2136  160A  158A  	fcall	_lcd8_setCursor
  1508  1EA4                     l3809:	
  1509                           
  1510                           ;Lab3_v2.c: 96:         delay_1ms2();
  1511  1EA4  160A  158A  2120  160A  158A  	fcall	_delay_1ms2
  1512  1EA9                     l3811:	
  1513                           
  1514                           ;Lab3_v2.c: 97:         lcd8_display("S3:");
  1515  1EA9  309E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1516  1EAA  00F6               	movwf	lcd8_display@value
  1517  1EAB  3080               	movlw	128
  1518  1EAC  00F7               	movwf	lcd8_display@value+1
  1519  1EAD  160A  158A  219C  160A  158A  	fcall	_lcd8_display
  1520                           
  1521                           ;Lab3_v2.c: 98:         delay_1ms2();
  1522  1EB2  160A  158A  2120  160A  158A  	fcall	_delay_1ms2
  1523                           
  1524                           ;Lab3_v2.c: 99:         pot1_val = (pot1*5.0)/255;
  1525  1EB7  3043               	movlw	67
  1526  1EB8  1283               	bcf	3,5	;RP0=0, select bank0
  1527  1EB9  1303               	bcf	3,6	;RP1=0, select bank0
  1528  1EBA  00C5               	movwf	___fldiv@a+3
  1529  1EBB  307F               	movlw	127
  1530  1EBC  00C4               	movwf	___fldiv@a+2
  1531  1EBD  3000               	movlw	0
  1532  1EBE  00C3               	movwf	___fldiv@a+1
  1533  1EBF  3000               	movlw	0
  1534  1EC0  00C2               	movwf	___fldiv@a
  1535  1EC1  3040               	movlw	64
  1536  1EC2  00AB               	movwf	___flmul@b+3
  1537  1EC3  30A0               	movlw	160
  1538  1EC4  00AA               	movwf	___flmul@b+2
  1539  1EC5  3000               	movlw	0
  1540  1EC6  00A9               	movwf	___flmul@b+1
  1541  1EC7  3000               	movlw	0
  1542  1EC8  00A8               	movwf	___flmul@b
  1543  1EC9  086F               	movf	_pot1,w
  1544  1ECA  1683               	bsf	3,5	;RP0=1, select bank1
  1545  1ECB  1303               	bcf	3,6	;RP1=0, select bank1
  1546  1ECC  00C6               	movwf	??_main^(0+128)
  1547  1ECD  01C7               	clrf	(??_main^(0+128)+1)
  1548  1ECE  01C8               	clrf	(??_main^(0+128)+2)
  1549  1ECF  01C9               	clrf	(??_main^(0+128)+3)
  1550  1ED0  0849               	movf	(??_main+3)^(0+128),w
  1551  1ED1  00F6               	movwf	___xxtofl@val+3
  1552  1ED2  0848               	movf	(??_main+2)^(0+128),w
  1553  1ED3  00F5               	movwf	___xxtofl@val+2
  1554  1ED4  0847               	movf	(??_main+1)^(0+128),w
  1555  1ED5  00F4               	movwf	___xxtofl@val+1
  1556  1ED6  0846               	movf	??_main^(0+128),w
  1557  1ED7  00F3               	movwf	___xxtofl@val
  1558  1ED8  3001               	movlw	1
  1559  1ED9  120A  158A  2080  160A  158A  	fcall	___xxtofl
  1560  1EDE  0876               	movf	?___xxtofl+3,w
  1561  1EDF  1283               	bcf	3,5	;RP0=0, select bank0
  1562  1EE0  1303               	bcf	3,6	;RP1=0, select bank0
  1563  1EE1  00AF               	movwf	___flmul@a+3
  1564  1EE2  0875               	movf	?___xxtofl+2,w
  1565  1EE3  00AE               	movwf	___flmul@a+2
  1566  1EE4  0874               	movf	?___xxtofl+1,w
  1567  1EE5  00AD               	movwf	___flmul@a+1
  1568  1EE6  0873               	movf	?___xxtofl,w
  1569  1EE7  00AC               	movwf	___flmul@a
  1570  1EE8  120A  158A  213C  160A  158A  	fcall	___flmul
  1571  1EED  1283               	bcf	3,5	;RP0=0, select bank0
  1572  1EEE  1303               	bcf	3,6	;RP1=0, select bank0
  1573  1EEF  082B               	movf	?___flmul+3,w
  1574  1EF0  00C9               	movwf	___fldiv@b+3
  1575  1EF1  082A               	movf	?___flmul+2,w
  1576  1EF2  00C8               	movwf	___fldiv@b+2
  1577  1EF3  0829               	movf	?___flmul+1,w
  1578  1EF4  00C7               	movwf	___fldiv@b+1
  1579  1EF5  0828               	movf	?___flmul,w
  1580  1EF6  00C6               	movwf	___fldiv@b
  1581  1EF7  160A  118A  218E  160A  158A  	fcall	___fldiv
  1582  1EFC  1283               	bcf	3,5	;RP0=0, select bank0
  1583  1EFD  1303               	bcf	3,6	;RP1=0, select bank0
  1584  1EFE  0845               	movf	?___fldiv+3,w
  1585  1EFF  1683               	bsf	3,5	;RP0=1, select bank1
  1586  1F00  1303               	bcf	3,6	;RP1=0, select bank1
  1587  1F01  00D1               	movwf	(_pot1_val+3)^(0+128)
  1588  1F02  1283               	bcf	3,5	;RP0=0, select bank0
  1589  1F03  1303               	bcf	3,6	;RP1=0, select bank0
  1590  1F04  0844               	movf	?___fldiv+2,w
  1591  1F05  1683               	bsf	3,5	;RP0=1, select bank1
  1592  1F06  1303               	bcf	3,6	;RP1=0, select bank1
  1593  1F07  00D0               	movwf	(_pot1_val+2)^(0+128)
  1594  1F08  1283               	bcf	3,5	;RP0=0, select bank0
  1595  1F09  1303               	bcf	3,6	;RP1=0, select bank0
  1596  1F0A  0843               	movf	?___fldiv+1,w
  1597  1F0B  1683               	bsf	3,5	;RP0=1, select bank1
  1598  1F0C  1303               	bcf	3,6	;RP1=0, select bank1
  1599  1F0D  00CF               	movwf	(_pot1_val+1)^(0+128)
  1600  1F0E  1283               	bcf	3,5	;RP0=0, select bank0
  1601  1F0F  1303               	bcf	3,6	;RP1=0, select bank0
  1602  1F10  0842               	movf	?___fldiv,w
  1603  1F11  1683               	bsf	3,5	;RP0=1, select bank1
  1604  1F12  1303               	bcf	3,6	;RP1=0, select bank1
  1605  1F13  00CE               	movwf	_pot1_val^(0+128)
  1606                           
  1607                           ;Lab3_v2.c: 100:         pot2_val = (pot2*5.0)/255;
  1608  1F14  3043               	movlw	67
  1609  1F15  1283               	bcf	3,5	;RP0=0, select bank0
  1610  1F16  1303               	bcf	3,6	;RP1=0, select bank0
  1611  1F17  00C5               	movwf	___fldiv@a+3
  1612  1F18  307F               	movlw	127
  1613  1F19  00C4               	movwf	___fldiv@a+2
  1614  1F1A  3000               	movlw	0
  1615  1F1B  00C3               	movwf	___fldiv@a+1
  1616  1F1C  3000               	movlw	0
  1617  1F1D  00C2               	movwf	___fldiv@a
  1618  1F1E  3040               	movlw	64
  1619  1F1F  00AB               	movwf	___flmul@b+3
  1620  1F20  30A0               	movlw	160
  1621  1F21  00AA               	movwf	___flmul@b+2
  1622  1F22  3000               	movlw	0
  1623  1F23  00A9               	movwf	___flmul@b+1
  1624  1F24  3000               	movlw	0
  1625  1F25  00A8               	movwf	___flmul@b
  1626  1F26  1683               	bsf	3,5	;RP0=1, select bank1
  1627  1F27  1303               	bcf	3,6	;RP1=0, select bank1
  1628  1F28  0852               	movf	_pot2^(0+128),w
  1629  1F29  00C6               	movwf	??_main^(0+128)
  1630  1F2A  01C7               	clrf	(??_main^(0+128)+1)
  1631  1F2B  01C8               	clrf	(??_main^(0+128)+2)
  1632  1F2C  01C9               	clrf	(??_main^(0+128)+3)
  1633  1F2D  0849               	movf	(??_main+3)^(0+128),w
  1634  1F2E  00F6               	movwf	___xxtofl@val+3
  1635  1F2F  0848               	movf	(??_main+2)^(0+128),w
  1636  1F30  00F5               	movwf	___xxtofl@val+2
  1637  1F31  0847               	movf	(??_main+1)^(0+128),w
  1638  1F32  00F4               	movwf	___xxtofl@val+1
  1639  1F33  0846               	movf	??_main^(0+128),w
  1640  1F34  00F3               	movwf	___xxtofl@val
  1641  1F35  3001               	movlw	1
  1642  1F36  120A  158A  2080  160A  158A  	fcall	___xxtofl
  1643  1F3B  0876               	movf	?___xxtofl+3,w
  1644  1F3C  1283               	bcf	3,5	;RP0=0, select bank0
  1645  1F3D  1303               	bcf	3,6	;RP1=0, select bank0
  1646  1F3E  00AF               	movwf	___flmul@a+3
  1647  1F3F  0875               	movf	?___xxtofl+2,w
  1648  1F40  00AE               	movwf	___flmul@a+2
  1649  1F41  0874               	movf	?___xxtofl+1,w
  1650  1F42  00AD               	movwf	___flmul@a+1
  1651  1F43  0873               	movf	?___xxtofl,w
  1652  1F44  00AC               	movwf	___flmul@a
  1653  1F45  120A  158A  213C  160A  158A  	fcall	___flmul
  1654  1F4A  1283               	bcf	3,5	;RP0=0, select bank0
  1655  1F4B  1303               	bcf	3,6	;RP1=0, select bank0
  1656  1F4C  082B               	movf	?___flmul+3,w
  1657  1F4D  00C9               	movwf	___fldiv@b+3
  1658  1F4E  082A               	movf	?___flmul+2,w
  1659  1F4F  00C8               	movwf	___fldiv@b+2
  1660  1F50  0829               	movf	?___flmul+1,w
  1661  1F51  00C7               	movwf	___fldiv@b+1
  1662  1F52  0828               	movf	?___flmul,w
  1663  1F53  00C6               	movwf	___fldiv@b
  1664  1F54  160A  118A  218E  160A  158A  	fcall	___fldiv
  1665  1F59  1283               	bcf	3,5	;RP0=0, select bank0
  1666  1F5A  1303               	bcf	3,6	;RP1=0, select bank0
  1667  1F5B  0845               	movf	?___fldiv+3,w
  1668  1F5C  1683               	bsf	3,5	;RP0=1, select bank1
  1669  1F5D  1303               	bcf	3,6	;RP1=0, select bank1
  1670  1F5E  00CD               	movwf	(_pot2_val+3)^(0+128)
  1671  1F5F  1283               	bcf	3,5	;RP0=0, select bank0
  1672  1F60  1303               	bcf	3,6	;RP1=0, select bank0
  1673  1F61  0844               	movf	?___fldiv+2,w
  1674  1F62  1683               	bsf	3,5	;RP0=1, select bank1
  1675  1F63  1303               	bcf	3,6	;RP1=0, select bank1
  1676  1F64  00CC               	movwf	(_pot2_val+2)^(0+128)
  1677  1F65  1283               	bcf	3,5	;RP0=0, select bank0
  1678  1F66  1303               	bcf	3,6	;RP1=0, select bank0
  1679  1F67  0843               	movf	?___fldiv+1,w
  1680  1F68  1683               	bsf	3,5	;RP0=1, select bank1
  1681  1F69  1303               	bcf	3,6	;RP1=0, select bank1
  1682  1F6A  00CB               	movwf	(_pot2_val+1)^(0+128)
  1683  1F6B  1283               	bcf	3,5	;RP0=0, select bank0
  1684  1F6C  1303               	bcf	3,6	;RP1=0, select bank0
  1685  1F6D  0842               	movf	?___fldiv,w
  1686  1F6E  1683               	bsf	3,5	;RP0=1, select bank1
  1687  1F6F  1303               	bcf	3,6	;RP1=0, select bank1
  1688  1F70  00CA               	movwf	_pot2_val^(0+128)
  1689                           
  1690                           ;Lab3_v2.c: 101:         lcd8_setCursor(2,1);
  1691  1F71  01F6               	clrf	lcd8_setCursor@columna
  1692  1F72  0AF6               	incf	lcd8_setCursor@columna,f
  1693  1F73  3002               	movlw	2
  1694  1F74  160A  158A  2136  160A  158A  	fcall	_lcd8_setCursor
  1695                           
  1696                           ;Lab3_v2.c: 102:         delay_1ms2();
  1697  1F79  160A  158A  2120  160A  158A  	fcall	_delay_1ms2
  1698  1F7E                     l3813:	
  1699                           
  1700                           ;Lab3_v2.c: 103:         sprintf(datos1, "%.1f", pot1_val);
  1701  1F7E  3091               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1702  1F7F  1683               	bsf	3,5	;RP0=1, select bank1
  1703  1F80  1303               	bcf	3,6	;RP1=0, select bank1
  1704  1F81  00C6               	movwf	??_main^(0+128)
  1705  1F82  0846               	movf	??_main^(0+128),w
  1706  1F83  1283               	bcf	3,5	;RP0=0, select bank0
  1707  1F84  1303               	bcf	3,6	;RP1=0, select bank0
  1708  1F85  00EA               	movwf	sprintf@f
  1709  1F86  1683               	bsf	3,5	;RP0=1, select bank1
  1710  1F87  1303               	bcf	3,6	;RP1=0, select bank1
  1711  1F88  0851               	movf	(_pot1_val+3)^(0+128),w
  1712  1F89  1283               	bcf	3,5	;RP0=0, select bank0
  1713  1F8A  1303               	bcf	3,6	;RP1=0, select bank0
  1714  1F8B  00EE               	movwf	?_sprintf+4
  1715  1F8C  1683               	bsf	3,5	;RP0=1, select bank1
  1716  1F8D  1303               	bcf	3,6	;RP1=0, select bank1
  1717  1F8E  0850               	movf	(_pot1_val+2)^(0+128),w
  1718  1F8F  1283               	bcf	3,5	;RP0=0, select bank0
  1719  1F90  1303               	bcf	3,6	;RP1=0, select bank0
  1720  1F91  00ED               	movwf	?_sprintf+3
  1721  1F92  1683               	bsf	3,5	;RP0=1, select bank1
  1722  1F93  1303               	bcf	3,6	;RP1=0, select bank1
  1723  1F94  084F               	movf	(_pot1_val+1)^(0+128),w
  1724  1F95  1283               	bcf	3,5	;RP0=0, select bank0
  1725  1F96  1303               	bcf	3,6	;RP1=0, select bank0
  1726  1F97  00EC               	movwf	?_sprintf+2
  1727  1F98  1683               	bsf	3,5	;RP0=1, select bank1
  1728  1F99  1303               	bcf	3,6	;RP1=0, select bank1
  1729  1F9A  084E               	movf	_pot1_val^(0+128),w
  1730  1F9B  1283               	bcf	3,5	;RP0=0, select bank0
  1731  1F9C  1303               	bcf	3,6	;RP1=0, select bank0
  1732  1F9D  00EB               	movwf	?_sprintf+1
  1733  1F9E  30DD               	movlw	(low (_datos1| 0))& (0+255)
  1734  1F9F  120A  118A  201F  160A  158A  	fcall	_sprintf
  1735  1FA4                     l3815:	
  1736                           
  1737                           ;Lab3_v2.c: 104:         lcd8_display(datos1);
  1738  1FA4  30DD               	movlw	(low (_datos1| 0))& (0+255)
  1739  1FA5  00F6               	movwf	lcd8_display@value
  1740  1FA6  3000               	movlw	0
  1741  1FA7  00F7               	movwf	lcd8_display@value+1
  1742  1FA8  160A  158A  219C  160A  158A  	fcall	_lcd8_display
  1743                           
  1744                           ;Lab3_v2.c: 105:         delay_1ms2();
  1745  1FAD  160A  158A  2120  160A  158A  	fcall	_delay_1ms2
  1746                           
  1747                           ;Lab3_v2.c: 106:         lcd8_setCursor(2,6);
  1748  1FB2  3006               	movlw	6
  1749  1FB3  1683               	bsf	3,5	;RP0=1, select bank1
  1750  1FB4  1303               	bcf	3,6	;RP1=0, select bank1
  1751  1FB5  00C6               	movwf	??_main^(0+128)
  1752  1FB6  0846               	movf	??_main^(0+128),w
  1753  1FB7  00F6               	movwf	lcd8_setCursor@columna
  1754  1FB8  3002               	movlw	2
  1755  1FB9  160A  158A  2136  160A  158A  	fcall	_lcd8_setCursor
  1756                           
  1757                           ;Lab3_v2.c: 107:         delay_1ms2();
  1758  1FBE  160A  158A  2120  160A  158A  	fcall	_delay_1ms2
  1759  1FC3                     l3817:	
  1760                           
  1761                           ;Lab3_v2.c: 108:         sprintf(datos2, "%.1f", pot2_val);
  1762  1FC3  3091               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1763  1FC4  1683               	bsf	3,5	;RP0=1, select bank1
  1764  1FC5  1303               	bcf	3,6	;RP1=0, select bank1
  1765  1FC6  00C6               	movwf	??_main^(0+128)
  1766  1FC7  0846               	movf	??_main^(0+128),w
  1767  1FC8  1283               	bcf	3,5	;RP0=0, select bank0
  1768  1FC9  1303               	bcf	3,6	;RP1=0, select bank0
  1769  1FCA  00EA               	movwf	sprintf@f
  1770  1FCB  1683               	bsf	3,5	;RP0=1, select bank1
  1771  1FCC  1303               	bcf	3,6	;RP1=0, select bank1
  1772  1FCD  084D               	movf	(_pot2_val+3)^(0+128),w
  1773  1FCE  1283               	bcf	3,5	;RP0=0, select bank0
  1774  1FCF  1303               	bcf	3,6	;RP1=0, select bank0
  1775  1FD0  00EE               	movwf	?_sprintf+4
  1776  1FD1  1683               	bsf	3,5	;RP0=1, select bank1
  1777  1FD2  1303               	bcf	3,6	;RP1=0, select bank1
  1778  1FD3  084C               	movf	(_pot2_val+2)^(0+128),w
  1779  1FD4  1283               	bcf	3,5	;RP0=0, select bank0
  1780  1FD5  1303               	bcf	3,6	;RP1=0, select bank0
  1781  1FD6  00ED               	movwf	?_sprintf+3
  1782  1FD7  1683               	bsf	3,5	;RP0=1, select bank1
  1783  1FD8  1303               	bcf	3,6	;RP1=0, select bank1
  1784  1FD9  084B               	movf	(_pot2_val+1)^(0+128),w
  1785  1FDA  1283               	bcf	3,5	;RP0=0, select bank0
  1786  1FDB  1303               	bcf	3,6	;RP1=0, select bank0
  1787  1FDC  00EC               	movwf	?_sprintf+2
  1788  1FDD  1683               	bsf	3,5	;RP0=1, select bank1
  1789  1FDE  1303               	bcf	3,6	;RP1=0, select bank1
  1790  1FDF  084A               	movf	_pot2_val^(0+128),w
  1791  1FE0  1283               	bcf	3,5	;RP0=0, select bank0
  1792  1FE1  1303               	bcf	3,6	;RP1=0, select bank0
  1793  1FE2  00EB               	movwf	?_sprintf+1
  1794  1FE3  30D3               	movlw	(low (_datos2| 0))& (0+255)
  1795  1FE4  120A  118A  201F  160A  158A  	fcall	_sprintf
  1796  1FE9                     l3819:	
  1797                           
  1798                           ;Lab3_v2.c: 109:         lcd8_display(datos2);
  1799  1FE9  30D3               	movlw	(low (_datos2| 0))& (0+255)
  1800  1FEA  00F6               	movwf	lcd8_display@value
  1801  1FEB  3000               	movlw	0
  1802  1FEC  00F7               	movwf	lcd8_display@value+1
  1803  1FED  160A  158A  219C  160A  158A  	fcall	_lcd8_display
  1804  1FF2                     l3821:	
  1805                           
  1806                           ;Lab3_v2.c: 110:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1807  1FF2  300D               	movlw	13
  1808  1FF3  1683               	bsf	3,5	;RP0=1, select bank1
  1809  1FF4  1303               	bcf	3,6	;RP1=0, select bank1
  1810  1FF5  00C7               	movwf	(??_main^(0+128)+1)
  1811  1FF6  30FB               	movlw	251
  1812  1FF7  00C6               	movwf	??_main^(0+128)
  1813  1FF8                     u6217:	
  1814  1FF8  0BC6               	decfsz	??_main^(0+128),f
  1815  1FF9  2FF8               	goto	u6217
  1816  1FFA  0BC7               	decfsz	(??_main^(0+128)+1),f
  1817  1FFB  2FF8               	goto	u6217
  1818  1FFC  2E57               	goto	l3791
  1819  1FFD  120A  118A  280C   	ljmp	start
  1820  2000                     __end_of_main:	
  1821                           
  1822                           	psect	text1
  1823  001F                     __ptext1:	
  1824 ;; *************** function _sprintf *****************
  1825 ;; Defined at:
  1826 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  sp              1    wreg     PTR unsigned char 
  1829 ;;		 -> datos2(10), datos1(10), 
  1830 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  1831 ;;		 -> STR_5(5), STR_4(5), 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  sp              1   30[BANK1 ] PTR unsigned char 
  1834 ;;		 -> datos2(10), datos1(10), 
  1835 ;;  fval            4   33[BANK1 ] PTR unsigned char 
  1836 ;;  tmpval          4   26[BANK1 ] struct .
  1837 ;;  val             4   20[BANK1 ] unsigned long 
  1838 ;;  prec            2   31[BANK1 ] int 
  1839 ;;  eexp            2   24[BANK1 ] int 
  1840 ;;  flag            2   18[BANK1 ] unsigned short 
  1841 ;;  cp              2    0        PTR const unsigned char 
  1842 ;;  len             2    0        unsigned int 
  1843 ;;  width           2    0        int 
  1844 ;;  c               1   37[BANK1 ] unsigned char 
  1845 ;;  ap              1   17[BANK1 ] PTR void [1]
  1846 ;;		 -> ?_sprintf(2), 
  1847 ;;  d               1    0        unsigned char 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  2   74[BANK0 ] int 
  1850 ;; Registers used:
  1851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1857 ;;      Params:         0       5       0       0       0
  1858 ;;      Locals:         0       0      25       0       0
  1859 ;;      Temps:          0       0       5       0       0
  1860 ;;      Totals:         0       5      30       0       0
  1861 ;;Total ram usage:       35 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    4
  1864 ;; This function calls:
  1865 ;;		___awdiv
  1866 ;;		___fladd
  1867 ;;		___fleq
  1868 ;;		___flge
  1869 ;;		___flmul
  1870 ;;		___flneg
  1871 ;;		___flsub
  1872 ;;		___fltol
  1873 ;;		___lldiv
  1874 ;;		___llmod
  1875 ;;		___wmul
  1876 ;;		___xxtofl
  1877 ;;		__div_to_l_
  1878 ;;		__tdiv_to_l_
  1879 ;;		_fround
  1880 ;;		_isdigit
  1881 ;;		_scale
  1882 ;; This function is called by:
  1883 ;;		_main
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           
  1888                           ;psect for function _sprintf
  1889  001F                     _sprintf:	
  1890                           
  1891                           ;incstack = 0
  1892                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1893                           ;sprintf@sp stored from wreg
  1894  001F  1683               	bsf	3,5	;RP0=1, select bank1
  1895  0020  1303               	bcf	3,6	;RP1=0, select bank1
  1896  0021  00BE               	movwf	sprintf@sp^(0+128)
  1897  0022                     l3385:	
  1898                           
  1899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 517:  int prec;
  1900  0022  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1901  0023  00A8               	movwf	??_sprintf^(0+128)
  1902  0024  0828               	movf	??_sprintf^(0+128),w
  1903  0025  00B1               	movwf	sprintf@ap^(0+128)
  1904                           
  1905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1906  0026  2E65               	goto	l3579
  1907  0027                     l3387:	
  1908                           
  1909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1910  0027  3025               	movlw	37
  1911  0028  0645               	xorwf	sprintf@c^(0+128),w
  1912  0029  1903               	btfsc	3,2
  1913  002A  282C               	goto	u5381
  1914  002B  282D               	goto	u5380
  1915  002C                     u5381:	
  1916  002C  2839               	goto	l3393
  1917  002D                     u5380:	
  1918  002D                     l3389:	
  1919                           
  1920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1921  002D  0845               	movf	sprintf@c^(0+128),w
  1922  002E  00A8               	movwf	??_sprintf^(0+128)
  1923  002F  083E               	movf	sprintf@sp^(0+128),w
  1924  0030  0084               	movwf	4
  1925  0031  0828               	movf	??_sprintf^(0+128),w
  1926  0032  1383               	bcf	3,7	;select IRP bank0
  1927  0033  0080               	movwf	0
  1928  0034                     l3391:	
  1929  0034  3001               	movlw	1
  1930  0035  00A8               	movwf	??_sprintf^(0+128)
  1931  0036  0828               	movf	??_sprintf^(0+128),w
  1932  0037  07BE               	addwf	sprintf@sp^(0+128),f
  1933                           
  1934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1935  0038  2E65               	goto	l3579
  1936  0039                     l3393:	
  1937                           
  1938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1939  0039  01B2               	clrf	sprintf@flag^(0+128)
  1940  003A  01B3               	clrf	(sprintf@flag+1)^(0+128)
  1941  003B                     l3395:	
  1942                           
  1943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 628:   if(*
      +                          f == '.') {
  1944  003B  1283               	bcf	3,5	;RP0=0, select bank0
  1945  003C  1303               	bcf	3,6	;RP1=0, select bank0
  1946  003D  086A               	movf	sprintf@f,w
  1947  003E  0084               	movwf	4
  1948  003F  160A  118A  200A  120A  118A  	fcall	stringdir
  1949  0044  3A2E               	xorlw	46
  1950  0045  1D03               	skipz
  1951  0046  2848               	goto	u5391
  1952  0047  2849               	goto	u5390
  1953  0048                     u5391:	
  1954  0048  289B               	goto	l3411
  1955  0049                     u5390:	
  1956  0049                     l3397:	
  1957                           
  1958                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 629:    fla
      +                          g |= 0x4000;
  1959  0049  1683               	bsf	3,5	;RP0=1, select bank1
  1960  004A  1303               	bcf	3,6	;RP1=0, select bank1
  1961  004B  1733               	bsf	(sprintf@flag^(0+128)+1),6
  1962  004C                     l3399:	
  1963                           
  1964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 630:    f++
      +                          ;
  1965  004C  3001               	movlw	1
  1966  004D  00A8               	movwf	??_sprintf^(0+128)
  1967  004E  0828               	movf	??_sprintf^(0+128),w
  1968  004F  1283               	bcf	3,5	;RP0=0, select bank0
  1969  0050  1303               	bcf	3,6	;RP1=0, select bank0
  1970  0051  07EA               	addwf	sprintf@f,f
  1971  0052                     l3401:	
  1972                           
  1973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 644:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 645:     prec
      +                           = 0;
  1974  0052  1683               	bsf	3,5	;RP0=1, select bank1
  1975  0053  1303               	bcf	3,6	;RP1=0, select bank1
  1976  0054  01BF               	clrf	sprintf@prec^(0+128)
  1977  0055  01C0               	clrf	(sprintf@prec+1)^(0+128)
  1978                           
  1979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1980  0056  2889               	goto	l3409
  1981  0057                     l3403:	
  1982                           
  1983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 647:      p
      +                          rec *= 10;
  1984  0057  300A               	movlw	10
  1985  0058  00F3               	movwf	___wmul@multiplier
  1986  0059  3000               	movlw	0
  1987  005A  00F4               	movwf	___wmul@multiplier+1
  1988  005B  1683               	bsf	3,5	;RP0=1, select bank1
  1989  005C  1303               	bcf	3,6	;RP1=0, select bank1
  1990  005D  0840               	movf	(sprintf@prec+1)^(0+128),w
  1991  005E  00F6               	movwf	___wmul@multiplicand+1
  1992  005F  083F               	movf	sprintf@prec^(0+128),w
  1993  0060  00F5               	movwf	___wmul@multiplicand
  1994  0061  160A  158A  2177  120A  118A  	fcall	___wmul
  1995  0066  0874               	movf	?___wmul+1,w
  1996  0067  1683               	bsf	3,5	;RP0=1, select bank1
  1997  0068  1303               	bcf	3,6	;RP1=0, select bank1
  1998  0069  00C0               	movwf	(sprintf@prec+1)^(0+128)
  1999  006A  0873               	movf	?___wmul,w
  2000  006B  00BF               	movwf	sprintf@prec^(0+128)
  2001  006C                     l3405:	
  2002                           
  2003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 648:       
      +                            prec += *f++ - '0';
  2004  006C  1283               	bcf	3,5	;RP0=0, select bank0
  2005  006D  1303               	bcf	3,6	;RP1=0, select bank0
  2006  006E  086A               	movf	sprintf@f,w
  2007  006F  0084               	movwf	4
  2008  0070  160A  118A  200A  120A  118A  	fcall	stringdir
  2009  0075  3ED0               	addlw	208
  2010  0076  1683               	bsf	3,5	;RP0=1, select bank1
  2011  0077  1303               	bcf	3,6	;RP1=0, select bank1
  2012  0078  00A8               	movwf	??_sprintf^(0+128)
  2013  0079  30FF               	movlw	255
  2014  007A  1803               	skipnc
  2015  007B  3000               	movlw	0
  2016  007C  00A9               	movwf	(??_sprintf^(0+128)+1)
  2017  007D  0828               	movf	??_sprintf^(0+128),w
  2018  007E  07BF               	addwf	sprintf@prec^(0+128),f
  2019  007F  1803               	skipnc
  2020  0080  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  2021  0081  0829               	movf	(??_sprintf+1)^(0+128),w
  2022  0082  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  2023  0083                     l3407:	
  2024  0083  3001               	movlw	1
  2025  0084  00A8               	movwf	??_sprintf^(0+128)
  2026  0085  0828               	movf	??_sprintf^(0+128),w
  2027  0086  1283               	bcf	3,5	;RP0=0, select bank0
  2028  0087  1303               	bcf	3,6	;RP1=0, select bank0
  2029  0088  07EA               	addwf	sprintf@f,f
  2030  0089                     l3409:	
  2031                           
  2032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  2033  0089  1283               	bcf	3,5	;RP0=0, select bank0
  2034  008A  086A               	movf	sprintf@f,w
  2035  008B  0084               	movwf	4
  2036  008C  160A  118A  200A  120A  118A  	fcall	stringdir
  2037  0091  160A  158A  20FB  120A  118A  	fcall	_isdigit
  2038  0096  1803               	btfsc	3,0
  2039  0097  2899               	goto	u5401
  2040  0098  289A               	goto	u5400
  2041  0099                     u5401:	
  2042  0099  2857               	goto	l3403
  2043  009A                     u5400:	
  2044  009A  28A3               	goto	l3417
  2045  009B                     l3411:	
  2046                           
  2047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 652:    pre
      +                          c = 0;
  2048  009B  1683               	bsf	3,5	;RP0=1, select bank1
  2049  009C  1303               	bcf	3,6	;RP1=0, select bank1
  2050  009D  01BF               	clrf	sprintf@prec^(0+128)
  2051  009E  01C0               	clrf	(sprintf@prec+1)^(0+128)
  2052  009F                     l3413:	
  2053                           
  2054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 654:    fla
      +                          g |= 0x1000;
  2055  009F  1633               	bsf	(sprintf@flag^(0+128)+1),4
  2056  00A0  28A3               	goto	l3417
  2057  00A1                     l309:	
  2058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 688:   case
      +                           'f':
  2059                           
  2060                           
  2061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 689:    fla
      +                          g |= 0x400;
  2062  00A1  1533               	bsf	(sprintf@flag^(0+128)+1),2
  2063                           
  2064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 690:    bre
      +                          ak;
  2065  00A2  28C1               	goto	l3419
  2066  00A3                     l3417:	
  2067  00A3  3001               	movlw	1
  2068  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  2069  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  2070  00A6  07EA               	addwf	sprintf@f,f
  2071  00A7  30FF               	movlw	-1
  2072  00A8  076A               	addwf	sprintf@f,w
  2073  00A9  0084               	movwf	4
  2074  00AA  160A  118A  200A  120A  118A  	fcall	stringdir
  2075  00AF  1683               	bsf	3,5	;RP0=1, select bank1
  2076  00B0  1303               	bcf	3,6	;RP1=0, select bank1
  2077  00B1  00C5               	movwf	sprintf@c^(0+128)
  2078  00B2  00A8               	movwf	??_sprintf^(0+128)
  2079  00B3  01A9               	clrf	(??_sprintf^(0+128)+1)
  2080                           
  2081                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2082                           ; Switch size 1, requested type "simple"
  2083                           ; Number of cases is 1, Range of values is 0 to 0
  2084                           ; switch strategies available:
  2085                           ; Name         Instructions Cycles
  2086                           ; simple_byte            4     3 (average)
  2087                           ; direct_byte           11     8 (fixed)
  2088                           ; jumptable            260     6 (fixed)
  2089                           ;	Chosen strategy is simple_byte
  2090  00B4  0829               	movf	(??_sprintf+1)^(0+128),w
  2091  00B5  3A00               	xorlw	0	; case 0
  2092  00B6  1903               	skipnz
  2093  00B7  28B9               	goto	l3913
  2094  00B8  2E65               	goto	l3579
  2095  00B9                     l3913:	
  2096                           
  2097                           ; Switch size 1, requested type "simple"
  2098                           ; Number of cases is 2, Range of values is 0 to 102
  2099                           ; switch strategies available:
  2100                           ; Name         Instructions Cycles
  2101                           ; simple_byte            7     4 (average)
  2102                           ; jumptable            260     6 (fixed)
  2103                           ;	Chosen strategy is simple_byte
  2104  00B9  0828               	movf	??_sprintf^(0+128),w
  2105  00BA  3A00               	xorlw	0	; case 0
  2106  00BB  1903               	skipnz
  2107  00BC  2E7B               	goto	l3581
  2108  00BD  3A66               	xorlw	102	; case 102
  2109  00BE  1903               	skipnz
  2110  00BF  28A1               	goto	l309
  2111  00C0  2E65               	goto	l3579
  2112  00C1                     l3419:	
  2113                           
  2114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 851:   if(f
      +                          lag & (0x700)) {
  2115  00C1  3000               	movlw	0
  2116  00C2  0532               	andwf	sprintf@flag^(0+128),w
  2117  00C3  00A8               	movwf	??_sprintf^(0+128)
  2118  00C4  3007               	movlw	7
  2119  00C5  0533               	andwf	(sprintf@flag+1)^(0+128),w
  2120  00C6  00A9               	movwf	(??_sprintf+1)^(0+128)
  2121  00C7  0828               	movf	??_sprintf^(0+128),w
  2122  00C8  0429               	iorwf	(??_sprintf^(0+128)+1),w
  2123  00C9  1903               	btfsc	3,2
  2124  00CA  28CC               	goto	u5411
  2125  00CB  28CD               	goto	u5410
  2126  00CC                     u5411:	
  2127  00CC  2E20               	goto	l3561
  2128  00CD                     u5410:	
  2129  00CD                     l3421:	
  2130                           
  2131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 853:    if(
      +                          flag & 0x1000)
  2132  00CD  1E33               	btfss	(sprintf@flag+1)^(0+128),4
  2133  00CE  28D0               	goto	u5421
  2134  00CF  28D1               	goto	u5420
  2135  00D0                     u5421:	
  2136  00D0  28D5               	goto	l3425
  2137  00D1                     u5420:	
  2138  00D1                     l3423:	
  2139                           
  2140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 855:     pr
      +                          ec = 6;
  2141  00D1  3006               	movlw	6
  2142  00D2  00BF               	movwf	sprintf@prec^(0+128)
  2143  00D3  3000               	movlw	0
  2144  00D4  00C0               	movwf	(sprintf@prec^(0+128)+1)
  2145  00D5                     l3425:	
  2146                           
  2147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 856:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  2148  00D5  0831               	movf	sprintf@ap^(0+128),w
  2149  00D6  0084               	movwf	4
  2150  00D7  1383               	bcf	3,7	;select IRP bank0
  2151  00D8  0800               	movf	0,w
  2152  00D9  00C1               	movwf	sprintf@fval^(0+128)
  2153  00DA  0A84               	incf	4,f
  2154  00DB  0800               	movf	0,w
  2155  00DC  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2156  00DD  0A84               	incf	4,f
  2157  00DE  0800               	movf	0,w
  2158  00DF  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2159  00E0  0A84               	incf	4,f
  2160  00E1  0800               	movf	0,w
  2161  00E2  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2162  00E3                     l3427:	
  2163  00E3  3004               	movlw	4
  2164  00E4  00A8               	movwf	??_sprintf^(0+128)
  2165  00E5  0828               	movf	??_sprintf^(0+128),w
  2166  00E6  07B1               	addwf	sprintf@ap^(0+128),f
  2167  00E7                     l3429:	
  2168                           
  2169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 857:    if(
      +                          fval < 0.0) {
  2170  00E7  0844               	movf	(sprintf@fval+3)^(0+128),w
  2171  00E8  00F6               	movwf	___flge@ff1+3
  2172  00E9  0843               	movf	(sprintf@fval+2)^(0+128),w
  2173  00EA  00F5               	movwf	___flge@ff1+2
  2174  00EB  0842               	movf	(sprintf@fval+1)^(0+128),w
  2175  00EC  00F4               	movwf	___flge@ff1+1
  2176  00ED  0841               	movf	sprintf@fval^(0+128),w
  2177  00EE  00F3               	movwf	___flge@ff1
  2178  00EF  3000               	movlw	0
  2179  00F0  00FA               	movwf	___flge@ff2+3
  2180  00F1  3000               	movlw	0
  2181  00F2  00F9               	movwf	___flge@ff2+2
  2182  00F3  3000               	movlw	0
  2183  00F4  00F8               	movwf	___flge@ff2+1
  2184  00F5  3000               	movlw	0
  2185  00F6  00F7               	movwf	___flge@ff2
  2186  00F7  160A  118A  20EA  120A  118A  	fcall	___flge
  2187  00FC  1803               	btfsc	3,0
  2188  00FD  28FF               	goto	u5431
  2189  00FE  2900               	goto	u5430
  2190  00FF                     u5431:	
  2191  00FF  291D               	goto	l3435
  2192  0100                     u5430:	
  2193  0100                     l3431:	
  2194                           
  2195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 858:     fv
      +                          al = -fval;
  2196  0100  1683               	bsf	3,5	;RP0=1, select bank1
  2197  0101  1303               	bcf	3,6	;RP1=0, select bank1
  2198  0102  0844               	movf	(sprintf@fval+3)^(0+128),w
  2199  0103  00F6               	movwf	___flneg@f1+3
  2200  0104  0843               	movf	(sprintf@fval+2)^(0+128),w
  2201  0105  00F5               	movwf	___flneg@f1+2
  2202  0106  0842               	movf	(sprintf@fval+1)^(0+128),w
  2203  0107  00F4               	movwf	___flneg@f1+1
  2204  0108  0841               	movf	sprintf@fval^(0+128),w
  2205  0109  00F3               	movwf	___flneg@f1
  2206  010A  160A  158A  20CE  120A  118A  	fcall	___flneg
  2207  010F  0876               	movf	?___flneg+3,w
  2208  0110  1683               	bsf	3,5	;RP0=1, select bank1
  2209  0111  1303               	bcf	3,6	;RP1=0, select bank1
  2210  0112  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2211  0113  0875               	movf	?___flneg+2,w
  2212  0114  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2213  0115  0874               	movf	?___flneg+1,w
  2214  0116  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2215  0117  0873               	movf	?___flneg,w
  2216  0118  00C1               	movwf	sprintf@fval^(0+128)
  2217  0119                     l3433:	
  2218                           
  2219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 859:     fl
      +                          ag |= 0x03;
  2220  0119  3003               	movlw	3
  2221  011A  04B2               	iorwf	sprintf@flag^(0+128),f
  2222  011B  3000               	movlw	0
  2223  011C  04B3               	iorwf	(sprintf@flag+1)^(0+128),f
  2224  011D                     l3435:	
  2225                           
  2226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 861:    eex
      +                          p = 0;
  2227  011D  1683               	bsf	3,5	;RP0=1, select bank1
  2228  011E  1303               	bcf	3,6	;RP1=0, select bank1
  2229  011F  01B8               	clrf	sprintf@eexp^(0+128)
  2230  0120  01B9               	clrf	(sprintf@eexp+1)^(0+128)
  2231  0121                     l3437:	
  2232                           
  2233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 862:    if(
      +                           fval!=0) {
  2234  0121  0844               	movf	(sprintf@fval+3)^(0+128),w
  2235  0122  00F6               	movwf	___fleq@ff1+3
  2236  0123  0843               	movf	(sprintf@fval+2)^(0+128),w
  2237  0124  00F5               	movwf	___fleq@ff1+2
  2238  0125  0842               	movf	(sprintf@fval+1)^(0+128),w
  2239  0126  00F4               	movwf	___fleq@ff1+1
  2240  0127  0841               	movf	sprintf@fval^(0+128),w
  2241  0128  00F3               	movwf	___fleq@ff1
  2242  0129  3000               	movlw	0
  2243  012A  00FA               	movwf	___fleq@ff2+3
  2244  012B  3000               	movlw	0
  2245  012C  00F9               	movwf	___fleq@ff2+2
  2246  012D  3000               	movlw	0
  2247  012E  00F8               	movwf	___fleq@ff2+1
  2248  012F  3000               	movlw	0
  2249  0130  00F7               	movwf	___fleq@ff2
  2250  0131  160A  158A  2242  120A  118A  	fcall	___fleq
  2251  0136  1803               	btfsc	3,0
  2252  0137  2939               	goto	u5441
  2253  0138  293A               	goto	u5440
  2254  0139                     u5441:	
  2255  0139  2A3A               	goto	l3463
  2256  013A                     u5440:	
  2257  013A                     l3439:	
  2258                           
  2259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 863:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2260  013A  1003               	clrc
  2261  013B  1683               	bsf	3,5	;RP0=1, select bank1
  2262  013C  1303               	bcf	3,6	;RP1=0, select bank1
  2263  013D  0D43               	rlf	(sprintf@fval+2)^(0+128),w
  2264  013E  0D44               	rlf	(sprintf@fval+3)^(0+128),w
  2265  013F  3E82               	addlw	130
  2266  0140  00B8               	movwf	sprintf@eexp^(0+128)
  2267  0141  30FF               	movlw	255
  2268  0142  1803               	skipnc
  2269  0143  3000               	movlw	0
  2270  0144  00B9               	movwf	(sprintf@eexp^(0+128)+1)
  2271  0145                     l3441:	
  2272                           
  2273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 864:     ee
      +                          xp--;
  2274  0145  30FF               	movlw	255
  2275  0146  07B8               	addwf	sprintf@eexp^(0+128),f
  2276  0147  1803               	skipnc
  2277  0148  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2278  0149  30FF               	movlw	255
  2279  014A  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2280  014B                     l3443:	
  2281                           
  2282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 865:     ee
      +                          xp *= 3;
  2283  014B  3003               	movlw	3
  2284  014C  00F3               	movwf	___wmul@multiplier
  2285  014D  3000               	movlw	0
  2286  014E  00F4               	movwf	___wmul@multiplier+1
  2287  014F  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2288  0150  00F6               	movwf	___wmul@multiplicand+1
  2289  0151  0838               	movf	sprintf@eexp^(0+128),w
  2290  0152  00F5               	movwf	___wmul@multiplicand
  2291  0153  160A  158A  2177  120A  118A  	fcall	___wmul
  2292  0158  0874               	movf	?___wmul+1,w
  2293  0159  1683               	bsf	3,5	;RP0=1, select bank1
  2294  015A  1303               	bcf	3,6	;RP1=0, select bank1
  2295  015B  00B9               	movwf	(sprintf@eexp+1)^(0+128)
  2296  015C  0873               	movf	?___wmul,w
  2297  015D  00B8               	movwf	sprintf@eexp^(0+128)
  2298  015E                     l3445:	
  2299                           
  2300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 866:     ee
      +                          xp /= 10;
  2301  015E  300A               	movlw	10
  2302  015F  1283               	bcf	3,5	;RP0=0, select bank0
  2303  0160  1303               	bcf	3,6	;RP1=0, select bank0
  2304  0161  00A0               	movwf	___awdiv@divisor
  2305  0162  3000               	movlw	0
  2306  0163  00A1               	movwf	___awdiv@divisor+1
  2307  0164  1683               	bsf	3,5	;RP0=1, select bank1
  2308  0165  1303               	bcf	3,6	;RP1=0, select bank1
  2309  0166  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2310  0167  1283               	bcf	3,5	;RP0=0, select bank0
  2311  0168  1303               	bcf	3,6	;RP1=0, select bank0
  2312  0169  00A3               	movwf	___awdiv@dividend+1
  2313  016A  1683               	bsf	3,5	;RP0=1, select bank1
  2314  016B  1303               	bcf	3,6	;RP1=0, select bank1
  2315  016C  0838               	movf	sprintf@eexp^(0+128),w
  2316  016D  1283               	bcf	3,5	;RP0=0, select bank0
  2317  016E  1303               	bcf	3,6	;RP1=0, select bank0
  2318  016F  00A2               	movwf	___awdiv@dividend
  2319  0170  160A  158A  244F  120A  118A  	fcall	___awdiv
  2320  0175  1283               	bcf	3,5	;RP0=0, select bank0
  2321  0176  1303               	bcf	3,6	;RP1=0, select bank0
  2322  0177  0821               	movf	?___awdiv+1,w
  2323  0178  1683               	bsf	3,5	;RP0=1, select bank1
  2324  0179  1303               	bcf	3,6	;RP1=0, select bank1
  2325  017A  00B9               	movwf	(sprintf@eexp+1)^(0+128)
  2326  017B  1283               	bcf	3,5	;RP0=0, select bank0
  2327  017C  1303               	bcf	3,6	;RP1=0, select bank0
  2328  017D  0820               	movf	?___awdiv,w
  2329  017E  1683               	bsf	3,5	;RP0=1, select bank1
  2330  017F  1303               	bcf	3,6	;RP1=0, select bank1
  2331  0180  00B8               	movwf	sprintf@eexp^(0+128)
  2332  0181                     l3447:	
  2333                           
  2334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (eexp < 0)
  2335  0181  1FB9               	btfss	(sprintf@eexp+1)^(0+128),7
  2336  0182  2984               	goto	u5451
  2337  0183  2985               	goto	u5450
  2338  0184                     u5451:	
  2339  0184  298B               	goto	l3451
  2340  0185                     u5450:	
  2341  0185                     l3449:	
  2342                           
  2343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  2344  0185  30FF               	movlw	255
  2345  0186  07B8               	addwf	sprintf@eexp^(0+128),f
  2346  0187  1803               	skipnc
  2347  0188  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2348  0189  30FF               	movlw	255
  2349  018A  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2350  018B                     l3451:	
  2351                           
  2352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 872:     tm
      +                          pval.integ = scale(-eexp);
  2353  018B  0338               	decf	sprintf@eexp^(0+128),w
  2354  018C  3AFF               	xorlw	255
  2355  018D  120A  158A  249D  120A  118A  	fcall	_scale
  2356  0192  1283               	bcf	3,5	;RP0=0, select bank0
  2357  0193  1303               	bcf	3,6	;RP1=0, select bank0
  2358  0194  0845               	movf	?_scale+3,w
  2359  0195  1683               	bsf	3,5	;RP0=1, select bank1
  2360  0196  1303               	bcf	3,6	;RP1=0, select bank1
  2361  0197  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2362  0198  1283               	bcf	3,5	;RP0=0, select bank0
  2363  0199  1303               	bcf	3,6	;RP1=0, select bank0
  2364  019A  0844               	movf	?_scale+2,w
  2365  019B  1683               	bsf	3,5	;RP0=1, select bank1
  2366  019C  1303               	bcf	3,6	;RP1=0, select bank1
  2367  019D  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2368  019E  1283               	bcf	3,5	;RP0=0, select bank0
  2369  019F  1303               	bcf	3,6	;RP1=0, select bank0
  2370  01A0  0843               	movf	?_scale+1,w
  2371  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  2372  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  2373  01A3  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2374  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  2375  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  2376  01A6  0842               	movf	?_scale,w
  2377  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  2378  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  2379  01A9  00BA               	movwf	sprintf@tmpval^(0+128)
  2380  01AA                     l3453:	
  2381                           
  2382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 873:     tm
      +                          pval.integ *= fval;
  2383  01AA  0844               	movf	(sprintf@fval+3)^(0+128),w
  2384  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  2385  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  2386  01AD  00AB               	movwf	___flmul@b+3
  2387  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  2388  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  2389  01B0  0843               	movf	(sprintf@fval+2)^(0+128),w
  2390  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2391  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  2392  01B3  00AA               	movwf	___flmul@b+2
  2393  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  2394  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  2395  01B6  0842               	movf	(sprintf@fval+1)^(0+128),w
  2396  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  2397  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  2398  01B9  00A9               	movwf	___flmul@b+1
  2399  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  2400  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  2401  01BC  0841               	movf	sprintf@fval^(0+128),w
  2402  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2403  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2404  01BF  00A8               	movwf	___flmul@b
  2405  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  2406  01C1  1303               	bcf	3,6	;RP1=0, select bank1
  2407  01C2  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2408  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2409  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2410  01C5  00AF               	movwf	___flmul@a+3
  2411  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  2412  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  2413  01C8  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2414  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  2415  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  2416  01CB  00AE               	movwf	___flmul@a+2
  2417  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  2418  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  2419  01CE  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2420  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2421  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2422  01D1  00AD               	movwf	___flmul@a+1
  2423  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2424  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  2425  01D4  083A               	movf	sprintf@tmpval^(0+128),w
  2426  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2427  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2428  01D7  00AC               	movwf	___flmul@a
  2429  01D8  120A  158A  213C  120A  118A  	fcall	___flmul
  2430  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2431  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2432  01DF  082B               	movf	?___flmul+3,w
  2433  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  2434  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  2435  01E2  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2436  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  2437  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  2438  01E5  082A               	movf	?___flmul+2,w
  2439  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  2440  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  2441  01E8  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2442  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2443  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  2444  01EB  0829               	movf	?___flmul+1,w
  2445  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  2446  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  2447  01EE  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2448  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2449  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2450  01F1  0828               	movf	?___flmul,w
  2451  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  2452  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  2453  01F4  00BA               	movwf	sprintf@tmpval^(0+128)
  2454  01F5                     l3455:	
  2455                           
  2456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 874:     if
      +                          (tmpval.integ < 1.0)
  2457  01F5  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2458  01F6  00F6               	movwf	___flge@ff1+3
  2459  01F7  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2460  01F8  00F5               	movwf	___flge@ff1+2
  2461  01F9  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2462  01FA  00F4               	movwf	___flge@ff1+1
  2463  01FB  083A               	movf	sprintf@tmpval^(0+128),w
  2464  01FC  00F3               	movwf	___flge@ff1
  2465  01FD  303F               	movlw	63
  2466  01FE  00FA               	movwf	___flge@ff2+3
  2467  01FF  3080               	movlw	128
  2468  0200  00F9               	movwf	___flge@ff2+2
  2469  0201  3000               	movlw	0
  2470  0202  00F8               	movwf	___flge@ff2+1
  2471  0203  3000               	movlw	0
  2472  0204  00F7               	movwf	___flge@ff2
  2473  0205  160A  118A  20EA  120A  118A  	fcall	___flge
  2474  020A  1803               	btfsc	3,0
  2475  020B  2A0D               	goto	u5461
  2476  020C  2A0E               	goto	u5460
  2477  020D                     u5461:	
  2478  020D  2A17               	goto	l3459
  2479  020E                     u5460:	
  2480  020E                     l3457:	
  2481                           
  2482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 875:      e
      +                          exp--;
  2483  020E  30FF               	movlw	255
  2484  020F  1683               	bsf	3,5	;RP0=1, select bank1
  2485  0210  1303               	bcf	3,6	;RP1=0, select bank1
  2486  0211  07B8               	addwf	sprintf@eexp^(0+128),f
  2487  0212  1803               	skipnc
  2488  0213  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2489  0214  30FF               	movlw	255
  2490  0215  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2491  0216  2A3A               	goto	l3463
  2492  0217                     l3459:	
  2493  0217  1683               	bsf	3,5	;RP0=1, select bank1
  2494  0218  1303               	bcf	3,6	;RP1=0, select bank1
  2495  0219  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2496  021A  00F6               	movwf	___flge@ff1+3
  2497  021B  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2498  021C  00F5               	movwf	___flge@ff1+2
  2499  021D  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2500  021E  00F4               	movwf	___flge@ff1+1
  2501  021F  083A               	movf	sprintf@tmpval^(0+128),w
  2502  0220  00F3               	movwf	___flge@ff1
  2503  0221  3041               	movlw	65
  2504  0222  00FA               	movwf	___flge@ff2+3
  2505  0223  3020               	movlw	32
  2506  0224  00F9               	movwf	___flge@ff2+2
  2507  0225  3000               	movlw	0
  2508  0226  00F8               	movwf	___flge@ff2+1
  2509  0227  3000               	movlw	0
  2510  0228  00F7               	movwf	___flge@ff2
  2511  0229  160A  118A  20EA  120A  118A  	fcall	___flge
  2512  022E  1C03               	btfss	3,0
  2513  022F  2A31               	goto	u5471
  2514  0230  2A32               	goto	u5470
  2515  0231                     u5471:	
  2516  0231  2A3A               	goto	l3463
  2517  0232                     u5470:	
  2518  0232                     l3461:	
  2519                           
  2520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 877:      e
      +                          exp++;
  2521  0232  3001               	movlw	1
  2522  0233  1683               	bsf	3,5	;RP0=1, select bank1
  2523  0234  1303               	bcf	3,6	;RP1=0, select bank1
  2524  0235  07B8               	addwf	sprintf@eexp^(0+128),f
  2525  0236  1803               	skipnc
  2526  0237  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2527  0238  3000               	movlw	0
  2528  0239  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2529  023A                     l3463:	
  2530                           
  2531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1138:      
      +                          if(prec <= 12)
  2532  023A  1683               	bsf	3,5	;RP0=1, select bank1
  2533  023B  1303               	bcf	3,6	;RP1=0, select bank1
  2534  023C  0840               	movf	(sprintf@prec+1)^(0+128),w
  2535  023D  3A80               	xorlw	128
  2536  023E  00FF               	movwf	btemp+1
  2537  023F  3080               	movlw	128
  2538  0240  027F               	subwf	btemp+1,w
  2539  0241  1D03               	skipz
  2540  0242  2A45               	goto	u5485
  2541  0243  300D               	movlw	13
  2542  0244  023F               	subwf	sprintf@prec^(0+128),w
  2543  0245                     u5485:	
  2544  0245  1803               	skipnc
  2545  0246  2A48               	goto	u5481
  2546  0247  2A49               	goto	u5480
  2547  0248                     u5481:	
  2548  0248  2A90               	goto	l3467
  2549  0249                     u5480:	
  2550  0249                     l3465:	
  2551                           
  2552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1139:      
      +                           fval += fround((unsigned int)prec);
  2553  0249  1683               	bsf	3,5	;RP0=1, select bank1
  2554  024A  1303               	bcf	3,6	;RP1=0, select bank1
  2555  024B  083F               	movf	sprintf@prec^(0+128),w
  2556  024C  160A  118A  236B  120A  118A  	fcall	_fround
  2557  0251  1283               	bcf	3,5	;RP0=0, select bank0
  2558  0252  1303               	bcf	3,6	;RP1=0, select bank0
  2559  0253  0845               	movf	?_fround+3,w
  2560  0254  00D9               	movwf	___fladd@b+3
  2561  0255  0844               	movf	?_fround+2,w
  2562  0256  00D8               	movwf	___fladd@b+2
  2563  0257  0843               	movf	?_fround+1,w
  2564  0258  00D7               	movwf	___fladd@b+1
  2565  0259  0842               	movf	?_fround,w
  2566  025A  00D6               	movwf	___fladd@b
  2567  025B  1683               	bsf	3,5	;RP0=1, select bank1
  2568  025C  1303               	bcf	3,6	;RP1=0, select bank1
  2569  025D  0844               	movf	(sprintf@fval+3)^(0+128),w
  2570  025E  1283               	bcf	3,5	;RP0=0, select bank0
  2571  025F  1303               	bcf	3,6	;RP1=0, select bank0
  2572  0260  00DD               	movwf	___fladd@a+3
  2573  0261  1683               	bsf	3,5	;RP0=1, select bank1
  2574  0262  1303               	bcf	3,6	;RP1=0, select bank1
  2575  0263  0843               	movf	(sprintf@fval+2)^(0+128),w
  2576  0264  1283               	bcf	3,5	;RP0=0, select bank0
  2577  0265  1303               	bcf	3,6	;RP1=0, select bank0
  2578  0266  00DC               	movwf	___fladd@a+2
  2579  0267  1683               	bsf	3,5	;RP0=1, select bank1
  2580  0268  1303               	bcf	3,6	;RP1=0, select bank1
  2581  0269  0842               	movf	(sprintf@fval+1)^(0+128),w
  2582  026A  1283               	bcf	3,5	;RP0=0, select bank0
  2583  026B  1303               	bcf	3,6	;RP1=0, select bank0
  2584  026C  00DB               	movwf	___fladd@a+1
  2585  026D  1683               	bsf	3,5	;RP0=1, select bank1
  2586  026E  1303               	bcf	3,6	;RP1=0, select bank1
  2587  026F  0841               	movf	sprintf@fval^(0+128),w
  2588  0270  1283               	bcf	3,5	;RP0=0, select bank0
  2589  0271  1303               	bcf	3,6	;RP1=0, select bank0
  2590  0272  00DA               	movwf	___fladd@a
  2591  0273  160A  118A  2578  120A  118A  	fcall	___fladd
  2592  0278  1283               	bcf	3,5	;RP0=0, select bank0
  2593  0279  1303               	bcf	3,6	;RP1=0, select bank0
  2594  027A  0859               	movf	?___fladd+3,w
  2595  027B  1683               	bsf	3,5	;RP0=1, select bank1
  2596  027C  1303               	bcf	3,6	;RP1=0, select bank1
  2597  027D  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2598  027E  1283               	bcf	3,5	;RP0=0, select bank0
  2599  027F  1303               	bcf	3,6	;RP1=0, select bank0
  2600  0280  0858               	movf	?___fladd+2,w
  2601  0281  1683               	bsf	3,5	;RP0=1, select bank1
  2602  0282  1303               	bcf	3,6	;RP1=0, select bank1
  2603  0283  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2604  0284  1283               	bcf	3,5	;RP0=0, select bank0
  2605  0285  1303               	bcf	3,6	;RP1=0, select bank0
  2606  0286  0857               	movf	?___fladd+1,w
  2607  0287  1683               	bsf	3,5	;RP0=1, select bank1
  2608  0288  1303               	bcf	3,6	;RP1=0, select bank1
  2609  0289  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2610  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2611  028B  1303               	bcf	3,6	;RP1=0, select bank0
  2612  028C  0856               	movf	?___fladd,w
  2613  028D  1683               	bsf	3,5	;RP0=1, select bank1
  2614  028E  1303               	bcf	3,6	;RP1=0, select bank1
  2615  028F  00C1               	movwf	sprintf@fval^(0+128)
  2616  0290                     l3467:	
  2617                           
  2618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1142:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2619  0290  1683               	bsf	3,5	;RP0=1, select bank1
  2620  0291  1303               	bcf	3,6	;RP1=0, select bank1
  2621  0292  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2622  0293  3A80               	xorlw	128
  2623  0294  00FF               	movwf	btemp+1
  2624  0295  3080               	movlw	128
  2625  0296  027F               	subwf	btemp+1,w
  2626  0297  1D03               	skipz
  2627  0298  2A9B               	goto	u5495
  2628  0299  300A               	movlw	10
  2629  029A  0238               	subwf	sprintf@eexp^(0+128),w
  2630  029B                     u5495:	
  2631  029B  1803               	skipnc
  2632  029C  2A9E               	goto	u5491
  2633  029D  2A9F               	goto	u5490
  2634  029E                     u5491:	
  2635  029E  2AF0               	goto	l3475
  2636  029F                     u5490:	
  2637  029F                     l3469:	
  2638  029F  1683               	bsf	3,5	;RP0=1, select bank1
  2639  02A0  1303               	bcf	3,6	;RP1=0, select bank1
  2640  02A1  0844               	movf	(sprintf@fval+3)^(0+128),w
  2641  02A2  00F6               	movwf	___fleq@ff1+3
  2642  02A3  0843               	movf	(sprintf@fval+2)^(0+128),w
  2643  02A4  00F5               	movwf	___fleq@ff1+2
  2644  02A5  0842               	movf	(sprintf@fval+1)^(0+128),w
  2645  02A6  00F4               	movwf	___fleq@ff1+1
  2646  02A7  0841               	movf	sprintf@fval^(0+128),w
  2647  02A8  00F3               	movwf	___fleq@ff1
  2648  02A9  3000               	movlw	0
  2649  02AA  00FA               	movwf	___fleq@ff2+3
  2650  02AB  3000               	movlw	0
  2651  02AC  00F9               	movwf	___fleq@ff2+2
  2652  02AD  3000               	movlw	0
  2653  02AE  00F8               	movwf	___fleq@ff2+1
  2654  02AF  3000               	movlw	0
  2655  02B0  00F7               	movwf	___fleq@ff2
  2656  02B1  160A  158A  2242  120A  118A  	fcall	___fleq
  2657  02B6  1803               	btfsc	3,0
  2658  02B7  2AB9               	goto	u5501
  2659  02B8  2ABA               	goto	u5500
  2660  02B9                     u5501:	
  2661  02B9  2B62               	goto	l3489
  2662  02BA                     u5500:	
  2663  02BA                     l3471:	
  2664  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  2665  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  2666  02BC  0844               	movf	(sprintf@fval+3)^(0+128),w
  2667  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  2668  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  2669  02BF  00D8               	movwf	___fltol@f1+3
  2670  02C0  1683               	bsf	3,5	;RP0=1, select bank1
  2671  02C1  1303               	bcf	3,6	;RP1=0, select bank1
  2672  02C2  0843               	movf	(sprintf@fval+2)^(0+128),w
  2673  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  2674  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  2675  02C5  00D7               	movwf	___fltol@f1+2
  2676  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  2677  02C7  1303               	bcf	3,6	;RP1=0, select bank1
  2678  02C8  0842               	movf	(sprintf@fval+1)^(0+128),w
  2679  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  2680  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  2681  02CB  00D6               	movwf	___fltol@f1+1
  2682  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  2683  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  2684  02CE  0841               	movf	sprintf@fval^(0+128),w
  2685  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2686  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2687  02D1  00D5               	movwf	___fltol@f1
  2688  02D2  120A  158A  2004  120A  118A  	fcall	___fltol
  2689  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  2690  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  2691  02D9  0858               	movf	?___fltol+3,w
  2692  02DA  0457               	iorwf	?___fltol+2,w
  2693  02DB  0456               	iorwf	?___fltol+1,w
  2694  02DC  0455               	iorwf	?___fltol,w
  2695  02DD  1D03               	skipz
  2696  02DE  2AE0               	goto	u5511
  2697  02DF  2AE1               	goto	u5510
  2698  02E0                     u5511:	
  2699  02E0  2B62               	goto	l3489
  2700  02E1                     u5510:	
  2701  02E1                     l3473:	
  2702  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  2703  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  2704  02E3  0839               	movf	(sprintf@eexp+1)^(0+128),w
  2705  02E4  3A80               	xorlw	128
  2706  02E5  00FF               	movwf	btemp+1
  2707  02E6  3080               	movlw	128
  2708  02E7  027F               	subwf	btemp+1,w
  2709  02E8  1D03               	skipz
  2710  02E9  2AEC               	goto	u5525
  2711  02EA  3002               	movlw	2
  2712  02EB  0238               	subwf	sprintf@eexp^(0+128),w
  2713  02EC                     u5525:	
  2714  02EC  1C03               	skipc
  2715  02ED  2AEF               	goto	u5521
  2716  02EE  2AF0               	goto	u5520
  2717  02EF                     u5521:	
  2718  02EF  2B62               	goto	l3489
  2719  02F0                     u5520:	
  2720  02F0                     l3475:	
  2721                           
  2722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1146:      
      +                          if(tmpval.integ < 4.294967296){
  2723  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  2724  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  2725  02F2  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2726  02F3  00F6               	movwf	___flge@ff1+3
  2727  02F4  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2728  02F5  00F5               	movwf	___flge@ff1+2
  2729  02F6  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2730  02F7  00F4               	movwf	___flge@ff1+1
  2731  02F8  083A               	movf	sprintf@tmpval^(0+128),w
  2732  02F9  00F3               	movwf	___flge@ff1
  2733  02FA  3040               	movlw	64
  2734  02FB  00FA               	movwf	___flge@ff2+3
  2735  02FC  3089               	movlw	137
  2736  02FD  00F9               	movwf	___flge@ff2+2
  2737  02FE  3070               	movlw	112
  2738  02FF  00F8               	movwf	___flge@ff2+1
  2739  0300  305F               	movlw	95
  2740  0301  00F7               	movwf	___flge@ff2
  2741  0302  160A  118A  20EA  120A  118A  	fcall	___flge
  2742  0307  1803               	btfsc	3,0
  2743  0308  2B0A               	goto	u5531
  2744  0309  2B0B               	goto	u5530
  2745  030A                     u5531:	
  2746  030A  2B14               	goto	l3479
  2747  030B                     u5530:	
  2748  030B                     l3477:	
  2749                           
  2750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1147:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2751  030B  30F7               	movlw	247
  2752  030C  1683               	bsf	3,5	;RP0=1, select bank1
  2753  030D  1303               	bcf	3,6	;RP1=0, select bank1
  2754  030E  07B8               	addwf	sprintf@eexp^(0+128),f
  2755  030F  1803               	skipnc
  2756  0310  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2757  0311  30FF               	movlw	255
  2758  0312  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2759                           
  2760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1148:      
      +                          }else{
  2761  0313  2B1C               	goto	l3481
  2762  0314                     l3479:	
  2763                           
  2764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1149:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2765  0314  30F8               	movlw	248
  2766  0315  1683               	bsf	3,5	;RP0=1, select bank1
  2767  0316  1303               	bcf	3,6	;RP1=0, select bank1
  2768  0317  07B8               	addwf	sprintf@eexp^(0+128),f
  2769  0318  1803               	skipnc
  2770  0319  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  2771  031A  30FF               	movlw	255
  2772  031B  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  2773  031C                     l3481:	
  2774                           
  2775                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1152:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  2776  031C  0838               	movf	sprintf@eexp^(0+128),w
  2777  031D  120A  158A  249D  120A  118A  	fcall	_scale
  2778  0322  1283               	bcf	3,5	;RP0=0, select bank0
  2779  0323  1303               	bcf	3,6	;RP1=0, select bank0
  2780  0324  0845               	movf	?_scale+3,w
  2781  0325  1683               	bsf	3,5	;RP0=1, select bank1
  2782  0326  1303               	bcf	3,6	;RP1=0, select bank1
  2783  0327  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2784  0328  1283               	bcf	3,5	;RP0=0, select bank0
  2785  0329  1303               	bcf	3,6	;RP1=0, select bank0
  2786  032A  0844               	movf	?_scale+2,w
  2787  032B  1683               	bsf	3,5	;RP0=1, select bank1
  2788  032C  1303               	bcf	3,6	;RP1=0, select bank1
  2789  032D  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2790  032E  1283               	bcf	3,5	;RP0=0, select bank0
  2791  032F  1303               	bcf	3,6	;RP1=0, select bank0
  2792  0330  0843               	movf	?_scale+1,w
  2793  0331  1683               	bsf	3,5	;RP0=1, select bank1
  2794  0332  1303               	bcf	3,6	;RP1=0, select bank1
  2795  0333  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2796  0334  1283               	bcf	3,5	;RP0=0, select bank0
  2797  0335  1303               	bcf	3,6	;RP1=0, select bank0
  2798  0336  0842               	movf	?_scale,w
  2799  0337  1683               	bsf	3,5	;RP0=1, select bank1
  2800  0338  1303               	bcf	3,6	;RP1=0, select bank1
  2801  0339  00BA               	movwf	sprintf@tmpval^(0+128)
  2802  033A                     l3483:	
  2803  033A  0844               	movf	(sprintf@fval+3)^(0+128),w
  2804  033B  00F6               	movwf	__div_to_l_@f1+3
  2805  033C  0843               	movf	(sprintf@fval+2)^(0+128),w
  2806  033D  00F5               	movwf	__div_to_l_@f1+2
  2807  033E  0842               	movf	(sprintf@fval+1)^(0+128),w
  2808  033F  00F4               	movwf	__div_to_l_@f1+1
  2809  0340  0841               	movf	sprintf@fval^(0+128),w
  2810  0341  00F3               	movwf	__div_to_l_@f1
  2811  0342  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2812  0343  00FA               	movwf	__div_to_l_@f2+3
  2813  0344  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2814  0345  00F9               	movwf	__div_to_l_@f2+2
  2815  0346  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2816  0347  00F8               	movwf	__div_to_l_@f2+1
  2817  0348  083A               	movf	sprintf@tmpval^(0+128),w
  2818  0349  00F7               	movwf	__div_to_l_@f2
  2819  034A  120A  118A  2680  120A  118A  	fcall	__div_to_l_
  2820  034F  0876               	movf	?__div_to_l_+3,w
  2821  0350  1683               	bsf	3,5	;RP0=1, select bank1
  2822  0351  1303               	bcf	3,6	;RP1=0, select bank1
  2823  0352  00B7               	movwf	(sprintf@val+3)^(0+128)
  2824  0353  0875               	movf	?__div_to_l_+2,w
  2825  0354  00B6               	movwf	(sprintf@val+2)^(0+128)
  2826  0355  0874               	movf	?__div_to_l_+1,w
  2827  0356  00B5               	movwf	(sprintf@val+1)^(0+128)
  2828  0357  0873               	movf	?__div_to_l_,w
  2829  0358  00B4               	movwf	sprintf@val^(0+128)
  2830  0359                     l3487:	
  2831                           
  2832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1155:      
      +                          fval = 0.0;
  2833  0359  3000               	movlw	0
  2834  035A  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2835  035B  3000               	movlw	0
  2836  035C  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2837  035D  3000               	movlw	0
  2838  035E  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2839  035F  3000               	movlw	0
  2840  0360  00C1               	movwf	sprintf@fval^(0+128)
  2841                           
  2842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1156:     }
      +                           else {
  2843  0361  2BC8               	goto	l3495
  2844  0362                     l3489:	
  2845                           
  2846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1157:      
      +                          val = (unsigned long)fval;
  2847  0362  1683               	bsf	3,5	;RP0=1, select bank1
  2848  0363  1303               	bcf	3,6	;RP1=0, select bank1
  2849  0364  0844               	movf	(sprintf@fval+3)^(0+128),w
  2850  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2852  0367  00D8               	movwf	___fltol@f1+3
  2853  0368  1683               	bsf	3,5	;RP0=1, select bank1
  2854  0369  1303               	bcf	3,6	;RP1=0, select bank1
  2855  036A  0843               	movf	(sprintf@fval+2)^(0+128),w
  2856  036B  1283               	bcf	3,5	;RP0=0, select bank0
  2857  036C  1303               	bcf	3,6	;RP1=0, select bank0
  2858  036D  00D7               	movwf	___fltol@f1+2
  2859  036E  1683               	bsf	3,5	;RP0=1, select bank1
  2860  036F  1303               	bcf	3,6	;RP1=0, select bank1
  2861  0370  0842               	movf	(sprintf@fval+1)^(0+128),w
  2862  0371  1283               	bcf	3,5	;RP0=0, select bank0
  2863  0372  1303               	bcf	3,6	;RP1=0, select bank0
  2864  0373  00D6               	movwf	___fltol@f1+1
  2865  0374  1683               	bsf	3,5	;RP0=1, select bank1
  2866  0375  1303               	bcf	3,6	;RP1=0, select bank1
  2867  0376  0841               	movf	sprintf@fval^(0+128),w
  2868  0377  1283               	bcf	3,5	;RP0=0, select bank0
  2869  0378  1303               	bcf	3,6	;RP1=0, select bank0
  2870  0379  00D5               	movwf	___fltol@f1
  2871  037A  120A  158A  2004  120A  118A  	fcall	___fltol
  2872  037F  1283               	bcf	3,5	;RP0=0, select bank0
  2873  0380  1303               	bcf	3,6	;RP1=0, select bank0
  2874  0381  0858               	movf	?___fltol+3,w
  2875  0382  1683               	bsf	3,5	;RP0=1, select bank1
  2876  0383  1303               	bcf	3,6	;RP1=0, select bank1
  2877  0384  00B7               	movwf	(sprintf@val+3)^(0+128)
  2878  0385  1283               	bcf	3,5	;RP0=0, select bank0
  2879  0386  1303               	bcf	3,6	;RP1=0, select bank0
  2880  0387  0857               	movf	?___fltol+2,w
  2881  0388  1683               	bsf	3,5	;RP0=1, select bank1
  2882  0389  1303               	bcf	3,6	;RP1=0, select bank1
  2883  038A  00B6               	movwf	(sprintf@val+2)^(0+128)
  2884  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2885  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2886  038D  0856               	movf	?___fltol+1,w
  2887  038E  1683               	bsf	3,5	;RP0=1, select bank1
  2888  038F  1303               	bcf	3,6	;RP1=0, select bank1
  2889  0390  00B5               	movwf	(sprintf@val+1)^(0+128)
  2890  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2891  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2892  0393  0855               	movf	?___fltol,w
  2893  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2894  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2895  0396  00B4               	movwf	sprintf@val^(0+128)
  2896  0397                     l3491:	
  2897                           
  2898                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1158:      
      +                          fval -= (double)val;
  2899  0397  0837               	movf	(sprintf@val+3)^(0+128),w
  2900  0398  00F6               	movwf	___xxtofl@val+3
  2901  0399  0836               	movf	(sprintf@val+2)^(0+128),w
  2902  039A  00F5               	movwf	___xxtofl@val+2
  2903  039B  0835               	movf	(sprintf@val+1)^(0+128),w
  2904  039C  00F4               	movwf	___xxtofl@val+1
  2905  039D  0834               	movf	sprintf@val^(0+128),w
  2906  039E  00F3               	movwf	___xxtofl@val
  2907  039F  3000               	movlw	0
  2908  03A0  120A  158A  2080  120A  118A  	fcall	___xxtofl
  2909  03A5  0876               	movf	?___xxtofl+3,w
  2910  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  2911  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  2912  03A8  00A3               	movwf	(___flsub@a+3)^(0+128)
  2913  03A9  0875               	movf	?___xxtofl+2,w
  2914  03AA  00A2               	movwf	(___flsub@a+2)^(0+128)
  2915  03AB  0874               	movf	?___xxtofl+1,w
  2916  03AC  00A1               	movwf	(___flsub@a+1)^(0+128)
  2917  03AD  0873               	movf	?___xxtofl,w
  2918  03AE  00A0               	movwf	___flsub@a^(0+128)
  2919  03AF  0844               	movf	(sprintf@fval+3)^(0+128),w
  2920  03B0  00A7               	movwf	(___flsub@b+3)^(0+128)
  2921  03B1  0843               	movf	(sprintf@fval+2)^(0+128),w
  2922  03B2  00A6               	movwf	(___flsub@b+2)^(0+128)
  2923  03B3  0842               	movf	(sprintf@fval+1)^(0+128),w
  2924  03B4  00A5               	movwf	(___flsub@b+1)^(0+128)
  2925  03B5  0841               	movf	sprintf@fval^(0+128),w
  2926  03B6  00A4               	movwf	___flsub@b^(0+128)
  2927  03B7  160A  158A  2292  120A  118A  	fcall	___flsub
  2928  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  2929  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  2930  03BE  0823               	movf	(?___flsub+3)^(0+128),w
  2931  03BF  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2932  03C0  0822               	movf	(?___flsub+2)^(0+128),w
  2933  03C1  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2934  03C2  0821               	movf	(?___flsub+1)^(0+128),w
  2935  03C3  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2936  03C4  0820               	movf	?___flsub^(0+128),w
  2937  03C5  00C1               	movwf	sprintf@fval^(0+128)
  2938  03C6                     l3493:	
  2939                           
  2940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1159:      
      +                          eexp = 0;
  2941  03C6  01B8               	clrf	sprintf@eexp^(0+128)
  2942  03C7  01B9               	clrf	(sprintf@eexp+1)^(0+128)
  2943  03C8                     l3495:	
  2944                           
  2945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1162:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2946  03C8  01C5               	clrf	sprintf@c^(0+128)
  2947  03C9  0AC5               	incf	sprintf@c^(0+128),f
  2948  03CA                     l3501:	
  2949                           
  2950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1163:      
      +                          if(val < dpowers[c])
  2951  03CA  0845               	movf	sprintf@c^(0+128),w
  2952  03CB  00A8               	movwf	??_sprintf^(0+128)
  2953  03CC  3001               	movlw	1
  2954  03CD                     u5545:	
  2955  03CD  1003               	clrc
  2956  03CE  0DA8               	rlf	??_sprintf^(0+128),f
  2957  03CF  3EFF               	addlw	-1
  2958  03D0  1D03               	skipz
  2959  03D1  2BCD               	goto	u5545
  2960  03D2  1003               	clrc
  2961  03D3  0D28               	rlf	??_sprintf^(0+128),w
  2962  03D4  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2963  03D5  0084               	movwf	4
  2964  03D6  160A  118A  200A  120A  118A  	fcall	stringdir
  2965  03DB  00A9               	movwf	(??_sprintf+1)^(0+128)
  2966  03DC  160A  118A  200A  120A  118A  	fcall	stringdir
  2967  03E1  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  2968  03E2  160A  118A  200A  120A  118A  	fcall	stringdir
  2969  03E7  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  2970  03E8  160A  118A  200A  120A  118A  	fcall	stringdir
  2971  03ED  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  2972  03EE  082C               	movf	(??_sprintf+4)^(0+128),w
  2973  03EF  0237               	subwf	(sprintf@val+3)^(0+128),w
  2974  03F0  1D03               	skipz
  2975  03F1  2BFC               	goto	u5555
  2976  03F2  082B               	movf	(??_sprintf+3)^(0+128),w
  2977  03F3  0236               	subwf	(sprintf@val+2)^(0+128),w
  2978  03F4  1D03               	skipz
  2979  03F5  2BFC               	goto	u5555
  2980  03F6  082A               	movf	(??_sprintf+2)^(0+128),w
  2981  03F7  0235               	subwf	(sprintf@val+1)^(0+128),w
  2982  03F8  1D03               	skipz
  2983  03F9  2BFC               	goto	u5555
  2984  03FA  0829               	movf	(??_sprintf+1)^(0+128),w
  2985  03FB  0234               	subwf	sprintf@val^(0+128),w
  2986  03FC                     u5555:	
  2987  03FC  1803               	skipnc
  2988  03FD  2BFF               	goto	u5551
  2989  03FE  2C00               	goto	u5550
  2990  03FF                     u5551:	
  2991  03FF  2C01               	goto	l3505
  2992  0400                     u5550:	
  2993  0400  2C0B               	goto	l3507
  2994  0401                     l3505:	
  2995  0401  3001               	movlw	1
  2996  0402  00A8               	movwf	??_sprintf^(0+128)
  2997  0403  0828               	movf	??_sprintf^(0+128),w
  2998  0404  07C5               	addwf	sprintf@c^(0+128),f
  2999  0405  300A               	movlw	10
  3000  0406  0645               	xorwf	sprintf@c^(0+128),w
  3001  0407  1D03               	btfss	3,2
  3002  0408  2C0A               	goto	u5561
  3003  0409  2C0B               	goto	u5560
  3004  040A                     u5561:	
  3005  040A  2BCA               	goto	l3501
  3006  040B                     u5560:	
  3007  040B                     l3507:	
  3008                           
  3009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1201:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1214:     i
      +                          f(flag & 0x03)
  3010  040B  3003               	movlw	3
  3011  040C  0532               	andwf	sprintf@flag^(0+128),w
  3012  040D  00A8               	movwf	??_sprintf^(0+128)
  3013  040E  3000               	movlw	0
  3014  040F  0533               	andwf	(sprintf@flag+1)^(0+128),w
  3015  0410  00A9               	movwf	(??_sprintf+1)^(0+128)
  3016  0411  0828               	movf	??_sprintf^(0+128),w
  3017  0412  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3018  0413  1903               	btfsc	3,2
  3019  0414  2C16               	goto	u5571
  3020  0415  2C17               	goto	u5570
  3021  0416                     u5571:	
  3022  0416  2C89               	goto	l335
  3023  0417                     u5570:	
  3024  0417                     l3509:	
  3025                           
  3026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1216:      
      +                          ((*sp++ = ('-')));
  3027  0417  302D               	movlw	45
  3028  0418  00A8               	movwf	??_sprintf^(0+128)
  3029  0419  083E               	movf	sprintf@sp^(0+128),w
  3030  041A  0084               	movwf	4
  3031  041B  0828               	movf	??_sprintf^(0+128),w
  3032  041C  1383               	bcf	3,7	;select IRP bank0
  3033  041D  0080               	movwf	0
  3034  041E                     l3511:	
  3035  041E  3001               	movlw	1
  3036  041F  00A8               	movwf	??_sprintf^(0+128)
  3037  0420  0828               	movf	??_sprintf^(0+128),w
  3038  0421  07BE               	addwf	sprintf@sp^(0+128),f
  3039  0422  2C89               	goto	l335
  3040  0423                     l3513:	
  3041                           
  3042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1226:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1227:      
      +                          tmpval.vd = val/dpowers[c];
  3043  0423  0845               	movf	sprintf@c^(0+128),w
  3044  0424  00A8               	movwf	??_sprintf^(0+128)
  3045  0425  3001               	movlw	1
  3046  0426                     u5585:	
  3047  0426  1003               	clrc
  3048  0427  0DA8               	rlf	??_sprintf^(0+128),f
  3049  0428  3EFF               	addlw	-1
  3050  0429  1D03               	skipz
  3051  042A  2C26               	goto	u5585
  3052  042B  1003               	clrc
  3053  042C  0D28               	rlf	??_sprintf^(0+128),w
  3054  042D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3055  042E  0084               	movwf	4
  3056  042F  160A  118A  200A  120A  118A  	fcall	stringdir
  3057  0434  00F3               	movwf	___lldiv@divisor
  3058  0435  160A  118A  200A  120A  118A  	fcall	stringdir
  3059  043A  00F4               	movwf	___lldiv@divisor+1
  3060  043B  160A  118A  200A  120A  118A  	fcall	stringdir
  3061  0440  00F5               	movwf	___lldiv@divisor+2
  3062  0441  160A  118A  200A  120A  118A  	fcall	stringdir
  3063  0446  00F6               	movwf	___lldiv@divisor+3
  3064  0447  0837               	movf	(sprintf@val+3)^(0+128),w
  3065  0448  00FA               	movwf	___lldiv@dividend+3
  3066  0449  0836               	movf	(sprintf@val+2)^(0+128),w
  3067  044A  00F9               	movwf	___lldiv@dividend+2
  3068  044B  0835               	movf	(sprintf@val+1)^(0+128),w
  3069  044C  00F8               	movwf	___lldiv@dividend+1
  3070  044D  0834               	movf	sprintf@val^(0+128),w
  3071  044E  00F7               	movwf	___lldiv@dividend
  3072  044F  160A  158A  23E7  120A  118A  	fcall	___lldiv
  3073  0454  0876               	movf	?___lldiv+3,w
  3074  0455  1683               	bsf	3,5	;RP0=1, select bank1
  3075  0456  1303               	bcf	3,6	;RP1=0, select bank1
  3076  0457  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3077  0458  0875               	movf	?___lldiv+2,w
  3078  0459  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3079  045A  0874               	movf	?___lldiv+1,w
  3080  045B  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3081  045C  0873               	movf	?___lldiv,w
  3082  045D  00BA               	movwf	sprintf@tmpval^(0+128)
  3083  045E                     l3515:	
  3084                           
  3085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1228:      
      +                          tmpval.vd %= 10;
  3086  045E  3000               	movlw	0
  3087  045F  00F6               	movwf	___llmod@divisor+3
  3088  0460  3000               	movlw	0
  3089  0461  00F5               	movwf	___llmod@divisor+2
  3090  0462  3000               	movlw	0
  3091  0463  00F4               	movwf	___llmod@divisor+1
  3092  0464  300A               	movlw	10
  3093  0465  00F3               	movwf	___llmod@divisor
  3094  0466  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  3095  0467  00FA               	movwf	___llmod@dividend+3
  3096  0468  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  3097  0469  00F9               	movwf	___llmod@dividend+2
  3098  046A  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  3099  046B  00F8               	movwf	___llmod@dividend+1
  3100  046C  083A               	movf	sprintf@tmpval^(0+128),w
  3101  046D  00F7               	movwf	___llmod@dividend
  3102  046E  160A  158A  2338  120A  118A  	fcall	___llmod
  3103  0473  0876               	movf	?___llmod+3,w
  3104  0474  1683               	bsf	3,5	;RP0=1, select bank1
  3105  0475  1303               	bcf	3,6	;RP1=0, select bank1
  3106  0476  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3107  0477  0875               	movf	?___llmod+2,w
  3108  0478  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3109  0479  0874               	movf	?___llmod+1,w
  3110  047A  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3111  047B  0873               	movf	?___llmod,w
  3112  047C  00BA               	movwf	sprintf@tmpval^(0+128)
  3113  047D                     l3517:	
  3114                           
  3115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1229:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  3116  047D  083A               	movf	sprintf@tmpval^(0+128),w
  3117  047E  3E30               	addlw	48
  3118  047F  00A8               	movwf	??_sprintf^(0+128)
  3119  0480  083E               	movf	sprintf@sp^(0+128),w
  3120  0481  0084               	movwf	4
  3121  0482  0828               	movf	??_sprintf^(0+128),w
  3122  0483  1383               	bcf	3,7	;select IRP bank0
  3123  0484  0080               	movwf	0
  3124  0485  3001               	movlw	1
  3125  0486  00A8               	movwf	??_sprintf^(0+128)
  3126  0487  0828               	movf	??_sprintf^(0+128),w
  3127  0488  07BE               	addwf	sprintf@sp^(0+128),f
  3128  0489                     l335:	
  3129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1230:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1232:    }
  3130                           
  3131                           
  3132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1222:    wh
      +                          ile(c--) {
  3133  0489  3001               	movlw	1
  3134  048A  02C5               	subwf	sprintf@c^(0+128),f
  3135  048B  0A45               	incf	sprintf@c^(0+128),w
  3136  048C  1D03               	btfss	3,2
  3137  048D  2C8F               	goto	u5591
  3138  048E  2C90               	goto	u5590
  3139  048F                     u5591:	
  3140  048F  2C23               	goto	l3513
  3141  0490                     u5590:	
  3142  0490  2CA4               	goto	l3525
  3143  0491                     l3519:	
  3144                           
  3145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1234:     (
      +                          (*sp++ = ('0')));
  3146  0491  3030               	movlw	48
  3147  0492  1683               	bsf	3,5	;RP0=1, select bank1
  3148  0493  1303               	bcf	3,6	;RP1=0, select bank1
  3149  0494  00A8               	movwf	??_sprintf^(0+128)
  3150  0495  083E               	movf	sprintf@sp^(0+128),w
  3151  0496  0084               	movwf	4
  3152  0497  0828               	movf	??_sprintf^(0+128),w
  3153  0498  1383               	bcf	3,7	;select IRP bank0
  3154  0499  0080               	movwf	0
  3155  049A                     l3521:	
  3156  049A  3001               	movlw	1
  3157  049B  00A8               	movwf	??_sprintf^(0+128)
  3158  049C  0828               	movf	??_sprintf^(0+128),w
  3159  049D  07BE               	addwf	sprintf@sp^(0+128),f
  3160  049E                     l3523:	
  3161                           
  3162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1235:     e
      +                          exp--;
  3163  049E  30FF               	movlw	255
  3164  049F  07B8               	addwf	sprintf@eexp^(0+128),f
  3165  04A0  1803               	skipnc
  3166  04A1  0AB9               	incf	(sprintf@eexp+1)^(0+128),f
  3167  04A2  30FF               	movlw	255
  3168  04A3  07B9               	addwf	(sprintf@eexp+1)^(0+128),f
  3169  04A4                     l3525:	
  3170                           
  3171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1233:    wh
      +                          ile(eexp > 0) {
  3172  04A4  0839               	movf	(sprintf@eexp+1)^(0+128),w
  3173  04A5  3A80               	xorlw	128
  3174  04A6  00FF               	movwf	btemp+1
  3175  04A7  3080               	movlw	128
  3176  04A8  027F               	subwf	btemp+1,w
  3177  04A9  1D03               	skipz
  3178  04AA  2CAD               	goto	u5605
  3179  04AB  3001               	movlw	1
  3180  04AC  0238               	subwf	sprintf@eexp^(0+128),w
  3181  04AD                     u5605:	
  3182  04AD  1803               	skipnc
  3183  04AE  2CB0               	goto	u5601
  3184  04AF  2CB1               	goto	u5600
  3185  04B0                     u5601:	
  3186  04B0  2C91               	goto	l3519
  3187  04B1                     u5600:	
  3188  04B1                     l3527:	
  3189                           
  3190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1237:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3191  04B1  1683               	bsf	3,5	;RP0=1, select bank1
  3192  04B2  1303               	bcf	3,6	;RP1=0, select bank1
  3193  04B3  0840               	movf	(sprintf@prec+1)^(0+128),w
  3194  04B4  3A80               	xorlw	128
  3195  04B5  00FF               	movwf	btemp+1
  3196  04B6  3080               	movlw	128
  3197  04B7  027F               	subwf	btemp+1,w
  3198  04B8  1D03               	skipz
  3199  04B9  2CBC               	goto	u5615
  3200  04BA  3009               	movlw	9
  3201  04BB  023F               	subwf	sprintf@prec^(0+128),w
  3202  04BC                     u5615:	
  3203  04BC  1C03               	skipc
  3204  04BD  2CBF               	goto	u5611
  3205  04BE  2CC0               	goto	u5610
  3206  04BF                     u5611:	
  3207  04BF  2CC7               	goto	l3531
  3208  04C0                     u5610:	
  3209  04C0                     l3529:	
  3210                           
  3211                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1238:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  3212  04C0  3008               	movlw	8
  3213  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  3214  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  3215  04C3  00A8               	movwf	??_sprintf^(0+128)
  3216  04C4  0828               	movf	??_sprintf^(0+128),w
  3217  04C5  00C5               	movwf	sprintf@c^(0+128)
  3218  04C6  2CCD               	goto	l342
  3219  04C7                     l3531:	
  3220                           
  3221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1240:     c
      +                           = (char)prec;
  3222  04C7  1683               	bsf	3,5	;RP0=1, select bank1
  3223  04C8  1303               	bcf	3,6	;RP1=0, select bank1
  3224  04C9  083F               	movf	sprintf@prec^(0+128),w
  3225  04CA  00A8               	movwf	??_sprintf^(0+128)
  3226  04CB  0828               	movf	??_sprintf^(0+128),w
  3227  04CC  00C5               	movwf	sprintf@c^(0+128)
  3228  04CD                     l342:	
  3229                           
  3230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1241:    pr
      +                          ec -= (int)c;
  3231  04CD  0845               	movf	sprintf@c^(0+128),w
  3232  04CE  00A8               	movwf	??_sprintf^(0+128)
  3233  04CF  01A9               	clrf	(??_sprintf^(0+128)+1)
  3234  04D0  0828               	movf	??_sprintf^(0+128),w
  3235  04D1  02BF               	subwf	sprintf@prec^(0+128),f
  3236  04D2  0829               	movf	(??_sprintf+1)^(0+128),w
  3237  04D3  1C03               	skipc
  3238  04D4  03C0               	decf	(sprintf@prec+1)^(0+128),f
  3239  04D5  02C0               	subwf	(sprintf@prec+1)^(0+128),f
  3240  04D6                     l3533:	
  3241                           
  3242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1245:    if
      +                          (c)
  3243  04D6  0845               	movf	sprintf@c^(0+128),w
  3244  04D7  1903               	btfsc	3,2
  3245  04D8  2CDA               	goto	u5621
  3246  04D9  2CDB               	goto	u5620
  3247  04DA                     u5621:	
  3248  04DA  2CE6               	goto	l3539
  3249  04DB                     u5620:	
  3250  04DB                     l3535:	
  3251                           
  3252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1247:     (
      +                          (*sp++ = ('.')));
  3253  04DB  302E               	movlw	46
  3254  04DC  00A8               	movwf	??_sprintf^(0+128)
  3255  04DD  083E               	movf	sprintf@sp^(0+128),w
  3256  04DE  0084               	movwf	4
  3257  04DF  0828               	movf	??_sprintf^(0+128),w
  3258  04E0  1383               	bcf	3,7	;select IRP bank0
  3259  04E1  0080               	movwf	0
  3260  04E2                     l3537:	
  3261  04E2  3001               	movlw	1
  3262  04E3  00A8               	movwf	??_sprintf^(0+128)
  3263  04E4  0828               	movf	??_sprintf^(0+128),w
  3264  04E5  07BE               	addwf	sprintf@sp^(0+128),f
  3265  04E6                     l3539:	
  3266                           
  3267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  3268  04E6  0845               	movf	sprintf@c^(0+128),w
  3269  04E7  120A  158A  249D  120A  118A  	fcall	_scale
  3270  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  3271  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  3272  04EE  0845               	movf	?_scale+3,w
  3273  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  3274  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  3275  04F1  00B0               	movwf	(_sprintf$1111+3)^(0+128)
  3276  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  3277  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  3278  04F4  0844               	movf	?_scale+2,w
  3279  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  3280  04F6  1303               	bcf	3,6	;RP1=0, select bank1
  3281  04F7  00AF               	movwf	(_sprintf$1111+2)^(0+128)
  3282  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  3283  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  3284  04FA  0843               	movf	?_scale+1,w
  3285  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  3286  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  3287  04FD  00AE               	movwf	(_sprintf$1111+1)^(0+128)
  3288  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  3289  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  3290  0500  0842               	movf	?_scale,w
  3291  0501  1683               	bsf	3,5	;RP0=1, select bank1
  3292  0502  1303               	bcf	3,6	;RP1=0, select bank1
  3293  0503  00AD               	movwf	_sprintf$1111^(0+128)
  3294  0504                     l3541:	
  3295                           
  3296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  3297  0504  0830               	movf	(_sprintf$1111+3)^(0+128),w
  3298  0505  1283               	bcf	3,5	;RP0=0, select bank0
  3299  0506  1303               	bcf	3,6	;RP1=0, select bank0
  3300  0507  00AF               	movwf	___flmul@a+3
  3301  0508  1683               	bsf	3,5	;RP0=1, select bank1
  3302  0509  1303               	bcf	3,6	;RP1=0, select bank1
  3303  050A  082F               	movf	(_sprintf$1111+2)^(0+128),w
  3304  050B  1283               	bcf	3,5	;RP0=0, select bank0
  3305  050C  1303               	bcf	3,6	;RP1=0, select bank0
  3306  050D  00AE               	movwf	___flmul@a+2
  3307  050E  1683               	bsf	3,5	;RP0=1, select bank1
  3308  050F  1303               	bcf	3,6	;RP1=0, select bank1
  3309  0510  082E               	movf	(_sprintf$1111+1)^(0+128),w
  3310  0511  1283               	bcf	3,5	;RP0=0, select bank0
  3311  0512  1303               	bcf	3,6	;RP1=0, select bank0
  3312  0513  00AD               	movwf	___flmul@a+1
  3313  0514  1683               	bsf	3,5	;RP0=1, select bank1
  3314  0515  1303               	bcf	3,6	;RP1=0, select bank1
  3315  0516  082D               	movf	_sprintf$1111^(0+128),w
  3316  0517  1283               	bcf	3,5	;RP0=0, select bank0
  3317  0518  1303               	bcf	3,6	;RP1=0, select bank0
  3318  0519  00AC               	movwf	___flmul@a
  3319  051A  1683               	bsf	3,5	;RP0=1, select bank1
  3320  051B  1303               	bcf	3,6	;RP1=0, select bank1
  3321  051C  0844               	movf	(sprintf@fval+3)^(0+128),w
  3322  051D  1283               	bcf	3,5	;RP0=0, select bank0
  3323  051E  1303               	bcf	3,6	;RP1=0, select bank0
  3324  051F  00AB               	movwf	___flmul@b+3
  3325  0520  1683               	bsf	3,5	;RP0=1, select bank1
  3326  0521  1303               	bcf	3,6	;RP1=0, select bank1
  3327  0522  0843               	movf	(sprintf@fval+2)^(0+128),w
  3328  0523  1283               	bcf	3,5	;RP0=0, select bank0
  3329  0524  1303               	bcf	3,6	;RP1=0, select bank0
  3330  0525  00AA               	movwf	___flmul@b+2
  3331  0526  1683               	bsf	3,5	;RP0=1, select bank1
  3332  0527  1303               	bcf	3,6	;RP1=0, select bank1
  3333  0528  0842               	movf	(sprintf@fval+1)^(0+128),w
  3334  0529  1283               	bcf	3,5	;RP0=0, select bank0
  3335  052A  1303               	bcf	3,6	;RP1=0, select bank0
  3336  052B  00A9               	movwf	___flmul@b+1
  3337  052C  1683               	bsf	3,5	;RP0=1, select bank1
  3338  052D  1303               	bcf	3,6	;RP1=0, select bank1
  3339  052E  0841               	movf	sprintf@fval^(0+128),w
  3340  052F  1283               	bcf	3,5	;RP0=0, select bank0
  3341  0530  1303               	bcf	3,6	;RP1=0, select bank0
  3342  0531  00A8               	movwf	___flmul@b
  3343  0532  120A  158A  213C  120A  118A  	fcall	___flmul
  3344  0537  1283               	bcf	3,5	;RP0=0, select bank0
  3345  0538  1303               	bcf	3,6	;RP1=0, select bank0
  3346  0539  082B               	movf	?___flmul+3,w
  3347  053A  00D8               	movwf	___fltol@f1+3
  3348  053B  082A               	movf	?___flmul+2,w
  3349  053C  00D7               	movwf	___fltol@f1+2
  3350  053D  0829               	movf	?___flmul+1,w
  3351  053E  00D6               	movwf	___fltol@f1+1
  3352  053F  0828               	movf	?___flmul,w
  3353  0540  00D5               	movwf	___fltol@f1
  3354  0541  120A  158A  2004  120A  118A  	fcall	___fltol
  3355  0546  1283               	bcf	3,5	;RP0=0, select bank0
  3356  0547  1303               	bcf	3,6	;RP1=0, select bank0
  3357  0548  0858               	movf	?___fltol+3,w
  3358  0549  1683               	bsf	3,5	;RP0=1, select bank1
  3359  054A  1303               	bcf	3,6	;RP1=0, select bank1
  3360  054B  00B7               	movwf	(sprintf@val+3)^(0+128)
  3361  054C  1283               	bcf	3,5	;RP0=0, select bank0
  3362  054D  1303               	bcf	3,6	;RP1=0, select bank0
  3363  054E  0857               	movf	?___fltol+2,w
  3364  054F  1683               	bsf	3,5	;RP0=1, select bank1
  3365  0550  1303               	bcf	3,6	;RP1=0, select bank1
  3366  0551  00B6               	movwf	(sprintf@val+2)^(0+128)
  3367  0552  1283               	bcf	3,5	;RP0=0, select bank0
  3368  0553  1303               	bcf	3,6	;RP1=0, select bank0
  3369  0554  0856               	movf	?___fltol+1,w
  3370  0555  1683               	bsf	3,5	;RP0=1, select bank1
  3371  0556  1303               	bcf	3,6	;RP1=0, select bank1
  3372  0557  00B5               	movwf	(sprintf@val+1)^(0+128)
  3373  0558  1283               	bcf	3,5	;RP0=0, select bank0
  3374  0559  1303               	bcf	3,6	;RP1=0, select bank0
  3375  055A  0855               	movf	?___fltol,w
  3376  055B  1683               	bsf	3,5	;RP0=1, select bank1
  3377  055C  1303               	bcf	3,6	;RP1=0, select bank1
  3378  055D  00B4               	movwf	sprintf@val^(0+128)
  3379                           
  3380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3381  055E  2E00               	goto	l3551
  3382  055F                     l3543:	
  3383                           
  3384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1255:     t
      +                          mpval.vd = val/dpowers[c];
  3385  055F  0845               	movf	sprintf@c^(0+128),w
  3386  0560  00A8               	movwf	??_sprintf^(0+128)
  3387  0561  3001               	movlw	1
  3388  0562                     u5635:	
  3389  0562  1003               	clrc
  3390  0563  0DA8               	rlf	??_sprintf^(0+128),f
  3391  0564  3EFF               	addlw	-1
  3392  0565  1D03               	skipz
  3393  0566  2D62               	goto	u5635
  3394  0567  1003               	clrc
  3395  0568  0D28               	rlf	??_sprintf^(0+128),w
  3396  0569  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3397  056A  0084               	movwf	4
  3398  056B  160A  118A  200A  120A  118A  	fcall	stringdir
  3399  0570  00F3               	movwf	___lldiv@divisor
  3400  0571  160A  118A  200A  120A  118A  	fcall	stringdir
  3401  0576  00F4               	movwf	___lldiv@divisor+1
  3402  0577  160A  118A  200A  120A  118A  	fcall	stringdir
  3403  057C  00F5               	movwf	___lldiv@divisor+2
  3404  057D  160A  118A  200A  120A  118A  	fcall	stringdir
  3405  0582  00F6               	movwf	___lldiv@divisor+3
  3406  0583  0837               	movf	(sprintf@val+3)^(0+128),w
  3407  0584  00FA               	movwf	___lldiv@dividend+3
  3408  0585  0836               	movf	(sprintf@val+2)^(0+128),w
  3409  0586  00F9               	movwf	___lldiv@dividend+2
  3410  0587  0835               	movf	(sprintf@val+1)^(0+128),w
  3411  0588  00F8               	movwf	___lldiv@dividend+1
  3412  0589  0834               	movf	sprintf@val^(0+128),w
  3413  058A  00F7               	movwf	___lldiv@dividend
  3414  058B  160A  158A  23E7  120A  118A  	fcall	___lldiv
  3415  0590  0876               	movf	?___lldiv+3,w
  3416  0591  1683               	bsf	3,5	;RP0=1, select bank1
  3417  0592  1303               	bcf	3,6	;RP1=0, select bank1
  3418  0593  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3419  0594  0875               	movf	?___lldiv+2,w
  3420  0595  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3421  0596  0874               	movf	?___lldiv+1,w
  3422  0597  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3423  0598  0873               	movf	?___lldiv,w
  3424  0599  00BA               	movwf	sprintf@tmpval^(0+128)
  3425  059A                     l3545:	
  3426                           
  3427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1256:     t
      +                          mpval.vd %= 10;
  3428  059A  3000               	movlw	0
  3429  059B  00F6               	movwf	___llmod@divisor+3
  3430  059C  3000               	movlw	0
  3431  059D  00F5               	movwf	___llmod@divisor+2
  3432  059E  3000               	movlw	0
  3433  059F  00F4               	movwf	___llmod@divisor+1
  3434  05A0  300A               	movlw	10
  3435  05A1  00F3               	movwf	___llmod@divisor
  3436  05A2  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  3437  05A3  00FA               	movwf	___llmod@dividend+3
  3438  05A4  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  3439  05A5  00F9               	movwf	___llmod@dividend+2
  3440  05A6  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  3441  05A7  00F8               	movwf	___llmod@dividend+1
  3442  05A8  083A               	movf	sprintf@tmpval^(0+128),w
  3443  05A9  00F7               	movwf	___llmod@dividend
  3444  05AA  160A  158A  2338  120A  118A  	fcall	___llmod
  3445  05AF  0876               	movf	?___llmod+3,w
  3446  05B0  1683               	bsf	3,5	;RP0=1, select bank1
  3447  05B1  1303               	bcf	3,6	;RP1=0, select bank1
  3448  05B2  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3449  05B3  0875               	movf	?___llmod+2,w
  3450  05B4  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3451  05B5  0874               	movf	?___llmod+1,w
  3452  05B6  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3453  05B7  0873               	movf	?___llmod,w
  3454  05B8  00BA               	movwf	sprintf@tmpval^(0+128)
  3455  05B9                     l3547:	
  3456                           
  3457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1257:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  3458  05B9  083A               	movf	sprintf@tmpval^(0+128),w
  3459  05BA  3E30               	addlw	48
  3460  05BB  00A8               	movwf	??_sprintf^(0+128)
  3461  05BC  083E               	movf	sprintf@sp^(0+128),w
  3462  05BD  0084               	movwf	4
  3463  05BE  0828               	movf	??_sprintf^(0+128),w
  3464  05BF  1383               	bcf	3,7	;select IRP bank0
  3465  05C0  0080               	movwf	0
  3466  05C1  3001               	movlw	1
  3467  05C2  00A8               	movwf	??_sprintf^(0+128)
  3468  05C3  0828               	movf	??_sprintf^(0+128),w
  3469  05C4  07BE               	addwf	sprintf@sp^(0+128),f
  3470  05C5                     l3549:	
  3471                           
  3472                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1258:     v
      +                          al %= dpowers[c];
  3473  05C5  0845               	movf	sprintf@c^(0+128),w
  3474  05C6  00A8               	movwf	??_sprintf^(0+128)
  3475  05C7  3001               	movlw	1
  3476  05C8                     u5645:	
  3477  05C8  1003               	clrc
  3478  05C9  0DA8               	rlf	??_sprintf^(0+128),f
  3479  05CA  3EFF               	addlw	-1
  3480  05CB  1D03               	skipz
  3481  05CC  2DC8               	goto	u5645
  3482  05CD  1003               	clrc
  3483  05CE  0D28               	rlf	??_sprintf^(0+128),w
  3484  05CF  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3485  05D0  0084               	movwf	4
  3486  05D1  160A  118A  200A  120A  118A  	fcall	stringdir
  3487  05D6  00F3               	movwf	___llmod@divisor
  3488  05D7  160A  118A  200A  120A  118A  	fcall	stringdir
  3489  05DC  00F4               	movwf	___llmod@divisor+1
  3490  05DD  160A  118A  200A  120A  118A  	fcall	stringdir
  3491  05E2  00F5               	movwf	___llmod@divisor+2
  3492  05E3  160A  118A  200A  120A  118A  	fcall	stringdir
  3493  05E8  00F6               	movwf	___llmod@divisor+3
  3494  05E9  0837               	movf	(sprintf@val+3)^(0+128),w
  3495  05EA  00FA               	movwf	___llmod@dividend+3
  3496  05EB  0836               	movf	(sprintf@val+2)^(0+128),w
  3497  05EC  00F9               	movwf	___llmod@dividend+2
  3498  05ED  0835               	movf	(sprintf@val+1)^(0+128),w
  3499  05EE  00F8               	movwf	___llmod@dividend+1
  3500  05EF  0834               	movf	sprintf@val^(0+128),w
  3501  05F0  00F7               	movwf	___llmod@dividend
  3502  05F1  160A  158A  2338  120A  118A  	fcall	___llmod
  3503  05F6  0876               	movf	?___llmod+3,w
  3504  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  3505  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  3506  05F9  00B7               	movwf	(sprintf@val+3)^(0+128)
  3507  05FA  0875               	movf	?___llmod+2,w
  3508  05FB  00B6               	movwf	(sprintf@val+2)^(0+128)
  3509  05FC  0874               	movf	?___llmod+1,w
  3510  05FD  00B5               	movwf	(sprintf@val+1)^(0+128)
  3511  05FE  0873               	movf	?___llmod,w
  3512  05FF  00B4               	movwf	sprintf@val^(0+128)
  3513  0600                     l3551:	
  3514                           
  3515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3516  0600  3001               	movlw	1
  3517  0601  02C5               	subwf	sprintf@c^(0+128),f
  3518  0602  0A45               	incf	sprintf@c^(0+128),w
  3519  0603  1D03               	btfss	3,2
  3520  0604  2E06               	goto	u5651
  3521  0605  2E07               	goto	u5650
  3522  0606                     u5651:	
  3523  0606  2D5F               	goto	l3543
  3524  0607                     u5650:	
  3525  0607  2E19               	goto	l3559
  3526  0608                     l3553:	
  3527                           
  3528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1262:     (
      +                          (*sp++ = ('0')));
  3529  0608  3030               	movlw	48
  3530  0609  00A8               	movwf	??_sprintf^(0+128)
  3531  060A  083E               	movf	sprintf@sp^(0+128),w
  3532  060B  0084               	movwf	4
  3533  060C  0828               	movf	??_sprintf^(0+128),w
  3534  060D  1383               	bcf	3,7	;select IRP bank0
  3535  060E  0080               	movwf	0
  3536  060F                     l3555:	
  3537  060F  3001               	movlw	1
  3538  0610  00A8               	movwf	??_sprintf^(0+128)
  3539  0611  0828               	movf	??_sprintf^(0+128),w
  3540  0612  07BE               	addwf	sprintf@sp^(0+128),f
  3541  0613                     l3557:	
  3542                           
  3543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1263:     p
      +                          rec--;
  3544  0613  30FF               	movlw	255
  3545  0614  07BF               	addwf	sprintf@prec^(0+128),f
  3546  0615  1803               	skipnc
  3547  0616  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  3548  0617  30FF               	movlw	255
  3549  0618  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  3550  0619                     l3559:	
  3551                           
  3552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1261:    wh
      +                          ile(prec) {
  3553  0619  083F               	movf	sprintf@prec^(0+128),w
  3554  061A  0440               	iorwf	(sprintf@prec+1)^(0+128),w
  3555  061B  1D03               	btfss	3,2
  3556  061C  2E1E               	goto	u5661
  3557  061D  2E1F               	goto	u5660
  3558  061E                     u5661:	
  3559  061E  2E08               	goto	l3553
  3560  061F                     u5660:	
  3561  061F  2E65               	goto	l3579
  3562  0620                     l3561:	
  3563                           
  3564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1316:   if(
      +                          prec == 0 && val == 0)
  3565  0620  083F               	movf	sprintf@prec^(0+128),w
  3566  0621  0440               	iorwf	(sprintf@prec+1)^(0+128),w
  3567  0622  1D03               	btfss	3,2
  3568  0623  2E25               	goto	u5671
  3569  0624  2E26               	goto	u5670
  3570  0625                     u5671:	
  3571  0625  2E34               	goto	l350
  3572  0626                     u5670:	
  3573  0626                     l3563:	
  3574  0626  0837               	movf	(sprintf@val+3)^(0+128),w
  3575  0627  0436               	iorwf	(sprintf@val+2)^(0+128),w
  3576  0628  0435               	iorwf	(sprintf@val+1)^(0+128),w
  3577  0629  0434               	iorwf	sprintf@val^(0+128),w
  3578  062A  1D03               	skipz
  3579  062B  2E2D               	goto	u5681
  3580  062C  2E2E               	goto	u5680
  3581  062D                     u5681:	
  3582  062D  2E34               	goto	l350
  3583  062E                     u5680:	
  3584  062E                     l3565:	
  3585                           
  3586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1317:    pr
      +                          ec++;
  3587  062E  3001               	movlw	1
  3588  062F  07BF               	addwf	sprintf@prec^(0+128),f
  3589  0630  1803               	skipnc
  3590  0631  0AC0               	incf	(sprintf@prec+1)^(0+128),f
  3591  0632  3000               	movlw	0
  3592  0633  07C0               	addwf	(sprintf@prec+1)^(0+128),f
  3593  0634                     l350:	
  3594                           
  3595                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1365:   if(
      +                          c < prec)
  3596  0634  0840               	movf	(sprintf@prec+1)^(0+128),w
  3597  0635  3A80               	xorlw	128
  3598  0636  3C80               	sublw	128
  3599  0637  1D03               	skipz
  3600  0638  2E3B               	goto	u5695
  3601  0639  083F               	movf	sprintf@prec^(0+128),w
  3602  063A  0245               	subwf	sprintf@c^(0+128),w
  3603  063B                     u5695:	
  3604  063B  1803               	skipnc
  3605  063C  2E3E               	goto	u5691
  3606  063D  2E3F               	goto	u5690
  3607  063E                     u5691:	
  3608  063E  2E40               	goto	l3569
  3609  063F                     u5690:	
  3610  063F                     l3567:	
  3611  063F  2E4F               	goto	l3573
  3612  0640                     l3569:	
  3613  0640  1683               	bsf	3,5	;RP0=1, select bank1
  3614  0641  1303               	bcf	3,6	;RP1=0, select bank1
  3615  0642  0840               	movf	(sprintf@prec+1)^(0+128),w
  3616  0643  3A80               	xorlw	128
  3617  0644  00A8               	movwf	??_sprintf^(0+128)
  3618  0645  3080               	movlw	128
  3619  0646  0228               	subwf	??_sprintf^(0+128),w
  3620  0647  1D03               	skipz
  3621  0648  2E4B               	goto	u5705
  3622  0649  0845               	movf	sprintf@c^(0+128),w
  3623  064A  023F               	subwf	sprintf@prec^(0+128),w
  3624  064B                     u5705:	
  3625  064B  1803               	skipnc
  3626  064C  2E4E               	goto	u5701
  3627  064D  2E4F               	goto	u5700
  3628  064E                     u5701:	
  3629  064E  2E4F               	goto	l3573
  3630  064F                     u5700:	
  3631  064F                     l3571:	
  3632  064F                     l3573:	
  3633                           
  3634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  3635  064F  3003               	movlw	3
  3636  0650  1683               	bsf	3,5	;RP0=1, select bank1
  3637  0651  1303               	bcf	3,6	;RP1=0, select bank1
  3638  0652  0532               	andwf	sprintf@flag^(0+128),w
  3639  0653  00A8               	movwf	??_sprintf^(0+128)
  3640  0654  3000               	movlw	0
  3641  0655  0533               	andwf	(sprintf@flag+1)^(0+128),w
  3642  0656  00A9               	movwf	(??_sprintf+1)^(0+128)
  3643  0657  0828               	movf	??_sprintf^(0+128),w
  3644  0658  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3645  0659  1903               	btfsc	3,2
  3646  065A  2E5C               	goto	u5711
  3647  065B  2E5D               	goto	u5710
  3648  065C                     u5711:	
  3649  065C  2E65               	goto	l3579
  3650  065D                     u5710:	
  3651  065D                     l3575:	
  3652                           
  3653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  3654  065D  302D               	movlw	45
  3655  065E  00A8               	movwf	??_sprintf^(0+128)
  3656  065F  083E               	movf	sprintf@sp^(0+128),w
  3657  0660  0084               	movwf	4
  3658  0661  0828               	movf	??_sprintf^(0+128),w
  3659  0662  1383               	bcf	3,7	;select IRP bank0
  3660  0663  0080               	movwf	0
  3661  0664  2834               	goto	l3391
  3662  0665                     l3579:	
  3663                           
  3664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  3665  0665  3001               	movlw	1
  3666  0666  1283               	bcf	3,5	;RP0=0, select bank0
  3667  0667  1303               	bcf	3,6	;RP1=0, select bank0
  3668  0668  07EA               	addwf	sprintf@f,f
  3669  0669  30FF               	movlw	-1
  3670  066A  076A               	addwf	sprintf@f,w
  3671  066B  0084               	movwf	4
  3672  066C  160A  118A  200A  120A  118A  	fcall	stringdir
  3673  0671  1683               	bsf	3,5	;RP0=1, select bank1
  3674  0672  1303               	bcf	3,6	;RP1=0, select bank1
  3675  0673  00A8               	movwf	??_sprintf^(0+128)
  3676  0674  0828               	movf	??_sprintf^(0+128),w
  3677  0675  00C5               	movwf	sprintf@c^(0+128)
  3678  0676  0845               	movf	sprintf@c^(0+128),w
  3679  0677  1D03               	btfss	3,2
  3680  0678  2E7A               	goto	u5721
  3681  0679  2E7B               	goto	u5720
  3682  067A                     u5721:	
  3683  067A  2827               	goto	l3387
  3684  067B                     u5720:	
  3685  067B                     l3581:	
  3686                           
  3687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  3688  067B  083E               	movf	sprintf@sp^(0+128),w
  3689  067C  0084               	movwf	4
  3690  067D  1383               	bcf	3,7	;select IRP bank0
  3691  067E  0180               	clrf	0
  3692  067F                     l356:	
  3693  067F  0008               	return
  3694  0680                     __end_of_sprintf:	
  3695                           
  3696                           	psect	text2
  3697  0C9D                     __ptext2:	
  3698 ;; *************** function _scale *****************
  3699 ;; Defined at:
  3700 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  scl             1    wreg     char 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  scl             1   52[BANK0 ] char 
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  4   34[BANK0 ] char 
  3707 ;; Registers used:
  3708 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3714 ;;      Params:         0       4       0       0       0
  3715 ;;      Locals:         0       5       0       0       0
  3716 ;;      Temps:          0      10       0       0       0
  3717 ;;      Totals:         0      19       0       0       0
  3718 ;;Total ram usage:       19 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; Hardware stack levels required when called:    3
  3721 ;; This function calls:
  3722 ;;		___awdiv
  3723 ;;		___awmod
  3724 ;;		___flmul
  3725 ;; This function is called by:
  3726 ;;		_sprintf
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           
  3731                           ;psect for function _scale
  3732  0C9D                     _scale:	
  3733                           
  3734                           ;incstack = 0
  3735                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3736                           ;scale@scl stored from wreg
  3737  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3738  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3739  0C9F  00D4               	movwf	scale@scl
  3740  0CA0                     l2951:	
  3741                           
  3742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  3743  0CA0  1FD4               	btfss	scale@scl,7
  3744  0CA1  2CA3               	goto	u4381
  3745  0CA2  2CA4               	goto	u4380
  3746  0CA3                     u4381:	
  3747  0CA3  2E53               	goto	l2973
  3748  0CA4                     u4380:	
  3749  0CA4                     l2953:	
  3750                           
  3751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  3752  0CA4  09D4               	comf	scale@scl,f
  3753  0CA5  0AD4               	incf	scale@scl,f
  3754  0CA6                     l2955:	
  3755                           
  3756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  3757  0CA6  0854               	movf	scale@scl,w
  3758  0CA7  3A80               	xorlw	128
  3759  0CA8  3E12               	addlw	-238
  3760  0CA9  1C03               	skipc
  3761  0CAA  2CAC               	goto	u4391
  3762  0CAB  2CAD               	goto	u4390
  3763  0CAC                     u4391:	
  3764  0CAC  2D97               	goto	l2963
  3765  0CAD                     u4390:	
  3766  0CAD                     l2957:	
  3767                           
  3768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3769  0CAD  300A               	movlw	10
  3770  0CAE  00A0               	movwf	___awdiv@divisor
  3771  0CAF  3000               	movlw	0
  3772  0CB0  00A1               	movwf	___awdiv@divisor+1
  3773  0CB1  0854               	movf	scale@scl,w
  3774  0CB2  00F5               	movwf	___awmod@dividend
  3775  0CB3  01F6               	clrf	___awmod@dividend+1
  3776  0CB4  1BF5               	btfsc	___awmod@dividend,7
  3777  0CB5  03F6               	decf	___awmod@dividend+1,f
  3778  0CB6  3064               	movlw	100
  3779  0CB7  00F3               	movwf	___awmod@divisor
  3780  0CB8  3000               	movlw	0
  3781  0CB9  00F4               	movwf	___awmod@divisor+1
  3782  0CBA  160A  158A  238E  120A  158A  	fcall	___awmod
  3783  0CBF  0874               	movf	?___awmod+1,w
  3784  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3785  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3786  0CC2  00A3               	movwf	___awdiv@dividend+1
  3787  0CC3  0873               	movf	?___awmod,w
  3788  0CC4  00A2               	movwf	___awdiv@dividend
  3789  0CC5  160A  158A  244F  120A  158A  	fcall	___awdiv
  3790  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3791  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3792  0CCC  0820               	movf	?___awdiv,w
  3793  0CCD  00C6               	movwf	??_scale
  3794  0CCE  3001               	movlw	1
  3795  0CCF                     u4405:	
  3796  0CCF  1003               	clrc
  3797  0CD0  0DC6               	rlf	??_scale,f
  3798  0CD1  3EFF               	addlw	-1
  3799  0CD2  1D03               	skipz
  3800  0CD3  2CCF               	goto	u4405
  3801  0CD4  1003               	clrc
  3802  0CD5  0D46               	rlf	??_scale,w
  3803  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3804  0CD7  0084               	movwf	4
  3805  0CD8  160A  118A  200A  120A  158A  	fcall	stringdir
  3806  0CDD  00C7               	movwf	??_scale+1
  3807  0CDE  160A  118A  200A  120A  158A  	fcall	stringdir
  3808  0CE3  00C8               	movwf	??_scale+2
  3809  0CE4  160A  118A  200A  120A  158A  	fcall	stringdir
  3810  0CE9  00C9               	movwf	??_scale+3
  3811  0CEA  160A  118A  200A  120A  158A  	fcall	stringdir
  3812  0CEF  00CA               	movwf	??_scale+4
  3813  0CF0  084A               	movf	??_scale+4,w
  3814  0CF1  00AB               	movwf	___flmul@b+3
  3815  0CF2  0849               	movf	??_scale+3,w
  3816  0CF3  00AA               	movwf	___flmul@b+2
  3817  0CF4  0848               	movf	??_scale+2,w
  3818  0CF5  00A9               	movwf	___flmul@b+1
  3819  0CF6  0847               	movf	??_scale+1,w
  3820  0CF7  00A8               	movwf	___flmul@b
  3821  0CF8  3064               	movlw	100
  3822  0CF9  00A0               	movwf	___awdiv@divisor
  3823  0CFA  3000               	movlw	0
  3824  0CFB  00A1               	movwf	___awdiv@divisor+1
  3825  0CFC  0854               	movf	scale@scl,w
  3826  0CFD  00A2               	movwf	___awdiv@dividend
  3827  0CFE  01A3               	clrf	___awdiv@dividend+1
  3828  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  3829  0D00  03A3               	decf	___awdiv@dividend+1,f
  3830  0D01  160A  158A  244F  120A  158A  	fcall	___awdiv
  3831  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3832  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3833  0D08  0820               	movf	?___awdiv,w
  3834  0D09  00CB               	movwf	??_scale+5
  3835  0D0A  3001               	movlw	1
  3836  0D0B                     u4415:	
  3837  0D0B  1003               	clrc
  3838  0D0C  0DCB               	rlf	??_scale+5,f
  3839  0D0D  3EFF               	addlw	-1
  3840  0D0E  1D03               	skipz
  3841  0D0F  2D0B               	goto	u4415
  3842  0D10  1003               	clrc
  3843  0D11  0D4B               	rlf	??_scale+5,w
  3844  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3845  0D13  0084               	movwf	4
  3846  0D14  160A  118A  200A  120A  158A  	fcall	stringdir
  3847  0D19  00CC               	movwf	??_scale+6
  3848  0D1A  160A  118A  200A  120A  158A  	fcall	stringdir
  3849  0D1F  00CD               	movwf	??_scale+7
  3850  0D20  160A  118A  200A  120A  158A  	fcall	stringdir
  3851  0D25  00CE               	movwf	??_scale+8
  3852  0D26  160A  118A  200A  120A  158A  	fcall	stringdir
  3853  0D2B  00CF               	movwf	??_scale+9
  3854  0D2C  084F               	movf	??_scale+9,w
  3855  0D2D  00AF               	movwf	___flmul@a+3
  3856  0D2E  084E               	movf	??_scale+8,w
  3857  0D2F  00AE               	movwf	___flmul@a+2
  3858  0D30  084D               	movf	??_scale+7,w
  3859  0D31  00AD               	movwf	___flmul@a+1
  3860  0D32  084C               	movf	??_scale+6,w
  3861  0D33  00AC               	movwf	___flmul@a
  3862  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  3863  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3864  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3865  0D3B  082B               	movf	?___flmul+3,w
  3866  0D3C  00D3               	movwf	_scale$1110+3
  3867  0D3D  082A               	movf	?___flmul+2,w
  3868  0D3E  00D2               	movwf	_scale$1110+2
  3869  0D3F  0829               	movf	?___flmul+1,w
  3870  0D40  00D1               	movwf	_scale$1110+1
  3871  0D41  0828               	movf	?___flmul,w
  3872  0D42  00D0               	movwf	_scale$1110
  3873                           
  3874                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3875  0D43  300A               	movlw	10
  3876  0D44  00F3               	movwf	___awmod@divisor
  3877  0D45  3000               	movlw	0
  3878  0D46  00F4               	movwf	___awmod@divisor+1
  3879  0D47  0854               	movf	scale@scl,w
  3880  0D48  00F5               	movwf	___awmod@dividend
  3881  0D49  01F6               	clrf	___awmod@dividend+1
  3882  0D4A  1BF5               	btfsc	___awmod@dividend,7
  3883  0D4B  03F6               	decf	___awmod@dividend+1,f
  3884  0D4C  160A  158A  238E  120A  158A  	fcall	___awmod
  3885  0D51  0873               	movf	?___awmod,w
  3886  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3887  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3888  0D54  00C6               	movwf	??_scale
  3889  0D55  3001               	movlw	1
  3890  0D56                     u4425:	
  3891  0D56  1003               	clrc
  3892  0D57  0DC6               	rlf	??_scale,f
  3893  0D58  3EFF               	addlw	-1
  3894  0D59  1D03               	skipz
  3895  0D5A  2D56               	goto	u4425
  3896  0D5B  1003               	clrc
  3897  0D5C  0D46               	rlf	??_scale,w
  3898  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3899  0D5E  0084               	movwf	4
  3900  0D5F  160A  118A  200A  120A  158A  	fcall	stringdir
  3901  0D64  00C7               	movwf	??_scale+1
  3902  0D65  160A  118A  200A  120A  158A  	fcall	stringdir
  3903  0D6A  00C8               	movwf	??_scale+2
  3904  0D6B  160A  118A  200A  120A  158A  	fcall	stringdir
  3905  0D70  00C9               	movwf	??_scale+3
  3906  0D71  160A  118A  200A  120A  158A  	fcall	stringdir
  3907  0D76  00CA               	movwf	??_scale+4
  3908  0D77  084A               	movf	??_scale+4,w
  3909  0D78  00AB               	movwf	___flmul@b+3
  3910  0D79  0849               	movf	??_scale+3,w
  3911  0D7A  00AA               	movwf	___flmul@b+2
  3912  0D7B  0848               	movf	??_scale+2,w
  3913  0D7C  00A9               	movwf	___flmul@b+1
  3914  0D7D  0847               	movf	??_scale+1,w
  3915  0D7E  00A8               	movwf	___flmul@b
  3916  0D7F  0853               	movf	_scale$1110+3,w
  3917  0D80  00AF               	movwf	___flmul@a+3
  3918  0D81  0852               	movf	_scale$1110+2,w
  3919  0D82  00AE               	movwf	___flmul@a+2
  3920  0D83  0851               	movf	_scale$1110+1,w
  3921  0D84  00AD               	movwf	___flmul@a+1
  3922  0D85  0850               	movf	_scale$1110,w
  3923  0D86  00AC               	movwf	___flmul@a
  3924  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  3925  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3926  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3927  0D8E  082B               	movf	?___flmul+3,w
  3928  0D8F  00C5               	movwf	?_scale+3
  3929  0D90  082A               	movf	?___flmul+2,w
  3930  0D91  00C4               	movwf	?_scale+2
  3931  0D92  0829               	movf	?___flmul+1,w
  3932  0D93  00C3               	movwf	?_scale+1
  3933  0D94  0828               	movf	?___flmul,w
  3934  0D95  00C2               	movwf	?_scale
  3935  0D96  2FFF               	goto	l290
  3936  0D97                     l2963:	
  3937  0D97  0854               	movf	scale@scl,w
  3938  0D98  3A80               	xorlw	128
  3939  0D99  3E75               	addlw	-139
  3940  0D9A  1C03               	skipc
  3941  0D9B  2D9D               	goto	u4431
  3942  0D9C  2D9E               	goto	u4430
  3943  0D9D                     u4431:	
  3944  0D9D  2E26               	goto	l2969
  3945  0D9E                     u4430:	
  3946  0D9E                     l2965:	
  3947                           
  3948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3949  0D9E  300A               	movlw	10
  3950  0D9F  00F3               	movwf	___awmod@divisor
  3951  0DA0  3000               	movlw	0
  3952  0DA1  00F4               	movwf	___awmod@divisor+1
  3953  0DA2  0854               	movf	scale@scl,w
  3954  0DA3  00F5               	movwf	___awmod@dividend
  3955  0DA4  01F6               	clrf	___awmod@dividend+1
  3956  0DA5  1BF5               	btfsc	___awmod@dividend,7
  3957  0DA6  03F6               	decf	___awmod@dividend+1,f
  3958  0DA7  160A  158A  238E  120A  158A  	fcall	___awmod
  3959  0DAC  0873               	movf	?___awmod,w
  3960  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3961  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3962  0DAF  00C6               	movwf	??_scale
  3963  0DB0  3001               	movlw	1
  3964  0DB1                     u4445:	
  3965  0DB1  1003               	clrc
  3966  0DB2  0DC6               	rlf	??_scale,f
  3967  0DB3  3EFF               	addlw	-1
  3968  0DB4  1D03               	skipz
  3969  0DB5  2DB1               	goto	u4445
  3970  0DB6  1003               	clrc
  3971  0DB7  0D46               	rlf	??_scale,w
  3972  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3973  0DB9  0084               	movwf	4
  3974  0DBA  160A  118A  200A  120A  158A  	fcall	stringdir
  3975  0DBF  00C7               	movwf	??_scale+1
  3976  0DC0  160A  118A  200A  120A  158A  	fcall	stringdir
  3977  0DC5  00C8               	movwf	??_scale+2
  3978  0DC6  160A  118A  200A  120A  158A  	fcall	stringdir
  3979  0DCB  00C9               	movwf	??_scale+3
  3980  0DCC  160A  118A  200A  120A  158A  	fcall	stringdir
  3981  0DD1  00CA               	movwf	??_scale+4
  3982  0DD2  084A               	movf	??_scale+4,w
  3983  0DD3  00AB               	movwf	___flmul@b+3
  3984  0DD4  0849               	movf	??_scale+3,w
  3985  0DD5  00AA               	movwf	___flmul@b+2
  3986  0DD6  0848               	movf	??_scale+2,w
  3987  0DD7  00A9               	movwf	___flmul@b+1
  3988  0DD8  0847               	movf	??_scale+1,w
  3989  0DD9  00A8               	movwf	___flmul@b
  3990  0DDA  300A               	movlw	10
  3991  0DDB  00A0               	movwf	___awdiv@divisor
  3992  0DDC  3000               	movlw	0
  3993  0DDD  00A1               	movwf	___awdiv@divisor+1
  3994  0DDE  0854               	movf	scale@scl,w
  3995  0DDF  00A2               	movwf	___awdiv@dividend
  3996  0DE0  01A3               	clrf	___awdiv@dividend+1
  3997  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  3998  0DE2  03A3               	decf	___awdiv@dividend+1,f
  3999  0DE3  160A  158A  244F  120A  158A  	fcall	___awdiv
  4000  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  4001  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  4002  0DEA  0820               	movf	?___awdiv,w
  4003  0DEB  00CB               	movwf	??_scale+5
  4004  0DEC  3001               	movlw	1
  4005  0DED                     u4455:	
  4006  0DED  1003               	clrc
  4007  0DEE  0DCB               	rlf	??_scale+5,f
  4008  0DEF  3EFF               	addlw	-1
  4009  0DF0  1D03               	skipz
  4010  0DF1  2DED               	goto	u4455
  4011  0DF2  1003               	clrc
  4012  0DF3  0D4B               	rlf	??_scale+5,w
  4013  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4014  0DF5  0084               	movwf	4
  4015  0DF6  160A  118A  200A  120A  158A  	fcall	stringdir
  4016  0DFB  00CC               	movwf	??_scale+6
  4017  0DFC  160A  118A  200A  120A  158A  	fcall	stringdir
  4018  0E01  00CD               	movwf	??_scale+7
  4019  0E02  160A  118A  200A  120A  158A  	fcall	stringdir
  4020  0E07  00CE               	movwf	??_scale+8
  4021  0E08  160A  118A  200A  120A  158A  	fcall	stringdir
  4022  0E0D  00CF               	movwf	??_scale+9
  4023  0E0E  084F               	movf	??_scale+9,w
  4024  0E0F  00AF               	movwf	___flmul@a+3
  4025  0E10  084E               	movf	??_scale+8,w
  4026  0E11  00AE               	movwf	___flmul@a+2
  4027  0E12  084D               	movf	??_scale+7,w
  4028  0E13  00AD               	movwf	___flmul@a+1
  4029  0E14  084C               	movf	??_scale+6,w
  4030  0E15  00AC               	movwf	___flmul@a
  4031  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  4032  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4033  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4034  0E1D  082B               	movf	?___flmul+3,w
  4035  0E1E  00C5               	movwf	?_scale+3
  4036  0E1F  082A               	movf	?___flmul+2,w
  4037  0E20  00C4               	movwf	?_scale+2
  4038  0E21  0829               	movf	?___flmul+1,w
  4039  0E22  00C3               	movwf	?_scale+1
  4040  0E23  0828               	movf	?___flmul,w
  4041  0E24  00C2               	movwf	?_scale
  4042  0E25  2FFF               	goto	l290
  4043  0E26                     l2969:	
  4044                           
  4045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  4046  0E26  0854               	movf	scale@scl,w
  4047  0E27  00C6               	movwf	??_scale
  4048  0E28  3001               	movlw	1
  4049  0E29                     u4465:	
  4050  0E29  1003               	clrc
  4051  0E2A  0DC6               	rlf	??_scale,f
  4052  0E2B  3EFF               	addlw	-1
  4053  0E2C  1D03               	skipz
  4054  0E2D  2E29               	goto	u4465
  4055  0E2E  1003               	clrc
  4056  0E2F  0D46               	rlf	??_scale,w
  4057  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4058  0E31  0084               	movwf	4
  4059  0E32  160A  118A  200A  120A  158A  	fcall	stringdir
  4060  0E37  00C7               	movwf	??_scale+1
  4061  0E38  160A  118A  200A  120A  158A  	fcall	stringdir
  4062  0E3D  00C8               	movwf	??_scale+2
  4063  0E3E  160A  118A  200A  120A  158A  	fcall	stringdir
  4064  0E43  00C9               	movwf	??_scale+3
  4065  0E44  160A  118A  200A  120A  158A  	fcall	stringdir
  4066  0E49  00CA               	movwf	??_scale+4
  4067  0E4A  084A               	movf	??_scale+4,w
  4068  0E4B  00C5               	movwf	?_scale+3
  4069  0E4C  0849               	movf	??_scale+3,w
  4070  0E4D  00C4               	movwf	?_scale+2
  4071  0E4E  0848               	movf	??_scale+2,w
  4072  0E4F  00C3               	movwf	?_scale+1
  4073  0E50  0847               	movf	??_scale+1,w
  4074  0E51  00C2               	movwf	?_scale
  4075  0E52  2FFF               	goto	l290
  4076  0E53                     l2973:	
  4077                           
  4078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  4079  0E53  0854               	movf	scale@scl,w
  4080  0E54  3A80               	xorlw	128
  4081  0E55  3E12               	addlw	-238
  4082  0E56  1C03               	skipc
  4083  0E57  2E59               	goto	u4471
  4084  0E58  2E5A               	goto	u4470
  4085  0E59                     u4471:	
  4086  0E59  2F44               	goto	l2981
  4087  0E5A                     u4470:	
  4088  0E5A                     l2975:	
  4089                           
  4090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  4091  0E5A  300A               	movlw	10
  4092  0E5B  00A0               	movwf	___awdiv@divisor
  4093  0E5C  3000               	movlw	0
  4094  0E5D  00A1               	movwf	___awdiv@divisor+1
  4095  0E5E  0854               	movf	scale@scl,w
  4096  0E5F  00F5               	movwf	___awmod@dividend
  4097  0E60  01F6               	clrf	___awmod@dividend+1
  4098  0E61  1BF5               	btfsc	___awmod@dividend,7
  4099  0E62  03F6               	decf	___awmod@dividend+1,f
  4100  0E63  3064               	movlw	100
  4101  0E64  00F3               	movwf	___awmod@divisor
  4102  0E65  3000               	movlw	0
  4103  0E66  00F4               	movwf	___awmod@divisor+1
  4104  0E67  160A  158A  238E  120A  158A  	fcall	___awmod
  4105  0E6C  0874               	movf	?___awmod+1,w
  4106  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  4107  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  4108  0E6F  00A3               	movwf	___awdiv@dividend+1
  4109  0E70  0873               	movf	?___awmod,w
  4110  0E71  00A2               	movwf	___awdiv@dividend
  4111  0E72  160A  158A  244F  120A  158A  	fcall	___awdiv
  4112  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4113  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4114  0E79  0820               	movf	?___awdiv,w
  4115  0E7A  00C6               	movwf	??_scale
  4116  0E7B  3001               	movlw	1
  4117  0E7C                     u4485:	
  4118  0E7C  1003               	clrc
  4119  0E7D  0DC6               	rlf	??_scale,f
  4120  0E7E  3EFF               	addlw	-1
  4121  0E7F  1D03               	skipz
  4122  0E80  2E7C               	goto	u4485
  4123  0E81  1003               	clrc
  4124  0E82  0D46               	rlf	??_scale,w
  4125  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4126  0E84  0084               	movwf	4
  4127  0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  4128  0E8A  00C7               	movwf	??_scale+1
  4129  0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  4130  0E90  00C8               	movwf	??_scale+2
  4131  0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  4132  0E96  00C9               	movwf	??_scale+3
  4133  0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  4134  0E9C  00CA               	movwf	??_scale+4
  4135  0E9D  084A               	movf	??_scale+4,w
  4136  0E9E  00AB               	movwf	___flmul@b+3
  4137  0E9F  0849               	movf	??_scale+3,w
  4138  0EA0  00AA               	movwf	___flmul@b+2
  4139  0EA1  0848               	movf	??_scale+2,w
  4140  0EA2  00A9               	movwf	___flmul@b+1
  4141  0EA3  0847               	movf	??_scale+1,w
  4142  0EA4  00A8               	movwf	___flmul@b
  4143  0EA5  3064               	movlw	100
  4144  0EA6  00A0               	movwf	___awdiv@divisor
  4145  0EA7  3000               	movlw	0
  4146  0EA8  00A1               	movwf	___awdiv@divisor+1
  4147  0EA9  0854               	movf	scale@scl,w
  4148  0EAA  00A2               	movwf	___awdiv@dividend
  4149  0EAB  01A3               	clrf	___awdiv@dividend+1
  4150  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  4151  0EAD  03A3               	decf	___awdiv@dividend+1,f
  4152  0EAE  160A  158A  244F  120A  158A  	fcall	___awdiv
  4153  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  4154  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  4155  0EB5  0820               	movf	?___awdiv,w
  4156  0EB6  00CB               	movwf	??_scale+5
  4157  0EB7  3001               	movlw	1
  4158  0EB8                     u4495:	
  4159  0EB8  1003               	clrc
  4160  0EB9  0DCB               	rlf	??_scale+5,f
  4161  0EBA  3EFF               	addlw	-1
  4162  0EBB  1D03               	skipz
  4163  0EBC  2EB8               	goto	u4495
  4164  0EBD  1003               	clrc
  4165  0EBE  0D4B               	rlf	??_scale+5,w
  4166  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4167  0EC0  0084               	movwf	4
  4168  0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  4169  0EC6  00CC               	movwf	??_scale+6
  4170  0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  4171  0ECC  00CD               	movwf	??_scale+7
  4172  0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  4173  0ED2  00CE               	movwf	??_scale+8
  4174  0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  4175  0ED8  00CF               	movwf	??_scale+9
  4176  0ED9  084F               	movf	??_scale+9,w
  4177  0EDA  00AF               	movwf	___flmul@a+3
  4178  0EDB  084E               	movf	??_scale+8,w
  4179  0EDC  00AE               	movwf	___flmul@a+2
  4180  0EDD  084D               	movf	??_scale+7,w
  4181  0EDE  00AD               	movwf	___flmul@a+1
  4182  0EDF  084C               	movf	??_scale+6,w
  4183  0EE0  00AC               	movwf	___flmul@a
  4184  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  4185  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4186  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4187  0EE8  082B               	movf	?___flmul+3,w
  4188  0EE9  00D3               	movwf	_scale$1110+3
  4189  0EEA  082A               	movf	?___flmul+2,w
  4190  0EEB  00D2               	movwf	_scale$1110+2
  4191  0EEC  0829               	movf	?___flmul+1,w
  4192  0EED  00D1               	movwf	_scale$1110+1
  4193  0EEE  0828               	movf	?___flmul,w
  4194  0EEF  00D0               	movwf	_scale$1110
  4195                           
  4196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  4197  0EF0  300A               	movlw	10
  4198  0EF1  00F3               	movwf	___awmod@divisor
  4199  0EF2  3000               	movlw	0
  4200  0EF3  00F4               	movwf	___awmod@divisor+1
  4201  0EF4  0854               	movf	scale@scl,w
  4202  0EF5  00F5               	movwf	___awmod@dividend
  4203  0EF6  01F6               	clrf	___awmod@dividend+1
  4204  0EF7  1BF5               	btfsc	___awmod@dividend,7
  4205  0EF8  03F6               	decf	___awmod@dividend+1,f
  4206  0EF9  160A  158A  238E  120A  158A  	fcall	___awmod
  4207  0EFE  0873               	movf	?___awmod,w
  4208  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4209  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4210  0F01  00C6               	movwf	??_scale
  4211  0F02  3001               	movlw	1
  4212  0F03                     u4505:	
  4213  0F03  1003               	clrc
  4214  0F04  0DC6               	rlf	??_scale,f
  4215  0F05  3EFF               	addlw	-1
  4216  0F06  1D03               	skipz
  4217  0F07  2F03               	goto	u4505
  4218  0F08  1003               	clrc
  4219  0F09  0D46               	rlf	??_scale,w
  4220  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4221  0F0B  0084               	movwf	4
  4222  0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  4223  0F11  00C7               	movwf	??_scale+1
  4224  0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  4225  0F17  00C8               	movwf	??_scale+2
  4226  0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  4227  0F1D  00C9               	movwf	??_scale+3
  4228  0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  4229  0F23  00CA               	movwf	??_scale+4
  4230  0F24  084A               	movf	??_scale+4,w
  4231  0F25  00AB               	movwf	___flmul@b+3
  4232  0F26  0849               	movf	??_scale+3,w
  4233  0F27  00AA               	movwf	___flmul@b+2
  4234  0F28  0848               	movf	??_scale+2,w
  4235  0F29  00A9               	movwf	___flmul@b+1
  4236  0F2A  0847               	movf	??_scale+1,w
  4237  0F2B  00A8               	movwf	___flmul@b
  4238  0F2C  0853               	movf	_scale$1110+3,w
  4239  0F2D  00AF               	movwf	___flmul@a+3
  4240  0F2E  0852               	movf	_scale$1110+2,w
  4241  0F2F  00AE               	movwf	___flmul@a+2
  4242  0F30  0851               	movf	_scale$1110+1,w
  4243  0F31  00AD               	movwf	___flmul@a+1
  4244  0F32  0850               	movf	_scale$1110,w
  4245  0F33  00AC               	movwf	___flmul@a
  4246  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  4247  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4248  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4249  0F3B  082B               	movf	?___flmul+3,w
  4250  0F3C  00C5               	movwf	?_scale+3
  4251  0F3D  082A               	movf	?___flmul+2,w
  4252  0F3E  00C4               	movwf	?_scale+2
  4253  0F3F  0829               	movf	?___flmul+1,w
  4254  0F40  00C3               	movwf	?_scale+1
  4255  0F41  0828               	movf	?___flmul,w
  4256  0F42  00C2               	movwf	?_scale
  4257  0F43  2FFF               	goto	l290
  4258  0F44                     l2981:	
  4259  0F44  0854               	movf	scale@scl,w
  4260  0F45  3A80               	xorlw	128
  4261  0F46  3E75               	addlw	-139
  4262  0F47  1C03               	skipc
  4263  0F48  2F4A               	goto	u4511
  4264  0F49  2F4B               	goto	u4510
  4265  0F4A                     u4511:	
  4266  0F4A  2FD3               	goto	l2987
  4267  0F4B                     u4510:	
  4268  0F4B                     l2983:	
  4269                           
  4270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4271  0F4B  300A               	movlw	10
  4272  0F4C  00F3               	movwf	___awmod@divisor
  4273  0F4D  3000               	movlw	0
  4274  0F4E  00F4               	movwf	___awmod@divisor+1
  4275  0F4F  0854               	movf	scale@scl,w
  4276  0F50  00F5               	movwf	___awmod@dividend
  4277  0F51  01F6               	clrf	___awmod@dividend+1
  4278  0F52  1BF5               	btfsc	___awmod@dividend,7
  4279  0F53  03F6               	decf	___awmod@dividend+1,f
  4280  0F54  160A  158A  238E  120A  158A  	fcall	___awmod
  4281  0F59  0873               	movf	?___awmod,w
  4282  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4283  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4284  0F5C  00C6               	movwf	??_scale
  4285  0F5D  3001               	movlw	1
  4286  0F5E                     u4525:	
  4287  0F5E  1003               	clrc
  4288  0F5F  0DC6               	rlf	??_scale,f
  4289  0F60  3EFF               	addlw	-1
  4290  0F61  1D03               	skipz
  4291  0F62  2F5E               	goto	u4525
  4292  0F63  1003               	clrc
  4293  0F64  0D46               	rlf	??_scale,w
  4294  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4295  0F66  0084               	movwf	4
  4296  0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  4297  0F6C  00C7               	movwf	??_scale+1
  4298  0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  4299  0F72  00C8               	movwf	??_scale+2
  4300  0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  4301  0F78  00C9               	movwf	??_scale+3
  4302  0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  4303  0F7E  00CA               	movwf	??_scale+4
  4304  0F7F  084A               	movf	??_scale+4,w
  4305  0F80  00AB               	movwf	___flmul@b+3
  4306  0F81  0849               	movf	??_scale+3,w
  4307  0F82  00AA               	movwf	___flmul@b+2
  4308  0F83  0848               	movf	??_scale+2,w
  4309  0F84  00A9               	movwf	___flmul@b+1
  4310  0F85  0847               	movf	??_scale+1,w
  4311  0F86  00A8               	movwf	___flmul@b
  4312  0F87  300A               	movlw	10
  4313  0F88  00A0               	movwf	___awdiv@divisor
  4314  0F89  3000               	movlw	0
  4315  0F8A  00A1               	movwf	___awdiv@divisor+1
  4316  0F8B  0854               	movf	scale@scl,w
  4317  0F8C  00A2               	movwf	___awdiv@dividend
  4318  0F8D  01A3               	clrf	___awdiv@dividend+1
  4319  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  4320  0F8F  03A3               	decf	___awdiv@dividend+1,f
  4321  0F90  160A  158A  244F  120A  158A  	fcall	___awdiv
  4322  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4323  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4324  0F97  0820               	movf	?___awdiv,w
  4325  0F98  00CB               	movwf	??_scale+5
  4326  0F99  3001               	movlw	1
  4327  0F9A                     u4535:	
  4328  0F9A  1003               	clrc
  4329  0F9B  0DCB               	rlf	??_scale+5,f
  4330  0F9C  3EFF               	addlw	-1
  4331  0F9D  1D03               	skipz
  4332  0F9E  2F9A               	goto	u4535
  4333  0F9F  1003               	clrc
  4334  0FA0  0D4B               	rlf	??_scale+5,w
  4335  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4336  0FA2  0084               	movwf	4
  4337  0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  4338  0FA8  00CC               	movwf	??_scale+6
  4339  0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  4340  0FAE  00CD               	movwf	??_scale+7
  4341  0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  4342  0FB4  00CE               	movwf	??_scale+8
  4343  0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  4344  0FBA  00CF               	movwf	??_scale+9
  4345  0FBB  084F               	movf	??_scale+9,w
  4346  0FBC  00AF               	movwf	___flmul@a+3
  4347  0FBD  084E               	movf	??_scale+8,w
  4348  0FBE  00AE               	movwf	___flmul@a+2
  4349  0FBF  084D               	movf	??_scale+7,w
  4350  0FC0  00AD               	movwf	___flmul@a+1
  4351  0FC1  084C               	movf	??_scale+6,w
  4352  0FC2  00AC               	movwf	___flmul@a
  4353  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  4354  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4355  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4356  0FCA  082B               	movf	?___flmul+3,w
  4357  0FCB  00C5               	movwf	?_scale+3
  4358  0FCC  082A               	movf	?___flmul+2,w
  4359  0FCD  00C4               	movwf	?_scale+2
  4360  0FCE  0829               	movf	?___flmul+1,w
  4361  0FCF  00C3               	movwf	?_scale+1
  4362  0FD0  0828               	movf	?___flmul,w
  4363  0FD1  00C2               	movwf	?_scale
  4364  0FD2  2FFF               	goto	l290
  4365  0FD3                     l2987:	
  4366                           
  4367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  4368  0FD3  0854               	movf	scale@scl,w
  4369  0FD4  00C6               	movwf	??_scale
  4370  0FD5  3001               	movlw	1
  4371  0FD6                     u4545:	
  4372  0FD6  1003               	clrc
  4373  0FD7  0DC6               	rlf	??_scale,f
  4374  0FD8  3EFF               	addlw	-1
  4375  0FD9  1D03               	skipz
  4376  0FDA  2FD6               	goto	u4545
  4377  0FDB  1003               	clrc
  4378  0FDC  0D46               	rlf	??_scale,w
  4379  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4380  0FDE  0084               	movwf	4
  4381  0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  4382  0FE4  00C7               	movwf	??_scale+1
  4383  0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  4384  0FEA  00C8               	movwf	??_scale+2
  4385  0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  4386  0FF0  00C9               	movwf	??_scale+3
  4387  0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  4388  0FF6  00CA               	movwf	??_scale+4
  4389  0FF7  084A               	movf	??_scale+4,w
  4390  0FF8  00C5               	movwf	?_scale+3
  4391  0FF9  0849               	movf	??_scale+3,w
  4392  0FFA  00C4               	movwf	?_scale+2
  4393  0FFB  0848               	movf	??_scale+2,w
  4394  0FFC  00C3               	movwf	?_scale+1
  4395  0FFD  0847               	movf	??_scale+1,w
  4396  0FFE  00C2               	movwf	?_scale
  4397  0FFF                     l290:	
  4398  0FFF  0008               	return
  4399  1000                     __end_of_scale:	
  4400                           
  4401                           	psect	text3
  4402  1B8E                     __ptext3:	
  4403 ;; *************** function ___awmod *****************
  4404 ;; Defined at:
  4405 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;  divisor         2    3[COMMON] int 
  4408 ;;  dividend        2    5[COMMON] int 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  sign            1    9[COMMON] unsigned char 
  4411 ;;  counter         1    8[COMMON] unsigned char 
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  2    3[COMMON] int 
  4414 ;; Registers used:
  4415 ;;		wreg, status,2, status,0
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4421 ;;      Params:         4       0       0       0       0
  4422 ;;      Locals:         2       0       0       0       0
  4423 ;;      Temps:          1       0       0       0       0
  4424 ;;      Totals:         7       0       0       0       0
  4425 ;;Total ram usage:        7 bytes
  4426 ;; Hardware stack levels used:    1
  4427 ;; Hardware stack levels required when called:    1
  4428 ;; This function calls:
  4429 ;;		Nothing
  4430 ;; This function is called by:
  4431 ;;		_scale
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           
  4436                           ;psect for function ___awmod
  4437  1B8E                     ___awmod:	
  4438  1B8E                     l2489:	
  4439                           ;incstack = 0
  4440                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4441                           
  4442  1B8E  01F9               	clrf	___awmod@sign
  4443  1B8F                     l2491:	
  4444  1B8F  1FF6               	btfss	___awmod@dividend+1,7
  4445  1B90  2B92               	goto	u3251
  4446  1B91  2B93               	goto	u3250
  4447  1B92                     u3251:	
  4448  1B92  2B9A               	goto	l2497
  4449  1B93                     u3250:	
  4450  1B93                     l2493:	
  4451  1B93  09F5               	comf	___awmod@dividend,f
  4452  1B94  09F6               	comf	___awmod@dividend+1,f
  4453  1B95  0AF5               	incf	___awmod@dividend,f
  4454  1B96  1903               	skipnz
  4455  1B97  0AF6               	incf	___awmod@dividend+1,f
  4456  1B98                     l2495:	
  4457  1B98  01F9               	clrf	___awmod@sign
  4458  1B99  0AF9               	incf	___awmod@sign,f
  4459  1B9A                     l2497:	
  4460  1B9A  1FF4               	btfss	___awmod@divisor+1,7
  4461  1B9B  2B9D               	goto	u3261
  4462  1B9C  2B9E               	goto	u3260
  4463  1B9D                     u3261:	
  4464  1B9D  2BA3               	goto	l2501
  4465  1B9E                     u3260:	
  4466  1B9E                     l2499:	
  4467  1B9E  09F3               	comf	___awmod@divisor,f
  4468  1B9F  09F4               	comf	___awmod@divisor+1,f
  4469  1BA0  0AF3               	incf	___awmod@divisor,f
  4470  1BA1  1903               	skipnz
  4471  1BA2  0AF4               	incf	___awmod@divisor+1,f
  4472  1BA3                     l2501:	
  4473  1BA3  0873               	movf	___awmod@divisor,w
  4474  1BA4  0474               	iorwf	___awmod@divisor+1,w
  4475  1BA5  1903               	btfsc	3,2
  4476  1BA6  2BA8               	goto	u3271
  4477  1BA7  2BA9               	goto	u3270
  4478  1BA8                     u3271:	
  4479  1BA8  2BD8               	goto	l2519
  4480  1BA9                     u3270:	
  4481  1BA9                     l2503:	
  4482  1BA9  01F8               	clrf	___awmod@counter
  4483  1BAA  0AF8               	incf	___awmod@counter,f
  4484  1BAB  2BB7               	goto	l2509
  4485  1BAC                     l2505:	
  4486  1BAC  3001               	movlw	1
  4487  1BAD                     u3285:	
  4488  1BAD  1003               	clrc
  4489  1BAE  0DF3               	rlf	___awmod@divisor,f
  4490  1BAF  0DF4               	rlf	___awmod@divisor+1,f
  4491  1BB0  3EFF               	addlw	-1
  4492  1BB1  1D03               	skipz
  4493  1BB2  2BAD               	goto	u3285
  4494  1BB3                     l2507:	
  4495  1BB3  3001               	movlw	1
  4496  1BB4  00F7               	movwf	??___awmod
  4497  1BB5  0877               	movf	??___awmod,w
  4498  1BB6  07F8               	addwf	___awmod@counter,f
  4499  1BB7                     l2509:	
  4500  1BB7  1FF4               	btfss	___awmod@divisor+1,7
  4501  1BB8  2BBA               	goto	u3291
  4502  1BB9  2BBB               	goto	u3290
  4503  1BBA                     u3291:	
  4504  1BBA  2BAC               	goto	l2505
  4505  1BBB                     u3290:	
  4506  1BBB                     l2511:	
  4507  1BBB  0874               	movf	___awmod@divisor+1,w
  4508  1BBC  0276               	subwf	___awmod@dividend+1,w
  4509  1BBD  1D03               	skipz
  4510  1BBE  2BC1               	goto	u3305
  4511  1BBF  0873               	movf	___awmod@divisor,w
  4512  1BC0  0275               	subwf	___awmod@dividend,w
  4513  1BC1                     u3305:	
  4514  1BC1  1C03               	skipc
  4515  1BC2  2BC4               	goto	u3301
  4516  1BC3  2BC5               	goto	u3300
  4517  1BC4                     u3301:	
  4518  1BC4  2BCB               	goto	l2515
  4519  1BC5                     u3300:	
  4520  1BC5                     l2513:	
  4521  1BC5  0873               	movf	___awmod@divisor,w
  4522  1BC6  02F5               	subwf	___awmod@dividend,f
  4523  1BC7  0874               	movf	___awmod@divisor+1,w
  4524  1BC8  1C03               	skipc
  4525  1BC9  03F6               	decf	___awmod@dividend+1,f
  4526  1BCA  02F6               	subwf	___awmod@dividend+1,f
  4527  1BCB                     l2515:	
  4528  1BCB  3001               	movlw	1
  4529  1BCC                     u3315:	
  4530  1BCC  1003               	clrc
  4531  1BCD  0CF4               	rrf	___awmod@divisor+1,f
  4532  1BCE  0CF3               	rrf	___awmod@divisor,f
  4533  1BCF  3EFF               	addlw	-1
  4534  1BD0  1D03               	skipz
  4535  1BD1  2BCC               	goto	u3315
  4536  1BD2                     l2517:	
  4537  1BD2  3001               	movlw	1
  4538  1BD3  02F8               	subwf	___awmod@counter,f
  4539  1BD4  1D03               	btfss	3,2
  4540  1BD5  2BD7               	goto	u3321
  4541  1BD6  2BD8               	goto	u3320
  4542  1BD7                     u3321:	
  4543  1BD7  2BBB               	goto	l2511
  4544  1BD8                     u3320:	
  4545  1BD8                     l2519:	
  4546  1BD8  0879               	movf	___awmod@sign,w
  4547  1BD9  1903               	btfsc	3,2
  4548  1BDA  2BDC               	goto	u3331
  4549  1BDB  2BDD               	goto	u3330
  4550  1BDC                     u3331:	
  4551  1BDC  2BE2               	goto	l2523
  4552  1BDD                     u3330:	
  4553  1BDD                     l2521:	
  4554  1BDD  09F5               	comf	___awmod@dividend,f
  4555  1BDE  09F6               	comf	___awmod@dividend+1,f
  4556  1BDF  0AF5               	incf	___awmod@dividend,f
  4557  1BE0  1903               	skipnz
  4558  1BE1  0AF6               	incf	___awmod@dividend+1,f
  4559  1BE2                     l2523:	
  4560  1BE2  0876               	movf	___awmod@dividend+1,w
  4561  1BE3  00F4               	movwf	?___awmod+1
  4562  1BE4  0875               	movf	___awmod@dividend,w
  4563  1BE5  00F3               	movwf	?___awmod
  4564  1BE6                     l526:	
  4565  1BE6  0008               	return
  4566  1BE7                     __end_of___awmod:	
  4567                           
  4568                           	psect	text4
  4569  1C4F                     __ptext4:	
  4570 ;; *************** function ___awdiv *****************
  4571 ;; Defined at:
  4572 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;  divisor         2    0[BANK0 ] int 
  4575 ;;  dividend        2    2[BANK0 ] int 
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  quotient        2    6[BANK0 ] int 
  4578 ;;  sign            1    5[BANK0 ] unsigned char 
  4579 ;;  counter         1    4[BANK0 ] unsigned char 
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  2    0[BANK0 ] int 
  4582 ;; Registers used:
  4583 ;;		wreg, status,2, status,0
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4589 ;;      Params:         0       4       0       0       0
  4590 ;;      Locals:         0       4       0       0       0
  4591 ;;      Temps:          1       0       0       0       0
  4592 ;;      Totals:         1       8       0       0       0
  4593 ;;Total ram usage:        9 bytes
  4594 ;; Hardware stack levels used:    1
  4595 ;; Hardware stack levels required when called:    1
  4596 ;; This function calls:
  4597 ;;		Nothing
  4598 ;; This function is called by:
  4599 ;;		_scale
  4600 ;;		_sprintf
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           
  4605                           ;psect for function ___awdiv
  4606  1C4F                     ___awdiv:	
  4607  1C4F                     l2445:	
  4608                           ;incstack = 0
  4609                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4610                           
  4611  1C4F  1283               	bcf	3,5	;RP0=0, select bank0
  4612  1C50  1303               	bcf	3,6	;RP1=0, select bank0
  4613  1C51  01A5               	clrf	___awdiv@sign
  4614  1C52                     l2447:	
  4615  1C52  1FA1               	btfss	___awdiv@divisor+1,7
  4616  1C53  2C55               	goto	u3151
  4617  1C54  2C56               	goto	u3150
  4618  1C55                     u3151:	
  4619  1C55  2C5D               	goto	l2453
  4620  1C56                     u3150:	
  4621  1C56                     l2449:	
  4622  1C56  09A0               	comf	___awdiv@divisor,f
  4623  1C57  09A1               	comf	___awdiv@divisor+1,f
  4624  1C58  0AA0               	incf	___awdiv@divisor,f
  4625  1C59  1903               	skipnz
  4626  1C5A  0AA1               	incf	___awdiv@divisor+1,f
  4627  1C5B                     l2451:	
  4628  1C5B  01A5               	clrf	___awdiv@sign
  4629  1C5C  0AA5               	incf	___awdiv@sign,f
  4630  1C5D                     l2453:	
  4631  1C5D  1FA3               	btfss	___awdiv@dividend+1,7
  4632  1C5E  2C60               	goto	u3161
  4633  1C5F  2C61               	goto	u3160
  4634  1C60                     u3161:	
  4635  1C60  2C6A               	goto	l2459
  4636  1C61                     u3160:	
  4637  1C61                     l2455:	
  4638  1C61  09A2               	comf	___awdiv@dividend,f
  4639  1C62  09A3               	comf	___awdiv@dividend+1,f
  4640  1C63  0AA2               	incf	___awdiv@dividend,f
  4641  1C64  1903               	skipnz
  4642  1C65  0AA3               	incf	___awdiv@dividend+1,f
  4643  1C66                     l2457:	
  4644  1C66  3001               	movlw	1
  4645  1C67  00FA               	movwf	??___awdiv
  4646  1C68  087A               	movf	??___awdiv,w
  4647  1C69  06A5               	xorwf	___awdiv@sign,f
  4648  1C6A                     l2459:	
  4649  1C6A  01A6               	clrf	___awdiv@quotient
  4650  1C6B  01A7               	clrf	___awdiv@quotient+1
  4651  1C6C                     l2461:	
  4652  1C6C  0820               	movf	___awdiv@divisor,w
  4653  1C6D  0421               	iorwf	___awdiv@divisor+1,w
  4654  1C6E  1903               	btfsc	3,2
  4655  1C6F  2C71               	goto	u3171
  4656  1C70  2C72               	goto	u3170
  4657  1C71                     u3171:	
  4658  1C71  2CA9               	goto	l2481
  4659  1C72                     u3170:	
  4660  1C72                     l2463:	
  4661  1C72  01A4               	clrf	___awdiv@counter
  4662  1C73  0AA4               	incf	___awdiv@counter,f
  4663  1C74  2C80               	goto	l2469
  4664  1C75                     l2465:	
  4665  1C75  3001               	movlw	1
  4666  1C76                     u3185:	
  4667  1C76  1003               	clrc
  4668  1C77  0DA0               	rlf	___awdiv@divisor,f
  4669  1C78  0DA1               	rlf	___awdiv@divisor+1,f
  4670  1C79  3EFF               	addlw	-1
  4671  1C7A  1D03               	skipz
  4672  1C7B  2C76               	goto	u3185
  4673  1C7C                     l2467:	
  4674  1C7C  3001               	movlw	1
  4675  1C7D  00FA               	movwf	??___awdiv
  4676  1C7E  087A               	movf	??___awdiv,w
  4677  1C7F  07A4               	addwf	___awdiv@counter,f
  4678  1C80                     l2469:	
  4679  1C80  1FA1               	btfss	___awdiv@divisor+1,7
  4680  1C81  2C83               	goto	u3191
  4681  1C82  2C84               	goto	u3190
  4682  1C83                     u3191:	
  4683  1C83  2C75               	goto	l2465
  4684  1C84                     u3190:	
  4685  1C84                     l2471:	
  4686  1C84  3001               	movlw	1
  4687  1C85                     u3205:	
  4688  1C85  1003               	clrc
  4689  1C86  0DA6               	rlf	___awdiv@quotient,f
  4690  1C87  0DA7               	rlf	___awdiv@quotient+1,f
  4691  1C88  3EFF               	addlw	-1
  4692  1C89  1D03               	skipz
  4693  1C8A  2C85               	goto	u3205
  4694  1C8B  0821               	movf	___awdiv@divisor+1,w
  4695  1C8C  0223               	subwf	___awdiv@dividend+1,w
  4696  1C8D  1D03               	skipz
  4697  1C8E  2C91               	goto	u3215
  4698  1C8F  0820               	movf	___awdiv@divisor,w
  4699  1C90  0222               	subwf	___awdiv@dividend,w
  4700  1C91                     u3215:	
  4701  1C91  1C03               	skipc
  4702  1C92  2C94               	goto	u3211
  4703  1C93  2C95               	goto	u3210
  4704  1C94                     u3211:	
  4705  1C94  2C9C               	goto	l2477
  4706  1C95                     u3210:	
  4707  1C95                     l2473:	
  4708  1C95  0820               	movf	___awdiv@divisor,w
  4709  1C96  02A2               	subwf	___awdiv@dividend,f
  4710  1C97  0821               	movf	___awdiv@divisor+1,w
  4711  1C98  1C03               	skipc
  4712  1C99  03A3               	decf	___awdiv@dividend+1,f
  4713  1C9A  02A3               	subwf	___awdiv@dividend+1,f
  4714  1C9B                     l2475:	
  4715  1C9B  1426               	bsf	___awdiv@quotient,0
  4716  1C9C                     l2477:	
  4717  1C9C  3001               	movlw	1
  4718  1C9D                     u3225:	
  4719  1C9D  1003               	clrc
  4720  1C9E  0CA1               	rrf	___awdiv@divisor+1,f
  4721  1C9F  0CA0               	rrf	___awdiv@divisor,f
  4722  1CA0  3EFF               	addlw	-1
  4723  1CA1  1D03               	skipz
  4724  1CA2  2C9D               	goto	u3225
  4725  1CA3                     l2479:	
  4726  1CA3  3001               	movlw	1
  4727  1CA4  02A4               	subwf	___awdiv@counter,f
  4728  1CA5  1D03               	btfss	3,2
  4729  1CA6  2CA8               	goto	u3231
  4730  1CA7  2CA9               	goto	u3230
  4731  1CA8                     u3231:	
  4732  1CA8  2C84               	goto	l2471
  4733  1CA9                     u3230:	
  4734  1CA9                     l2481:	
  4735  1CA9  0825               	movf	___awdiv@sign,w
  4736  1CAA  1903               	btfsc	3,2
  4737  1CAB  2CAD               	goto	u3241
  4738  1CAC  2CAE               	goto	u3240
  4739  1CAD                     u3241:	
  4740  1CAD  2CB3               	goto	l2485
  4741  1CAE                     u3240:	
  4742  1CAE                     l2483:	
  4743  1CAE  09A6               	comf	___awdiv@quotient,f
  4744  1CAF  09A7               	comf	___awdiv@quotient+1,f
  4745  1CB0  0AA6               	incf	___awdiv@quotient,f
  4746  1CB1  1903               	skipnz
  4747  1CB2  0AA7               	incf	___awdiv@quotient+1,f
  4748  1CB3                     l2485:	
  4749  1CB3  0827               	movf	___awdiv@quotient+1,w
  4750  1CB4  00A1               	movwf	?___awdiv+1
  4751  1CB5  0826               	movf	___awdiv@quotient,w
  4752  1CB6  00A0               	movwf	?___awdiv
  4753  1CB7                     l513:	
  4754  1CB7  0008               	return
  4755  1CB8                     __end_of___awdiv:	
  4756                           
  4757                           	psect	text5
  4758  18FB                     __ptext5:	
  4759 ;; *************** function _isdigit *****************
  4760 ;; Defined at:
  4761 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  c               1    wreg     unsigned char 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  c               1    4[COMMON] unsigned char 
  4766 ;; Return value:  Size  Location     Type
  4767 ;;		None               void
  4768 ;; Registers used:
  4769 ;;		wreg, status,2, status,0
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4775 ;;      Params:         0       0       0       0       0
  4776 ;;      Locals:         2       0       0       0       0
  4777 ;;      Temps:          0       0       0       0       0
  4778 ;;      Totals:         2       0       0       0       0
  4779 ;;Total ram usage:        2 bytes
  4780 ;; Hardware stack levels used:    1
  4781 ;; Hardware stack levels required when called:    1
  4782 ;; This function calls:
  4783 ;;		Nothing
  4784 ;; This function is called by:
  4785 ;;		_sprintf
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           
  4790                           ;psect for function _isdigit
  4791  18FB                     _isdigit:	
  4792                           
  4793                           ;incstack = 0
  4794                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4795                           ;isdigit@c stored from wreg
  4796  18FB  00F4               	movwf	isdigit@c
  4797  18FC                     l2991:	
  4798  18FC  01F3               	clrf	_isdigit$932
  4799  18FD                     l2993:	
  4800  18FD  303A               	movlw	58
  4801  18FE  0274               	subwf	isdigit@c,w
  4802  18FF  1803               	skipnc
  4803  1900  2902               	goto	u4551
  4804  1901  2903               	goto	u4550
  4805  1902                     u4551:	
  4806  1902  290B               	goto	l2999
  4807  1903                     u4550:	
  4808  1903                     l2995:	
  4809  1903  3030               	movlw	48
  4810  1904  0274               	subwf	isdigit@c,w
  4811  1905  1C03               	skipc
  4812  1906  2908               	goto	u4561
  4813  1907  2909               	goto	u4560
  4814  1908                     u4561:	
  4815  1908  290B               	goto	l2999
  4816  1909                     u4560:	
  4817  1909                     l2997:	
  4818  1909  01F3               	clrf	_isdigit$932
  4819  190A  0AF3               	incf	_isdigit$932,f
  4820  190B                     l2999:	
  4821  190B  0C73               	rrf	_isdigit$932,w
  4822  190C                     l841:	
  4823  190C  0008               	return
  4824  190D                     __end_of_isdigit:	
  4825                           
  4826                           	psect	text6
  4827  136B                     __ptext6:	
  4828 ;; *************** function _fround *****************
  4829 ;; Defined at:
  4830 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;  prec            1    wreg     unsigned char 
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;  prec            1   53[BANK0 ] unsigned char 
  4835 ;; Return value:  Size  Location     Type
  4836 ;;                  4   34[BANK0 ] unsigned char 
  4837 ;; Registers used:
  4838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4844 ;;      Params:         0       4       0       0       0
  4845 ;;      Locals:         0       9       0       0       0
  4846 ;;      Temps:          0       7       0       0       0
  4847 ;;      Totals:         0      20       0       0       0
  4848 ;;Total ram usage:       20 bytes
  4849 ;; Hardware stack levels used:    1
  4850 ;; Hardware stack levels required when called:    3
  4851 ;; This function calls:
  4852 ;;		___flmul
  4853 ;;		___lwdiv
  4854 ;;		___lwmod
  4855 ;; This function is called by:
  4856 ;;		_sprintf
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           
  4861                           ;psect for function _fround
  4862  136B                     _fround:	
  4863                           
  4864                           ;incstack = 0
  4865                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4866                           ;fround@prec stored from wreg
  4867  136B  1283               	bcf	3,5	;RP0=0, select bank0
  4868  136C  1303               	bcf	3,6	;RP1=0, select bank0
  4869  136D  00D5               	movwf	fround@prec
  4870  136E                     l2933:	
  4871                           
  4872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  4873  136E  306E               	movlw	110
  4874  136F  0255               	subwf	fround@prec,w
  4875  1370  1C03               	skipc
  4876  1371  2B73               	goto	u4301
  4877  1372  2B74               	goto	u4300
  4878  1373                     u4301:	
  4879  1373  2C83               	goto	l2941
  4880  1374                     u4300:	
  4881  1374                     l2935:	
  4882                           
  4883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4884  1374  303F               	movlw	63
  4885  1375  00AB               	movwf	___flmul@b+3
  4886  1376  3000               	movlw	0
  4887  1377  00AA               	movwf	___flmul@b+2
  4888  1378  3000               	movlw	0
  4889  1379  00A9               	movwf	___flmul@b+1
  4890  137A  3000               	movlw	0
  4891  137B  00A8               	movwf	___flmul@b
  4892  137C  3064               	movlw	100
  4893  137D  00A0               	movwf	___lwdiv@divisor
  4894  137E  3000               	movlw	0
  4895  137F  00A1               	movwf	___lwdiv@divisor+1
  4896  1380  0855               	movf	fround@prec,w
  4897  1381  00C6               	movwf	??_fround
  4898  1382  01C7               	clrf	??_fround+1
  4899  1383  0846               	movf	??_fround,w
  4900  1384  00A2               	movwf	___lwdiv@dividend
  4901  1385  0847               	movf	??_fround+1,w
  4902  1386  00A3               	movwf	___lwdiv@dividend+1
  4903  1387  160A  158A  21FC  160A  118A  	fcall	___lwdiv
  4904  138C  1283               	bcf	3,5	;RP0=0, select bank0
  4905  138D  1303               	bcf	3,6	;RP1=0, select bank0
  4906  138E  0820               	movf	?___lwdiv,w
  4907  138F  00C8               	movwf	??_fround+2
  4908  1390  3001               	movlw	1
  4909  1391                     u4315:	
  4910  1391  1003               	clrc
  4911  1392  0DC8               	rlf	??_fround+2,f
  4912  1393  3EFF               	addlw	-1
  4913  1394  1D03               	skipz
  4914  1395  2B91               	goto	u4315
  4915  1396  1003               	clrc
  4916  1397  0D48               	rlf	??_fround+2,w
  4917  1398  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4918  1399  0084               	movwf	4
  4919  139A  160A  118A  200A  160A  118A  	fcall	stringdir
  4920  139F  00C9               	movwf	??_fround+3
  4921  13A0  160A  118A  200A  160A  118A  	fcall	stringdir
  4922  13A5  00CA               	movwf	??_fround+4
  4923  13A6  160A  118A  200A  160A  118A  	fcall	stringdir
  4924  13AB  00CB               	movwf	??_fround+5
  4925  13AC  160A  118A  200A  160A  118A  	fcall	stringdir
  4926  13B1  00CC               	movwf	??_fround+6
  4927  13B2  084C               	movf	??_fround+6,w
  4928  13B3  00AF               	movwf	___flmul@a+3
  4929  13B4  084B               	movf	??_fround+5,w
  4930  13B5  00AE               	movwf	___flmul@a+2
  4931  13B6  084A               	movf	??_fround+4,w
  4932  13B7  00AD               	movwf	___flmul@a+1
  4933  13B8  0849               	movf	??_fround+3,w
  4934  13B9  00AC               	movwf	___flmul@a
  4935  13BA  120A  158A  213C  160A  118A  	fcall	___flmul
  4936  13BF  1283               	bcf	3,5	;RP0=0, select bank0
  4937  13C0  1303               	bcf	3,6	;RP1=0, select bank0
  4938  13C1  082B               	movf	?___flmul+3,w
  4939  13C2  00D4               	movwf	_fround$1108+3
  4940  13C3  082A               	movf	?___flmul+2,w
  4941  13C4  00D3               	movwf	_fround$1108+2
  4942  13C5  0829               	movf	?___flmul+1,w
  4943  13C6  00D2               	movwf	_fround$1108+1
  4944  13C7  0828               	movf	?___flmul,w
  4945  13C8  00D1               	movwf	_fround$1108
  4946                           
  4947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4948  13C9  300A               	movlw	10
  4949  13CA  00A0               	movwf	___lwdiv@divisor
  4950  13CB  3000               	movlw	0
  4951  13CC  00A1               	movwf	___lwdiv@divisor+1
  4952  13CD  0855               	movf	fround@prec,w
  4953  13CE  00C6               	movwf	??_fround
  4954  13CF  01C7               	clrf	??_fround+1
  4955  13D0  0846               	movf	??_fround,w
  4956  13D1  00F5               	movwf	___lwmod@dividend
  4957  13D2  0847               	movf	??_fround+1,w
  4958  13D3  00F6               	movwf	___lwmod@dividend+1
  4959  13D4  3064               	movlw	100
  4960  13D5  00F3               	movwf	___lwmod@divisor
  4961  13D6  3000               	movlw	0
  4962  13D7  00F4               	movwf	___lwmod@divisor+1
  4963  13D8  160A  158A  21C2  160A  118A  	fcall	___lwmod
  4964  13DD  0874               	movf	?___lwmod+1,w
  4965  13DE  1283               	bcf	3,5	;RP0=0, select bank0
  4966  13DF  1303               	bcf	3,6	;RP1=0, select bank0
  4967  13E0  00A3               	movwf	___lwdiv@dividend+1
  4968  13E1  0873               	movf	?___lwmod,w
  4969  13E2  00A2               	movwf	___lwdiv@dividend
  4970  13E3  160A  158A  21FC  160A  118A  	fcall	___lwdiv
  4971  13E8  1283               	bcf	3,5	;RP0=0, select bank0
  4972  13E9  1303               	bcf	3,6	;RP1=0, select bank0
  4973  13EA  0820               	movf	?___lwdiv,w
  4974  13EB  00C8               	movwf	??_fround+2
  4975  13EC  3001               	movlw	1
  4976  13ED                     u4325:	
  4977  13ED  1003               	clrc
  4978  13EE  0DC8               	rlf	??_fround+2,f
  4979  13EF  3EFF               	addlw	-1
  4980  13F0  1D03               	skipz
  4981  13F1  2BED               	goto	u4325
  4982  13F2  1003               	clrc
  4983  13F3  0D48               	rlf	??_fround+2,w
  4984  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4985  13F5  0084               	movwf	4
  4986  13F6  160A  118A  200A  160A  118A  	fcall	stringdir
  4987  13FB  00C9               	movwf	??_fround+3
  4988  13FC  160A  118A  200A  160A  118A  	fcall	stringdir
  4989  1401  00CA               	movwf	??_fround+4
  4990  1402  160A  118A  200A  160A  118A  	fcall	stringdir
  4991  1407  00CB               	movwf	??_fround+5
  4992  1408  160A  118A  200A  160A  118A  	fcall	stringdir
  4993  140D  00CC               	movwf	??_fround+6
  4994  140E  084C               	movf	??_fround+6,w
  4995  140F  00AB               	movwf	___flmul@b+3
  4996  1410  084B               	movf	??_fround+5,w
  4997  1411  00AA               	movwf	___flmul@b+2
  4998  1412  084A               	movf	??_fround+4,w
  4999  1413  00A9               	movwf	___flmul@b+1
  5000  1414  0849               	movf	??_fround+3,w
  5001  1415  00A8               	movwf	___flmul@b
  5002  1416  0854               	movf	_fround$1108+3,w
  5003  1417  00AF               	movwf	___flmul@a+3
  5004  1418  0853               	movf	_fround$1108+2,w
  5005  1419  00AE               	movwf	___flmul@a+2
  5006  141A  0852               	movf	_fround$1108+1,w
  5007  141B  00AD               	movwf	___flmul@a+1
  5008  141C  0851               	movf	_fround$1108,w
  5009  141D  00AC               	movwf	___flmul@a
  5010  141E  120A  158A  213C  160A  118A  	fcall	___flmul
  5011  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5012  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5013  1425  082B               	movf	?___flmul+3,w
  5014  1426  00D0               	movwf	_fround$1109+3
  5015  1427  082A               	movf	?___flmul+2,w
  5016  1428  00CF               	movwf	_fround$1109+2
  5017  1429  0829               	movf	?___flmul+1,w
  5018  142A  00CE               	movwf	_fround$1109+1
  5019  142B  0828               	movf	?___flmul,w
  5020  142C  00CD               	movwf	_fround$1109
  5021                           
  5022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5023  142D  300A               	movlw	10
  5024  142E  00F3               	movwf	___lwmod@divisor
  5025  142F  3000               	movlw	0
  5026  1430  00F4               	movwf	___lwmod@divisor+1
  5027  1431  0855               	movf	fround@prec,w
  5028  1432  00C6               	movwf	??_fround
  5029  1433  01C7               	clrf	??_fround+1
  5030  1434  0846               	movf	??_fround,w
  5031  1435  00F5               	movwf	___lwmod@dividend
  5032  1436  0847               	movf	??_fround+1,w
  5033  1437  00F6               	movwf	___lwmod@dividend+1
  5034  1438  160A  158A  21C2  160A  118A  	fcall	___lwmod
  5035  143D  0873               	movf	?___lwmod,w
  5036  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5037  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5038  1440  00C8               	movwf	??_fround+2
  5039  1441  3001               	movlw	1
  5040  1442                     u4335:	
  5041  1442  1003               	clrc
  5042  1443  0DC8               	rlf	??_fround+2,f
  5043  1444  3EFF               	addlw	-1
  5044  1445  1D03               	skipz
  5045  1446  2C42               	goto	u4335
  5046  1447  1003               	clrc
  5047  1448  0D48               	rlf	??_fround+2,w
  5048  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5049  144A  0084               	movwf	4
  5050  144B  160A  118A  200A  160A  118A  	fcall	stringdir
  5051  1450  00C9               	movwf	??_fround+3
  5052  1451  160A  118A  200A  160A  118A  	fcall	stringdir
  5053  1456  00CA               	movwf	??_fround+4
  5054  1457  160A  118A  200A  160A  118A  	fcall	stringdir
  5055  145C  00CB               	movwf	??_fround+5
  5056  145D  160A  118A  200A  160A  118A  	fcall	stringdir
  5057  1462  00CC               	movwf	??_fround+6
  5058  1463  084C               	movf	??_fround+6,w
  5059  1464  00AB               	movwf	___flmul@b+3
  5060  1465  084B               	movf	??_fround+5,w
  5061  1466  00AA               	movwf	___flmul@b+2
  5062  1467  084A               	movf	??_fround+4,w
  5063  1468  00A9               	movwf	___flmul@b+1
  5064  1469  0849               	movf	??_fround+3,w
  5065  146A  00A8               	movwf	___flmul@b
  5066  146B  0850               	movf	_fround$1109+3,w
  5067  146C  00AF               	movwf	___flmul@a+3
  5068  146D  084F               	movf	_fround$1109+2,w
  5069  146E  00AE               	movwf	___flmul@a+2
  5070  146F  084E               	movf	_fround$1109+1,w
  5071  1470  00AD               	movwf	___flmul@a+1
  5072  1471  084D               	movf	_fround$1109,w
  5073  1472  00AC               	movwf	___flmul@a
  5074  1473  120A  158A  213C  160A  118A  	fcall	___flmul
  5075  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5076  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5077  147A  082B               	movf	?___flmul+3,w
  5078  147B  00C5               	movwf	?_fround+3
  5079  147C  082A               	movf	?___flmul+2,w
  5080  147D  00C4               	movwf	?_fround+2
  5081  147E  0829               	movf	?___flmul+1,w
  5082  147F  00C3               	movwf	?_fround+1
  5083  1480  0828               	movf	?___flmul,w
  5084  1481  00C2               	movwf	?_fround
  5085  1482  2D77               	goto	l283
  5086  1483                     l2941:	
  5087  1483  300B               	movlw	11
  5088  1484  0255               	subwf	fround@prec,w
  5089  1485  1C03               	skipc
  5090  1486  2C88               	goto	u4341
  5091  1487  2C89               	goto	u4340
  5092  1488                     u4341:	
  5093  1488  2D34               	goto	l2947
  5094  1489                     u4340:	
  5095  1489                     l2943:	
  5096                           
  5097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5098  1489  303F               	movlw	63
  5099  148A  00AB               	movwf	___flmul@b+3
  5100  148B  3000               	movlw	0
  5101  148C  00AA               	movwf	___flmul@b+2
  5102  148D  3000               	movlw	0
  5103  148E  00A9               	movwf	___flmul@b+1
  5104  148F  3000               	movlw	0
  5105  1490  00A8               	movwf	___flmul@b
  5106  1491  300A               	movlw	10
  5107  1492  00A0               	movwf	___lwdiv@divisor
  5108  1493  3000               	movlw	0
  5109  1494  00A1               	movwf	___lwdiv@divisor+1
  5110  1495  0855               	movf	fround@prec,w
  5111  1496  00C6               	movwf	??_fround
  5112  1497  01C7               	clrf	??_fround+1
  5113  1498  0846               	movf	??_fround,w
  5114  1499  00A2               	movwf	___lwdiv@dividend
  5115  149A  0847               	movf	??_fround+1,w
  5116  149B  00A3               	movwf	___lwdiv@dividend+1
  5117  149C  160A  158A  21FC  160A  118A  	fcall	___lwdiv
  5118  14A1  1283               	bcf	3,5	;RP0=0, select bank0
  5119  14A2  1303               	bcf	3,6	;RP1=0, select bank0
  5120  14A3  0820               	movf	?___lwdiv,w
  5121  14A4  00C8               	movwf	??_fround+2
  5122  14A5  3001               	movlw	1
  5123  14A6                     u4355:	
  5124  14A6  1003               	clrc
  5125  14A7  0DC8               	rlf	??_fround+2,f
  5126  14A8  3EFF               	addlw	-1
  5127  14A9  1D03               	skipz
  5128  14AA  2CA6               	goto	u4355
  5129  14AB  1003               	clrc
  5130  14AC  0D48               	rlf	??_fround+2,w
  5131  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5132  14AE  0084               	movwf	4
  5133  14AF  160A  118A  200A  160A  118A  	fcall	stringdir
  5134  14B4  00C9               	movwf	??_fround+3
  5135  14B5  160A  118A  200A  160A  118A  	fcall	stringdir
  5136  14BA  00CA               	movwf	??_fround+4
  5137  14BB  160A  118A  200A  160A  118A  	fcall	stringdir
  5138  14C0  00CB               	movwf	??_fround+5
  5139  14C1  160A  118A  200A  160A  118A  	fcall	stringdir
  5140  14C6  00CC               	movwf	??_fround+6
  5141  14C7  084C               	movf	??_fround+6,w
  5142  14C8  00AF               	movwf	___flmul@a+3
  5143  14C9  084B               	movf	??_fround+5,w
  5144  14CA  00AE               	movwf	___flmul@a+2
  5145  14CB  084A               	movf	??_fround+4,w
  5146  14CC  00AD               	movwf	___flmul@a+1
  5147  14CD  0849               	movf	??_fround+3,w
  5148  14CE  00AC               	movwf	___flmul@a
  5149  14CF  120A  158A  213C  160A  118A  	fcall	___flmul
  5150  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5151  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5152  14D6  082B               	movf	?___flmul+3,w
  5153  14D7  00D4               	movwf	_fround$1108+3
  5154  14D8  082A               	movf	?___flmul+2,w
  5155  14D9  00D3               	movwf	_fround$1108+2
  5156  14DA  0829               	movf	?___flmul+1,w
  5157  14DB  00D2               	movwf	_fround$1108+1
  5158  14DC  0828               	movf	?___flmul,w
  5159  14DD  00D1               	movwf	_fround$1108
  5160                           
  5161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5162  14DE  300A               	movlw	10
  5163  14DF  00F3               	movwf	___lwmod@divisor
  5164  14E0  3000               	movlw	0
  5165  14E1  00F4               	movwf	___lwmod@divisor+1
  5166  14E2  0855               	movf	fround@prec,w
  5167  14E3  00C6               	movwf	??_fround
  5168  14E4  01C7               	clrf	??_fround+1
  5169  14E5  0846               	movf	??_fround,w
  5170  14E6  00F5               	movwf	___lwmod@dividend
  5171  14E7  0847               	movf	??_fround+1,w
  5172  14E8  00F6               	movwf	___lwmod@dividend+1
  5173  14E9  160A  158A  21C2  160A  118A  	fcall	___lwmod
  5174  14EE  0873               	movf	?___lwmod,w
  5175  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5176  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5177  14F1  00C8               	movwf	??_fround+2
  5178  14F2  3001               	movlw	1
  5179  14F3                     u4365:	
  5180  14F3  1003               	clrc
  5181  14F4  0DC8               	rlf	??_fround+2,f
  5182  14F5  3EFF               	addlw	-1
  5183  14F6  1D03               	skipz
  5184  14F7  2CF3               	goto	u4365
  5185  14F8  1003               	clrc
  5186  14F9  0D48               	rlf	??_fround+2,w
  5187  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5188  14FB  0084               	movwf	4
  5189  14FC  160A  118A  200A  160A  118A  	fcall	stringdir
  5190  1501  00C9               	movwf	??_fround+3
  5191  1502  160A  118A  200A  160A  118A  	fcall	stringdir
  5192  1507  00CA               	movwf	??_fround+4
  5193  1508  160A  118A  200A  160A  118A  	fcall	stringdir
  5194  150D  00CB               	movwf	??_fround+5
  5195  150E  160A  118A  200A  160A  118A  	fcall	stringdir
  5196  1513  00CC               	movwf	??_fround+6
  5197  1514  084C               	movf	??_fround+6,w
  5198  1515  00AB               	movwf	___flmul@b+3
  5199  1516  084B               	movf	??_fround+5,w
  5200  1517  00AA               	movwf	___flmul@b+2
  5201  1518  084A               	movf	??_fround+4,w
  5202  1519  00A9               	movwf	___flmul@b+1
  5203  151A  0849               	movf	??_fround+3,w
  5204  151B  00A8               	movwf	___flmul@b
  5205  151C  0854               	movf	_fround$1108+3,w
  5206  151D  00AF               	movwf	___flmul@a+3
  5207  151E  0853               	movf	_fround$1108+2,w
  5208  151F  00AE               	movwf	___flmul@a+2
  5209  1520  0852               	movf	_fround$1108+1,w
  5210  1521  00AD               	movwf	___flmul@a+1
  5211  1522  0851               	movf	_fround$1108,w
  5212  1523  00AC               	movwf	___flmul@a
  5213  1524  120A  158A  213C  160A  118A  	fcall	___flmul
  5214  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5215  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5216  152B  082B               	movf	?___flmul+3,w
  5217  152C  00C5               	movwf	?_fround+3
  5218  152D  082A               	movf	?___flmul+2,w
  5219  152E  00C4               	movwf	?_fround+2
  5220  152F  0829               	movf	?___flmul+1,w
  5221  1530  00C3               	movwf	?_fround+1
  5222  1531  0828               	movf	?___flmul,w
  5223  1532  00C2               	movwf	?_fround
  5224  1533  2D77               	goto	l283
  5225  1534                     l2947:	
  5226                           
  5227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  5228  1534  303F               	movlw	63
  5229  1535  00AB               	movwf	___flmul@b+3
  5230  1536  3000               	movlw	0
  5231  1537  00AA               	movwf	___flmul@b+2
  5232  1538  3000               	movlw	0
  5233  1539  00A9               	movwf	___flmul@b+1
  5234  153A  3000               	movlw	0
  5235  153B  00A8               	movwf	___flmul@b
  5236  153C  0855               	movf	fround@prec,w
  5237  153D  00C6               	movwf	??_fround
  5238  153E  3001               	movlw	1
  5239  153F                     u4375:	
  5240  153F  1003               	clrc
  5241  1540  0DC6               	rlf	??_fround,f
  5242  1541  3EFF               	addlw	-1
  5243  1542  1D03               	skipz
  5244  1543  2D3F               	goto	u4375
  5245  1544  1003               	clrc
  5246  1545  0D46               	rlf	??_fround,w
  5247  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5248  1547  0084               	movwf	4
  5249  1548  160A  118A  200A  160A  118A  	fcall	stringdir
  5250  154D  00C7               	movwf	??_fround+1
  5251  154E  160A  118A  200A  160A  118A  	fcall	stringdir
  5252  1553  00C8               	movwf	??_fround+2
  5253  1554  160A  118A  200A  160A  118A  	fcall	stringdir
  5254  1559  00C9               	movwf	??_fround+3
  5255  155A  160A  118A  200A  160A  118A  	fcall	stringdir
  5256  155F  00CA               	movwf	??_fround+4
  5257  1560  084A               	movf	??_fround+4,w
  5258  1561  00AF               	movwf	___flmul@a+3
  5259  1562  0849               	movf	??_fround+3,w
  5260  1563  00AE               	movwf	___flmul@a+2
  5261  1564  0848               	movf	??_fround+2,w
  5262  1565  00AD               	movwf	___flmul@a+1
  5263  1566  0847               	movf	??_fround+1,w
  5264  1567  00AC               	movwf	___flmul@a
  5265  1568  120A  158A  213C  160A  118A  	fcall	___flmul
  5266  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5267  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5268  156F  082B               	movf	?___flmul+3,w
  5269  1570  00C5               	movwf	?_fround+3
  5270  1571  082A               	movf	?___flmul+2,w
  5271  1572  00C4               	movwf	?_fround+2
  5272  1573  0829               	movf	?___flmul+1,w
  5273  1574  00C3               	movwf	?_fround+1
  5274  1575  0828               	movf	?___flmul,w
  5275  1576  00C2               	movwf	?_fround
  5276  1577                     l283:	
  5277  1577  0008               	return
  5278  1578                     __end_of_fround:	
  5279                           
  5280                           	psect	text7
  5281  19C2                     __ptext7:	
  5282 ;; *************** function ___lwmod *****************
  5283 ;; Defined at:
  5284 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;  divisor         2    3[COMMON] unsigned int 
  5287 ;;  dividend        2    5[COMMON] unsigned int 
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;  counter         1    8[COMMON] unsigned char 
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  2    3[COMMON] unsigned int 
  5292 ;; Registers used:
  5293 ;;		wreg, status,2, status,0
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5299 ;;      Params:         4       0       0       0       0
  5300 ;;      Locals:         1       0       0       0       0
  5301 ;;      Temps:          1       0       0       0       0
  5302 ;;      Totals:         6       0       0       0       0
  5303 ;;Total ram usage:        6 bytes
  5304 ;; Hardware stack levels used:    1
  5305 ;; Hardware stack levels required when called:    1
  5306 ;; This function calls:
  5307 ;;		Nothing
  5308 ;; This function is called by:
  5309 ;;		_fround
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           
  5314                           ;psect for function ___lwmod
  5315  19C2                     ___lwmod:	
  5316  19C2                     l2553:	
  5317                           ;incstack = 0
  5318                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5319                           
  5320  19C2  0873               	movf	___lwmod@divisor,w
  5321  19C3  0474               	iorwf	___lwmod@divisor+1,w
  5322  19C4  1903               	btfsc	3,2
  5323  19C5  29C7               	goto	u3411
  5324  19C6  29C8               	goto	u3410
  5325  19C7                     u3411:	
  5326  19C7  29F7               	goto	l2571
  5327  19C8                     u3410:	
  5328  19C8                     l2555:	
  5329  19C8  01F8               	clrf	___lwmod@counter
  5330  19C9  0AF8               	incf	___lwmod@counter,f
  5331  19CA  29D6               	goto	l2561
  5332  19CB                     l2557:	
  5333  19CB  3001               	movlw	1
  5334  19CC                     u3425:	
  5335  19CC  1003               	clrc
  5336  19CD  0DF3               	rlf	___lwmod@divisor,f
  5337  19CE  0DF4               	rlf	___lwmod@divisor+1,f
  5338  19CF  3EFF               	addlw	-1
  5339  19D0  1D03               	skipz
  5340  19D1  29CC               	goto	u3425
  5341  19D2                     l2559:	
  5342  19D2  3001               	movlw	1
  5343  19D3  00F7               	movwf	??___lwmod
  5344  19D4  0877               	movf	??___lwmod,w
  5345  19D5  07F8               	addwf	___lwmod@counter,f
  5346  19D6                     l2561:	
  5347  19D6  1FF4               	btfss	___lwmod@divisor+1,7
  5348  19D7  29D9               	goto	u3431
  5349  19D8  29DA               	goto	u3430
  5350  19D9                     u3431:	
  5351  19D9  29CB               	goto	l2557
  5352  19DA                     u3430:	
  5353  19DA                     l2563:	
  5354  19DA  0874               	movf	___lwmod@divisor+1,w
  5355  19DB  0276               	subwf	___lwmod@dividend+1,w
  5356  19DC  1D03               	skipz
  5357  19DD  29E0               	goto	u3445
  5358  19DE  0873               	movf	___lwmod@divisor,w
  5359  19DF  0275               	subwf	___lwmod@dividend,w
  5360  19E0                     u3445:	
  5361  19E0  1C03               	skipc
  5362  19E1  29E3               	goto	u3441
  5363  19E2  29E4               	goto	u3440
  5364  19E3                     u3441:	
  5365  19E3  29EA               	goto	l2567
  5366  19E4                     u3440:	
  5367  19E4                     l2565:	
  5368  19E4  0873               	movf	___lwmod@divisor,w
  5369  19E5  02F5               	subwf	___lwmod@dividend,f
  5370  19E6  0874               	movf	___lwmod@divisor+1,w
  5371  19E7  1C03               	skipc
  5372  19E8  03F6               	decf	___lwmod@dividend+1,f
  5373  19E9  02F6               	subwf	___lwmod@dividend+1,f
  5374  19EA                     l2567:	
  5375  19EA  3001               	movlw	1
  5376  19EB                     u3455:	
  5377  19EB  1003               	clrc
  5378  19EC  0CF4               	rrf	___lwmod@divisor+1,f
  5379  19ED  0CF3               	rrf	___lwmod@divisor,f
  5380  19EE  3EFF               	addlw	-1
  5381  19EF  1D03               	skipz
  5382  19F0  29EB               	goto	u3455
  5383  19F1                     l2569:	
  5384  19F1  3001               	movlw	1
  5385  19F2  02F8               	subwf	___lwmod@counter,f
  5386  19F3  1D03               	btfss	3,2
  5387  19F4  29F6               	goto	u3461
  5388  19F5  29F7               	goto	u3460
  5389  19F6                     u3461:	
  5390  19F6  29DA               	goto	l2563
  5391  19F7                     u3460:	
  5392  19F7                     l2571:	
  5393  19F7  0876               	movf	___lwmod@dividend+1,w
  5394  19F8  00F4               	movwf	?___lwmod+1
  5395  19F9  0875               	movf	___lwmod@dividend,w
  5396  19FA  00F3               	movwf	?___lwmod
  5397  19FB                     l676:	
  5398  19FB  0008               	return
  5399  19FC                     __end_of___lwmod:	
  5400                           
  5401                           	psect	text8
  5402  19FC                     __ptext8:	
  5403 ;; *************** function ___lwdiv *****************
  5404 ;; Defined at:
  5405 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;  divisor         2    0[BANK0 ] unsigned int 
  5408 ;;  dividend        2    2[BANK0 ] unsigned int 
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;  quotient        2    4[BANK0 ] unsigned int 
  5411 ;;  counter         1    6[BANK0 ] unsigned char 
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  2    0[BANK0 ] unsigned int 
  5414 ;; Registers used:
  5415 ;;		wreg, status,2, status,0
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5421 ;;      Params:         0       4       0       0       0
  5422 ;;      Locals:         0       3       0       0       0
  5423 ;;      Temps:          1       0       0       0       0
  5424 ;;      Totals:         1       7       0       0       0
  5425 ;;Total ram usage:        8 bytes
  5426 ;; Hardware stack levels used:    1
  5427 ;; Hardware stack levels required when called:    1
  5428 ;; This function calls:
  5429 ;;		Nothing
  5430 ;; This function is called by:
  5431 ;;		_fround
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           
  5436                           ;psect for function ___lwdiv
  5437  19FC                     ___lwdiv:	
  5438  19FC                     l2527:	
  5439                           ;incstack = 0
  5440                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5441                           
  5442  19FC  1283               	bcf	3,5	;RP0=0, select bank0
  5443  19FD  1303               	bcf	3,6	;RP1=0, select bank0
  5444  19FE  01A4               	clrf	___lwdiv@quotient
  5445  19FF  01A5               	clrf	___lwdiv@quotient+1
  5446  1A00                     l2529:	
  5447  1A00  0820               	movf	___lwdiv@divisor,w
  5448  1A01  0421               	iorwf	___lwdiv@divisor+1,w
  5449  1A02  1903               	btfsc	3,2
  5450  1A03  2A05               	goto	u3341
  5451  1A04  2A06               	goto	u3340
  5452  1A05                     u3341:	
  5453  1A05  2A3D               	goto	l2549
  5454  1A06                     u3340:	
  5455  1A06                     l2531:	
  5456  1A06  01A6               	clrf	___lwdiv@counter
  5457  1A07  0AA6               	incf	___lwdiv@counter,f
  5458  1A08  2A14               	goto	l2537
  5459  1A09                     l2533:	
  5460  1A09  3001               	movlw	1
  5461  1A0A                     u3355:	
  5462  1A0A  1003               	clrc
  5463  1A0B  0DA0               	rlf	___lwdiv@divisor,f
  5464  1A0C  0DA1               	rlf	___lwdiv@divisor+1,f
  5465  1A0D  3EFF               	addlw	-1
  5466  1A0E  1D03               	skipz
  5467  1A0F  2A0A               	goto	u3355
  5468  1A10                     l2535:	
  5469  1A10  3001               	movlw	1
  5470  1A11  00F9               	movwf	??___lwdiv
  5471  1A12  0879               	movf	??___lwdiv,w
  5472  1A13  07A6               	addwf	___lwdiv@counter,f
  5473  1A14                     l2537:	
  5474  1A14  1FA1               	btfss	___lwdiv@divisor+1,7
  5475  1A15  2A17               	goto	u3361
  5476  1A16  2A18               	goto	u3360
  5477  1A17                     u3361:	
  5478  1A17  2A09               	goto	l2533
  5479  1A18                     u3360:	
  5480  1A18                     l2539:	
  5481  1A18  3001               	movlw	1
  5482  1A19                     u3375:	
  5483  1A19  1003               	clrc
  5484  1A1A  0DA4               	rlf	___lwdiv@quotient,f
  5485  1A1B  0DA5               	rlf	___lwdiv@quotient+1,f
  5486  1A1C  3EFF               	addlw	-1
  5487  1A1D  1D03               	skipz
  5488  1A1E  2A19               	goto	u3375
  5489  1A1F  0821               	movf	___lwdiv@divisor+1,w
  5490  1A20  0223               	subwf	___lwdiv@dividend+1,w
  5491  1A21  1D03               	skipz
  5492  1A22  2A25               	goto	u3385
  5493  1A23  0820               	movf	___lwdiv@divisor,w
  5494  1A24  0222               	subwf	___lwdiv@dividend,w
  5495  1A25                     u3385:	
  5496  1A25  1C03               	skipc
  5497  1A26  2A28               	goto	u3381
  5498  1A27  2A29               	goto	u3380
  5499  1A28                     u3381:	
  5500  1A28  2A30               	goto	l2545
  5501  1A29                     u3380:	
  5502  1A29                     l2541:	
  5503  1A29  0820               	movf	___lwdiv@divisor,w
  5504  1A2A  02A2               	subwf	___lwdiv@dividend,f
  5505  1A2B  0821               	movf	___lwdiv@divisor+1,w
  5506  1A2C  1C03               	skipc
  5507  1A2D  03A3               	decf	___lwdiv@dividend+1,f
  5508  1A2E  02A3               	subwf	___lwdiv@dividend+1,f
  5509  1A2F                     l2543:	
  5510  1A2F  1424               	bsf	___lwdiv@quotient,0
  5511  1A30                     l2545:	
  5512  1A30  3001               	movlw	1
  5513  1A31                     u3395:	
  5514  1A31  1003               	clrc
  5515  1A32  0CA1               	rrf	___lwdiv@divisor+1,f
  5516  1A33  0CA0               	rrf	___lwdiv@divisor,f
  5517  1A34  3EFF               	addlw	-1
  5518  1A35  1D03               	skipz
  5519  1A36  2A31               	goto	u3395
  5520  1A37                     l2547:	
  5521  1A37  3001               	movlw	1
  5522  1A38  02A6               	subwf	___lwdiv@counter,f
  5523  1A39  1D03               	btfss	3,2
  5524  1A3A  2A3C               	goto	u3401
  5525  1A3B  2A3D               	goto	u3400
  5526  1A3C                     u3401:	
  5527  1A3C  2A18               	goto	l2539
  5528  1A3D                     u3400:	
  5529  1A3D                     l2549:	
  5530  1A3D  0825               	movf	___lwdiv@quotient+1,w
  5531  1A3E  00A1               	movwf	?___lwdiv+1
  5532  1A3F  0824               	movf	___lwdiv@quotient,w
  5533  1A40  00A0               	movwf	?___lwdiv
  5534  1A41                     l666:	
  5535  1A41  0008               	return
  5536  1A42                     __end_of___lwdiv:	
  5537                           
  5538                           	psect	text9
  5539  093C                     __ptext9:	
  5540 ;; *************** function ___flmul *****************
  5541 ;; Defined at:
  5542 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  b               4    8[BANK0 ] unsigned int 
  5545 ;;  a               4   12[BANK0 ] unsigned int 
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;  prod            4   28[BANK0 ] struct .
  5548 ;;  grs             4   22[BANK0 ] unsigned long 
  5549 ;;  temp            2   32[BANK0 ] struct .
  5550 ;;  bexp            1   27[BANK0 ] unsigned char 
  5551 ;;  aexp            1   26[BANK0 ] unsigned char 
  5552 ;;  sign            1   21[BANK0 ] unsigned char 
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  4    8[BANK0 ] unsigned char 
  5555 ;; Registers used:
  5556 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/0
  5559 ;;		On exit  : 0/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5562 ;;      Params:         0       8       0       0       0
  5563 ;;      Locals:         0      13       0       0       0
  5564 ;;      Temps:          0       5       0       0       0
  5565 ;;      Totals:         0      26       0       0       0
  5566 ;;Total ram usage:       26 bytes
  5567 ;; Hardware stack levels used:    1
  5568 ;; Hardware stack levels required when called:    2
  5569 ;; This function calls:
  5570 ;;		__Umul8_16
  5571 ;; This function is called by:
  5572 ;;		_main
  5573 ;;		_fround
  5574 ;;		_scale
  5575 ;;		_sprintf
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           
  5580                           ;psect for function ___flmul
  5581  093C                     ___flmul:	
  5582  093C                     l2769:	
  5583                           ;incstack = 0
  5584                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5585                           
  5586  093C  1283               	bcf	3,5	;RP0=0, select bank0
  5587  093D  1303               	bcf	3,6	;RP1=0, select bank0
  5588  093E  082B               	movf	___flmul@b+3,w
  5589  093F  3980               	andlw	128
  5590  0940  00B0               	movwf	??___flmul
  5591  0941  0830               	movf	??___flmul,w
  5592  0942  00B5               	movwf	___flmul@sign
  5593  0943                     l2771:	
  5594  0943  082B               	movf	___flmul@b+3,w
  5595  0944  00B0               	movwf	??___flmul
  5596  0945  0730               	addwf	??___flmul,w
  5597  0946  00B1               	movwf	??___flmul+1
  5598  0947  0831               	movf	??___flmul+1,w
  5599  0948  00BB               	movwf	___flmul@bexp
  5600  0949                     l2773:	
  5601  0949  1FAA               	btfss	___flmul@b+2,7
  5602  094A  294C               	goto	u3931
  5603  094B  294D               	goto	u3930
  5604  094C                     u3931:	
  5605  094C  294E               	goto	l2777
  5606  094D                     u3930:	
  5607  094D                     l2775:	
  5608  094D  143B               	bsf	___flmul@bexp,0
  5609  094E                     l2777:	
  5610  094E  083B               	movf	___flmul@bexp,w
  5611  094F  1903               	btfsc	3,2
  5612  0950  2952               	goto	u3941
  5613  0951  2953               	goto	u3940
  5614  0952                     u3941:	
  5615  0952  2962               	goto	l2785
  5616  0953                     u3940:	
  5617  0953                     l2779:	
  5618  0953  0A3B               	incf	___flmul@bexp,w
  5619  0954  1D03               	btfss	3,2
  5620  0955  2957               	goto	u3951
  5621  0956  2958               	goto	u3950
  5622  0957                     u3951:	
  5623  0957  2960               	goto	l2783
  5624  0958                     u3950:	
  5625  0958                     l2781:	
  5626  0958  3000               	movlw	0
  5627  0959  00AB               	movwf	___flmul@b+3
  5628  095A  3000               	movlw	0
  5629  095B  00AA               	movwf	___flmul@b+2
  5630  095C  3000               	movlw	0
  5631  095D  00A9               	movwf	___flmul@b+1
  5632  095E  3000               	movlw	0
  5633  095F  00A8               	movwf	___flmul@b
  5634  0960                     l2783:	
  5635  0960  17AA               	bsf	___flmul@b+2,7
  5636  0961  296A               	goto	l2787
  5637  0962                     l2785:	
  5638  0962  3000               	movlw	0
  5639  0963  00AB               	movwf	___flmul@b+3
  5640  0964  3000               	movlw	0
  5641  0965  00AA               	movwf	___flmul@b+2
  5642  0966  3000               	movlw	0
  5643  0967  00A9               	movwf	___flmul@b+1
  5644  0968  3000               	movlw	0
  5645  0969  00A8               	movwf	___flmul@b
  5646  096A                     l2787:	
  5647  096A  082F               	movf	___flmul@a+3,w
  5648  096B  3980               	andlw	128
  5649  096C  00B0               	movwf	??___flmul
  5650  096D  0830               	movf	??___flmul,w
  5651  096E  06B5               	xorwf	___flmul@sign,f
  5652  096F                     l2789:	
  5653  096F  082F               	movf	___flmul@a+3,w
  5654  0970  00B0               	movwf	??___flmul
  5655  0971  0730               	addwf	??___flmul,w
  5656  0972  00B1               	movwf	??___flmul+1
  5657  0973  0831               	movf	??___flmul+1,w
  5658  0974  00BA               	movwf	___flmul@aexp
  5659  0975                     l2791:	
  5660  0975  1FAE               	btfss	___flmul@a+2,7
  5661  0976  2978               	goto	u3961
  5662  0977  2979               	goto	u3960
  5663  0978                     u3961:	
  5664  0978  297A               	goto	l2795
  5665  0979                     u3960:	
  5666  0979                     l2793:	
  5667  0979  143A               	bsf	___flmul@aexp,0
  5668  097A                     l2795:	
  5669  097A  083A               	movf	___flmul@aexp,w
  5670  097B  1903               	btfsc	3,2
  5671  097C  297E               	goto	u3971
  5672  097D  297F               	goto	u3970
  5673  097E                     u3971:	
  5674  097E  298E               	goto	l2803
  5675  097F                     u3970:	
  5676  097F                     l2797:	
  5677  097F  0A3A               	incf	___flmul@aexp,w
  5678  0980  1D03               	btfss	3,2
  5679  0981  2983               	goto	u3981
  5680  0982  2984               	goto	u3980
  5681  0983                     u3981:	
  5682  0983  298C               	goto	l2801
  5683  0984                     u3980:	
  5684  0984                     l2799:	
  5685  0984  3000               	movlw	0
  5686  0985  00AF               	movwf	___flmul@a+3
  5687  0986  3000               	movlw	0
  5688  0987  00AE               	movwf	___flmul@a+2
  5689  0988  3000               	movlw	0
  5690  0989  00AD               	movwf	___flmul@a+1
  5691  098A  3000               	movlw	0
  5692  098B  00AC               	movwf	___flmul@a
  5693  098C                     l2801:	
  5694  098C  17AE               	bsf	___flmul@a+2,7
  5695  098D  2996               	goto	l2805
  5696  098E                     l2803:	
  5697  098E  3000               	movlw	0
  5698  098F  00AF               	movwf	___flmul@a+3
  5699  0990  3000               	movlw	0
  5700  0991  00AE               	movwf	___flmul@a+2
  5701  0992  3000               	movlw	0
  5702  0993  00AD               	movwf	___flmul@a+1
  5703  0994  3000               	movlw	0
  5704  0995  00AC               	movwf	___flmul@a
  5705  0996                     l2805:	
  5706  0996  083A               	movf	___flmul@aexp,w
  5707  0997  1903               	btfsc	3,2
  5708  0998  299A               	goto	u3991
  5709  0999  299B               	goto	u3990
  5710  099A                     u3991:	
  5711  099A  29A0               	goto	l2809
  5712  099B                     u3990:	
  5713  099B                     l2807:	
  5714  099B  083B               	movf	___flmul@bexp,w
  5715  099C  1D03               	btfss	3,2
  5716  099D  299F               	goto	u4001
  5717  099E  29A0               	goto	u4000
  5718  099F                     u4001:	
  5719  099F  29A9               	goto	l2813
  5720  09A0                     u4000:	
  5721  09A0                     l2809:	
  5722  09A0  3000               	movlw	0
  5723  09A1  00AB               	movwf	?___flmul+3
  5724  09A2  3000               	movlw	0
  5725  09A3  00AA               	movwf	?___flmul+2
  5726  09A4  3000               	movlw	0
  5727  09A5  00A9               	movwf	?___flmul+1
  5728  09A6  3000               	movlw	0
  5729  09A7  00A8               	movwf	?___flmul
  5730  09A8  2C9C               	goto	l783
  5731  09A9                     l2813:	
  5732  09A9  0828               	movf	___flmul@b,w
  5733  09AA  00B0               	movwf	??___flmul
  5734  09AB  0830               	movf	??___flmul,w
  5735  09AC  00F3               	movwf	__Umul8_16@multiplicand
  5736  09AD  082E               	movf	___flmul@a+2,w
  5737  09AE  160A  118A  20C1  120A  158A  	fcall	__Umul8_16
  5738  09B3  0874               	movf	?__Umul8_16+1,w
  5739  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  5740  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  5741  09B6  00C1               	movwf	___flmul@temp+1
  5742  09B7  0873               	movf	?__Umul8_16,w
  5743  09B8  00C0               	movwf	___flmul@temp
  5744  09B9                     l2815:	
  5745  09B9  0840               	movf	___flmul@temp,w
  5746  09BA  00B0               	movwf	??___flmul
  5747  09BB  01B1               	clrf	??___flmul+1
  5748  09BC  01B2               	clrf	??___flmul+2
  5749  09BD  01B3               	clrf	??___flmul+3
  5750  09BE  0833               	movf	??___flmul+3,w
  5751  09BF  00B9               	movwf	___flmul@grs+3
  5752  09C0  0832               	movf	??___flmul+2,w
  5753  09C1  00B8               	movwf	___flmul@grs+2
  5754  09C2  0831               	movf	??___flmul+1,w
  5755  09C3  00B7               	movwf	___flmul@grs+1
  5756  09C4  0830               	movf	??___flmul,w
  5757  09C5  00B6               	movwf	___flmul@grs
  5758  09C6                     l2817:	
  5759  09C6  0841               	movf	___flmul@temp+1,w
  5760  09C7  00B0               	movwf	??___flmul
  5761  09C8  01B1               	clrf	??___flmul+1
  5762  09C9  01B2               	clrf	??___flmul+2
  5763  09CA  01B3               	clrf	??___flmul+3
  5764  09CB  0833               	movf	??___flmul+3,w
  5765  09CC  00BF               	movwf	___flmul@prod+3
  5766  09CD  0832               	movf	??___flmul+2,w
  5767  09CE  00BE               	movwf	___flmul@prod+2
  5768  09CF  0831               	movf	??___flmul+1,w
  5769  09D0  00BD               	movwf	___flmul@prod+1
  5770  09D1  0830               	movf	??___flmul,w
  5771  09D2  00BC               	movwf	___flmul@prod
  5772  09D3  0829               	movf	___flmul@b+1,w
  5773  09D4  00B0               	movwf	??___flmul
  5774  09D5  0830               	movf	??___flmul,w
  5775  09D6  00F3               	movwf	__Umul8_16@multiplicand
  5776  09D7  082D               	movf	___flmul@a+1,w
  5777  09D8  160A  118A  20C1  120A  158A  	fcall	__Umul8_16
  5778  09DD  0874               	movf	?__Umul8_16+1,w
  5779  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  5780  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  5781  09E0  00C1               	movwf	___flmul@temp+1
  5782  09E1  0873               	movf	?__Umul8_16,w
  5783  09E2  00C0               	movwf	___flmul@temp
  5784  09E3                     l2819:	
  5785  09E3  0840               	movf	___flmul@temp,w
  5786  09E4  00B0               	movwf	??___flmul
  5787  09E5  01B1               	clrf	??___flmul+1
  5788  09E6  01B2               	clrf	??___flmul+2
  5789  09E7  01B3               	clrf	??___flmul+3
  5790  09E8  0830               	movf	??___flmul,w
  5791  09E9  07B6               	addwf	___flmul@grs,f
  5792  09EA  0831               	movf	??___flmul+1,w
  5793  09EB  1103               	clrz
  5794  09EC  1803               	skipnc
  5795  09ED  3E01               	addlw	1
  5796  09EE  1903               	skipnz
  5797  09EF  29F1               	goto	u4011
  5798  09F0  07B7               	addwf	___flmul@grs+1,f
  5799  09F1                     u4011:	
  5800  09F1  0832               	movf	??___flmul+2,w
  5801  09F2  1103               	clrz
  5802  09F3  1803               	skipnc
  5803  09F4  3E01               	addlw	1
  5804  09F5  1903               	skipnz
  5805  09F6  29F8               	goto	u4012
  5806  09F7  07B8               	addwf	___flmul@grs+2,f
  5807  09F8                     u4012:	
  5808  09F8  0833               	movf	??___flmul+3,w
  5809  09F9  1103               	clrz
  5810  09FA  1803               	skipnc
  5811  09FB  3E01               	addlw	1
  5812  09FC  1903               	skipnz
  5813  09FD  29FF               	goto	u4013
  5814  09FE  07B9               	addwf	___flmul@grs+3,f
  5815  09FF                     u4013:	
  5816  09FF                     l2821:	
  5817  09FF  0841               	movf	___flmul@temp+1,w
  5818  0A00  00B0               	movwf	??___flmul
  5819  0A01  01B1               	clrf	??___flmul+1
  5820  0A02  01B2               	clrf	??___flmul+2
  5821  0A03  01B3               	clrf	??___flmul+3
  5822  0A04  0830               	movf	??___flmul,w
  5823  0A05  07BC               	addwf	___flmul@prod,f
  5824  0A06  0831               	movf	??___flmul+1,w
  5825  0A07  1103               	clrz
  5826  0A08  1803               	skipnc
  5827  0A09  3E01               	addlw	1
  5828  0A0A  1903               	skipnz
  5829  0A0B  2A0D               	goto	u4021
  5830  0A0C  07BD               	addwf	___flmul@prod+1,f
  5831  0A0D                     u4021:	
  5832  0A0D  0832               	movf	??___flmul+2,w
  5833  0A0E  1103               	clrz
  5834  0A0F  1803               	skipnc
  5835  0A10  3E01               	addlw	1
  5836  0A11  1903               	skipnz
  5837  0A12  2A14               	goto	u4022
  5838  0A13  07BE               	addwf	___flmul@prod+2,f
  5839  0A14                     u4022:	
  5840  0A14  0833               	movf	??___flmul+3,w
  5841  0A15  1103               	clrz
  5842  0A16  1803               	skipnc
  5843  0A17  3E01               	addlw	1
  5844  0A18  1903               	skipnz
  5845  0A19  2A1B               	goto	u4023
  5846  0A1A  07BF               	addwf	___flmul@prod+3,f
  5847  0A1B                     u4023:	
  5848  0A1B  082A               	movf	___flmul@b+2,w
  5849  0A1C  00B0               	movwf	??___flmul
  5850  0A1D  0830               	movf	??___flmul,w
  5851  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  5852  0A1F  082C               	movf	___flmul@a,w
  5853  0A20  160A  118A  20C1  120A  158A  	fcall	__Umul8_16
  5854  0A25  0874               	movf	?__Umul8_16+1,w
  5855  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  5856  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  5857  0A28  00C1               	movwf	___flmul@temp+1
  5858  0A29  0873               	movf	?__Umul8_16,w
  5859  0A2A  00C0               	movwf	___flmul@temp
  5860  0A2B                     l2823:	
  5861  0A2B  0840               	movf	___flmul@temp,w
  5862  0A2C  00B0               	movwf	??___flmul
  5863  0A2D  01B1               	clrf	??___flmul+1
  5864  0A2E  01B2               	clrf	??___flmul+2
  5865  0A2F  01B3               	clrf	??___flmul+3
  5866  0A30  0830               	movf	??___flmul,w
  5867  0A31  07B6               	addwf	___flmul@grs,f
  5868  0A32  0831               	movf	??___flmul+1,w
  5869  0A33  1103               	clrz
  5870  0A34  1803               	skipnc
  5871  0A35  3E01               	addlw	1
  5872  0A36  1903               	skipnz
  5873  0A37  2A39               	goto	u4031
  5874  0A38  07B7               	addwf	___flmul@grs+1,f
  5875  0A39                     u4031:	
  5876  0A39  0832               	movf	??___flmul+2,w
  5877  0A3A  1103               	clrz
  5878  0A3B  1803               	skipnc
  5879  0A3C  3E01               	addlw	1
  5880  0A3D  1903               	skipnz
  5881  0A3E  2A40               	goto	u4032
  5882  0A3F  07B8               	addwf	___flmul@grs+2,f
  5883  0A40                     u4032:	
  5884  0A40  0833               	movf	??___flmul+3,w
  5885  0A41  1103               	clrz
  5886  0A42  1803               	skipnc
  5887  0A43  3E01               	addlw	1
  5888  0A44  1903               	skipnz
  5889  0A45  2A47               	goto	u4033
  5890  0A46  07B9               	addwf	___flmul@grs+3,f
  5891  0A47                     u4033:	
  5892  0A47                     l2825:	
  5893  0A47  0841               	movf	___flmul@temp+1,w
  5894  0A48  00B0               	movwf	??___flmul
  5895  0A49  01B1               	clrf	??___flmul+1
  5896  0A4A  01B2               	clrf	??___flmul+2
  5897  0A4B  01B3               	clrf	??___flmul+3
  5898  0A4C  0830               	movf	??___flmul,w
  5899  0A4D  07BC               	addwf	___flmul@prod,f
  5900  0A4E  0831               	movf	??___flmul+1,w
  5901  0A4F  1103               	clrz
  5902  0A50  1803               	skipnc
  5903  0A51  3E01               	addlw	1
  5904  0A52  1903               	skipnz
  5905  0A53  2A55               	goto	u4041
  5906  0A54  07BD               	addwf	___flmul@prod+1,f
  5907  0A55                     u4041:	
  5908  0A55  0832               	movf	??___flmul+2,w
  5909  0A56  1103               	clrz
  5910  0A57  1803               	skipnc
  5911  0A58  3E01               	addlw	1
  5912  0A59  1903               	skipnz
  5913  0A5A  2A5C               	goto	u4042
  5914  0A5B  07BE               	addwf	___flmul@prod+2,f
  5915  0A5C                     u4042:	
  5916  0A5C  0833               	movf	??___flmul+3,w
  5917  0A5D  1103               	clrz
  5918  0A5E  1803               	skipnc
  5919  0A5F  3E01               	addlw	1
  5920  0A60  1903               	skipnz
  5921  0A61  2A63               	goto	u4043
  5922  0A62  07BF               	addwf	___flmul@prod+3,f
  5923  0A63                     u4043:	
  5924  0A63                     l2827:	
  5925  0A63  3008               	movlw	8
  5926  0A64  00B0               	movwf	??___flmul
  5927  0A65                     u4055:	
  5928  0A65  1003               	clrc
  5929  0A66  0DB6               	rlf	___flmul@grs,f
  5930  0A67  0DB7               	rlf	___flmul@grs+1,f
  5931  0A68  0DB8               	rlf	___flmul@grs+2,f
  5932  0A69  0DB9               	rlf	___flmul@grs+3,f
  5933  0A6A  0BB0               	decfsz	??___flmul,f
  5934  0A6B  2A65               	goto	u4055
  5935  0A6C                     l2829:	
  5936  0A6C  0829               	movf	___flmul@b+1,w
  5937  0A6D  00B0               	movwf	??___flmul
  5938  0A6E  0830               	movf	??___flmul,w
  5939  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  5940  0A70  082C               	movf	___flmul@a,w
  5941  0A71  160A  118A  20C1  120A  158A  	fcall	__Umul8_16
  5942  0A76  0874               	movf	?__Umul8_16+1,w
  5943  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  5944  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  5945  0A79  00C1               	movwf	___flmul@temp+1
  5946  0A7A  0873               	movf	?__Umul8_16,w
  5947  0A7B  00C0               	movwf	___flmul@temp
  5948  0A7C                     l2831:	
  5949  0A7C  0840               	movf	___flmul@temp,w
  5950  0A7D  00B0               	movwf	??___flmul
  5951  0A7E  0841               	movf	___flmul@temp+1,w
  5952  0A7F  00B1               	movwf	??___flmul+1
  5953  0A80  01B2               	clrf	??___flmul+2
  5954  0A81  01B3               	clrf	??___flmul+3
  5955  0A82  0830               	movf	??___flmul,w
  5956  0A83  07B6               	addwf	___flmul@grs,f
  5957  0A84  0831               	movf	??___flmul+1,w
  5958  0A85  1103               	clrz
  5959  0A86  1803               	skipnc
  5960  0A87  3E01               	addlw	1
  5961  0A88  1903               	skipnz
  5962  0A89  2A8B               	goto	u4061
  5963  0A8A  07B7               	addwf	___flmul@grs+1,f
  5964  0A8B                     u4061:	
  5965  0A8B  0832               	movf	??___flmul+2,w
  5966  0A8C  1103               	clrz
  5967  0A8D  1803               	skipnc
  5968  0A8E  3E01               	addlw	1
  5969  0A8F  1903               	skipnz
  5970  0A90  2A92               	goto	u4062
  5971  0A91  07B8               	addwf	___flmul@grs+2,f
  5972  0A92                     u4062:	
  5973  0A92  0833               	movf	??___flmul+3,w
  5974  0A93  1103               	clrz
  5975  0A94  1803               	skipnc
  5976  0A95  3E01               	addlw	1
  5977  0A96  1903               	skipnz
  5978  0A97  2A99               	goto	u4063
  5979  0A98  07B9               	addwf	___flmul@grs+3,f
  5980  0A99                     u4063:	
  5981  0A99                     l2833:	
  5982  0A99  0828               	movf	___flmul@b,w
  5983  0A9A  00B0               	movwf	??___flmul
  5984  0A9B  0830               	movf	??___flmul,w
  5985  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  5986  0A9D  082D               	movf	___flmul@a+1,w
  5987  0A9E  160A  118A  20C1  120A  158A  	fcall	__Umul8_16
  5988  0AA3  0874               	movf	?__Umul8_16+1,w
  5989  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  5990  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  5991  0AA6  00C1               	movwf	___flmul@temp+1
  5992  0AA7  0873               	movf	?__Umul8_16,w
  5993  0AA8  00C0               	movwf	___flmul@temp
  5994  0AA9                     l2835:	
  5995  0AA9  0840               	movf	___flmul@temp,w
  5996  0AAA  00B0               	movwf	??___flmul
  5997  0AAB  0841               	movf	___flmul@temp+1,w
  5998  0AAC  00B1               	movwf	??___flmul+1
  5999  0AAD  01B2               	clrf	??___flmul+2
  6000  0AAE  01B3               	clrf	??___flmul+3
  6001  0AAF  0830               	movf	??___flmul,w
  6002  0AB0  07B6               	addwf	___flmul@grs,f
  6003  0AB1  0831               	movf	??___flmul+1,w
  6004  0AB2  1103               	clrz
  6005  0AB3  1803               	skipnc
  6006  0AB4  3E01               	addlw	1
  6007  0AB5  1903               	skipnz
  6008  0AB6  2AB8               	goto	u4071
  6009  0AB7  07B7               	addwf	___flmul@grs+1,f
  6010  0AB8                     u4071:	
  6011  0AB8  0832               	movf	??___flmul+2,w
  6012  0AB9  1103               	clrz
  6013  0ABA  1803               	skipnc
  6014  0ABB  3E01               	addlw	1
  6015  0ABC  1903               	skipnz
  6016  0ABD  2ABF               	goto	u4072
  6017  0ABE  07B8               	addwf	___flmul@grs+2,f
  6018  0ABF                     u4072:	
  6019  0ABF  0833               	movf	??___flmul+3,w
  6020  0AC0  1103               	clrz
  6021  0AC1  1803               	skipnc
  6022  0AC2  3E01               	addlw	1
  6023  0AC3  1903               	skipnz
  6024  0AC4  2AC6               	goto	u4073
  6025  0AC5  07B9               	addwf	___flmul@grs+3,f
  6026  0AC6                     u4073:	
  6027  0AC6                     l2837:	
  6028  0AC6  3008               	movlw	8
  6029  0AC7  00B0               	movwf	??___flmul
  6030  0AC8                     u4085:	
  6031  0AC8  1003               	clrc
  6032  0AC9  0DB6               	rlf	___flmul@grs,f
  6033  0ACA  0DB7               	rlf	___flmul@grs+1,f
  6034  0ACB  0DB8               	rlf	___flmul@grs+2,f
  6035  0ACC  0DB9               	rlf	___flmul@grs+3,f
  6036  0ACD  0BB0               	decfsz	??___flmul,f
  6037  0ACE  2AC8               	goto	u4085
  6038  0ACF  0828               	movf	___flmul@b,w
  6039  0AD0  00B0               	movwf	??___flmul
  6040  0AD1  0830               	movf	??___flmul,w
  6041  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  6042  0AD3  082C               	movf	___flmul@a,w
  6043  0AD4  160A  118A  20C1  120A  158A  	fcall	__Umul8_16
  6044  0AD9  0874               	movf	?__Umul8_16+1,w
  6045  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  6046  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  6047  0ADC  00C1               	movwf	___flmul@temp+1
  6048  0ADD  0873               	movf	?__Umul8_16,w
  6049  0ADE  00C0               	movwf	___flmul@temp
  6050  0ADF                     l2839:	
  6051  0ADF  0840               	movf	___flmul@temp,w
  6052  0AE0  00B0               	movwf	??___flmul
  6053  0AE1  0841               	movf	___flmul@temp+1,w
  6054  0AE2  00B1               	movwf	??___flmul+1
  6055  0AE3  01B2               	clrf	??___flmul+2
  6056  0AE4  01B3               	clrf	??___flmul+3
  6057  0AE5  0830               	movf	??___flmul,w
  6058  0AE6  07B6               	addwf	___flmul@grs,f
  6059  0AE7  0831               	movf	??___flmul+1,w
  6060  0AE8  1103               	clrz
  6061  0AE9  1803               	skipnc
  6062  0AEA  3E01               	addlw	1
  6063  0AEB  1903               	skipnz
  6064  0AEC  2AEE               	goto	u4091
  6065  0AED  07B7               	addwf	___flmul@grs+1,f
  6066  0AEE                     u4091:	
  6067  0AEE  0832               	movf	??___flmul+2,w
  6068  0AEF  1103               	clrz
  6069  0AF0  1803               	skipnc
  6070  0AF1  3E01               	addlw	1
  6071  0AF2  1903               	skipnz
  6072  0AF3  2AF5               	goto	u4092
  6073  0AF4  07B8               	addwf	___flmul@grs+2,f
  6074  0AF5                     u4092:	
  6075  0AF5  0833               	movf	??___flmul+3,w
  6076  0AF6  1103               	clrz
  6077  0AF7  1803               	skipnc
  6078  0AF8  3E01               	addlw	1
  6079  0AF9  1903               	skipnz
  6080  0AFA  2AFC               	goto	u4093
  6081  0AFB  07B9               	addwf	___flmul@grs+3,f
  6082  0AFC                     u4093:	
  6083  0AFC                     l2841:	
  6084  0AFC  0829               	movf	___flmul@b+1,w
  6085  0AFD  00B0               	movwf	??___flmul
  6086  0AFE  0830               	movf	??___flmul,w
  6087  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  6088  0B00  082E               	movf	___flmul@a+2,w
  6089  0B01  160A  118A  20C1  120A  158A  	fcall	__Umul8_16
  6090  0B06  0874               	movf	?__Umul8_16+1,w
  6091  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  6092  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  6093  0B09  00C1               	movwf	___flmul@temp+1
  6094  0B0A  0873               	movf	?__Umul8_16,w
  6095  0B0B  00C0               	movwf	___flmul@temp
  6096  0B0C  0840               	movf	___flmul@temp,w
  6097  0B0D  00B0               	movwf	??___flmul
  6098  0B0E  0841               	movf	___flmul@temp+1,w
  6099  0B0F  00B1               	movwf	??___flmul+1
  6100  0B10  01B2               	clrf	??___flmul+2
  6101  0B11  01B3               	clrf	??___flmul+3
  6102  0B12  0830               	movf	??___flmul,w
  6103  0B13  07BC               	addwf	___flmul@prod,f
  6104  0B14  0831               	movf	??___flmul+1,w
  6105  0B15  1103               	clrz
  6106  0B16  1803               	skipnc
  6107  0B17  3E01               	addlw	1
  6108  0B18  1903               	skipnz
  6109  0B19  2B1B               	goto	u4101
  6110  0B1A  07BD               	addwf	___flmul@prod+1,f
  6111  0B1B                     u4101:	
  6112  0B1B  0832               	movf	??___flmul+2,w
  6113  0B1C  1103               	clrz
  6114  0B1D  1803               	skipnc
  6115  0B1E  3E01               	addlw	1
  6116  0B1F  1903               	skipnz
  6117  0B20  2B22               	goto	u4102
  6118  0B21  07BE               	addwf	___flmul@prod+2,f
  6119  0B22                     u4102:	
  6120  0B22  0833               	movf	??___flmul+3,w
  6121  0B23  1103               	clrz
  6122  0B24  1803               	skipnc
  6123  0B25  3E01               	addlw	1
  6124  0B26  1903               	skipnz
  6125  0B27  2B29               	goto	u4103
  6126  0B28  07BF               	addwf	___flmul@prod+3,f
  6127  0B29                     u4103:	
  6128  0B29                     l2843:	
  6129  0B29  082A               	movf	___flmul@b+2,w
  6130  0B2A  00B0               	movwf	??___flmul
  6131  0B2B  0830               	movf	??___flmul,w
  6132  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  6133  0B2D  082D               	movf	___flmul@a+1,w
  6134  0B2E  160A  118A  20C1  120A  158A  	fcall	__Umul8_16
  6135  0B33  0874               	movf	?__Umul8_16+1,w
  6136  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  6137  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  6138  0B36  00C1               	movwf	___flmul@temp+1
  6139  0B37  0873               	movf	?__Umul8_16,w
  6140  0B38  00C0               	movwf	___flmul@temp
  6141  0B39                     l2845:	
  6142  0B39  0840               	movf	___flmul@temp,w
  6143  0B3A  00B0               	movwf	??___flmul
  6144  0B3B  0841               	movf	___flmul@temp+1,w
  6145  0B3C  00B1               	movwf	??___flmul+1
  6146  0B3D  01B2               	clrf	??___flmul+2
  6147  0B3E  01B3               	clrf	??___flmul+3
  6148  0B3F  0830               	movf	??___flmul,w
  6149  0B40  07BC               	addwf	___flmul@prod,f
  6150  0B41  0831               	movf	??___flmul+1,w
  6151  0B42  1103               	clrz
  6152  0B43  1803               	skipnc
  6153  0B44  3E01               	addlw	1
  6154  0B45  1903               	skipnz
  6155  0B46  2B48               	goto	u4111
  6156  0B47  07BD               	addwf	___flmul@prod+1,f
  6157  0B48                     u4111:	
  6158  0B48  0832               	movf	??___flmul+2,w
  6159  0B49  1103               	clrz
  6160  0B4A  1803               	skipnc
  6161  0B4B  3E01               	addlw	1
  6162  0B4C  1903               	skipnz
  6163  0B4D  2B4F               	goto	u4112
  6164  0B4E  07BE               	addwf	___flmul@prod+2,f
  6165  0B4F                     u4112:	
  6166  0B4F  0833               	movf	??___flmul+3,w
  6167  0B50  1103               	clrz
  6168  0B51  1803               	skipnc
  6169  0B52  3E01               	addlw	1
  6170  0B53  1903               	skipnz
  6171  0B54  2B56               	goto	u4113
  6172  0B55  07BF               	addwf	___flmul@prod+3,f
  6173  0B56                     u4113:	
  6174  0B56  082A               	movf	___flmul@b+2,w
  6175  0B57  00B0               	movwf	??___flmul
  6176  0B58  0830               	movf	??___flmul,w
  6177  0B59  00F3               	movwf	__Umul8_16@multiplicand
  6178  0B5A  082E               	movf	___flmul@a+2,w
  6179  0B5B  160A  118A  20C1  120A  158A  	fcall	__Umul8_16
  6180  0B60  0874               	movf	?__Umul8_16+1,w
  6181  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  6182  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  6183  0B63  00C1               	movwf	___flmul@temp+1
  6184  0B64  0873               	movf	?__Umul8_16,w
  6185  0B65  00C0               	movwf	___flmul@temp
  6186  0B66                     l2847:	
  6187  0B66  0840               	movf	___flmul@temp,w
  6188  0B67  00B0               	movwf	??___flmul
  6189  0B68  0841               	movf	___flmul@temp+1,w
  6190  0B69  00B1               	movwf	??___flmul+1
  6191  0B6A  01B2               	clrf	??___flmul+2
  6192  0B6B  01B3               	clrf	??___flmul+3
  6193  0B6C  3008               	movlw	8
  6194  0B6D                     u4125:	
  6195  0B6D  1003               	clrc
  6196  0B6E  0DB0               	rlf	??___flmul,f
  6197  0B6F  0DB1               	rlf	??___flmul+1,f
  6198  0B70  0DB2               	rlf	??___flmul+2,f
  6199  0B71  0DB3               	rlf	??___flmul+3,f
  6200  0B72                     u4120:	
  6201  0B72  3EFF               	addlw	-1
  6202  0B73  1D03               	skipz
  6203  0B74  2B6D               	goto	u4125
  6204  0B75  0830               	movf	??___flmul,w
  6205  0B76  07BC               	addwf	___flmul@prod,f
  6206  0B77  0831               	movf	??___flmul+1,w
  6207  0B78  1103               	clrz
  6208  0B79  1803               	skipnc
  6209  0B7A  3E01               	addlw	1
  6210  0B7B  1903               	skipnz
  6211  0B7C  2B7E               	goto	u4131
  6212  0B7D  07BD               	addwf	___flmul@prod+1,f
  6213  0B7E                     u4131:	
  6214  0B7E  0832               	movf	??___flmul+2,w
  6215  0B7F  1103               	clrz
  6216  0B80  1803               	skipnc
  6217  0B81  3E01               	addlw	1
  6218  0B82  1903               	skipnz
  6219  0B83  2B85               	goto	u4132
  6220  0B84  07BE               	addwf	___flmul@prod+2,f
  6221  0B85                     u4132:	
  6222  0B85  0833               	movf	??___flmul+3,w
  6223  0B86  1103               	clrz
  6224  0B87  1803               	skipnc
  6225  0B88  3E01               	addlw	1
  6226  0B89  1903               	skipnz
  6227  0B8A  2B8C               	goto	u4133
  6228  0B8B  07BF               	addwf	___flmul@prod+3,f
  6229  0B8C                     u4133:	
  6230  0B8C                     l2849:	
  6231  0B8C  0836               	movf	___flmul@grs,w
  6232  0B8D  00B0               	movwf	??___flmul
  6233  0B8E  0837               	movf	___flmul@grs+1,w
  6234  0B8F  00B1               	movwf	??___flmul+1
  6235  0B90  0838               	movf	___flmul@grs+2,w
  6236  0B91  00B2               	movwf	??___flmul+2
  6237  0B92  0839               	movf	___flmul@grs+3,w
  6238  0B93  00B3               	movwf	??___flmul+3
  6239  0B94  3018               	movlw	24
  6240  0B95                     u4145:	
  6241  0B95  1003               	clrc
  6242  0B96  0CB3               	rrf	??___flmul+3,f
  6243  0B97  0CB2               	rrf	??___flmul+2,f
  6244  0B98  0CB1               	rrf	??___flmul+1,f
  6245  0B99  0CB0               	rrf	??___flmul,f
  6246  0B9A                     u4140:	
  6247  0B9A  3EFF               	addlw	-1
  6248  0B9B  1D03               	skipz
  6249  0B9C  2B95               	goto	u4145
  6250  0B9D  0830               	movf	??___flmul,w
  6251  0B9E  07BC               	addwf	___flmul@prod,f
  6252  0B9F  0831               	movf	??___flmul+1,w
  6253  0BA0  1103               	clrz
  6254  0BA1  1803               	skipnc
  6255  0BA2  3E01               	addlw	1
  6256  0BA3  1903               	skipnz
  6257  0BA4  2BA6               	goto	u4151
  6258  0BA5  07BD               	addwf	___flmul@prod+1,f
  6259  0BA6                     u4151:	
  6260  0BA6  0832               	movf	??___flmul+2,w
  6261  0BA7  1103               	clrz
  6262  0BA8  1803               	skipnc
  6263  0BA9  3E01               	addlw	1
  6264  0BAA  1903               	skipnz
  6265  0BAB  2BAD               	goto	u4152
  6266  0BAC  07BE               	addwf	___flmul@prod+2,f
  6267  0BAD                     u4152:	
  6268  0BAD  0833               	movf	??___flmul+3,w
  6269  0BAE  1103               	clrz
  6270  0BAF  1803               	skipnc
  6271  0BB0  3E01               	addlw	1
  6272  0BB1  1903               	skipnz
  6273  0BB2  2BB4               	goto	u4153
  6274  0BB3  07BF               	addwf	___flmul@prod+3,f
  6275  0BB4                     u4153:	
  6276  0BB4                     l2851:	
  6277  0BB4  3008               	movlw	8
  6278  0BB5  00B0               	movwf	??___flmul
  6279  0BB6                     u4165:	
  6280  0BB6  1003               	clrc
  6281  0BB7  0DB6               	rlf	___flmul@grs,f
  6282  0BB8  0DB7               	rlf	___flmul@grs+1,f
  6283  0BB9  0DB8               	rlf	___flmul@grs+2,f
  6284  0BBA  0DB9               	rlf	___flmul@grs+3,f
  6285  0BBB  0BB0               	decfsz	??___flmul,f
  6286  0BBC  2BB6               	goto	u4165
  6287  0BBD                     l2853:	
  6288  0BBD  083B               	movf	___flmul@bexp,w
  6289  0BBE  073A               	addwf	___flmul@aexp,w
  6290  0BBF  00B0               	movwf	??___flmul
  6291  0BC0  01B1               	clrf	??___flmul+1
  6292  0BC1  0DB1               	rlf	??___flmul+1,f
  6293  0BC2  0830               	movf	??___flmul,w
  6294  0BC3  3E82               	addlw	130
  6295  0BC4  00C0               	movwf	___flmul@temp
  6296  0BC5  0831               	movf	??___flmul+1,w
  6297  0BC6  1803               	skipnc
  6298  0BC7  3E01               	addlw	1
  6299  0BC8  3EFF               	addlw	255
  6300  0BC9  00C1               	movwf	___flmul@temp+1
  6301  0BCA  2BE8               	goto	l2865
  6302  0BCB                     l2855:	
  6303  0BCB  3001               	movlw	1
  6304  0BCC  00B0               	movwf	??___flmul
  6305  0BCD                     u4175:	
  6306  0BCD  1003               	clrc
  6307  0BCE  0DBC               	rlf	___flmul@prod,f
  6308  0BCF  0DBD               	rlf	___flmul@prod+1,f
  6309  0BD0  0DBE               	rlf	___flmul@prod+2,f
  6310  0BD1  0DBF               	rlf	___flmul@prod+3,f
  6311  0BD2  0BB0               	decfsz	??___flmul,f
  6312  0BD3  2BCD               	goto	u4175
  6313  0BD4                     l2857:	
  6314  0BD4  1FB9               	btfss	___flmul@grs+3,7
  6315  0BD5  2BD7               	goto	u4181
  6316  0BD6  2BD8               	goto	u4180
  6317  0BD7                     u4181:	
  6318  0BD7  2BD9               	goto	l2861
  6319  0BD8                     u4180:	
  6320  0BD8                     l2859:	
  6321  0BD8  143C               	bsf	___flmul@prod,0
  6322  0BD9                     l2861:	
  6323  0BD9  3001               	movlw	1
  6324  0BDA  00B0               	movwf	??___flmul
  6325  0BDB                     u4195:	
  6326  0BDB  1003               	clrc
  6327  0BDC  0DB6               	rlf	___flmul@grs,f
  6328  0BDD  0DB7               	rlf	___flmul@grs+1,f
  6329  0BDE  0DB8               	rlf	___flmul@grs+2,f
  6330  0BDF  0DB9               	rlf	___flmul@grs+3,f
  6331  0BE0  0BB0               	decfsz	??___flmul,f
  6332  0BE1  2BDB               	goto	u4195
  6333  0BE2                     l2863:	
  6334  0BE2  30FF               	movlw	255
  6335  0BE3  07C0               	addwf	___flmul@temp,f
  6336  0BE4  1803               	skipnc
  6337  0BE5  0AC1               	incf	___flmul@temp+1,f
  6338  0BE6  30FF               	movlw	255
  6339  0BE7  07C1               	addwf	___flmul@temp+1,f
  6340  0BE8                     l2865:	
  6341  0BE8  1FBE               	btfss	___flmul@prod+2,7
  6342  0BE9  2BEB               	goto	u4201
  6343  0BEA  2BEC               	goto	u4200
  6344  0BEB                     u4201:	
  6345  0BEB  2BCB               	goto	l2855
  6346  0BEC                     u4200:	
  6347  0BEC                     l2867:	
  6348  0BEC  01BA               	clrf	___flmul@aexp
  6349  0BED                     l2869:	
  6350  0BED  1FB9               	btfss	___flmul@grs+3,7
  6351  0BEE  2BF0               	goto	u4211
  6352  0BEF  2BF1               	goto	u4210
  6353  0BF0                     u4211:	
  6354  0BF0  2C0D               	goto	l2877
  6355  0BF1                     u4210:	
  6356  0BF1                     l2871:	
  6357  0BF1  30FF               	movlw	255
  6358  0BF2  0536               	andwf	___flmul@grs,w
  6359  0BF3  00B0               	movwf	??___flmul
  6360  0BF4  30FF               	movlw	255
  6361  0BF5  0537               	andwf	___flmul@grs+1,w
  6362  0BF6  00B1               	movwf	??___flmul+1
  6363  0BF7  30FF               	movlw	255
  6364  0BF8  0538               	andwf	___flmul@grs+2,w
  6365  0BF9  00B2               	movwf	??___flmul+2
  6366  0BFA  307F               	movlw	127
  6367  0BFB  0539               	andwf	___flmul@grs+3,w
  6368  0BFC  00B3               	movwf	??___flmul+3
  6369  0BFD  0833               	movf	??___flmul+3,w
  6370  0BFE  0432               	iorwf	??___flmul+2,w
  6371  0BFF  0431               	iorwf	??___flmul+1,w
  6372  0C00  0430               	iorwf	??___flmul,w
  6373  0C01  1903               	skipnz
  6374  0C02  2C04               	goto	u4221
  6375  0C03  2C05               	goto	u4220
  6376  0C04                     u4221:	
  6377  0C04  2C08               	goto	l789
  6378  0C05                     u4220:	
  6379  0C05                     l2873:	
  6380  0C05  01BA               	clrf	___flmul@aexp
  6381  0C06  0ABA               	incf	___flmul@aexp,f
  6382  0C07  2C0D               	goto	l2877
  6383  0C08                     l789:	
  6384  0C08  1C3C               	btfss	___flmul@prod,0
  6385  0C09  2C0B               	goto	u4231
  6386  0C0A  2C0C               	goto	u4230
  6387  0C0B                     u4231:	
  6388  0C0B  2C0D               	goto	l2877
  6389  0C0C                     u4230:	
  6390  0C0C  2C05               	goto	l2873
  6391  0C0D                     l2877:	
  6392  0C0D  083A               	movf	___flmul@aexp,w
  6393  0C0E  1903               	btfsc	3,2
  6394  0C0F  2C11               	goto	u4241
  6395  0C10  2C12               	goto	u4240
  6396  0C11                     u4241:	
  6397  0C11  2C43               	goto	l2887
  6398  0C12                     u4240:	
  6399  0C12                     l2879:	
  6400  0C12  3001               	movlw	1
  6401  0C13  07BC               	addwf	___flmul@prod,f
  6402  0C14  3000               	movlw	0
  6403  0C15  1803               	skipnc
  6404  0C16  3001               	movlw	1
  6405  0C17  07BD               	addwf	___flmul@prod+1,f
  6406  0C18  3000               	movlw	0
  6407  0C19  1803               	skipnc
  6408  0C1A  3001               	movlw	1
  6409  0C1B  07BE               	addwf	___flmul@prod+2,f
  6410  0C1C  3000               	movlw	0
  6411  0C1D  1803               	skipnc
  6412  0C1E  3001               	movlw	1
  6413  0C1F  07BF               	addwf	___flmul@prod+3,f
  6414  0C20                     l2881:	
  6415  0C20  1C3F               	btfss	___flmul@prod+3,0
  6416  0C21  2C23               	goto	u4251
  6417  0C22  2C24               	goto	u4250
  6418  0C23                     u4251:	
  6419  0C23  2C43               	goto	l2887
  6420  0C24                     u4250:	
  6421  0C24                     l2883:	
  6422  0C24  083C               	movf	___flmul@prod,w
  6423  0C25  00B0               	movwf	??___flmul
  6424  0C26  083D               	movf	___flmul@prod+1,w
  6425  0C27  00B1               	movwf	??___flmul+1
  6426  0C28  083E               	movf	___flmul@prod+2,w
  6427  0C29  00B2               	movwf	??___flmul+2
  6428  0C2A  083F               	movf	___flmul@prod+3,w
  6429  0C2B  00B3               	movwf	??___flmul+3
  6430  0C2C  3001               	movlw	1
  6431  0C2D  00B4               	movwf	??___flmul+4
  6432  0C2E                     u4265:	
  6433  0C2E  0D33               	rlf	??___flmul+3,w
  6434  0C2F  0CB3               	rrf	??___flmul+3,f
  6435  0C30  0CB2               	rrf	??___flmul+2,f
  6436  0C31  0CB1               	rrf	??___flmul+1,f
  6437  0C32  0CB0               	rrf	??___flmul,f
  6438  0C33                     u4260:	
  6439  0C33  0BB4               	decfsz	??___flmul+4,f
  6440  0C34  2C2E               	goto	u4265
  6441  0C35  0833               	movf	??___flmul+3,w
  6442  0C36  00BF               	movwf	___flmul@prod+3
  6443  0C37  0832               	movf	??___flmul+2,w
  6444  0C38  00BE               	movwf	___flmul@prod+2
  6445  0C39  0831               	movf	??___flmul+1,w
  6446  0C3A  00BD               	movwf	___flmul@prod+1
  6447  0C3B  0830               	movf	??___flmul,w
  6448  0C3C  00BC               	movwf	___flmul@prod
  6449  0C3D                     l2885:	
  6450  0C3D  3001               	movlw	1
  6451  0C3E  07C0               	addwf	___flmul@temp,f
  6452  0C3F  1803               	skipnc
  6453  0C40  0AC1               	incf	___flmul@temp+1,f
  6454  0C41  3000               	movlw	0
  6455  0C42  07C1               	addwf	___flmul@temp+1,f
  6456  0C43                     l2887:	
  6457  0C43  0841               	movf	___flmul@temp+1,w
  6458  0C44  3A80               	xorlw	128
  6459  0C45  00FF               	movwf	btemp+1
  6460  0C46  3080               	movlw	128
  6461  0C47  027F               	subwf	btemp+1,w
  6462  0C48  1D03               	skipz
  6463  0C49  2C4C               	goto	u4275
  6464  0C4A  30FF               	movlw	255
  6465  0C4B  0240               	subwf	___flmul@temp,w
  6466  0C4C                     u4275:	
  6467  0C4C  1C03               	skipc
  6468  0C4D  2C4F               	goto	u4271
  6469  0C4E  2C50               	goto	u4270
  6470  0C4F                     u4271:	
  6471  0C4F  2C5B               	goto	l2891
  6472  0C50                     u4270:	
  6473  0C50                     l2889:	
  6474  0C50  307F               	movlw	127
  6475  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  6476  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  6477  0C53  00BF               	movwf	___flmul@prod+3
  6478  0C54  3080               	movlw	128
  6479  0C55  00BE               	movwf	___flmul@prod+2
  6480  0C56  3000               	movlw	0
  6481  0C57  00BD               	movwf	___flmul@prod+1
  6482  0C58  3000               	movlw	0
  6483  0C59  00BC               	movwf	___flmul@prod
  6484  0C5A  2C90               	goto	l795
  6485  0C5B                     l2891:	
  6486  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  6487  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  6488  0C5D  0841               	movf	___flmul@temp+1,w
  6489  0C5E  3A80               	xorlw	128
  6490  0C5F  00FF               	movwf	btemp+1
  6491  0C60  3080               	movlw	128
  6492  0C61  027F               	subwf	btemp+1,w
  6493  0C62  1D03               	skipz
  6494  0C63  2C66               	goto	u4285
  6495  0C64  3001               	movlw	1
  6496  0C65  0240               	subwf	___flmul@temp,w
  6497  0C66                     u4285:	
  6498  0C66  1803               	skipnc
  6499  0C67  2C69               	goto	u4281
  6500  0C68  2C6A               	goto	u4280
  6501  0C69                     u4281:	
  6502  0C69  2C76               	goto	l2897
  6503  0C6A                     u4280:	
  6504  0C6A                     l2893:	
  6505  0C6A  3000               	movlw	0
  6506  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6507  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  6508  0C6D  00BF               	movwf	___flmul@prod+3
  6509  0C6E  3000               	movlw	0
  6510  0C6F  00BE               	movwf	___flmul@prod+2
  6511  0C70  3000               	movlw	0
  6512  0C71  00BD               	movwf	___flmul@prod+1
  6513  0C72  3000               	movlw	0
  6514  0C73  00BC               	movwf	___flmul@prod
  6515  0C74                     l2895:	
  6516  0C74  01B5               	clrf	___flmul@sign
  6517  0C75  2C90               	goto	l795
  6518  0C76                     l2897:	
  6519  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  6520  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  6521  0C78  0840               	movf	___flmul@temp,w
  6522  0C79  00B0               	movwf	??___flmul
  6523  0C7A  0830               	movf	??___flmul,w
  6524  0C7B  00BB               	movwf	___flmul@bexp
  6525  0C7C  30FF               	movlw	255
  6526  0C7D  05BC               	andwf	___flmul@prod,f
  6527  0C7E  30FF               	movlw	255
  6528  0C7F  05BD               	andwf	___flmul@prod+1,f
  6529  0C80  307F               	movlw	127
  6530  0C81  05BE               	andwf	___flmul@prod+2,f
  6531  0C82  3000               	movlw	0
  6532  0C83  05BF               	andwf	___flmul@prod+3,f
  6533  0C84                     l2899:	
  6534  0C84  1C3B               	btfss	___flmul@bexp,0
  6535  0C85  2C87               	goto	u4291
  6536  0C86  2C88               	goto	u4290
  6537  0C87                     u4291:	
  6538  0C87  2C89               	goto	l2903
  6539  0C88                     u4290:	
  6540  0C88                     l2901:	
  6541  0C88  17BE               	bsf	___flmul@prod+2,7
  6542  0C89                     l2903:	
  6543  0C89  083B               	movf	___flmul@bexp,w
  6544  0C8A  00B0               	movwf	??___flmul
  6545  0C8B  1003               	clrc
  6546  0C8C  0C30               	rrf	??___flmul,w
  6547  0C8D  00B1               	movwf	??___flmul+1
  6548  0C8E  0831               	movf	??___flmul+1,w
  6549  0C8F  00BF               	movwf	___flmul@prod+3
  6550  0C90                     l795:	
  6551  0C90  0835               	movf	___flmul@sign,w
  6552  0C91  00B0               	movwf	??___flmul
  6553  0C92  0830               	movf	??___flmul,w
  6554  0C93  04BF               	iorwf	___flmul@prod+3,f
  6555  0C94                     l2905:	
  6556  0C94  083F               	movf	___flmul@prod+3,w
  6557  0C95  00AB               	movwf	?___flmul+3
  6558  0C96  083E               	movf	___flmul@prod+2,w
  6559  0C97  00AA               	movwf	?___flmul+2
  6560  0C98  083D               	movf	___flmul@prod+1,w
  6561  0C99  00A9               	movwf	?___flmul+1
  6562  0C9A  083C               	movf	___flmul@prod,w
  6563  0C9B  00A8               	movwf	?___flmul
  6564  0C9C                     l783:	
  6565  0C9C  0008               	return
  6566  0C9D                     __end_of___flmul:	
  6567                           
  6568                           	psect	text10
  6569  10C1                     __ptext10:	
  6570 ;; *************** function __Umul8_16 *****************
  6571 ;; Defined at:
  6572 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;  multiplier      1    wreg     unsigned char 
  6575 ;;  multiplicand    1    3[COMMON] unsigned char 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6578 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6579 ;;  product         2    0[BANK0 ] unsigned int 
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  2    3[COMMON] unsigned int 
  6582 ;; Registers used:
  6583 ;;		wreg, status,2, status,0
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6589 ;;      Params:         2       0       0       0       0
  6590 ;;      Locals:         0       5       0       0       0
  6591 ;;      Temps:          2       0       0       0       0
  6592 ;;      Totals:         4       5       0       0       0
  6593 ;;Total ram usage:        9 bytes
  6594 ;; Hardware stack levels used:    1
  6595 ;; Hardware stack levels required when called:    1
  6596 ;; This function calls:
  6597 ;;		Nothing
  6598 ;; This function is called by:
  6599 ;;		___flmul
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           
  6604                           ;psect for function __Umul8_16
  6605  10C1                     __Umul8_16:	
  6606                           
  6607                           ;incstack = 0
  6608                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6609                           ;__Umul8_16@multiplier stored from wreg
  6610  10C1  1283               	bcf	3,5	;RP0=0, select bank0
  6611  10C2  1303               	bcf	3,6	;RP1=0, select bank0
  6612  10C3  00A4               	movwf	__Umul8_16@multiplier
  6613  10C4                     l2421:	
  6614  10C4  01A0               	clrf	__Umul8_16@product
  6615  10C5  01A1               	clrf	__Umul8_16@product+1
  6616  10C6                     l2423:	
  6617  10C6  0873               	movf	__Umul8_16@multiplicand,w
  6618  10C7  00F5               	movwf	??__Umul8_16
  6619  10C8  01F6               	clrf	??__Umul8_16+1
  6620  10C9  0875               	movf	??__Umul8_16,w
  6621  10CA  00A2               	movwf	__Umul8_16@word_mpld
  6622  10CB  0876               	movf	??__Umul8_16+1,w
  6623  10CC  00A3               	movwf	__Umul8_16@word_mpld+1
  6624  10CD                     l2425:	
  6625  10CD  1C24               	btfss	__Umul8_16@multiplier,0
  6626  10CE  28D0               	goto	u3111
  6627  10CF  28D1               	goto	u3110
  6628  10D0                     u3111:	
  6629  10D0  28D7               	goto	l849
  6630  10D1                     u3110:	
  6631  10D1                     l2427:	
  6632  10D1  0822               	movf	__Umul8_16@word_mpld,w
  6633  10D2  07A0               	addwf	__Umul8_16@product,f
  6634  10D3  1803               	skipnc
  6635  10D4  0AA1               	incf	__Umul8_16@product+1,f
  6636  10D5  0823               	movf	__Umul8_16@word_mpld+1,w
  6637  10D6  07A1               	addwf	__Umul8_16@product+1,f
  6638  10D7                     l849:	
  6639  10D7  3001               	movlw	1
  6640  10D8                     u3125:	
  6641  10D8  1003               	clrc
  6642  10D9  0DA2               	rlf	__Umul8_16@word_mpld,f
  6643  10DA  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6644  10DB  3EFF               	addlw	-1
  6645  10DC  1D03               	skipz
  6646  10DD  28D8               	goto	u3125
  6647  10DE  1003               	clrc
  6648  10DF  0CA4               	rrf	__Umul8_16@multiplier,f
  6649  10E0                     l2429:	
  6650  10E0  0824               	movf	__Umul8_16@multiplier,w
  6651  10E1  1D03               	btfss	3,2
  6652  10E2  28E4               	goto	u3131
  6653  10E3  28E5               	goto	u3130
  6654  10E4                     u3131:	
  6655  10E4  28CD               	goto	l2425
  6656  10E5                     u3130:	
  6657  10E5                     l2431:	
  6658  10E5  0821               	movf	__Umul8_16@product+1,w
  6659  10E6  00F4               	movwf	?__Umul8_16+1
  6660  10E7  0820               	movf	__Umul8_16@product,w
  6661  10E8  00F3               	movwf	?__Umul8_16
  6662  10E9                     l851:	
  6663  10E9  0008               	return
  6664  10EA                     __end_of__Umul8_16:	
  6665                           
  6666                           	psect	text11
  6667  073E                     __ptext11:	
  6668 ;; *************** function __tdiv_to_l_ *****************
  6669 ;; Defined at:
  6670 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdivl.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;  f1              4    3[COMMON] float 
  6673 ;;  f2              4    7[COMMON] float 
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;  quot            4    4[BANK0 ] unsigned long 
  6676 ;;  exp1            1    9[BANK0 ] unsigned char 
  6677 ;;  cntr            1    8[BANK0 ] unsigned char 
  6678 ;; Return value:  Size  Location     Type
  6679 ;;                  4    3[COMMON] unsigned long 
  6680 ;; Registers used:
  6681 ;;		wreg, status,2, status,0
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6687 ;;      Params:         8       0       0       0       0
  6688 ;;      Locals:         0       6       0       0       0
  6689 ;;      Temps:          0       4       0       0       0
  6690 ;;      Totals:         8      10       0       0       0
  6691 ;;Total ram usage:       18 bytes
  6692 ;; Hardware stack levels used:    1
  6693 ;; Hardware stack levels required when called:    1
  6694 ;; This function calls:
  6695 ;;		Nothing
  6696 ;; This function is called by:
  6697 ;;		_sprintf
  6698 ;; This function uses a non-reentrant model
  6699 ;;
  6700                           
  6701                           
  6702                           ;psect for function __tdiv_to_l_
  6703  073E                     __tdiv_to_l_:	
  6704  073E                     l3003:	
  6705                           ;incstack = 0
  6706                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6707                           
  6708  073E  0873               	movf	__tdiv_to_l_@f1,w
  6709  073F  1283               	bcf	3,5	;RP0=0, select bank0
  6710  0740  1303               	bcf	3,6	;RP1=0, select bank0
  6711  0741  00A0               	movwf	??__tdiv_to_l_
  6712  0742  0874               	movf	__tdiv_to_l_@f1+1,w
  6713  0743  00A1               	movwf	??__tdiv_to_l_+1
  6714  0744  0875               	movf	__tdiv_to_l_@f1+2,w
  6715  0745  00A2               	movwf	??__tdiv_to_l_+2
  6716  0746  1003               	clrc
  6717  0747  0D21               	rlf	??__tdiv_to_l_+1,w
  6718  0748  0D22               	rlf	??__tdiv_to_l_+2,w
  6719  0749  00A3               	movwf	??__tdiv_to_l_+3
  6720  074A  0823               	movf	??__tdiv_to_l_+3,w
  6721  074B  00A9               	movwf	__tdiv_to_l_@exp1
  6722  074C  0829               	movf	__tdiv_to_l_@exp1,w
  6723  074D  1D03               	btfss	3,2
  6724  074E  2F50               	goto	u4571
  6725  074F  2F51               	goto	u4570
  6726  0750                     u4571:	
  6727  0750  2F5A               	goto	l3009
  6728  0751                     u4570:	
  6729  0751                     l3005:	
  6730  0751  3000               	movlw	0
  6731  0752  00F6               	movwf	?__tdiv_to_l_+3
  6732  0753  3000               	movlw	0
  6733  0754  00F5               	movwf	?__tdiv_to_l_+2
  6734  0755  3000               	movlw	0
  6735  0756  00F4               	movwf	?__tdiv_to_l_+1
  6736  0757  3000               	movlw	0
  6737  0758  00F3               	movwf	?__tdiv_to_l_
  6738  0759  2FFA               	goto	l577
  6739  075A                     l3009:	
  6740  075A  0877               	movf	__tdiv_to_l_@f2,w
  6741  075B  00A0               	movwf	??__tdiv_to_l_
  6742  075C  0878               	movf	__tdiv_to_l_@f2+1,w
  6743  075D  00A1               	movwf	??__tdiv_to_l_+1
  6744  075E  0879               	movf	__tdiv_to_l_@f2+2,w
  6745  075F  00A2               	movwf	??__tdiv_to_l_+2
  6746  0760  1003               	clrc
  6747  0761  0D21               	rlf	??__tdiv_to_l_+1,w
  6748  0762  0D22               	rlf	??__tdiv_to_l_+2,w
  6749  0763  00A3               	movwf	??__tdiv_to_l_+3
  6750  0764  0823               	movf	??__tdiv_to_l_+3,w
  6751  0765  00A8               	movwf	__tdiv_to_l_@cntr
  6752  0766  0828               	movf	__tdiv_to_l_@cntr,w
  6753  0767  1D03               	btfss	3,2
  6754  0768  2F6A               	goto	u4581
  6755  0769  2F6B               	goto	u4580
  6756  076A                     u4581:	
  6757  076A  2F6C               	goto	l578
  6758  076B                     u4580:	
  6759  076B  2F51               	goto	l3005
  6760  076C                     l578:	
  6761  076C  17F4               	bsf	__tdiv_to_l_@f1+1,7
  6762  076D                     l3015:	
  6763  076D  30FF               	movlw	255
  6764  076E  05F3               	andwf	__tdiv_to_l_@f1,f
  6765  076F  30FF               	movlw	255
  6766  0770  05F4               	andwf	__tdiv_to_l_@f1+1,f
  6767  0771  3000               	movlw	0
  6768  0772  05F5               	andwf	__tdiv_to_l_@f1+2,f
  6769  0773                     l3017:	
  6770  0773  17F8               	bsf	__tdiv_to_l_@f2+1,7
  6771  0774  30FF               	movlw	255
  6772  0775  05F7               	andwf	__tdiv_to_l_@f2,f
  6773  0776  30FF               	movlw	255
  6774  0777  05F8               	andwf	__tdiv_to_l_@f2+1,f
  6775  0778  3000               	movlw	0
  6776  0779  05F9               	andwf	__tdiv_to_l_@f2+2,f
  6777  077A  3000               	movlw	0
  6778  077B  00A7               	movwf	__tdiv_to_l_@quot+3
  6779  077C  3000               	movlw	0
  6780  077D  00A6               	movwf	__tdiv_to_l_@quot+2
  6781  077E  3000               	movlw	0
  6782  077F  00A5               	movwf	__tdiv_to_l_@quot+1
  6783  0780  3000               	movlw	0
  6784  0781  00A4               	movwf	__tdiv_to_l_@quot
  6785  0782                     l3019:	
  6786  0782  307F               	movlw	127
  6787  0783  02A9               	subwf	__tdiv_to_l_@exp1,f
  6788  0784                     l3021:	
  6789  0784  3098               	movlw	152
  6790  0785  0728               	addwf	__tdiv_to_l_@cntr,w
  6791  0786  00A0               	movwf	??__tdiv_to_l_
  6792  0787  0820               	movf	??__tdiv_to_l_,w
  6793  0788  02A9               	subwf	__tdiv_to_l_@exp1,f
  6794  0789  3018               	movlw	24
  6795  078A  00A0               	movwf	??__tdiv_to_l_
  6796  078B  0820               	movf	??__tdiv_to_l_,w
  6797  078C  00A8               	movwf	__tdiv_to_l_@cntr
  6798  078D                     l3023:	
  6799  078D  3001               	movlw	1
  6800  078E  00A0               	movwf	??__tdiv_to_l_
  6801  078F                     u4595:	
  6802  078F  1003               	clrc
  6803  0790  0DA4               	rlf	__tdiv_to_l_@quot,f
  6804  0791  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  6805  0792  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  6806  0793  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  6807  0794  0BA0               	decfsz	??__tdiv_to_l_,f
  6808  0795  2F8F               	goto	u4595
  6809  0796                     l3025:	
  6810  0796  0879               	movf	__tdiv_to_l_@f2+2,w
  6811  0797  0275               	subwf	__tdiv_to_l_@f1+2,w
  6812  0798  1D03               	skipz
  6813  0799  2FA0               	goto	u4605
  6814  079A  0878               	movf	__tdiv_to_l_@f2+1,w
  6815  079B  0274               	subwf	__tdiv_to_l_@f1+1,w
  6816  079C  1D03               	skipz
  6817  079D  2FA0               	goto	u4605
  6818  079E  0877               	movf	__tdiv_to_l_@f2,w
  6819  079F  0273               	subwf	__tdiv_to_l_@f1,w
  6820  07A0                     u4605:	
  6821  07A0  1C03               	skipc
  6822  07A1  2FA3               	goto	u4601
  6823  07A2  2FA4               	goto	u4600
  6824  07A3                     u4601:	
  6825  07A3  2FAF               	goto	l3031
  6826  07A4                     u4600:	
  6827  07A4                     l3027:	
  6828  07A4  0877               	movf	__tdiv_to_l_@f2,w
  6829  07A5  02F3               	subwf	__tdiv_to_l_@f1,f
  6830  07A6  0878               	movf	__tdiv_to_l_@f2+1,w
  6831  07A7  1C03               	skipc
  6832  07A8  0F78               	incfsz	__tdiv_to_l_@f2+1,w
  6833  07A9  02F4               	subwf	__tdiv_to_l_@f1+1,f
  6834  07AA  0879               	movf	__tdiv_to_l_@f2+2,w
  6835  07AB  1C03               	skipc
  6836  07AC  0A79               	incf	__tdiv_to_l_@f2+2,w
  6837  07AD  02F5               	subwf	__tdiv_to_l_@f1+2,f
  6838  07AE                     l3029:	
  6839  07AE  1424               	bsf	__tdiv_to_l_@quot,0
  6840  07AF                     l3031:	
  6841  07AF  3001               	movlw	1
  6842  07B0                     u4615:	
  6843  07B0  1003               	clrc
  6844  07B1  0DF3               	rlf	__tdiv_to_l_@f1,f
  6845  07B2  0DF4               	rlf	__tdiv_to_l_@f1+1,f
  6846  07B3  0DF5               	rlf	__tdiv_to_l_@f1+2,f
  6847  07B4  3EFF               	addlw	-1
  6848  07B5  1D03               	skipz
  6849  07B6  2FB0               	goto	u4615
  6850  07B7                     l3033:	
  6851  07B7  3001               	movlw	1
  6852  07B8  02A8               	subwf	__tdiv_to_l_@cntr,f
  6853  07B9  1D03               	btfss	3,2
  6854  07BA  2FBC               	goto	u4621
  6855  07BB  2FBD               	goto	u4620
  6856  07BC                     u4621:	
  6857  07BC  2F8D               	goto	l3023
  6858  07BD                     u4620:	
  6859  07BD                     l581:	
  6860  07BD  1FA9               	btfss	__tdiv_to_l_@exp1,7
  6861  07BE  2FC0               	goto	u4631
  6862  07BF  2FC1               	goto	u4630
  6863  07C0                     u4631:	
  6864  07C0  2FDB               	goto	l3043
  6865  07C1                     u4630:	
  6866  07C1                     l3035:	
  6867  07C1  0829               	movf	__tdiv_to_l_@exp1,w
  6868  07C2  3A80               	xorlw	128
  6869  07C3  3E97               	addlw	151
  6870  07C4  1803               	skipnc
  6871  07C5  2FC7               	goto	u4641
  6872  07C6  2FC8               	goto	u4640
  6873  07C7                     u4641:	
  6874  07C7  2FC9               	goto	l3041
  6875  07C8                     u4640:	
  6876  07C8  2F51               	goto	l3005
  6877  07C9                     l3041:	
  6878  07C9  3001               	movlw	1
  6879  07CA                     u4655:	
  6880  07CA  1003               	clrc
  6881  07CB  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  6882  07CC  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  6883  07CD  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  6884  07CE  0CA4               	rrf	__tdiv_to_l_@quot,f
  6885  07CF  3EFF               	addlw	-1
  6886  07D0  1D03               	skipz
  6887  07D1  2FCA               	goto	u4655
  6888  07D2  3001               	movlw	1
  6889  07D3  00A0               	movwf	??__tdiv_to_l_
  6890  07D4  0820               	movf	??__tdiv_to_l_,w
  6891  07D5  07A9               	addwf	__tdiv_to_l_@exp1,f
  6892  07D6  1D03               	btfss	3,2
  6893  07D7  2FD9               	goto	u4661
  6894  07D8  2FDA               	goto	u4660
  6895  07D9                     u4661:	
  6896  07D9  2FC9               	goto	l3041
  6897  07DA                     u4660:	
  6898  07DA  2FF2               	goto	l3051
  6899  07DB                     l3043:	
  6900  07DB  3018               	movlw	24
  6901  07DC  0229               	subwf	__tdiv_to_l_@exp1,w
  6902  07DD  1C03               	skipc
  6903  07DE  2FE0               	goto	u4671
  6904  07DF  2FE1               	goto	u4670
  6905  07E0                     u4671:	
  6906  07E0  2FED               	goto	l588
  6907  07E1                     u4670:	
  6908  07E1  2F51               	goto	l3005
  6909  07E2                     l3049:	
  6910  07E2  3001               	movlw	1
  6911  07E3  00A0               	movwf	??__tdiv_to_l_
  6912  07E4                     u4685:	
  6913  07E4  1003               	clrc
  6914  07E5  0DA4               	rlf	__tdiv_to_l_@quot,f
  6915  07E6  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  6916  07E7  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  6917  07E8  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  6918  07E9  0BA0               	decfsz	??__tdiv_to_l_,f
  6919  07EA  2FE4               	goto	u4685
  6920  07EB  3001               	movlw	1
  6921  07EC  02A9               	subwf	__tdiv_to_l_@exp1,f
  6922  07ED                     l588:	
  6923  07ED  0829               	movf	__tdiv_to_l_@exp1,w
  6924  07EE  1D03               	btfss	3,2
  6925  07EF  2FF1               	goto	u4691
  6926  07F0  2FF2               	goto	u4690
  6927  07F1                     u4691:	
  6928  07F1  2FE2               	goto	l3049
  6929  07F2                     u4690:	
  6930  07F2                     l3051:	
  6931  07F2  0827               	movf	__tdiv_to_l_@quot+3,w
  6932  07F3  00F6               	movwf	?__tdiv_to_l_+3
  6933  07F4  0826               	movf	__tdiv_to_l_@quot+2,w
  6934  07F5  00F5               	movwf	?__tdiv_to_l_+2
  6935  07F6  0825               	movf	__tdiv_to_l_@quot+1,w
  6936  07F7  00F4               	movwf	?__tdiv_to_l_+1
  6937  07F8  0824               	movf	__tdiv_to_l_@quot,w
  6938  07F9  00F3               	movwf	?__tdiv_to_l_
  6939  07FA                     l577:	
  6940  07FA  0008               	return
  6941  07FB                     __end_of__tdiv_to_l_:	
  6942                           
  6943                           	psect	text12
  6944  0680                     __ptext12:	
  6945 ;; *************** function __div_to_l_ *****************
  6946 ;; Defined at:
  6947 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fldivl.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  f1              4    3[COMMON] unsigned long 
  6950 ;;  f2              4    7[COMMON] unsigned long 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;  quot            4    1[BANK0 ] unsigned long 
  6953 ;;  exp1            1    6[BANK0 ] unsigned char 
  6954 ;;  cntr            1    5[BANK0 ] unsigned char 
  6955 ;; Return value:  Size  Location     Type
  6956 ;;                  4    3[COMMON] unsigned long 
  6957 ;; Registers used:
  6958 ;;		wreg, status,2, status,0
  6959 ;; Tracked objects:
  6960 ;;		On entry : 0/0
  6961 ;;		On exit  : 0/0
  6962 ;;		Unchanged: 0/0
  6963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6964 ;;      Params:         8       0       0       0       0
  6965 ;;      Locals:         0       6       0       0       0
  6966 ;;      Temps:          0       1       0       0       0
  6967 ;;      Totals:         8       7       0       0       0
  6968 ;;Total ram usage:       15 bytes
  6969 ;; Hardware stack levels used:    1
  6970 ;; Hardware stack levels required when called:    1
  6971 ;; This function calls:
  6972 ;;		Nothing
  6973 ;; This function is called by:
  6974 ;;		_sprintf
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           
  6979                           ;psect for function __div_to_l_
  6980  0680                     __div_to_l_:	
  6981  0680                     l3055:	
  6982                           ;incstack = 0
  6983                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6984                           
  6985  0680  1003               	clrc
  6986  0681  0D75               	rlf	__div_to_l_@f1+2,w
  6987  0682  0D76               	rlf	__div_to_l_@f1+3,w
  6988  0683  1283               	bcf	3,5	;RP0=0, select bank0
  6989  0684  1303               	bcf	3,6	;RP1=0, select bank0
  6990  0685  00A0               	movwf	??__div_to_l_
  6991  0686  0820               	movf	??__div_to_l_,w
  6992  0687  00A6               	movwf	__div_to_l_@exp1
  6993  0688  0826               	movf	__div_to_l_@exp1,w
  6994  0689  1D03               	btfss	3,2
  6995  068A  2E8C               	goto	u4701
  6996  068B  2E8D               	goto	u4700
  6997  068C                     u4701:	
  6998  068C  2E96               	goto	l3061
  6999  068D                     u4700:	
  7000  068D                     l3057:	
  7001  068D  3000               	movlw	0
  7002  068E  00F6               	movwf	?__div_to_l_+3
  7003  068F  3000               	movlw	0
  7004  0690  00F5               	movwf	?__div_to_l_+2
  7005  0691  3000               	movlw	0
  7006  0692  00F4               	movwf	?__div_to_l_+1
  7007  0693  3000               	movlw	0
  7008  0694  00F3               	movwf	?__div_to_l_
  7009  0695  2F3D               	goto	l530
  7010  0696                     l3061:	
  7011  0696  1003               	clrc
  7012  0697  0D79               	rlf	__div_to_l_@f2+2,w
  7013  0698  0D7A               	rlf	__div_to_l_@f2+3,w
  7014  0699  00A0               	movwf	??__div_to_l_
  7015  069A  0820               	movf	??__div_to_l_,w
  7016  069B  00A5               	movwf	__div_to_l_@cntr
  7017  069C  0825               	movf	__div_to_l_@cntr,w
  7018  069D  1D03               	btfss	3,2
  7019  069E  2EA0               	goto	u4711
  7020  069F  2EA1               	goto	u4710
  7021  06A0                     u4711:	
  7022  06A0  2EA2               	goto	l531
  7023  06A1                     u4710:	
  7024  06A1  2E8D               	goto	l3057
  7025  06A2                     l531:	
  7026  06A2  17F5               	bsf	__div_to_l_@f1+2,7
  7027  06A3                     l3067:	
  7028  06A3  30FF               	movlw	255
  7029  06A4  05F3               	andwf	__div_to_l_@f1,f
  7030  06A5  30FF               	movlw	255
  7031  06A6  05F4               	andwf	__div_to_l_@f1+1,f
  7032  06A7  30FF               	movlw	255
  7033  06A8  05F5               	andwf	__div_to_l_@f1+2,f
  7034  06A9  3000               	movlw	0
  7035  06AA  05F6               	andwf	__div_to_l_@f1+3,f
  7036  06AB                     l3069:	
  7037  06AB  17F9               	bsf	__div_to_l_@f2+2,7
  7038  06AC  30FF               	movlw	255
  7039  06AD  05F7               	andwf	__div_to_l_@f2,f
  7040  06AE  30FF               	movlw	255
  7041  06AF  05F8               	andwf	__div_to_l_@f2+1,f
  7042  06B0  30FF               	movlw	255
  7043  06B1  05F9               	andwf	__div_to_l_@f2+2,f
  7044  06B2  3000               	movlw	0
  7045  06B3  05FA               	andwf	__div_to_l_@f2+3,f
  7046  06B4  3000               	movlw	0
  7047  06B5  00A4               	movwf	__div_to_l_@quot+3
  7048  06B6  3000               	movlw	0
  7049  06B7  00A3               	movwf	__div_to_l_@quot+2
  7050  06B8  3000               	movlw	0
  7051  06B9  00A2               	movwf	__div_to_l_@quot+1
  7052  06BA  3000               	movlw	0
  7053  06BB  00A1               	movwf	__div_to_l_@quot
  7054  06BC                     l3071:	
  7055  06BC  307F               	movlw	127
  7056  06BD  02A6               	subwf	__div_to_l_@exp1,f
  7057  06BE                     l3073:	
  7058  06BE  30A0               	movlw	160
  7059  06BF  0725               	addwf	__div_to_l_@cntr,w
  7060  06C0  00A0               	movwf	??__div_to_l_
  7061  06C1  0820               	movf	??__div_to_l_,w
  7062  06C2  02A6               	subwf	__div_to_l_@exp1,f
  7063  06C3  3020               	movlw	32
  7064  06C4  00A0               	movwf	??__div_to_l_
  7065  06C5  0820               	movf	??__div_to_l_,w
  7066  06C6  00A5               	movwf	__div_to_l_@cntr
  7067  06C7                     l3075:	
  7068  06C7  3001               	movlw	1
  7069  06C8  00A0               	movwf	??__div_to_l_
  7070  06C9                     u4725:	
  7071  06C9  1003               	clrc
  7072  06CA  0DA1               	rlf	__div_to_l_@quot,f
  7073  06CB  0DA2               	rlf	__div_to_l_@quot+1,f
  7074  06CC  0DA3               	rlf	__div_to_l_@quot+2,f
  7075  06CD  0DA4               	rlf	__div_to_l_@quot+3,f
  7076  06CE  0BA0               	decfsz	??__div_to_l_,f
  7077  06CF  2EC9               	goto	u4725
  7078  06D0                     l3077:	
  7079  06D0  087A               	movf	__div_to_l_@f2+3,w
  7080  06D1  0276               	subwf	__div_to_l_@f1+3,w
  7081  06D2  1D03               	skipz
  7082  06D3  2EDE               	goto	u4735
  7083  06D4  0879               	movf	__div_to_l_@f2+2,w
  7084  06D5  0275               	subwf	__div_to_l_@f1+2,w
  7085  06D6  1D03               	skipz
  7086  06D7  2EDE               	goto	u4735
  7087  06D8  0878               	movf	__div_to_l_@f2+1,w
  7088  06D9  0274               	subwf	__div_to_l_@f1+1,w
  7089  06DA  1D03               	skipz
  7090  06DB  2EDE               	goto	u4735
  7091  06DC  0877               	movf	__div_to_l_@f2,w
  7092  06DD  0273               	subwf	__div_to_l_@f1,w
  7093  06DE                     u4735:	
  7094  06DE  1C03               	skipc
  7095  06DF  2EE1               	goto	u4731
  7096  06E0  2EE2               	goto	u4730
  7097  06E1                     u4731:	
  7098  06E1  2EF1               	goto	l3083
  7099  06E2                     u4730:	
  7100  06E2                     l3079:	
  7101  06E2  0877               	movf	__div_to_l_@f2,w
  7102  06E3  02F3               	subwf	__div_to_l_@f1,f
  7103  06E4  0878               	movf	__div_to_l_@f2+1,w
  7104  06E5  1C03               	skipc
  7105  06E6  0F78               	incfsz	__div_to_l_@f2+1,w
  7106  06E7  02F4               	subwf	__div_to_l_@f1+1,f
  7107  06E8  0879               	movf	__div_to_l_@f2+2,w
  7108  06E9  1C03               	skipc
  7109  06EA  0F79               	incfsz	__div_to_l_@f2+2,w
  7110  06EB  02F5               	subwf	__div_to_l_@f1+2,f
  7111  06EC  087A               	movf	__div_to_l_@f2+3,w
  7112  06ED  1C03               	skipc
  7113  06EE  0F7A               	incfsz	__div_to_l_@f2+3,w
  7114  06EF  02F6               	subwf	__div_to_l_@f1+3,f
  7115  06F0                     l3081:	
  7116  06F0  1421               	bsf	__div_to_l_@quot,0
  7117  06F1                     l3083:	
  7118  06F1  3001               	movlw	1
  7119  06F2  00A0               	movwf	??__div_to_l_
  7120  06F3                     u4745:	
  7121  06F3  1003               	clrc
  7122  06F4  0DF3               	rlf	__div_to_l_@f1,f
  7123  06F5  0DF4               	rlf	__div_to_l_@f1+1,f
  7124  06F6  0DF5               	rlf	__div_to_l_@f1+2,f
  7125  06F7  0DF6               	rlf	__div_to_l_@f1+3,f
  7126  06F8  0BA0               	decfsz	??__div_to_l_,f
  7127  06F9  2EF3               	goto	u4745
  7128  06FA                     l3085:	
  7129  06FA  3001               	movlw	1
  7130  06FB  02A5               	subwf	__div_to_l_@cntr,f
  7131  06FC  1D03               	btfss	3,2
  7132  06FD  2EFF               	goto	u4751
  7133  06FE  2F00               	goto	u4750
  7134  06FF                     u4751:	
  7135  06FF  2EC7               	goto	l3075
  7136  0700                     u4750:	
  7137  0700                     l534:	
  7138  0700  1FA6               	btfss	__div_to_l_@exp1,7
  7139  0701  2F03               	goto	u4761
  7140  0702  2F04               	goto	u4760
  7141  0703                     u4761:	
  7142  0703  2F1E               	goto	l3095
  7143  0704                     u4760:	
  7144  0704                     l3087:	
  7145  0704  0826               	movf	__div_to_l_@exp1,w
  7146  0705  3A80               	xorlw	128
  7147  0706  3E9F               	addlw	159
  7148  0707  1803               	skipnc
  7149  0708  2F0A               	goto	u4771
  7150  0709  2F0B               	goto	u4770
  7151  070A                     u4771:	
  7152  070A  2F0C               	goto	l3093
  7153  070B                     u4770:	
  7154  070B  2E8D               	goto	l3057
  7155  070C                     l3093:	
  7156  070C  3001               	movlw	1
  7157  070D                     u4785:	
  7158  070D  1003               	clrc
  7159  070E  0CA4               	rrf	__div_to_l_@quot+3,f
  7160  070F  0CA3               	rrf	__div_to_l_@quot+2,f
  7161  0710  0CA2               	rrf	__div_to_l_@quot+1,f
  7162  0711  0CA1               	rrf	__div_to_l_@quot,f
  7163  0712  3EFF               	addlw	-1
  7164  0713  1D03               	skipz
  7165  0714  2F0D               	goto	u4785
  7166  0715  3001               	movlw	1
  7167  0716  00A0               	movwf	??__div_to_l_
  7168  0717  0820               	movf	??__div_to_l_,w
  7169  0718  07A6               	addwf	__div_to_l_@exp1,f
  7170  0719  1D03               	btfss	3,2
  7171  071A  2F1C               	goto	u4791
  7172  071B  2F1D               	goto	u4790
  7173  071C                     u4791:	
  7174  071C  2F0C               	goto	l3093
  7175  071D                     u4790:	
  7176  071D  2F35               	goto	l3103
  7177  071E                     l3095:	
  7178  071E  3020               	movlw	32
  7179  071F  0226               	subwf	__div_to_l_@exp1,w
  7180  0720  1C03               	skipc
  7181  0721  2F23               	goto	u4801
  7182  0722  2F24               	goto	u4800
  7183  0723                     u4801:	
  7184  0723  2F30               	goto	l541
  7185  0724                     u4800:	
  7186  0724  2E8D               	goto	l3057
  7187  0725                     l3101:	
  7188  0725  3001               	movlw	1
  7189  0726  00A0               	movwf	??__div_to_l_
  7190  0727                     u4815:	
  7191  0727  1003               	clrc
  7192  0728  0DA1               	rlf	__div_to_l_@quot,f
  7193  0729  0DA2               	rlf	__div_to_l_@quot+1,f
  7194  072A  0DA3               	rlf	__div_to_l_@quot+2,f
  7195  072B  0DA4               	rlf	__div_to_l_@quot+3,f
  7196  072C  0BA0               	decfsz	??__div_to_l_,f
  7197  072D  2F27               	goto	u4815
  7198  072E  3001               	movlw	1
  7199  072F  02A6               	subwf	__div_to_l_@exp1,f
  7200  0730                     l541:	
  7201  0730  0826               	movf	__div_to_l_@exp1,w
  7202  0731  1D03               	btfss	3,2
  7203  0732  2F34               	goto	u4821
  7204  0733  2F35               	goto	u4820
  7205  0734                     u4821:	
  7206  0734  2F25               	goto	l3101
  7207  0735                     u4820:	
  7208  0735                     l3103:	
  7209  0735  0824               	movf	__div_to_l_@quot+3,w
  7210  0736  00F6               	movwf	?__div_to_l_+3
  7211  0737  0823               	movf	__div_to_l_@quot+2,w
  7212  0738  00F5               	movwf	?__div_to_l_+2
  7213  0739  0822               	movf	__div_to_l_@quot+1,w
  7214  073A  00F4               	movwf	?__div_to_l_+1
  7215  073B  0821               	movf	__div_to_l_@quot,w
  7216  073C  00F3               	movwf	?__div_to_l_
  7217  073D                     l530:	
  7218  073D  0008               	return
  7219  073E                     __end_of__div_to_l_:	
  7220                           
  7221                           	psect	text13
  7222  0880                     __ptext13:	
  7223 ;; *************** function ___xxtofl *****************
  7224 ;; Defined at:
  7225 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;  sign            1    wreg     unsigned char 
  7228 ;;  val             4    3[COMMON] long 
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;  sign            1    0[BANK0 ] unsigned char 
  7231 ;;  arg             4    2[BANK0 ] unsigned long 
  7232 ;;  exp             1    1[BANK0 ] unsigned char 
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  4    3[COMMON] unsigned char 
  7235 ;; Registers used:
  7236 ;;		wreg, status,2, status,0
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/0
  7239 ;;		On exit  : 0/0
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7242 ;;      Params:         4       0       0       0       0
  7243 ;;      Locals:         0       6       0       0       0
  7244 ;;      Temps:          4       0       0       0       0
  7245 ;;      Totals:         8       6       0       0       0
  7246 ;;Total ram usage:       14 bytes
  7247 ;; Hardware stack levels used:    1
  7248 ;; Hardware stack levels required when called:    1
  7249 ;; This function calls:
  7250 ;;		Nothing
  7251 ;; This function is called by:
  7252 ;;		_main
  7253 ;;		_sprintf
  7254 ;; This function uses a non-reentrant model
  7255 ;;
  7256                           
  7257                           
  7258                           ;psect for function ___xxtofl
  7259  0880                     ___xxtofl:	
  7260                           
  7261                           ;incstack = 0
  7262                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7263                           ;___xxtofl@sign stored from wreg
  7264  0880  1283               	bcf	3,5	;RP0=0, select bank0
  7265  0881  1303               	bcf	3,6	;RP1=0, select bank0
  7266  0882  00A0               	movwf	___xxtofl@sign
  7267  0883                     l3247:	
  7268  0883  0820               	movf	___xxtofl@sign,w
  7269  0884  1903               	btfsc	3,2
  7270  0885  2887               	goto	u5211
  7271  0886  2888               	goto	u5210
  7272  0887                     u5211:	
  7273  0887  289C               	goto	l3253
  7274  0888                     u5210:	
  7275  0888                     l3249:	
  7276  0888  1FF6               	btfss	___xxtofl@val+3,7
  7277  0889  288B               	goto	u5221
  7278  088A  288C               	goto	u5220
  7279  088B                     u5221:	
  7280  088B  289C               	goto	l3253
  7281  088C                     u5220:	
  7282  088C                     l3251:	
  7283  088C  0973               	comf	___xxtofl@val,w
  7284  088D  00A2               	movwf	___xxtofl@arg
  7285  088E  0974               	comf	___xxtofl@val+1,w
  7286  088F  00A3               	movwf	___xxtofl@arg+1
  7287  0890  0975               	comf	___xxtofl@val+2,w
  7288  0891  00A4               	movwf	___xxtofl@arg+2
  7289  0892  0976               	comf	___xxtofl@val+3,w
  7290  0893  00A5               	movwf	___xxtofl@arg+3
  7291  0894  0AA2               	incf	___xxtofl@arg,f
  7292  0895  1903               	skipnz
  7293  0896  0AA3               	incf	___xxtofl@arg+1,f
  7294  0897  1903               	skipnz
  7295  0898  0AA4               	incf	___xxtofl@arg+2,f
  7296  0899  1903               	skipnz
  7297  089A  0AA5               	incf	___xxtofl@arg+3,f
  7298  089B  28A4               	goto	l821
  7299  089C                     l3253:	
  7300  089C  0876               	movf	___xxtofl@val+3,w
  7301  089D  00A5               	movwf	___xxtofl@arg+3
  7302  089E  0875               	movf	___xxtofl@val+2,w
  7303  089F  00A4               	movwf	___xxtofl@arg+2
  7304  08A0  0874               	movf	___xxtofl@val+1,w
  7305  08A1  00A3               	movwf	___xxtofl@arg+1
  7306  08A2  0873               	movf	___xxtofl@val,w
  7307  08A3  00A2               	movwf	___xxtofl@arg
  7308  08A4                     l821:	
  7309  08A4  0876               	movf	___xxtofl@val+3,w
  7310  08A5  0475               	iorwf	___xxtofl@val+2,w
  7311  08A6  0474               	iorwf	___xxtofl@val+1,w
  7312  08A7  0473               	iorwf	___xxtofl@val,w
  7313  08A8  1D03               	skipz
  7314  08A9  28AB               	goto	u5231
  7315  08AA  28AC               	goto	u5230
  7316  08AB                     u5231:	
  7317  08AB  28B5               	goto	l3259
  7318  08AC                     u5230:	
  7319  08AC                     l3255:	
  7320  08AC  3000               	movlw	0
  7321  08AD  00F6               	movwf	?___xxtofl+3
  7322  08AE  3000               	movlw	0
  7323  08AF  00F5               	movwf	?___xxtofl+2
  7324  08B0  3000               	movlw	0
  7325  08B1  00F4               	movwf	?___xxtofl+1
  7326  08B2  3000               	movlw	0
  7327  08B3  00F3               	movwf	?___xxtofl
  7328  08B4  293B               	goto	l823
  7329  08B5                     l3259:	
  7330  08B5  3096               	movlw	150
  7331  08B6  00F7               	movwf	??___xxtofl
  7332  08B7  0877               	movf	??___xxtofl,w
  7333  08B8  00A1               	movwf	___xxtofl@exp
  7334  08B9  28C7               	goto	l3263
  7335  08BA                     l3261:	
  7336  08BA  3001               	movlw	1
  7337  08BB  00F7               	movwf	??___xxtofl
  7338  08BC  0877               	movf	??___xxtofl,w
  7339  08BD  07A1               	addwf	___xxtofl@exp,f
  7340  08BE  3001               	movlw	1
  7341  08BF                     u5245:	
  7342  08BF  1003               	clrc
  7343  08C0  0CA5               	rrf	___xxtofl@arg+3,f
  7344  08C1  0CA4               	rrf	___xxtofl@arg+2,f
  7345  08C2  0CA3               	rrf	___xxtofl@arg+1,f
  7346  08C3  0CA2               	rrf	___xxtofl@arg,f
  7347  08C4  3EFF               	addlw	-1
  7348  08C5  1D03               	skipz
  7349  08C6  28BF               	goto	u5245
  7350  08C7                     l3263:	
  7351  08C7  30FE               	movlw	254
  7352  08C8  0525               	andwf	___xxtofl@arg+3,w
  7353  08C9  1D03               	btfss	3,2
  7354  08CA  28CC               	goto	u5251
  7355  08CB  28CD               	goto	u5250
  7356  08CC                     u5251:	
  7357  08CC  28BA               	goto	l3261
  7358  08CD                     u5250:	
  7359  08CD  28E9               	goto	l827
  7360  08CE                     l3265:	
  7361  08CE  3001               	movlw	1
  7362  08CF  00F7               	movwf	??___xxtofl
  7363  08D0  0877               	movf	??___xxtofl,w
  7364  08D1  07A1               	addwf	___xxtofl@exp,f
  7365  08D2                     l3267:	
  7366  08D2  3001               	movlw	1
  7367  08D3  07A2               	addwf	___xxtofl@arg,f
  7368  08D4  3000               	movlw	0
  7369  08D5  1803               	skipnc
  7370  08D6  3001               	movlw	1
  7371  08D7  07A3               	addwf	___xxtofl@arg+1,f
  7372  08D8  3000               	movlw	0
  7373  08D9  1803               	skipnc
  7374  08DA  3001               	movlw	1
  7375  08DB  07A4               	addwf	___xxtofl@arg+2,f
  7376  08DC  3000               	movlw	0
  7377  08DD  1803               	skipnc
  7378  08DE  3001               	movlw	1
  7379  08DF  07A5               	addwf	___xxtofl@arg+3,f
  7380  08E0                     l3269:	
  7381  08E0  3001               	movlw	1
  7382  08E1                     u5265:	
  7383  08E1  1003               	clrc
  7384  08E2  0CA5               	rrf	___xxtofl@arg+3,f
  7385  08E3  0CA4               	rrf	___xxtofl@arg+2,f
  7386  08E4  0CA3               	rrf	___xxtofl@arg+1,f
  7387  08E5  0CA2               	rrf	___xxtofl@arg,f
  7388  08E6  3EFF               	addlw	-1
  7389  08E7  1D03               	skipz
  7390  08E8  28E1               	goto	u5265
  7391  08E9                     l827:	
  7392  08E9  30FF               	movlw	255
  7393  08EA  0525               	andwf	___xxtofl@arg+3,w
  7394  08EB  1D03               	btfss	3,2
  7395  08EC  28EE               	goto	u5271
  7396  08ED  28EF               	goto	u5270
  7397  08EE                     u5271:	
  7398  08EE  28CE               	goto	l3265
  7399  08EF                     u5270:	
  7400  08EF  28FB               	goto	l3273
  7401  08F0                     l3271:	
  7402  08F0  3001               	movlw	1
  7403  08F1  02A1               	subwf	___xxtofl@exp,f
  7404  08F2  3001               	movlw	1
  7405  08F3  00F7               	movwf	??___xxtofl
  7406  08F4                     u5285:	
  7407  08F4  1003               	clrc
  7408  08F5  0DA2               	rlf	___xxtofl@arg,f
  7409  08F6  0DA3               	rlf	___xxtofl@arg+1,f
  7410  08F7  0DA4               	rlf	___xxtofl@arg+2,f
  7411  08F8  0DA5               	rlf	___xxtofl@arg+3,f
  7412  08F9  0BF7               	decfsz	??___xxtofl,f
  7413  08FA  28F4               	goto	u5285
  7414  08FB                     l3273:	
  7415  08FB  1BA4               	btfsc	___xxtofl@arg+2,7
  7416  08FC  28FE               	goto	u5291
  7417  08FD  28FF               	goto	u5290
  7418  08FE                     u5291:	
  7419  08FE  2905               	goto	l834
  7420  08FF                     u5290:	
  7421  08FF                     l3275:	
  7422  08FF  3002               	movlw	2
  7423  0900  0221               	subwf	___xxtofl@exp,w
  7424  0901  1803               	skipnc
  7425  0902  2904               	goto	u5301
  7426  0903  2905               	goto	u5300
  7427  0904                     u5301:	
  7428  0904  28F0               	goto	l3271
  7429  0905                     u5300:	
  7430  0905                     l834:	
  7431  0905  1821               	btfsc	___xxtofl@exp,0
  7432  0906  2908               	goto	u5311
  7433  0907  2909               	goto	u5310
  7434  0908                     u5311:	
  7435  0908  2911               	goto	l835
  7436  0909                     u5310:	
  7437  0909                     l3277:	
  7438  0909  30FF               	movlw	255
  7439  090A  05A2               	andwf	___xxtofl@arg,f
  7440  090B  30FF               	movlw	255
  7441  090C  05A3               	andwf	___xxtofl@arg+1,f
  7442  090D  307F               	movlw	127
  7443  090E  05A4               	andwf	___xxtofl@arg+2,f
  7444  090F  30FF               	movlw	255
  7445  0910  05A5               	andwf	___xxtofl@arg+3,f
  7446  0911                     l835:	
  7447  0911  1003               	clrc
  7448  0912  0CA1               	rrf	___xxtofl@exp,f
  7449  0913                     l3279:	
  7450  0913  0821               	movf	___xxtofl@exp,w
  7451  0914  00F7               	movwf	??___xxtofl
  7452  0915  01F8               	clrf	??___xxtofl+1
  7453  0916  01F9               	clrf	??___xxtofl+2
  7454  0917  01FA               	clrf	??___xxtofl+3
  7455  0918  3018               	movlw	24
  7456  0919                     u5325:	
  7457  0919  1003               	clrc
  7458  091A  0DF7               	rlf	??___xxtofl,f
  7459  091B  0DF8               	rlf	??___xxtofl+1,f
  7460  091C  0DF9               	rlf	??___xxtofl+2,f
  7461  091D  0DFA               	rlf	??___xxtofl+3,f
  7462  091E                     u5320:	
  7463  091E  3EFF               	addlw	-1
  7464  091F  1D03               	skipz
  7465  0920  2919               	goto	u5325
  7466  0921  0877               	movf	??___xxtofl,w
  7467  0922  04A2               	iorwf	___xxtofl@arg,f
  7468  0923  0878               	movf	??___xxtofl+1,w
  7469  0924  04A3               	iorwf	___xxtofl@arg+1,f
  7470  0925  0879               	movf	??___xxtofl+2,w
  7471  0926  04A4               	iorwf	___xxtofl@arg+2,f
  7472  0927  087A               	movf	??___xxtofl+3,w
  7473  0928  04A5               	iorwf	___xxtofl@arg+3,f
  7474  0929                     l3281:	
  7475  0929  0820               	movf	___xxtofl@sign,w
  7476  092A  1903               	btfsc	3,2
  7477  092B  292D               	goto	u5331
  7478  092C  292E               	goto	u5330
  7479  092D                     u5331:	
  7480  092D  2933               	goto	l3287
  7481  092E                     u5330:	
  7482  092E                     l3283:	
  7483  092E  1FF6               	btfss	___xxtofl@val+3,7
  7484  092F  2931               	goto	u5341
  7485  0930  2932               	goto	u5340
  7486  0931                     u5341:	
  7487  0931  2933               	goto	l3287
  7488  0932                     u5340:	
  7489  0932                     l3285:	
  7490  0932  17A5               	bsf	___xxtofl@arg+3,7
  7491  0933                     l3287:	
  7492  0933  0825               	movf	___xxtofl@arg+3,w
  7493  0934  00F6               	movwf	?___xxtofl+3
  7494  0935  0824               	movf	___xxtofl@arg+2,w
  7495  0936  00F5               	movwf	?___xxtofl+2
  7496  0937  0823               	movf	___xxtofl@arg+1,w
  7497  0938  00F4               	movwf	?___xxtofl+1
  7498  0939  0822               	movf	___xxtofl@arg,w
  7499  093A  00F3               	movwf	?___xxtofl
  7500  093B                     l823:	
  7501  093B  0008               	return
  7502  093C                     __end_of___xxtofl:	
  7503                           
  7504                           	psect	text14
  7505  1977                     __ptext14:	
  7506 ;; *************** function ___wmul *****************
  7507 ;; Defined at:
  7508 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;  multiplier      2    3[COMMON] unsigned int 
  7511 ;;  multiplicand    2    5[COMMON] unsigned int 
  7512 ;; Auto vars:     Size  Location     Type
  7513 ;;  product         2    7[COMMON] unsigned int 
  7514 ;; Return value:  Size  Location     Type
  7515 ;;                  2    3[COMMON] unsigned int 
  7516 ;; Registers used:
  7517 ;;		wreg, status,2, status,0
  7518 ;; Tracked objects:
  7519 ;;		On entry : 0/0
  7520 ;;		On exit  : 0/0
  7521 ;;		Unchanged: 0/0
  7522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7523 ;;      Params:         4       0       0       0       0
  7524 ;;      Locals:         2       0       0       0       0
  7525 ;;      Temps:          0       0       0       0       0
  7526 ;;      Totals:         6       0       0       0       0
  7527 ;;Total ram usage:        6 bytes
  7528 ;; Hardware stack levels used:    1
  7529 ;; Hardware stack levels required when called:    1
  7530 ;; This function calls:
  7531 ;;		Nothing
  7532 ;; This function is called by:
  7533 ;;		_sprintf
  7534 ;; This function uses a non-reentrant model
  7535 ;;
  7536                           
  7537                           
  7538                           ;psect for function ___wmul
  7539  1977                     ___wmul:	
  7540  1977                     l3107:	
  7541                           ;incstack = 0
  7542                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7543                           
  7544  1977  01F7               	clrf	___wmul@product
  7545  1978  01F8               	clrf	___wmul@product+1
  7546  1979                     l3109:	
  7547  1979  1C73               	btfss	___wmul@multiplier,0
  7548  197A  297C               	goto	u4831
  7549  197B  297D               	goto	u4830
  7550  197C                     u4831:	
  7551  197C  2983               	goto	l360
  7552  197D                     u4830:	
  7553  197D                     l3111:	
  7554  197D  0875               	movf	___wmul@multiplicand,w
  7555  197E  07F7               	addwf	___wmul@product,f
  7556  197F  1803               	skipnc
  7557  1980  0AF8               	incf	___wmul@product+1,f
  7558  1981  0876               	movf	___wmul@multiplicand+1,w
  7559  1982  07F8               	addwf	___wmul@product+1,f
  7560  1983                     l360:	
  7561  1983  3001               	movlw	1
  7562  1984                     u4845:	
  7563  1984  1003               	clrc
  7564  1985  0DF5               	rlf	___wmul@multiplicand,f
  7565  1986  0DF6               	rlf	___wmul@multiplicand+1,f
  7566  1987  3EFF               	addlw	-1
  7567  1988  1D03               	skipz
  7568  1989  2984               	goto	u4845
  7569  198A                     l3113:	
  7570  198A  3001               	movlw	1
  7571  198B                     u4855:	
  7572  198B  1003               	clrc
  7573  198C  0CF4               	rrf	___wmul@multiplier+1,f
  7574  198D  0CF3               	rrf	___wmul@multiplier,f
  7575  198E  3EFF               	addlw	-1
  7576  198F  1D03               	skipz
  7577  1990  298B               	goto	u4855
  7578  1991                     l3115:	
  7579  1991  0873               	movf	___wmul@multiplier,w
  7580  1992  0474               	iorwf	___wmul@multiplier+1,w
  7581  1993  1D03               	btfss	3,2
  7582  1994  2996               	goto	u4861
  7583  1995  2997               	goto	u4860
  7584  1996                     u4861:	
  7585  1996  2979               	goto	l3109
  7586  1997                     u4860:	
  7587  1997                     l3117:	
  7588  1997  0878               	movf	___wmul@product+1,w
  7589  1998  00F4               	movwf	?___wmul+1
  7590  1999  0877               	movf	___wmul@product,w
  7591  199A  00F3               	movwf	?___wmul
  7592  199B                     l362:	
  7593  199B  0008               	return
  7594  199C                     __end_of___wmul:	
  7595                           
  7596                           	psect	text15
  7597  1B38                     __ptext15:	
  7598 ;; *************** function ___llmod *****************
  7599 ;; Defined at:
  7600 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;  divisor         4    3[COMMON] unsigned long 
  7603 ;;  dividend        4    7[COMMON] unsigned long 
  7604 ;; Auto vars:     Size  Location     Type
  7605 ;;  counter         1    1[BANK0 ] unsigned char 
  7606 ;; Return value:  Size  Location     Type
  7607 ;;                  4    3[COMMON] unsigned long 
  7608 ;; Registers used:
  7609 ;;		wreg, status,2, status,0
  7610 ;; Tracked objects:
  7611 ;;		On entry : 0/0
  7612 ;;		On exit  : 0/0
  7613 ;;		Unchanged: 0/0
  7614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7615 ;;      Params:         8       0       0       0       0
  7616 ;;      Locals:         0       1       0       0       0
  7617 ;;      Temps:          0       1       0       0       0
  7618 ;;      Totals:         8       2       0       0       0
  7619 ;;Total ram usage:       10 bytes
  7620 ;; Hardware stack levels used:    1
  7621 ;; Hardware stack levels required when called:    1
  7622 ;; This function calls:
  7623 ;;		Nothing
  7624 ;; This function is called by:
  7625 ;;		_sprintf
  7626 ;; This function uses a non-reentrant model
  7627 ;;
  7628                           
  7629                           
  7630                           ;psect for function ___llmod
  7631  1B38                     ___llmod:	
  7632  1B38                     l3221:	
  7633                           ;incstack = 0
  7634                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7635                           
  7636  1B38  0876               	movf	___llmod@divisor+3,w
  7637  1B39  0475               	iorwf	___llmod@divisor+2,w
  7638  1B3A  0474               	iorwf	___llmod@divisor+1,w
  7639  1B3B  0473               	iorwf	___llmod@divisor,w
  7640  1B3C  1903               	skipnz
  7641  1B3D  2B3F               	goto	u5151
  7642  1B3E  2B40               	goto	u5150
  7643  1B3F                     u5151:	
  7644  1B3F  2B85               	goto	l3237
  7645  1B40                     u5150:	
  7646  1B40                     l3223:	
  7647  1B40  1283               	bcf	3,5	;RP0=0, select bank0
  7648  1B41  1303               	bcf	3,6	;RP1=0, select bank0
  7649  1B42  01A1               	clrf	___llmod@counter
  7650  1B43  0AA1               	incf	___llmod@counter,f
  7651  1B44  2B52               	goto	l3227
  7652  1B45                     l3225:	
  7653  1B45  3001               	movlw	1
  7654  1B46  00A0               	movwf	??___llmod
  7655  1B47                     u5165:	
  7656  1B47  1003               	clrc
  7657  1B48  0DF3               	rlf	___llmod@divisor,f
  7658  1B49  0DF4               	rlf	___llmod@divisor+1,f
  7659  1B4A  0DF5               	rlf	___llmod@divisor+2,f
  7660  1B4B  0DF6               	rlf	___llmod@divisor+3,f
  7661  1B4C  0BA0               	decfsz	??___llmod,f
  7662  1B4D  2B47               	goto	u5165
  7663  1B4E  3001               	movlw	1
  7664  1B4F  00A0               	movwf	??___llmod
  7665  1B50  0820               	movf	??___llmod,w
  7666  1B51  07A1               	addwf	___llmod@counter,f
  7667  1B52                     l3227:	
  7668  1B52  1FF6               	btfss	___llmod@divisor+3,7
  7669  1B53  2B55               	goto	u5171
  7670  1B54  2B56               	goto	u5170
  7671  1B55                     u5171:	
  7672  1B55  2B45               	goto	l3225
  7673  1B56                     u5170:	
  7674  1B56                     l3229:	
  7675  1B56  0876               	movf	___llmod@divisor+3,w
  7676  1B57  027A               	subwf	___llmod@dividend+3,w
  7677  1B58  1D03               	skipz
  7678  1B59  2B64               	goto	u5185
  7679  1B5A  0875               	movf	___llmod@divisor+2,w
  7680  1B5B  0279               	subwf	___llmod@dividend+2,w
  7681  1B5C  1D03               	skipz
  7682  1B5D  2B64               	goto	u5185
  7683  1B5E  0874               	movf	___llmod@divisor+1,w
  7684  1B5F  0278               	subwf	___llmod@dividend+1,w
  7685  1B60  1D03               	skipz
  7686  1B61  2B64               	goto	u5185
  7687  1B62  0873               	movf	___llmod@divisor,w
  7688  1B63  0277               	subwf	___llmod@dividend,w
  7689  1B64                     u5185:	
  7690  1B64  1C03               	skipc
  7691  1B65  2B67               	goto	u5181
  7692  1B66  2B68               	goto	u5180
  7693  1B67                     u5181:	
  7694  1B67  2B76               	goto	l3233
  7695  1B68                     u5180:	
  7696  1B68                     l3231:	
  7697  1B68  0873               	movf	___llmod@divisor,w
  7698  1B69  02F7               	subwf	___llmod@dividend,f
  7699  1B6A  0874               	movf	___llmod@divisor+1,w
  7700  1B6B  1C03               	skipc
  7701  1B6C  0F74               	incfsz	___llmod@divisor+1,w
  7702  1B6D  02F8               	subwf	___llmod@dividend+1,f
  7703  1B6E  0875               	movf	___llmod@divisor+2,w
  7704  1B6F  1C03               	skipc
  7705  1B70  0F75               	incfsz	___llmod@divisor+2,w
  7706  1B71  02F9               	subwf	___llmod@dividend+2,f
  7707  1B72  0876               	movf	___llmod@divisor+3,w
  7708  1B73  1C03               	skipc
  7709  1B74  0F76               	incfsz	___llmod@divisor+3,w
  7710  1B75  02FA               	subwf	___llmod@dividend+3,f
  7711  1B76                     l3233:	
  7712  1B76  3001               	movlw	1
  7713  1B77                     u5195:	
  7714  1B77  1003               	clrc
  7715  1B78  0CF6               	rrf	___llmod@divisor+3,f
  7716  1B79  0CF5               	rrf	___llmod@divisor+2,f
  7717  1B7A  0CF4               	rrf	___llmod@divisor+1,f
  7718  1B7B  0CF3               	rrf	___llmod@divisor,f
  7719  1B7C  3EFF               	addlw	-1
  7720  1B7D  1D03               	skipz
  7721  1B7E  2B77               	goto	u5195
  7722  1B7F                     l3235:	
  7723  1B7F  3001               	movlw	1
  7724  1B80  02A1               	subwf	___llmod@counter,f
  7725  1B81  1D03               	btfss	3,2
  7726  1B82  2B84               	goto	u5201
  7727  1B83  2B85               	goto	u5200
  7728  1B84                     u5201:	
  7729  1B84  2B56               	goto	l3229
  7730  1B85                     u5200:	
  7731  1B85                     l3237:	
  7732  1B85  087A               	movf	___llmod@dividend+3,w
  7733  1B86  00F6               	movwf	?___llmod+3
  7734  1B87  0879               	movf	___llmod@dividend+2,w
  7735  1B88  00F5               	movwf	?___llmod+2
  7736  1B89  0878               	movf	___llmod@dividend+1,w
  7737  1B8A  00F4               	movwf	?___llmod+1
  7738  1B8B  0877               	movf	___llmod@dividend,w
  7739  1B8C  00F3               	movwf	?___llmod
  7740  1B8D                     l616:	
  7741  1B8D  0008               	return
  7742  1B8E                     __end_of___llmod:	
  7743                           
  7744                           	psect	text16
  7745  1BE7                     __ptext16:	
  7746 ;; *************** function ___lldiv *****************
  7747 ;; Defined at:
  7748 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;  divisor         4    3[COMMON] unsigned long 
  7751 ;;  dividend        4    7[COMMON] unsigned long 
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;  quotient        4    1[BANK0 ] unsigned long 
  7754 ;;  counter         1    5[BANK0 ] unsigned char 
  7755 ;; Return value:  Size  Location     Type
  7756 ;;                  4    3[COMMON] unsigned long 
  7757 ;; Registers used:
  7758 ;;		wreg, status,2, status,0
  7759 ;; Tracked objects:
  7760 ;;		On entry : 0/0
  7761 ;;		On exit  : 0/0
  7762 ;;		Unchanged: 0/0
  7763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7764 ;;      Params:         8       0       0       0       0
  7765 ;;      Locals:         0       5       0       0       0
  7766 ;;      Temps:          0       1       0       0       0
  7767 ;;      Totals:         8       6       0       0       0
  7768 ;;Total ram usage:       14 bytes
  7769 ;; Hardware stack levels used:    1
  7770 ;; Hardware stack levels required when called:    1
  7771 ;; This function calls:
  7772 ;;		Nothing
  7773 ;; This function is called by:
  7774 ;;		_sprintf
  7775 ;; This function uses a non-reentrant model
  7776 ;;
  7777                           
  7778                           
  7779                           ;psect for function ___lldiv
  7780  1BE7                     ___lldiv:	
  7781  1BE7                     l3121:	
  7782                           ;incstack = 0
  7783                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7784                           
  7785  1BE7  3000               	movlw	0
  7786  1BE8  1283               	bcf	3,5	;RP0=0, select bank0
  7787  1BE9  1303               	bcf	3,6	;RP1=0, select bank0
  7788  1BEA  00A4               	movwf	___lldiv@quotient+3
  7789  1BEB  3000               	movlw	0
  7790  1BEC  00A3               	movwf	___lldiv@quotient+2
  7791  1BED  3000               	movlw	0
  7792  1BEE  00A2               	movwf	___lldiv@quotient+1
  7793  1BEF  3000               	movlw	0
  7794  1BF0  00A1               	movwf	___lldiv@quotient
  7795  1BF1  0876               	movf	___lldiv@divisor+3,w
  7796  1BF2  0475               	iorwf	___lldiv@divisor+2,w
  7797  1BF3  0474               	iorwf	___lldiv@divisor+1,w
  7798  1BF4  0473               	iorwf	___lldiv@divisor,w
  7799  1BF5  1903               	skipnz
  7800  1BF6  2BF8               	goto	u4871
  7801  1BF7  2BF9               	goto	u4870
  7802  1BF8                     u4871:	
  7803  1BF8  2C46               	goto	l3141
  7804  1BF9                     u4870:	
  7805  1BF9                     l3123:	
  7806  1BF9  01A5               	clrf	___lldiv@counter
  7807  1BFA  0AA5               	incf	___lldiv@counter,f
  7808  1BFB  2C09               	goto	l3127
  7809  1BFC                     l3125:	
  7810  1BFC  3001               	movlw	1
  7811  1BFD  00A0               	movwf	??___lldiv
  7812  1BFE                     u4885:	
  7813  1BFE  1003               	clrc
  7814  1BFF  0DF3               	rlf	___lldiv@divisor,f
  7815  1C00  0DF4               	rlf	___lldiv@divisor+1,f
  7816  1C01  0DF5               	rlf	___lldiv@divisor+2,f
  7817  1C02  0DF6               	rlf	___lldiv@divisor+3,f
  7818  1C03  0BA0               	decfsz	??___lldiv,f
  7819  1C04  2BFE               	goto	u4885
  7820  1C05  3001               	movlw	1
  7821  1C06  00A0               	movwf	??___lldiv
  7822  1C07  0820               	movf	??___lldiv,w
  7823  1C08  07A5               	addwf	___lldiv@counter,f
  7824  1C09                     l3127:	
  7825  1C09  1FF6               	btfss	___lldiv@divisor+3,7
  7826  1C0A  2C0C               	goto	u4891
  7827  1C0B  2C0D               	goto	u4890
  7828  1C0C                     u4891:	
  7829  1C0C  2BFC               	goto	l3125
  7830  1C0D                     u4890:	
  7831  1C0D                     l3129:	
  7832  1C0D  3001               	movlw	1
  7833  1C0E  00A0               	movwf	??___lldiv
  7834  1C0F                     u4905:	
  7835  1C0F  1003               	clrc
  7836  1C10  0DA1               	rlf	___lldiv@quotient,f
  7837  1C11  0DA2               	rlf	___lldiv@quotient+1,f
  7838  1C12  0DA3               	rlf	___lldiv@quotient+2,f
  7839  1C13  0DA4               	rlf	___lldiv@quotient+3,f
  7840  1C14  0BA0               	decfsz	??___lldiv,f
  7841  1C15  2C0F               	goto	u4905
  7842  1C16                     l3131:	
  7843  1C16  0876               	movf	___lldiv@divisor+3,w
  7844  1C17  027A               	subwf	___lldiv@dividend+3,w
  7845  1C18  1D03               	skipz
  7846  1C19  2C24               	goto	u4915
  7847  1C1A  0875               	movf	___lldiv@divisor+2,w
  7848  1C1B  0279               	subwf	___lldiv@dividend+2,w
  7849  1C1C  1D03               	skipz
  7850  1C1D  2C24               	goto	u4915
  7851  1C1E  0874               	movf	___lldiv@divisor+1,w
  7852  1C1F  0278               	subwf	___lldiv@dividend+1,w
  7853  1C20  1D03               	skipz
  7854  1C21  2C24               	goto	u4915
  7855  1C22  0873               	movf	___lldiv@divisor,w
  7856  1C23  0277               	subwf	___lldiv@dividend,w
  7857  1C24                     u4915:	
  7858  1C24  1C03               	skipc
  7859  1C25  2C27               	goto	u4911
  7860  1C26  2C28               	goto	u4910
  7861  1C27                     u4911:	
  7862  1C27  2C37               	goto	l3137
  7863  1C28                     u4910:	
  7864  1C28                     l3133:	
  7865  1C28  0873               	movf	___lldiv@divisor,w
  7866  1C29  02F7               	subwf	___lldiv@dividend,f
  7867  1C2A  0874               	movf	___lldiv@divisor+1,w
  7868  1C2B  1C03               	skipc
  7869  1C2C  0F74               	incfsz	___lldiv@divisor+1,w
  7870  1C2D  02F8               	subwf	___lldiv@dividend+1,f
  7871  1C2E  0875               	movf	___lldiv@divisor+2,w
  7872  1C2F  1C03               	skipc
  7873  1C30  0F75               	incfsz	___lldiv@divisor+2,w
  7874  1C31  02F9               	subwf	___lldiv@dividend+2,f
  7875  1C32  0876               	movf	___lldiv@divisor+3,w
  7876  1C33  1C03               	skipc
  7877  1C34  0F76               	incfsz	___lldiv@divisor+3,w
  7878  1C35  02FA               	subwf	___lldiv@dividend+3,f
  7879  1C36                     l3135:	
  7880  1C36  1421               	bsf	___lldiv@quotient,0
  7881  1C37                     l3137:	
  7882  1C37  3001               	movlw	1
  7883  1C38                     u4925:	
  7884  1C38  1003               	clrc
  7885  1C39  0CF6               	rrf	___lldiv@divisor+3,f
  7886  1C3A  0CF5               	rrf	___lldiv@divisor+2,f
  7887  1C3B  0CF4               	rrf	___lldiv@divisor+1,f
  7888  1C3C  0CF3               	rrf	___lldiv@divisor,f
  7889  1C3D  3EFF               	addlw	-1
  7890  1C3E  1D03               	skipz
  7891  1C3F  2C38               	goto	u4925
  7892  1C40                     l3139:	
  7893  1C40  3001               	movlw	1
  7894  1C41  02A5               	subwf	___lldiv@counter,f
  7895  1C42  1D03               	btfss	3,2
  7896  1C43  2C45               	goto	u4931
  7897  1C44  2C46               	goto	u4930
  7898  1C45                     u4931:	
  7899  1C45  2C0D               	goto	l3129
  7900  1C46                     u4930:	
  7901  1C46                     l3141:	
  7902  1C46  0824               	movf	___lldiv@quotient+3,w
  7903  1C47  00F6               	movwf	?___lldiv+3
  7904  1C48  0823               	movf	___lldiv@quotient+2,w
  7905  1C49  00F5               	movwf	?___lldiv+2
  7906  1C4A  0822               	movf	___lldiv@quotient+1,w
  7907  1C4B  00F4               	movwf	?___lldiv+1
  7908  1C4C  0821               	movf	___lldiv@quotient,w
  7909  1C4D  00F3               	movwf	?___lldiv
  7910  1C4E                     l396:	
  7911  1C4E  0008               	return
  7912  1C4F                     __end_of___lldiv:	
  7913                           
  7914                           	psect	text17
  7915  0804                     __ptext17:	
  7916 ;; *************** function ___fltol *****************
  7917 ;; Defined at:
  7918 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  7919 ;; Parameters:    Size  Location     Type
  7920 ;;  f1              4   53[BANK0 ] unsigned long 
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;  exp1            1   63[BANK0 ] unsigned char 
  7923 ;;  sign1           1   62[BANK0 ] unsigned char 
  7924 ;; Return value:  Size  Location     Type
  7925 ;;                  4   53[BANK0 ] long 
  7926 ;; Registers used:
  7927 ;;		wreg, status,2, status,0
  7928 ;; Tracked objects:
  7929 ;;		On entry : 0/0
  7930 ;;		On exit  : 0/0
  7931 ;;		Unchanged: 0/0
  7932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7933 ;;      Params:         0       4       0       0       0
  7934 ;;      Locals:         0       2       0       0       0
  7935 ;;      Temps:          0       5       0       0       0
  7936 ;;      Totals:         0      11       0       0       0
  7937 ;;Total ram usage:       11 bytes
  7938 ;; Hardware stack levels used:    1
  7939 ;; Hardware stack levels required when called:    1
  7940 ;; This function calls:
  7941 ;;		Nothing
  7942 ;; This function is called by:
  7943 ;;		_sprintf
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           
  7948                           ;psect for function ___fltol
  7949  0804                     ___fltol:	
  7950  0804                     l3185:	
  7951                           ;incstack = 0
  7952                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7953                           
  7954  0804  1003               	clrc
  7955  0805  1283               	bcf	3,5	;RP0=0, select bank0
  7956  0806  1303               	bcf	3,6	;RP1=0, select bank0
  7957  0807  0D57               	rlf	___fltol@f1+2,w
  7958  0808  0D58               	rlf	___fltol@f1+3,w
  7959  0809  00D9               	movwf	??___fltol
  7960  080A  0859               	movf	??___fltol,w
  7961  080B  00DF               	movwf	___fltol@exp1
  7962  080C  085F               	movf	___fltol@exp1,w
  7963  080D  1D03               	btfss	3,2
  7964  080E  2810               	goto	u5051
  7965  080F  2811               	goto	u5050
  7966  0810                     u5051:	
  7967  0810  281A               	goto	l3191
  7968  0811                     u5050:	
  7969  0811                     l3187:	
  7970  0811  3000               	movlw	0
  7971  0812  00D8               	movwf	?___fltol+3
  7972  0813  3000               	movlw	0
  7973  0814  00D7               	movwf	?___fltol+2
  7974  0815  3000               	movlw	0
  7975  0816  00D6               	movwf	?___fltol+1
  7976  0817  3000               	movlw	0
  7977  0818  00D5               	movwf	?___fltol
  7978  0819  287F               	goto	l563
  7979  081A                     l3191:	
  7980  081A  0855               	movf	___fltol@f1,w
  7981  081B  00D9               	movwf	??___fltol
  7982  081C  0856               	movf	___fltol@f1+1,w
  7983  081D  00DA               	movwf	??___fltol+1
  7984  081E  0857               	movf	___fltol@f1+2,w
  7985  081F  00DB               	movwf	??___fltol+2
  7986  0820  0858               	movf	___fltol@f1+3,w
  7987  0821  00DC               	movwf	??___fltol+3
  7988  0822  301F               	movlw	31
  7989  0823                     u5065:	
  7990  0823  1003               	clrc
  7991  0824  0CDC               	rrf	??___fltol+3,f
  7992  0825  0CDB               	rrf	??___fltol+2,f
  7993  0826  0CDA               	rrf	??___fltol+1,f
  7994  0827  0CD9               	rrf	??___fltol,f
  7995  0828                     u5060:	
  7996  0828  3EFF               	addlw	-1
  7997  0829  1D03               	skipz
  7998  082A  2823               	goto	u5065
  7999  082B  0859               	movf	??___fltol,w
  8000  082C  00DD               	movwf	??___fltol+4
  8001  082D  085D               	movf	??___fltol+4,w
  8002  082E  00DE               	movwf	___fltol@sign1
  8003  082F                     l3193:	
  8004  082F  17D7               	bsf	___fltol@f1+2,7
  8005  0830                     l3195:	
  8006  0830  30FF               	movlw	255
  8007  0831  05D5               	andwf	___fltol@f1,f
  8008  0832  30FF               	movlw	255
  8009  0833  05D6               	andwf	___fltol@f1+1,f
  8010  0834  30FF               	movlw	255
  8011  0835  05D7               	andwf	___fltol@f1+2,f
  8012  0836  3000               	movlw	0
  8013  0837  05D8               	andwf	___fltol@f1+3,f
  8014  0838                     l3197:	
  8015  0838  3096               	movlw	150
  8016  0839  02DF               	subwf	___fltol@exp1,f
  8017  083A                     l3199:	
  8018  083A  1FDF               	btfss	___fltol@exp1,7
  8019  083B  283D               	goto	u5071
  8020  083C  283E               	goto	u5070
  8021  083D                     u5071:	
  8022  083D  2858               	goto	l3209
  8023  083E                     u5070:	
  8024  083E                     l3201:	
  8025  083E  085F               	movf	___fltol@exp1,w
  8026  083F  3A80               	xorlw	128
  8027  0840  3E97               	addlw	151
  8028  0841  1803               	skipnc
  8029  0842  2844               	goto	u5081
  8030  0843  2845               	goto	u5080
  8031  0844                     u5081:	
  8032  0844  2846               	goto	l3207
  8033  0845                     u5080:	
  8034  0845  2811               	goto	l3187
  8035  0846                     l3207:	
  8036  0846  3001               	movlw	1
  8037  0847                     u5095:	
  8038  0847  1003               	clrc
  8039  0848  0CD8               	rrf	___fltol@f1+3,f
  8040  0849  0CD7               	rrf	___fltol@f1+2,f
  8041  084A  0CD6               	rrf	___fltol@f1+1,f
  8042  084B  0CD5               	rrf	___fltol@f1,f
  8043  084C  3EFF               	addlw	-1
  8044  084D  1D03               	skipz
  8045  084E  2847               	goto	u5095
  8046  084F  3001               	movlw	1
  8047  0850  00D9               	movwf	??___fltol
  8048  0851  0859               	movf	??___fltol,w
  8049  0852  07DF               	addwf	___fltol@exp1,f
  8050  0853  1D03               	btfss	3,2
  8051  0854  2856               	goto	u5101
  8052  0855  2857               	goto	u5100
  8053  0856                     u5101:	
  8054  0856  2846               	goto	l3207
  8055  0857                     u5100:	
  8056  0857  286F               	goto	l3217
  8057  0858                     l3209:	
  8058  0858  3020               	movlw	32
  8059  0859  025F               	subwf	___fltol@exp1,w
  8060  085A  1C03               	skipc
  8061  085B  285D               	goto	u5111
  8062  085C  285E               	goto	u5110
  8063  085D                     u5111:	
  8064  085D  286A               	goto	l570
  8065  085E                     u5110:	
  8066  085E  2811               	goto	l3187
  8067  085F                     l3215:	
  8068  085F  3001               	movlw	1
  8069  0860  00D9               	movwf	??___fltol
  8070  0861                     u5125:	
  8071  0861  1003               	clrc
  8072  0862  0DD5               	rlf	___fltol@f1,f
  8073  0863  0DD6               	rlf	___fltol@f1+1,f
  8074  0864  0DD7               	rlf	___fltol@f1+2,f
  8075  0865  0DD8               	rlf	___fltol@f1+3,f
  8076  0866  0BD9               	decfsz	??___fltol,f
  8077  0867  2861               	goto	u5125
  8078  0868  3001               	movlw	1
  8079  0869  02DF               	subwf	___fltol@exp1,f
  8080  086A                     l570:	
  8081  086A  085F               	movf	___fltol@exp1,w
  8082  086B  1D03               	btfss	3,2
  8083  086C  286E               	goto	u5131
  8084  086D  286F               	goto	u5130
  8085  086E                     u5131:	
  8086  086E  285F               	goto	l3215
  8087  086F                     u5130:	
  8088  086F                     l3217:	
  8089  086F  085E               	movf	___fltol@sign1,w
  8090  0870  1903               	btfsc	3,2
  8091  0871  2873               	goto	u5141
  8092  0872  2874               	goto	u5140
  8093  0873                     u5141:	
  8094  0873  287F               	goto	l573
  8095  0874                     u5140:	
  8096  0874                     l3219:	
  8097  0874  09D5               	comf	___fltol@f1,f
  8098  0875  09D6               	comf	___fltol@f1+1,f
  8099  0876  09D7               	comf	___fltol@f1+2,f
  8100  0877  09D8               	comf	___fltol@f1+3,f
  8101  0878  0AD5               	incf	___fltol@f1,f
  8102  0879  1903               	skipnz
  8103  087A  0AD6               	incf	___fltol@f1+1,f
  8104  087B  1903               	skipnz
  8105  087C  0AD7               	incf	___fltol@f1+2,f
  8106  087D  1903               	skipnz
  8107  087E  0AD8               	incf	___fltol@f1+3,f
  8108  087F                     l573:	
  8109  087F                     l563:	
  8110  087F  0008               	return
  8111  0880                     __end_of___fltol:	
  8112                           
  8113                           	psect	text18
  8114  1A92                     __ptext18:	
  8115 ;; *************** function ___flsub *****************
  8116 ;; Defined at:
  8117 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;  a               4    0[BANK1 ] long 
  8120 ;;  b               4    4[BANK1 ] long 
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;		None
  8123 ;; Return value:  Size  Location     Type
  8124 ;;                  4    0[BANK1 ] long 
  8125 ;; Registers used:
  8126 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8127 ;; Tracked objects:
  8128 ;;		On entry : 0/0
  8129 ;;		On exit  : 0/0
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8132 ;;      Params:         0       0       8       0       0
  8133 ;;      Locals:         0       0       0       0       0
  8134 ;;      Temps:          0       0       0       0       0
  8135 ;;      Totals:         0       0       8       0       0
  8136 ;;Total ram usage:        8 bytes
  8137 ;; Hardware stack levels used:    1
  8138 ;; Hardware stack levels required when called:    2
  8139 ;; This function calls:
  8140 ;;		___fladd
  8141 ;; This function is called by:
  8142 ;;		_sprintf
  8143 ;; This function uses a non-reentrant model
  8144 ;;
  8145                           
  8146                           
  8147                           ;psect for function ___flsub
  8148  1A92                     ___flsub:	
  8149  1A92                     l3241:	
  8150                           ;incstack = 0
  8151                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8152                           
  8153  1A92  3080               	movlw	128
  8154  1A93  1683               	bsf	3,5	;RP0=1, select bank1
  8155  1A94  1303               	bcf	3,6	;RP1=0, select bank1
  8156  1A95  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  8157  1A96                     l3243:	
  8158  1A96  0827               	movf	(___flsub@b+3)^(0+128),w
  8159  1A97  1283               	bcf	3,5	;RP0=0, select bank0
  8160  1A98  1303               	bcf	3,6	;RP1=0, select bank0
  8161  1A99  00D9               	movwf	___fladd@b+3
  8162  1A9A  1683               	bsf	3,5	;RP0=1, select bank1
  8163  1A9B  1303               	bcf	3,6	;RP1=0, select bank1
  8164  1A9C  0826               	movf	(___flsub@b+2)^(0+128),w
  8165  1A9D  1283               	bcf	3,5	;RP0=0, select bank0
  8166  1A9E  1303               	bcf	3,6	;RP1=0, select bank0
  8167  1A9F  00D8               	movwf	___fladd@b+2
  8168  1AA0  1683               	bsf	3,5	;RP0=1, select bank1
  8169  1AA1  1303               	bcf	3,6	;RP1=0, select bank1
  8170  1AA2  0825               	movf	(___flsub@b+1)^(0+128),w
  8171  1AA3  1283               	bcf	3,5	;RP0=0, select bank0
  8172  1AA4  1303               	bcf	3,6	;RP1=0, select bank0
  8173  1AA5  00D7               	movwf	___fladd@b+1
  8174  1AA6  1683               	bsf	3,5	;RP0=1, select bank1
  8175  1AA7  1303               	bcf	3,6	;RP1=0, select bank1
  8176  1AA8  0824               	movf	___flsub@b^(0+128),w
  8177  1AA9  1283               	bcf	3,5	;RP0=0, select bank0
  8178  1AAA  1303               	bcf	3,6	;RP1=0, select bank0
  8179  1AAB  00D6               	movwf	___fladd@b
  8180  1AAC  1683               	bsf	3,5	;RP0=1, select bank1
  8181  1AAD  1303               	bcf	3,6	;RP1=0, select bank1
  8182  1AAE  0823               	movf	(___flsub@a+3)^(0+128),w
  8183  1AAF  1283               	bcf	3,5	;RP0=0, select bank0
  8184  1AB0  1303               	bcf	3,6	;RP1=0, select bank0
  8185  1AB1  00DD               	movwf	___fladd@a+3
  8186  1AB2  1683               	bsf	3,5	;RP0=1, select bank1
  8187  1AB3  1303               	bcf	3,6	;RP1=0, select bank1
  8188  1AB4  0822               	movf	(___flsub@a+2)^(0+128),w
  8189  1AB5  1283               	bcf	3,5	;RP0=0, select bank0
  8190  1AB6  1303               	bcf	3,6	;RP1=0, select bank0
  8191  1AB7  00DC               	movwf	___fladd@a+2
  8192  1AB8  1683               	bsf	3,5	;RP0=1, select bank1
  8193  1AB9  1303               	bcf	3,6	;RP1=0, select bank1
  8194  1ABA  0821               	movf	(___flsub@a+1)^(0+128),w
  8195  1ABB  1283               	bcf	3,5	;RP0=0, select bank0
  8196  1ABC  1303               	bcf	3,6	;RP1=0, select bank0
  8197  1ABD  00DB               	movwf	___fladd@a+1
  8198  1ABE  1683               	bsf	3,5	;RP0=1, select bank1
  8199  1ABF  1303               	bcf	3,6	;RP1=0, select bank1
  8200  1AC0  0820               	movf	___flsub@a^(0+128),w
  8201  1AC1  1283               	bcf	3,5	;RP0=0, select bank0
  8202  1AC2  1303               	bcf	3,6	;RP1=0, select bank0
  8203  1AC3  00DA               	movwf	___fladd@a
  8204  1AC4  160A  118A  2578  160A  158A  	fcall	___fladd
  8205  1AC9  1283               	bcf	3,5	;RP0=0, select bank0
  8206  1ACA  1303               	bcf	3,6	;RP1=0, select bank0
  8207  1ACB  0859               	movf	?___fladd+3,w
  8208  1ACC  1683               	bsf	3,5	;RP0=1, select bank1
  8209  1ACD  1303               	bcf	3,6	;RP1=0, select bank1
  8210  1ACE  00A3               	movwf	(?___flsub+3)^(0+128)
  8211  1ACF  1283               	bcf	3,5	;RP0=0, select bank0
  8212  1AD0  1303               	bcf	3,6	;RP1=0, select bank0
  8213  1AD1  0858               	movf	?___fladd+2,w
  8214  1AD2  1683               	bsf	3,5	;RP0=1, select bank1
  8215  1AD3  1303               	bcf	3,6	;RP1=0, select bank1
  8216  1AD4  00A2               	movwf	(?___flsub+2)^(0+128)
  8217  1AD5  1283               	bcf	3,5	;RP0=0, select bank0
  8218  1AD6  1303               	bcf	3,6	;RP1=0, select bank0
  8219  1AD7  0857               	movf	?___fladd+1,w
  8220  1AD8  1683               	bsf	3,5	;RP0=1, select bank1
  8221  1AD9  1303               	bcf	3,6	;RP1=0, select bank1
  8222  1ADA  00A1               	movwf	(?___flsub+1)^(0+128)
  8223  1ADB  1283               	bcf	3,5	;RP0=0, select bank0
  8224  1ADC  1303               	bcf	3,6	;RP1=0, select bank0
  8225  1ADD  0856               	movf	?___fladd,w
  8226  1ADE  1683               	bsf	3,5	;RP0=1, select bank1
  8227  1ADF  1303               	bcf	3,6	;RP1=0, select bank1
  8228  1AE0  00A0               	movwf	?___flsub^(0+128)
  8229  1AE1                     l733:	
  8230  1AE1  0008               	return
  8231  1AE2                     __end_of___flsub:	
  8232                           
  8233                           	psect	text19
  8234  1578                     __ptext19:	
  8235 ;; *************** function ___fladd *****************
  8236 ;; Defined at:
  8237 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  8238 ;; Parameters:    Size  Location     Type
  8239 ;;  b               4   54[BANK0 ] long 
  8240 ;;  a               4   58[BANK0 ] long 
  8241 ;; Auto vars:     Size  Location     Type
  8242 ;;  grs             1   73[BANK0 ] unsigned char 
  8243 ;;  bexp            1   72[BANK0 ] unsigned char 
  8244 ;;  aexp            1   71[BANK0 ] unsigned char 
  8245 ;;  signs           1   70[BANK0 ] unsigned char 
  8246 ;; Return value:  Size  Location     Type
  8247 ;;                  4   54[BANK0 ] unsigned char 
  8248 ;; Registers used:
  8249 ;;		wreg, status,2, status,0, btemp+1
  8250 ;; Tracked objects:
  8251 ;;		On entry : 0/0
  8252 ;;		On exit  : 0/0
  8253 ;;		Unchanged: 0/0
  8254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8255 ;;      Params:         0       8       0       0       0
  8256 ;;      Locals:         0       4       0       0       0
  8257 ;;      Temps:          0       8       0       0       0
  8258 ;;      Totals:         0      20       0       0       0
  8259 ;;Total ram usage:       20 bytes
  8260 ;; Hardware stack levels used:    1
  8261 ;; Hardware stack levels required when called:    1
  8262 ;; This function calls:
  8263 ;;		Nothing
  8264 ;; This function is called by:
  8265 ;;		_sprintf
  8266 ;;		___flsub
  8267 ;; This function uses a non-reentrant model
  8268 ;;
  8269                           
  8270                           
  8271                           ;psect for function ___fladd
  8272  1578                     ___fladd:	
  8273  1578                     l2575:	
  8274                           ;incstack = 0
  8275                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8276                           
  8277  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8278  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8279  157A  0859               	movf	___fladd@b+3,w
  8280  157B  3980               	andlw	128
  8281  157C  00DE               	movwf	??___fladd
  8282  157D  085E               	movf	??___fladd,w
  8283  157E  00E6               	movwf	___fladd@signs
  8284  157F                     l2577:	
  8285  157F  0859               	movf	___fladd@b+3,w
  8286  1580  00DE               	movwf	??___fladd
  8287  1581  075E               	addwf	??___fladd,w
  8288  1582  00DF               	movwf	??___fladd+1
  8289  1583  085F               	movf	??___fladd+1,w
  8290  1584  00E8               	movwf	___fladd@bexp
  8291  1585                     l2579:	
  8292  1585  1FD8               	btfss	___fladd@b+2,7
  8293  1586  2D88               	goto	u3471
  8294  1587  2D89               	goto	u3470
  8295  1588                     u3471:	
  8296  1588  2D8A               	goto	l2583
  8297  1589                     u3470:	
  8298  1589                     l2581:	
  8299  1589  1468               	bsf	___fladd@bexp,0
  8300  158A                     l2583:	
  8301  158A  0868               	movf	___fladd@bexp,w
  8302  158B  1903               	btfsc	3,2
  8303  158C  2D8E               	goto	u3481
  8304  158D  2D8F               	goto	u3480
  8305  158E                     u3481:	
  8306  158E  2D9F               	goto	l2593
  8307  158F                     u3480:	
  8308  158F                     l2585:	
  8309  158F  0A68               	incf	___fladd@bexp,w
  8310  1590  1D03               	btfss	3,2
  8311  1591  2D93               	goto	u3491
  8312  1592  2D94               	goto	u3490
  8313  1593                     u3491:	
  8314  1593  2D9C               	goto	l2589
  8315  1594                     u3490:	
  8316  1594                     l2587:	
  8317  1594  3000               	movlw	0
  8318  1595  00D9               	movwf	___fladd@b+3
  8319  1596  3000               	movlw	0
  8320  1597  00D8               	movwf	___fladd@b+2
  8321  1598  3000               	movlw	0
  8322  1599  00D7               	movwf	___fladd@b+1
  8323  159A  3000               	movlw	0
  8324  159B  00D6               	movwf	___fladd@b
  8325  159C                     l2589:	
  8326  159C  17D8               	bsf	___fladd@b+2,7
  8327  159D                     l2591:	
  8328  159D  01D9               	clrf	___fladd@b+3
  8329  159E  2DA7               	goto	l2595
  8330  159F                     l2593:	
  8331  159F  3000               	movlw	0
  8332  15A0  00D9               	movwf	___fladd@b+3
  8333  15A1  3000               	movlw	0
  8334  15A2  00D8               	movwf	___fladd@b+2
  8335  15A3  3000               	movlw	0
  8336  15A4  00D7               	movwf	___fladd@b+1
  8337  15A5  3000               	movlw	0
  8338  15A6  00D6               	movwf	___fladd@b
  8339  15A7                     l2595:	
  8340  15A7  085D               	movf	___fladd@a+3,w
  8341  15A8  3980               	andlw	128
  8342  15A9  00DE               	movwf	??___fladd
  8343  15AA  085E               	movf	??___fladd,w
  8344  15AB  00E7               	movwf	___fladd@aexp
  8345  15AC                     l2597:	
  8346  15AC  0867               	movf	___fladd@aexp,w
  8347  15AD  0666               	xorwf	___fladd@signs,w
  8348  15AE  1903               	skipnz
  8349  15AF  2DB1               	goto	u3501
  8350  15B0  2DB2               	goto	u3500
  8351  15B1                     u3501:	
  8352  15B1  2DB3               	goto	l2601
  8353  15B2                     u3500:	
  8354  15B2                     l2599:	
  8355  15B2  1766               	bsf	___fladd@signs,6
  8356  15B3                     l2601:	
  8357  15B3  085D               	movf	___fladd@a+3,w
  8358  15B4  00DE               	movwf	??___fladd
  8359  15B5  075E               	addwf	??___fladd,w
  8360  15B6  00DF               	movwf	??___fladd+1
  8361  15B7  085F               	movf	??___fladd+1,w
  8362  15B8  00E7               	movwf	___fladd@aexp
  8363  15B9                     l2603:	
  8364  15B9  1FDC               	btfss	___fladd@a+2,7
  8365  15BA  2DBC               	goto	u3511
  8366  15BB  2DBD               	goto	u3510
  8367  15BC                     u3511:	
  8368  15BC  2DBE               	goto	l2607
  8369  15BD                     u3510:	
  8370  15BD                     l2605:	
  8371  15BD  1467               	bsf	___fladd@aexp,0
  8372  15BE                     l2607:	
  8373  15BE  0867               	movf	___fladd@aexp,w
  8374  15BF  1903               	btfsc	3,2
  8375  15C0  2DC2               	goto	u3521
  8376  15C1  2DC3               	goto	u3520
  8377  15C2                     u3521:	
  8378  15C2  2DD3               	goto	l2617
  8379  15C3                     u3520:	
  8380  15C3                     l2609:	
  8381  15C3  0A67               	incf	___fladd@aexp,w
  8382  15C4  1D03               	btfss	3,2
  8383  15C5  2DC7               	goto	u3531
  8384  15C6  2DC8               	goto	u3530
  8385  15C7                     u3531:	
  8386  15C7  2DD0               	goto	l2613
  8387  15C8                     u3530:	
  8388  15C8                     l2611:	
  8389  15C8  3000               	movlw	0
  8390  15C9  00DD               	movwf	___fladd@a+3
  8391  15CA  3000               	movlw	0
  8392  15CB  00DC               	movwf	___fladd@a+2
  8393  15CC  3000               	movlw	0
  8394  15CD  00DB               	movwf	___fladd@a+1
  8395  15CE  3000               	movlw	0
  8396  15CF  00DA               	movwf	___fladd@a
  8397  15D0                     l2613:	
  8398  15D0  17DC               	bsf	___fladd@a+2,7
  8399  15D1                     l2615:	
  8400  15D1  01DD               	clrf	___fladd@a+3
  8401  15D2  2DDB               	goto	l687
  8402  15D3                     l2617:	
  8403  15D3  3000               	movlw	0
  8404  15D4  00DD               	movwf	___fladd@a+3
  8405  15D5  3000               	movlw	0
  8406  15D6  00DC               	movwf	___fladd@a+2
  8407  15D7  3000               	movlw	0
  8408  15D8  00DB               	movwf	___fladd@a+1
  8409  15D9  3000               	movlw	0
  8410  15DA  00DA               	movwf	___fladd@a
  8411  15DB                     l687:	
  8412  15DB  0868               	movf	___fladd@bexp,w
  8413  15DC  0267               	subwf	___fladd@aexp,w
  8414  15DD  1803               	skipnc
  8415  15DE  2DE0               	goto	u3541
  8416  15DF  2DE1               	goto	u3540
  8417  15E0                     u3541:	
  8418  15E0  2E25               	goto	l2653
  8419  15E1                     u3540:	
  8420  15E1                     l2619:	
  8421  15E1  1F66               	btfss	___fladd@signs,6
  8422  15E2  2DE4               	goto	u3551
  8423  15E3  2DE5               	goto	u3550
  8424  15E4                     u3551:	
  8425  15E4  2DE9               	goto	l2623
  8426  15E5                     u3550:	
  8427  15E5                     l2621:	
  8428  15E5  3080               	movlw	128
  8429  15E6  00DE               	movwf	??___fladd
  8430  15E7  085E               	movf	??___fladd,w
  8431  15E8  06E6               	xorwf	___fladd@signs,f
  8432  15E9                     l2623:	
  8433  15E9  0868               	movf	___fladd@bexp,w
  8434  15EA  00DE               	movwf	??___fladd
  8435  15EB  085E               	movf	??___fladd,w
  8436  15EC  00E9               	movwf	___fladd@grs
  8437  15ED                     l2625:	
  8438  15ED  0867               	movf	___fladd@aexp,w
  8439  15EE  00DE               	movwf	??___fladd
  8440  15EF  085E               	movf	??___fladd,w
  8441  15F0  00E8               	movwf	___fladd@bexp
  8442  15F1                     l2627:	
  8443  15F1  0869               	movf	___fladd@grs,w
  8444  15F2  00DE               	movwf	??___fladd
  8445  15F3  085E               	movf	??___fladd,w
  8446  15F4  00E7               	movwf	___fladd@aexp
  8447  15F5                     l2629:	
  8448  15F5  0856               	movf	___fladd@b,w
  8449  15F6  00DE               	movwf	??___fladd
  8450  15F7  085E               	movf	??___fladd,w
  8451  15F8  00E9               	movwf	___fladd@grs
  8452  15F9                     l2631:	
  8453  15F9  085A               	movf	___fladd@a,w
  8454  15FA  00DE               	movwf	??___fladd
  8455  15FB  085E               	movf	??___fladd,w
  8456  15FC  00D6               	movwf	___fladd@b
  8457  15FD                     l2633:	
  8458  15FD  0869               	movf	___fladd@grs,w
  8459  15FE  00DE               	movwf	??___fladd
  8460  15FF  085E               	movf	??___fladd,w
  8461  1600  00DA               	movwf	___fladd@a
  8462  1601                     l2635:	
  8463  1601  0857               	movf	___fladd@b+1,w
  8464  1602  00DE               	movwf	??___fladd
  8465  1603  085E               	movf	??___fladd,w
  8466  1604  00E9               	movwf	___fladd@grs
  8467  1605                     l2637:	
  8468  1605  085B               	movf	___fladd@a+1,w
  8469  1606  00DE               	movwf	??___fladd
  8470  1607  085E               	movf	??___fladd,w
  8471  1608  00D7               	movwf	___fladd@b+1
  8472  1609                     l2639:	
  8473  1609  0869               	movf	___fladd@grs,w
  8474  160A  00DE               	movwf	??___fladd
  8475  160B  085E               	movf	??___fladd,w
  8476  160C  00DB               	movwf	___fladd@a+1
  8477  160D                     l2641:	
  8478  160D  0858               	movf	___fladd@b+2,w
  8479  160E  00DE               	movwf	??___fladd
  8480  160F  085E               	movf	??___fladd,w
  8481  1610  00E9               	movwf	___fladd@grs
  8482  1611                     l2643:	
  8483  1611  085C               	movf	___fladd@a+2,w
  8484  1612  00DE               	movwf	??___fladd
  8485  1613  085E               	movf	??___fladd,w
  8486  1614  00D8               	movwf	___fladd@b+2
  8487  1615                     l2645:	
  8488  1615  0869               	movf	___fladd@grs,w
  8489  1616  00DE               	movwf	??___fladd
  8490  1617  085E               	movf	??___fladd,w
  8491  1618  00DC               	movwf	___fladd@a+2
  8492  1619                     l2647:	
  8493  1619  0859               	movf	___fladd@b+3,w
  8494  161A  00DE               	movwf	??___fladd
  8495  161B  085E               	movf	??___fladd,w
  8496  161C  00E9               	movwf	___fladd@grs
  8497  161D                     l2649:	
  8498  161D  085D               	movf	___fladd@a+3,w
  8499  161E  00DE               	movwf	??___fladd
  8500  161F  085E               	movf	??___fladd,w
  8501  1620  00D9               	movwf	___fladd@b+3
  8502  1621                     l2651:	
  8503  1621  0869               	movf	___fladd@grs,w
  8504  1622  00DE               	movwf	??___fladd
  8505  1623  085E               	movf	??___fladd,w
  8506  1624  00DD               	movwf	___fladd@a+3
  8507  1625                     l2653:	
  8508  1625  01E9               	clrf	___fladd@grs
  8509  1626                     l2655:	
  8510  1626  0867               	movf	___fladd@aexp,w
  8511  1627  00DE               	movwf	??___fladd
  8512  1628  01DF               	clrf	??___fladd+1
  8513  1629  085F               	movf	??___fladd+1,w
  8514  162A  00E1               	movwf	??___fladd+3
  8515  162B  0868               	movf	___fladd@bexp,w
  8516  162C  025E               	subwf	??___fladd,w
  8517  162D  00E0               	movwf	??___fladd+2
  8518  162E  1C03               	skipc
  8519  162F  03E1               	decf	??___fladd+3,f
  8520  1630  0861               	movf	??___fladd+3,w
  8521  1631  3A80               	xorlw	128
  8522  1632  00FF               	movwf	btemp+1
  8523  1633  3080               	movlw	128
  8524  1634  027F               	subwf	btemp+1,w
  8525  1635  1D03               	skipz
  8526  1636  2E39               	goto	u3565
  8527  1637  301A               	movlw	26
  8528  1638  0260               	subwf	??___fladd+2,w
  8529  1639                     u3565:	
  8530  1639  1C03               	skipc
  8531  163A  2E3C               	goto	u3561
  8532  163B  2E3D               	goto	u3560
  8533  163C                     u3561:	
  8534  163C  2E7A               	goto	l2671
  8535  163D                     u3560:	
  8536  163D                     l2657:	
  8537  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8538  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8539  163F  0859               	movf	___fladd@b+3,w
  8540  1640  0458               	iorwf	___fladd@b+2,w
  8541  1641  0457               	iorwf	___fladd@b+1,w
  8542  1642  0456               	iorwf	___fladd@b,w
  8543  1643  1D03               	skipz
  8544  1644  2E46               	goto	u3571
  8545  1645  2E48               	goto	u3570
  8546  1646                     u3571:	
  8547  1646  3001               	movlw	1
  8548  1647  2E49               	goto	u3580
  8549  1648                     u3570:	
  8550  1648  3000               	movlw	0
  8551  1649                     u3580:	
  8552  1649  00DE               	movwf	??___fladd
  8553  164A  085E               	movf	??___fladd,w
  8554  164B  00E9               	movwf	___fladd@grs
  8555  164C  3000               	movlw	0
  8556  164D  00D9               	movwf	___fladd@b+3
  8557  164E  3000               	movlw	0
  8558  164F  00D8               	movwf	___fladd@b+2
  8559  1650  3000               	movlw	0
  8560  1651  00D7               	movwf	___fladd@b+1
  8561  1652  3000               	movlw	0
  8562  1653  00D6               	movwf	___fladd@b
  8563  1654  0867               	movf	___fladd@aexp,w
  8564  1655  00DE               	movwf	??___fladd
  8565  1656  085E               	movf	??___fladd,w
  8566  1657  00E8               	movwf	___fladd@bexp
  8567  1658  2E82               	goto	l691
  8568  1659                     l693:	
  8569  1659  1C69               	btfss	___fladd@grs,0
  8570  165A  2E5C               	goto	u3591
  8571  165B  2E5D               	goto	u3590
  8572  165C                     u3591:	
  8573  165C  2E66               	goto	l2661
  8574  165D                     u3590:	
  8575  165D                     l2659:	
  8576  165D  0869               	movf	___fladd@grs,w
  8577  165E  00DE               	movwf	??___fladd
  8578  165F  1003               	clrc
  8579  1660  0C5E               	rrf	??___fladd,w
  8580  1661  3801               	iorlw	1
  8581  1662  00DF               	movwf	??___fladd+1
  8582  1663  085F               	movf	??___fladd+1,w
  8583  1664  00E9               	movwf	___fladd@grs
  8584  1665  2E68               	goto	l2663
  8585  1666                     l2661:	
  8586  1666  1003               	clrc
  8587  1667  0CE9               	rrf	___fladd@grs,f
  8588  1668                     l2663:	
  8589  1668  1C56               	btfss	___fladd@b,0
  8590  1669  2E6B               	goto	u3601
  8591  166A  2E6C               	goto	u3600
  8592  166B                     u3601:	
  8593  166B  2E6D               	goto	l2667
  8594  166C                     u3600:	
  8595  166C                     l2665:	
  8596  166C  17E9               	bsf	___fladd@grs,7
  8597  166D                     l2667:	
  8598  166D  3001               	movlw	1
  8599  166E  00DE               	movwf	??___fladd
  8600  166F                     u3615:	
  8601  166F  0D59               	rlf	___fladd@b+3,w
  8602  1670  0CD9               	rrf	___fladd@b+3,f
  8603  1671  0CD8               	rrf	___fladd@b+2,f
  8604  1672  0CD7               	rrf	___fladd@b+1,f
  8605  1673  0CD6               	rrf	___fladd@b,f
  8606  1674  0BDE               	decfsz	??___fladd& (0+127),f
  8607  1675  2E6F               	goto	u3615
  8608  1676                     l2669:	
  8609  1676  3001               	movlw	1
  8610  1677  00DE               	movwf	??___fladd
  8611  1678  085E               	movf	??___fladd,w
  8612  1679  07E8               	addwf	___fladd@bexp,f
  8613  167A                     l2671:	
  8614  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8615  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8616  167C  0867               	movf	___fladd@aexp,w
  8617  167D  0268               	subwf	___fladd@bexp,w
  8618  167E  1C03               	skipc
  8619  167F  2E81               	goto	u3621
  8620  1680  2E82               	goto	u3620
  8621  1681                     u3621:	
  8622  1681  2E59               	goto	l693
  8623  1682                     u3620:	
  8624  1682                     l691:	
  8625  1682  1B66               	btfsc	___fladd@signs,6
  8626  1683  2E85               	goto	u3631
  8627  1684  2E86               	goto	u3630
  8628  1685                     u3631:	
  8629  1685  2ED1               	goto	l2697
  8630  1686                     u3630:	
  8631  1686                     l2673:	
  8632  1686  0868               	movf	___fladd@bexp,w
  8633  1687  1D03               	btfss	3,2
  8634  1688  2E8A               	goto	u3641
  8635  1689  2E8B               	goto	u3640
  8636  168A                     u3641:	
  8637  168A  2E94               	goto	l2679
  8638  168B                     u3640:	
  8639  168B                     l2675:	
  8640  168B  3000               	movlw	0
  8641  168C  00D9               	movwf	?___fladd+3
  8642  168D  3000               	movlw	0
  8643  168E  00D8               	movwf	?___fladd+2
  8644  168F  3000               	movlw	0
  8645  1690  00D7               	movwf	?___fladd+1
  8646  1691  3000               	movlw	0
  8647  1692  00D6               	movwf	?___fladd
  8648  1693  2FFF               	goto	l700
  8649  1694                     l2679:	
  8650  1694  085A               	movf	___fladd@a,w
  8651  1695  07D6               	addwf	___fladd@b,f
  8652  1696  085B               	movf	___fladd@a+1,w
  8653  1697  1103               	clrz
  8654  1698  1803               	skipnc
  8655  1699  3E01               	addlw	1
  8656  169A  1903               	skipnz
  8657  169B  2E9D               	goto	u3651
  8658  169C  07D7               	addwf	___fladd@b+1,f
  8659  169D                     u3651:	
  8660  169D  085C               	movf	___fladd@a+2,w
  8661  169E  1103               	clrz
  8662  169F  1803               	skipnc
  8663  16A0  3E01               	addlw	1
  8664  16A1  1903               	skipnz
  8665  16A2  2EA4               	goto	u3652
  8666  16A3  07D8               	addwf	___fladd@b+2,f
  8667  16A4                     u3652:	
  8668  16A4  085D               	movf	___fladd@a+3,w
  8669  16A5  1103               	clrz
  8670  16A6  1803               	skipnc
  8671  16A7  3E01               	addlw	1
  8672  16A8  1903               	skipnz
  8673  16A9  2EAB               	goto	u3653
  8674  16AA  07D9               	addwf	___fladd@b+3,f
  8675  16AB                     u3653:	
  8676  16AB                     l2681:	
  8677  16AB  1C59               	btfss	___fladd@b+3,0
  8678  16AC  2EAE               	goto	u3661
  8679  16AD  2EAF               	goto	u3660
  8680  16AE                     u3661:	
  8681  16AE  2F85               	goto	l2731
  8682  16AF                     u3660:	
  8683  16AF                     l2683:	
  8684  16AF  1C69               	btfss	___fladd@grs,0
  8685  16B0  2EB2               	goto	u3671
  8686  16B1  2EB3               	goto	u3670
  8687  16B2                     u3671:	
  8688  16B2  2EBC               	goto	l2687
  8689  16B3                     u3670:	
  8690  16B3                     l2685:	
  8691  16B3  0869               	movf	___fladd@grs,w
  8692  16B4  00DE               	movwf	??___fladd
  8693  16B5  1003               	clrc
  8694  16B6  0C5E               	rrf	??___fladd,w
  8695  16B7  3801               	iorlw	1
  8696  16B8  00DF               	movwf	??___fladd+1
  8697  16B9  085F               	movf	??___fladd+1,w
  8698  16BA  00E9               	movwf	___fladd@grs
  8699  16BB  2EBE               	goto	l2689
  8700  16BC                     l2687:	
  8701  16BC  1003               	clrc
  8702  16BD  0CE9               	rrf	___fladd@grs,f
  8703  16BE                     l2689:	
  8704  16BE  1C56               	btfss	___fladd@b,0
  8705  16BF  2EC1               	goto	u3681
  8706  16C0  2EC2               	goto	u3680
  8707  16C1                     u3681:	
  8708  16C1  2EC3               	goto	l2693
  8709  16C2                     u3680:	
  8710  16C2                     l2691:	
  8711  16C2  17E9               	bsf	___fladd@grs,7
  8712  16C3                     l2693:	
  8713  16C3  3001               	movlw	1
  8714  16C4  00DE               	movwf	??___fladd
  8715  16C5                     u3695:	
  8716  16C5  0D59               	rlf	___fladd@b+3,w
  8717  16C6  0CD9               	rrf	___fladd@b+3,f
  8718  16C7  0CD8               	rrf	___fladd@b+2,f
  8719  16C8  0CD7               	rrf	___fladd@b+1,f
  8720  16C9  0CD6               	rrf	___fladd@b,f
  8721  16CA  0BDE               	decfsz	??___fladd& (0+127),f
  8722  16CB  2EC5               	goto	u3695
  8723  16CC                     l2695:	
  8724  16CC  3001               	movlw	1
  8725  16CD  00DE               	movwf	??___fladd
  8726  16CE  085E               	movf	??___fladd,w
  8727  16CF  07E8               	addwf	___fladd@bexp,f
  8728  16D0  2F85               	goto	l2731
  8729  16D1                     l2697:	
  8730  16D1  0859               	movf	___fladd@b+3,w
  8731  16D2  3A80               	xorlw	128
  8732  16D3  00FF               	movwf	btemp+1
  8733  16D4  085D               	movf	___fladd@a+3,w
  8734  16D5  3A80               	xorlw	128
  8735  16D6  027F               	subwf	btemp+1,w
  8736  16D7  1D03               	skipz
  8737  16D8  2EE3               	goto	u3703
  8738  16D9  085C               	movf	___fladd@a+2,w
  8739  16DA  0258               	subwf	___fladd@b+2,w
  8740  16DB  1D03               	skipz
  8741  16DC  2EE3               	goto	u3703
  8742  16DD  085B               	movf	___fladd@a+1,w
  8743  16DE  0257               	subwf	___fladd@b+1,w
  8744  16DF  1D03               	skipz
  8745  16E0  2EE3               	goto	u3703
  8746  16E1  085A               	movf	___fladd@a,w
  8747  16E2  0256               	subwf	___fladd@b,w
  8748  16E3                     u3703:	
  8749  16E3  1803               	skipnc
  8750  16E4  2EE6               	goto	u3701
  8751  16E5  2EE7               	goto	u3700
  8752  16E6                     u3701:	
  8753  16E6  2F3F               	goto	l2707
  8754  16E7                     u3700:	
  8755  16E7                     l2699:	
  8756  16E7  30FF               	movlw	255
  8757  16E8  00DE               	movwf	??___fladd
  8758  16E9  30FF               	movlw	255
  8759  16EA  00DF               	movwf	??___fladd+1
  8760  16EB  30FF               	movlw	255
  8761  16EC  00E0               	movwf	??___fladd+2
  8762  16ED  30FF               	movlw	255
  8763  16EE  00E1               	movwf	??___fladd+3
  8764  16EF  085A               	movf	___fladd@a,w
  8765  16F0  00E2               	movwf	??___fladd+4
  8766  16F1  085B               	movf	___fladd@a+1,w
  8767  16F2  00E3               	movwf	??___fladd+5
  8768  16F3  085C               	movf	___fladd@a+2,w
  8769  16F4  00E4               	movwf	??___fladd+6
  8770  16F5  085D               	movf	___fladd@a+3,w
  8771  16F6  00E5               	movwf	??___fladd+7
  8772  16F7  0856               	movf	___fladd@b,w
  8773  16F8  02E2               	subwf	??___fladd+4,f
  8774  16F9  0857               	movf	___fladd@b+1,w
  8775  16FA  1C03               	skipc
  8776  16FB  0F57               	incfsz	___fladd@b+1,w
  8777  16FC  2EFE               	goto	u3711
  8778  16FD  2EFF               	goto	u3712
  8779  16FE                     u3711:	
  8780  16FE  02E3               	subwf	??___fladd+5,f
  8781  16FF                     u3712:	
  8782  16FF  0858               	movf	___fladd@b+2,w
  8783  1700  1C03               	skipc
  8784  1701  0F58               	incfsz	___fladd@b+2,w
  8785  1702  2F04               	goto	u3713
  8786  1703  2F05               	goto	u3714
  8787  1704                     u3713:	
  8788  1704  02E4               	subwf	??___fladd+6,f
  8789  1705                     u3714:	
  8790  1705  0859               	movf	___fladd@b+3,w
  8791  1706  1C03               	skipc
  8792  1707  0F59               	incfsz	___fladd@b+3,w
  8793  1708  2F0A               	goto	u3715
  8794  1709  2F0B               	goto	u3716
  8795  170A                     u3715:	
  8796  170A  02E5               	subwf	??___fladd+7,f
  8797  170B                     u3716:	
  8798  170B  0862               	movf	??___fladd+4,w
  8799  170C  07DE               	addwf	??___fladd,f
  8800  170D  0863               	movf	??___fladd+5,w
  8801  170E  1803               	skipnc
  8802  170F  0F63               	incfsz	??___fladd+5,w
  8803  1710  2F12               	goto	u3720
  8804  1711  2F13               	goto	u3721
  8805  1712                     u3720:	
  8806  1712  07DF               	addwf	??___fladd+1,f
  8807  1713                     u3721:	
  8808  1713  0864               	movf	??___fladd+6,w
  8809  1714  1803               	skipnc
  8810  1715  0F64               	incfsz	??___fladd+6,w
  8811  1716  2F18               	goto	u3722
  8812  1717  2F19               	goto	u3723
  8813  1718                     u3722:	
  8814  1718  07E0               	addwf	??___fladd+2,f
  8815  1719                     u3723:	
  8816  1719  0865               	movf	??___fladd+7,w
  8817  171A  1803               	skipnc
  8818  171B  0A65               	incf	??___fladd+7,w
  8819  171C  07E1               	addwf	??___fladd+3,f
  8820  171D  0861               	movf	??___fladd+3,w
  8821  171E  00D9               	movwf	___fladd@b+3
  8822  171F  0860               	movf	??___fladd+2,w
  8823  1720  00D8               	movwf	___fladd@b+2
  8824  1721  085F               	movf	??___fladd+1,w
  8825  1722  00D7               	movwf	___fladd@b+1
  8826  1723  085E               	movf	??___fladd,w
  8827  1724  00D6               	movwf	___fladd@b
  8828  1725                     l2701:	
  8829  1725  3080               	movlw	128
  8830  1726  00DE               	movwf	??___fladd
  8831  1727  085E               	movf	??___fladd,w
  8832  1728  06E6               	xorwf	___fladd@signs,f
  8833  1729  09E9               	comf	___fladd@grs,f
  8834  172A  0AE9               	incf	___fladd@grs,f
  8835  172B                     l2703:	
  8836  172B  0869               	movf	___fladd@grs,w
  8837  172C  1D03               	btfss	3,2
  8838  172D  2F2F               	goto	u3731
  8839  172E  2F30               	goto	u3730
  8840  172F                     u3731:	
  8841  172F  2F4D               	goto	l708
  8842  1730                     u3730:	
  8843  1730                     l2705:	
  8844  1730  3001               	movlw	1
  8845  1731  07D6               	addwf	___fladd@b,f
  8846  1732  3000               	movlw	0
  8847  1733  1803               	skipnc
  8848  1734  3001               	movlw	1
  8849  1735  07D7               	addwf	___fladd@b+1,f
  8850  1736  3000               	movlw	0
  8851  1737  1803               	skipnc
  8852  1738  3001               	movlw	1
  8853  1739  07D8               	addwf	___fladd@b+2,f
  8854  173A  3000               	movlw	0
  8855  173B  1803               	skipnc
  8856  173C  3001               	movlw	1
  8857  173D  07D9               	addwf	___fladd@b+3,f
  8858  173E  2F4D               	goto	l708
  8859  173F                     l2707:	
  8860  173F  085A               	movf	___fladd@a,w
  8861  1740  02D6               	subwf	___fladd@b,f
  8862  1741  085B               	movf	___fladd@a+1,w
  8863  1742  1C03               	skipc
  8864  1743  0F5B               	incfsz	___fladd@a+1,w
  8865  1744  02D7               	subwf	___fladd@b+1,f
  8866  1745  085C               	movf	___fladd@a+2,w
  8867  1746  1C03               	skipc
  8868  1747  0F5C               	incfsz	___fladd@a+2,w
  8869  1748  02D8               	subwf	___fladd@b+2,f
  8870  1749  085D               	movf	___fladd@a+3,w
  8871  174A  1C03               	skipc
  8872  174B  0F5D               	incfsz	___fladd@a+3,w
  8873  174C  02D9               	subwf	___fladd@b+3,f
  8874  174D                     l708:	
  8875  174D  0859               	movf	___fladd@b+3,w
  8876  174E  0458               	iorwf	___fladd@b+2,w
  8877  174F  0457               	iorwf	___fladd@b+1,w
  8878  1750  0456               	iorwf	___fladd@b,w
  8879  1751  1D03               	skipz
  8880  1752  2F54               	goto	u3741
  8881  1753  2F55               	goto	u3740
  8882  1754                     u3741:	
  8883  1754  2F81               	goto	l2729
  8884  1755                     u3740:	
  8885  1755                     l2709:	
  8886  1755  0869               	movf	___fladd@grs,w
  8887  1756  1D03               	btfss	3,2
  8888  1757  2F59               	goto	u3751
  8889  1758  2F5A               	goto	u3750
  8890  1759                     u3751:	
  8891  1759  2F81               	goto	l2729
  8892  175A                     u3750:	
  8893  175A                     l2711:	
  8894  175A  3000               	movlw	0
  8895  175B  00D9               	movwf	?___fladd+3
  8896  175C  3000               	movlw	0
  8897  175D  00D8               	movwf	?___fladd+2
  8898  175E  3000               	movlw	0
  8899  175F  00D7               	movwf	?___fladd+1
  8900  1760  3000               	movlw	0
  8901  1761  00D6               	movwf	?___fladd
  8902  1762  2FFF               	goto	l700
  8903  1763                     l2715:	
  8904  1763  3001               	movlw	1
  8905  1764  00DE               	movwf	??___fladd
  8906  1765                     u3765:	
  8907  1765  1003               	clrc
  8908  1766  0DD6               	rlf	___fladd@b,f
  8909  1767  0DD7               	rlf	___fladd@b+1,f
  8910  1768  0DD8               	rlf	___fladd@b+2,f
  8911  1769  0DD9               	rlf	___fladd@b+3,f
  8912  176A  0BDE               	decfsz	??___fladd,f
  8913  176B  2F65               	goto	u3765
  8914  176C                     l2717:	
  8915  176C  1FE9               	btfss	___fladd@grs,7
  8916  176D  2F6F               	goto	u3771
  8917  176E  2F70               	goto	u3770
  8918  176F                     u3771:	
  8919  176F  2F71               	goto	l712
  8920  1770                     u3770:	
  8921  1770                     l2719:	
  8922  1770  1456               	bsf	___fladd@b,0
  8923  1771                     l712:	
  8924  1771  1C69               	btfss	___fladd@grs,0
  8925  1772  2F74               	goto	u3781
  8926  1773  2F75               	goto	u3780
  8927  1774                     u3781:	
  8928  1774  2F78               	goto	l2723
  8929  1775                     u3780:	
  8930  1775                     l2721:	
  8931  1775  1403               	setc
  8932  1776  0DE9               	rlf	___fladd@grs,f
  8933  1777  2F7A               	goto	l2725
  8934  1778                     l2723:	
  8935  1778  1003               	clrc
  8936  1779  0DE9               	rlf	___fladd@grs,f
  8937  177A                     l2725:	
  8938  177A  0868               	movf	___fladd@bexp,w
  8939  177B  1903               	btfsc	3,2
  8940  177C  2F7E               	goto	u3791
  8941  177D  2F7F               	goto	u3790
  8942  177E                     u3791:	
  8943  177E  2F81               	goto	l2729
  8944  177F                     u3790:	
  8945  177F                     l2727:	
  8946  177F  3001               	movlw	1
  8947  1780  02E8               	subwf	___fladd@bexp,f
  8948  1781                     l2729:	
  8949  1781  1FD8               	btfss	___fladd@b+2,7
  8950  1782  2F84               	goto	u3801
  8951  1783  2F85               	goto	u3800
  8952  1784                     u3801:	
  8953  1784  2F63               	goto	l2715
  8954  1785                     u3800:	
  8955  1785                     l2731:	
  8956  1785  01E7               	clrf	___fladd@aexp
  8957  1786                     l2733:	
  8958  1786  1FE9               	btfss	___fladd@grs,7
  8959  1787  2F89               	goto	u3811
  8960  1788  2F8A               	goto	u3810
  8961  1789                     u3811:	
  8962  1789  2F98               	goto	l2741
  8963  178A                     u3810:	
  8964  178A                     l2735:	
  8965  178A  0869               	movf	___fladd@grs,w
  8966  178B  397F               	andlw	127
  8967  178C  1903               	btfsc	3,2
  8968  178D  2F8F               	goto	u3821
  8969  178E  2F90               	goto	u3820
  8970  178F                     u3821:	
  8971  178F  2F93               	goto	l718
  8972  1790                     u3820:	
  8973  1790                     l2737:	
  8974  1790  01E7               	clrf	___fladd@aexp
  8975  1791  0AE7               	incf	___fladd@aexp,f
  8976  1792  2F98               	goto	l2741
  8977  1793                     l718:	
  8978  1793  1C56               	btfss	___fladd@b,0
  8979  1794  2F96               	goto	u3831
  8980  1795  2F97               	goto	u3830
  8981  1796                     u3831:	
  8982  1796  2F98               	goto	l2741
  8983  1797                     u3830:	
  8984  1797  2F90               	goto	l2737
  8985  1798                     l2741:	
  8986  1798  0867               	movf	___fladd@aexp,w
  8987  1799  1903               	btfsc	3,2
  8988  179A  2F9C               	goto	u3841
  8989  179B  2F9D               	goto	u3840
  8990  179C                     u3841:	
  8991  179C  2FD1               	goto	l721
  8992  179D                     u3840:	
  8993  179D                     l2743:	
  8994  179D  3001               	movlw	1
  8995  179E  07D6               	addwf	___fladd@b,f
  8996  179F  3000               	movlw	0
  8997  17A0  1803               	skipnc
  8998  17A1  3001               	movlw	1
  8999  17A2  07D7               	addwf	___fladd@b+1,f
  9000  17A3  3000               	movlw	0
  9001  17A4  1803               	skipnc
  9002  17A5  3001               	movlw	1
  9003  17A6  07D8               	addwf	___fladd@b+2,f
  9004  17A7  3000               	movlw	0
  9005  17A8  1803               	skipnc
  9006  17A9  3001               	movlw	1
  9007  17AA  07D9               	addwf	___fladd@b+3,f
  9008  17AB                     l2745:	
  9009  17AB  1C59               	btfss	___fladd@b+3,0
  9010  17AC  2FAE               	goto	u3851
  9011  17AD  2FAF               	goto	u3850
  9012  17AE                     u3851:	
  9013  17AE  2FD1               	goto	l721
  9014  17AF                     u3850:	
  9015  17AF                     l2747:	
  9016  17AF  0856               	movf	___fladd@b,w
  9017  17B0  00DE               	movwf	??___fladd
  9018  17B1  0857               	movf	___fladd@b+1,w
  9019  17B2  00DF               	movwf	??___fladd+1
  9020  17B3  0858               	movf	___fladd@b+2,w
  9021  17B4  00E0               	movwf	??___fladd+2
  9022  17B5  0859               	movf	___fladd@b+3,w
  9023  17B6  00E1               	movwf	??___fladd+3
  9024  17B7  3001               	movlw	1
  9025  17B8  00E2               	movwf	??___fladd+4
  9026  17B9                     u3865:	
  9027  17B9  0D61               	rlf	??___fladd+3,w
  9028  17BA  0CE1               	rrf	??___fladd+3,f
  9029  17BB  0CE0               	rrf	??___fladd+2,f
  9030  17BC  0CDF               	rrf	??___fladd+1,f
  9031  17BD  0CDE               	rrf	??___fladd,f
  9032  17BE                     u3860:	
  9033  17BE  0BE2               	decfsz	??___fladd+4,f
  9034  17BF  2FB9               	goto	u3865
  9035  17C0  0861               	movf	??___fladd+3,w
  9036  17C1  00D9               	movwf	___fladd@b+3
  9037  17C2  0860               	movf	??___fladd+2,w
  9038  17C3  00D8               	movwf	___fladd@b+2
  9039  17C4  085F               	movf	??___fladd+1,w
  9040  17C5  00D7               	movwf	___fladd@b+1
  9041  17C6  085E               	movf	??___fladd,w
  9042  17C7  00D6               	movwf	___fladd@b
  9043  17C8  0A68               	incf	___fladd@bexp,w
  9044  17C9  1903               	btfsc	3,2
  9045  17CA  2FCC               	goto	u3871
  9046  17CB  2FCD               	goto	u3870
  9047  17CC                     u3871:	
  9048  17CC  2FD1               	goto	l721
  9049  17CD                     u3870:	
  9050  17CD                     l2749:	
  9051  17CD  3001               	movlw	1
  9052  17CE  00DE               	movwf	??___fladd
  9053  17CF  085E               	movf	??___fladd,w
  9054  17D0  07E8               	addwf	___fladd@bexp,f
  9055  17D1                     l721:	
  9056  17D1  0A68               	incf	___fladd@bexp,w
  9057  17D2  1903               	btfsc	3,2
  9058  17D3  2FD5               	goto	u3881
  9059  17D4  2FD6               	goto	u3880
  9060  17D5                     u3881:	
  9061  17D5  2FDB               	goto	l2753
  9062  17D6                     u3880:	
  9063  17D6                     l2751:	
  9064  17D6  0868               	movf	___fladd@bexp,w
  9065  17D7  1D03               	btfss	3,2
  9066  17D8  2FDA               	goto	u3891
  9067  17D9  2FDB               	goto	u3890
  9068  17DA                     u3891:	
  9069  17DA  2FE9               	goto	l2759
  9070  17DB                     u3890:	
  9071  17DB                     l2753:	
  9072  17DB  3000               	movlw	0
  9073  17DC  00D9               	movwf	___fladd@b+3
  9074  17DD  3000               	movlw	0
  9075  17DE  00D8               	movwf	___fladd@b+2
  9076  17DF  3000               	movlw	0
  9077  17E0  00D7               	movwf	___fladd@b+1
  9078  17E1  3000               	movlw	0
  9079  17E2  00D6               	movwf	___fladd@b
  9080  17E3                     l2755:	
  9081  17E3  0868               	movf	___fladd@bexp,w
  9082  17E4  1D03               	btfss	3,2
  9083  17E5  2FE7               	goto	u3901
  9084  17E6  2FE8               	goto	u3900
  9085  17E7                     u3901:	
  9086  17E7  2FE9               	goto	l2759
  9087  17E8                     u3900:	
  9088  17E8                     l2757:	
  9089  17E8  01E6               	clrf	___fladd@signs
  9090  17E9                     l2759:	
  9091  17E9  1C68               	btfss	___fladd@bexp,0
  9092  17EA  2FEC               	goto	u3911
  9093  17EB  2FED               	goto	u3910
  9094  17EC                     u3911:	
  9095  17EC  2FEF               	goto	l2763
  9096  17ED                     u3910:	
  9097  17ED                     l2761:	
  9098  17ED  17D8               	bsf	___fladd@b+2,7
  9099  17EE  2FF3               	goto	l729
  9100  17EF                     l2763:	
  9101  17EF  307F               	movlw	127
  9102  17F0  00DE               	movwf	??___fladd
  9103  17F1  085E               	movf	??___fladd,w
  9104  17F2  05D8               	andwf	___fladd@b+2,f
  9105  17F3                     l729:	
  9106  17F3  0868               	movf	___fladd@bexp,w
  9107  17F4  00DE               	movwf	??___fladd
  9108  17F5  1003               	clrc
  9109  17F6  0C5E               	rrf	??___fladd,w
  9110  17F7  00DF               	movwf	??___fladd+1
  9111  17F8  085F               	movf	??___fladd+1,w
  9112  17F9  00D9               	movwf	___fladd@b+3
  9113  17FA                     l2765:	
  9114  17FA  1FE6               	btfss	___fladd@signs,7
  9115  17FB  2FFD               	goto	u3921
  9116  17FC  2FFE               	goto	u3920
  9117  17FD                     u3921:	
  9118  17FD  2FFF               	goto	l730
  9119  17FE                     u3920:	
  9120  17FE                     l2767:	
  9121  17FE  17D9               	bsf	___fladd@b+3,7
  9122  17FF                     l730:	
  9123  17FF                     l700:	
  9124  17FF  0008               	return
  9125  1800                     __end_of___fladd:	
  9126                           
  9127                           	psect	text20
  9128  18CE                     __ptext20:	
  9129 ;; *************** function ___flneg *****************
  9130 ;; Defined at:
  9131 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flneg.c"
  9132 ;; Parameters:    Size  Location     Type
  9133 ;;  f1              4    3[COMMON] unsigned char 
  9134 ;; Auto vars:     Size  Location     Type
  9135 ;;		None
  9136 ;; Return value:  Size  Location     Type
  9137 ;;                  4    3[COMMON] unsigned char 
  9138 ;; Registers used:
  9139 ;;		wreg
  9140 ;; Tracked objects:
  9141 ;;		On entry : 0/0
  9142 ;;		On exit  : 0/0
  9143 ;;		Unchanged: 0/0
  9144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9145 ;;      Params:         4       0       0       0       0
  9146 ;;      Locals:         0       0       0       0       0
  9147 ;;      Temps:          0       0       0       0       0
  9148 ;;      Totals:         4       0       0       0       0
  9149 ;;Total ram usage:        4 bytes
  9150 ;; Hardware stack levels used:    1
  9151 ;; Hardware stack levels required when called:    1
  9152 ;; This function calls:
  9153 ;;		Nothing
  9154 ;; This function is called by:
  9155 ;;		_sprintf
  9156 ;; This function uses a non-reentrant model
  9157 ;;
  9158                           
  9159                           
  9160                           ;psect for function ___flneg
  9161  18CE                     ___flneg:	
  9162  18CE                     l3177:	
  9163                           ;incstack = 0
  9164                           ; Regs used in ___flneg: [wreg]
  9165                           
  9166  18CE  0876               	movf	___flneg@f1+3,w
  9167  18CF  0475               	iorwf	___flneg@f1+2,w
  9168  18D0  0474               	iorwf	___flneg@f1+1,w
  9169  18D1  0473               	iorwf	___flneg@f1,w
  9170  18D2  1903               	skipnz
  9171  18D3  28D5               	goto	u5041
  9172  18D4  28D6               	goto	u5040
  9173  18D5                     u5041:	
  9174  18D5  28D8               	goto	l3181
  9175  18D6                     u5040:	
  9176  18D6                     l3179:	
  9177  18D6  3080               	movlw	128
  9178  18D7  06F6               	xorwf	___flneg@f1+3,f
  9179  18D8                     l3181:	
  9180  18D8                     l559:	
  9181  18D8  0008               	return
  9182  18D9                     __end_of___flneg:	
  9183                           
  9184                           	psect	text21
  9185  10EA                     __ptext21:	
  9186 ;; *************** function ___flge *****************
  9187 ;; Defined at:
  9188 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;  ff1             4    3[COMMON] unsigned char 
  9191 ;;  ff2             4    7[COMMON] unsigned char 
  9192 ;; Auto vars:     Size  Location     Type
  9193 ;;		None
  9194 ;; Return value:  Size  Location     Type
  9195 ;;		None               void
  9196 ;; Registers used:
  9197 ;;		wreg, status,2, status,0
  9198 ;; Tracked objects:
  9199 ;;		On entry : 0/0
  9200 ;;		On exit  : 0/0
  9201 ;;		Unchanged: 0/0
  9202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9203 ;;      Params:         8       0       0       0       0
  9204 ;;      Locals:         0       0       0       0       0
  9205 ;;      Temps:          0       4       0       0       0
  9206 ;;      Totals:         8       4       0       0       0
  9207 ;;Total ram usage:       12 bytes
  9208 ;; Hardware stack levels used:    1
  9209 ;; Hardware stack levels required when called:    1
  9210 ;; This function calls:
  9211 ;;		Nothing
  9212 ;; This function is called by:
  9213 ;;		_sprintf
  9214 ;; This function uses a non-reentrant model
  9215 ;;
  9216                           
  9217                           
  9218                           ;psect for function ___flge
  9219  10EA                     ___flge:	
  9220  10EA                     l3157:	
  9221                           ;incstack = 0
  9222                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9223                           
  9224  10EA  3000               	movlw	0
  9225  10EB  0573               	andwf	___flge@ff1,w
  9226  10EC  1283               	bcf	3,5	;RP0=0, select bank0
  9227  10ED  1303               	bcf	3,6	;RP1=0, select bank0
  9228  10EE  00A0               	movwf	??___flge
  9229  10EF  3000               	movlw	0
  9230  10F0  0574               	andwf	___flge@ff1+1,w
  9231  10F1  00A1               	movwf	??___flge+1
  9232  10F2  3080               	movlw	128
  9233  10F3  0575               	andwf	___flge@ff1+2,w
  9234  10F4  00A2               	movwf	??___flge+2
  9235  10F5  307F               	movlw	127
  9236  10F6  0576               	andwf	___flge@ff1+3,w
  9237  10F7  00A3               	movwf	??___flge+3
  9238  10F8  0823               	movf	??___flge+3,w
  9239  10F9  0422               	iorwf	??___flge+2,w
  9240  10FA  0421               	iorwf	??___flge+1,w
  9241  10FB  0420               	iorwf	??___flge,w
  9242  10FC  1D03               	skipz
  9243  10FD  28FF               	goto	u4971
  9244  10FE  2900               	goto	u4970
  9245  10FF                     u4971:	
  9246  10FF  2908               	goto	l551
  9247  1100                     u4970:	
  9248  1100                     l3159:	
  9249  1100  3000               	movlw	0
  9250  1101  00F6               	movwf	___flge@ff1+3
  9251  1102  3000               	movlw	0
  9252  1103  00F5               	movwf	___flge@ff1+2
  9253  1104  3000               	movlw	0
  9254  1105  00F4               	movwf	___flge@ff1+1
  9255  1106  3000               	movlw	0
  9256  1107  00F3               	movwf	___flge@ff1
  9257  1108                     l551:	
  9258  1108  3000               	movlw	0
  9259  1109  0577               	andwf	___flge@ff2,w
  9260  110A  00A0               	movwf	??___flge
  9261  110B  3000               	movlw	0
  9262  110C  0578               	andwf	___flge@ff2+1,w
  9263  110D  00A1               	movwf	??___flge+1
  9264  110E  3080               	movlw	128
  9265  110F  0579               	andwf	___flge@ff2+2,w
  9266  1110  00A2               	movwf	??___flge+2
  9267  1111  307F               	movlw	127
  9268  1112  057A               	andwf	___flge@ff2+3,w
  9269  1113  00A3               	movwf	??___flge+3
  9270  1114  0823               	movf	??___flge+3,w
  9271  1115  0422               	iorwf	??___flge+2,w
  9272  1116  0421               	iorwf	??___flge+1,w
  9273  1117  0420               	iorwf	??___flge,w
  9274  1118  1D03               	skipz
  9275  1119  291B               	goto	u4981
  9276  111A  291C               	goto	u4980
  9277  111B                     u4981:	
  9278  111B  2924               	goto	l3163
  9279  111C                     u4980:	
  9280  111C                     l3161:	
  9281  111C  3000               	movlw	0
  9282  111D  00FA               	movwf	___flge@ff2+3
  9283  111E  3000               	movlw	0
  9284  111F  00F9               	movwf	___flge@ff2+2
  9285  1120  3000               	movlw	0
  9286  1121  00F8               	movwf	___flge@ff2+1
  9287  1122  3000               	movlw	0
  9288  1123  00F7               	movwf	___flge@ff2
  9289  1124                     l3163:	
  9290  1124  1FF6               	btfss	___flge@ff1+3,7
  9291  1125  2927               	goto	u4991
  9292  1126  2928               	goto	u4990
  9293  1127                     u4991:	
  9294  1127  294C               	goto	l3167
  9295  1128                     u4990:	
  9296  1128                     l3165:	
  9297  1128  3000               	movlw	0
  9298  1129  00A0               	movwf	??___flge
  9299  112A  3000               	movlw	0
  9300  112B  00A1               	movwf	??___flge+1
  9301  112C  3000               	movlw	0
  9302  112D  00A2               	movwf	??___flge+2
  9303  112E  3080               	movlw	128
  9304  112F  00A3               	movwf	??___flge+3
  9305  1130  0873               	movf	___flge@ff1,w
  9306  1131  02A0               	subwf	??___flge,f
  9307  1132  0874               	movf	___flge@ff1+1,w
  9308  1133  1C03               	skipc
  9309  1134  0F74               	incfsz	___flge@ff1+1,w
  9310  1135  2937               	goto	u5001
  9311  1136  2938               	goto	u5002
  9312  1137                     u5001:	
  9313  1137  02A1               	subwf	??___flge+1,f
  9314  1138                     u5002:	
  9315  1138  0875               	movf	___flge@ff1+2,w
  9316  1139  1C03               	skipc
  9317  113A  0F75               	incfsz	___flge@ff1+2,w
  9318  113B  293D               	goto	u5003
  9319  113C  293E               	goto	u5004
  9320  113D                     u5003:	
  9321  113D  02A2               	subwf	??___flge+2,f
  9322  113E                     u5004:	
  9323  113E  0876               	movf	___flge@ff1+3,w
  9324  113F  1C03               	skipc
  9325  1140  0F76               	incfsz	___flge@ff1+3,w
  9326  1141  2943               	goto	u5005
  9327  1142  2944               	goto	u5006
  9328  1143                     u5005:	
  9329  1143  02A3               	subwf	??___flge+3,f
  9330  1144                     u5006:	
  9331  1144  0823               	movf	??___flge+3,w
  9332  1145  00F6               	movwf	___flge@ff1+3
  9333  1146  0822               	movf	??___flge+2,w
  9334  1147  00F5               	movwf	___flge@ff1+2
  9335  1148  0821               	movf	??___flge+1,w
  9336  1149  00F4               	movwf	___flge@ff1+1
  9337  114A  0820               	movf	??___flge,w
  9338  114B  00F3               	movwf	___flge@ff1
  9339  114C                     l3167:	
  9340  114C  1FFA               	btfss	___flge@ff2+3,7
  9341  114D  294F               	goto	u5011
  9342  114E  2950               	goto	u5010
  9343  114F                     u5011:	
  9344  114F  2974               	goto	l554
  9345  1150                     u5010:	
  9346  1150                     l3169:	
  9347  1150  3000               	movlw	0
  9348  1151  00A0               	movwf	??___flge
  9349  1152  3000               	movlw	0
  9350  1153  00A1               	movwf	??___flge+1
  9351  1154  3000               	movlw	0
  9352  1155  00A2               	movwf	??___flge+2
  9353  1156  3080               	movlw	128
  9354  1157  00A3               	movwf	??___flge+3
  9355  1158  0877               	movf	___flge@ff2,w
  9356  1159  02A0               	subwf	??___flge,f
  9357  115A  0878               	movf	___flge@ff2+1,w
  9358  115B  1C03               	skipc
  9359  115C  0F78               	incfsz	___flge@ff2+1,w
  9360  115D  295F               	goto	u5021
  9361  115E  2960               	goto	u5022
  9362  115F                     u5021:	
  9363  115F  02A1               	subwf	??___flge+1,f
  9364  1160                     u5022:	
  9365  1160  0879               	movf	___flge@ff2+2,w
  9366  1161  1C03               	skipc
  9367  1162  0F79               	incfsz	___flge@ff2+2,w
  9368  1163  2965               	goto	u5023
  9369  1164  2966               	goto	u5024
  9370  1165                     u5023:	
  9371  1165  02A2               	subwf	??___flge+2,f
  9372  1166                     u5024:	
  9373  1166  087A               	movf	___flge@ff2+3,w
  9374  1167  1C03               	skipc
  9375  1168  0F7A               	incfsz	___flge@ff2+3,w
  9376  1169  296B               	goto	u5025
  9377  116A  296C               	goto	u5026
  9378  116B                     u5025:	
  9379  116B  02A3               	subwf	??___flge+3,f
  9380  116C                     u5026:	
  9381  116C  0823               	movf	??___flge+3,w
  9382  116D  00FA               	movwf	___flge@ff2+3
  9383  116E  0822               	movf	??___flge+2,w
  9384  116F  00F9               	movwf	___flge@ff2+2
  9385  1170  0821               	movf	??___flge+1,w
  9386  1171  00F8               	movwf	___flge@ff2+1
  9387  1172  0820               	movf	??___flge,w
  9388  1173  00F7               	movwf	___flge@ff2
  9389  1174                     l554:	
  9390  1174  3080               	movlw	128
  9391  1175  06F6               	xorwf	___flge@ff1+3,f
  9392  1176  3080               	movlw	128
  9393  1177  06FA               	xorwf	___flge@ff2+3,f
  9394  1178  087A               	movf	___flge@ff2+3,w
  9395  1179  0276               	subwf	___flge@ff1+3,w
  9396  117A  1D03               	skipz
  9397  117B  2986               	goto	u5035
  9398  117C  0879               	movf	___flge@ff2+2,w
  9399  117D  0275               	subwf	___flge@ff1+2,w
  9400  117E  1D03               	skipz
  9401  117F  2986               	goto	u5035
  9402  1180  0878               	movf	___flge@ff2+1,w
  9403  1181  0274               	subwf	___flge@ff1+1,w
  9404  1182  1D03               	skipz
  9405  1183  2986               	goto	u5035
  9406  1184  0877               	movf	___flge@ff2,w
  9407  1185  0273               	subwf	___flge@ff1,w
  9408  1186                     u5035:	
  9409  1186  1803               	skipnc
  9410  1187  2989               	goto	u5031
  9411  1188  298A               	goto	u5030
  9412  1189                     u5031:	
  9413  1189  298C               	goto	l3173
  9414  118A                     u5030:	
  9415  118A                     l3171:	
  9416  118A  1003               	clrc
  9417  118B  298D               	goto	l555
  9418  118C                     l3173:	
  9419  118C  1403               	setc
  9420  118D                     l555:	
  9421  118D  0008               	return
  9422  118E                     __end_of___flge:	
  9423                           
  9424                           	psect	text22
  9425  1A42                     __ptext22:	
  9426 ;; *************** function ___fleq *****************
  9427 ;; Defined at:
  9428 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;  ff1             4    3[COMMON] unsigned char 
  9431 ;;  ff2             4    7[COMMON] unsigned char 
  9432 ;; Auto vars:     Size  Location     Type
  9433 ;;		None
  9434 ;; Return value:  Size  Location     Type
  9435 ;;		None               void
  9436 ;; Registers used:
  9437 ;;		wreg, status,2, status,0
  9438 ;; Tracked objects:
  9439 ;;		On entry : 0/0
  9440 ;;		On exit  : 0/0
  9441 ;;		Unchanged: 0/0
  9442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9443 ;;      Params:         8       0       0       0       0
  9444 ;;      Locals:         0       0       0       0       0
  9445 ;;      Temps:          0       4       0       0       0
  9446 ;;      Totals:         8       4       0       0       0
  9447 ;;Total ram usage:       12 bytes
  9448 ;; Hardware stack levels used:    1
  9449 ;; Hardware stack levels required when called:    1
  9450 ;; This function calls:
  9451 ;;		Nothing
  9452 ;; This function is called by:
  9453 ;;		_sprintf
  9454 ;; This function uses a non-reentrant model
  9455 ;;
  9456                           
  9457                           
  9458                           ;psect for function ___fleq
  9459  1A42                     ___fleq:	
  9460  1A42                     l3145:	
  9461                           ;incstack = 0
  9462                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9463                           
  9464  1A42  3000               	movlw	0
  9465  1A43  0573               	andwf	___fleq@ff1,w
  9466  1A44  1283               	bcf	3,5	;RP0=0, select bank0
  9467  1A45  1303               	bcf	3,6	;RP1=0, select bank0
  9468  1A46  00A0               	movwf	??___fleq
  9469  1A47  3000               	movlw	0
  9470  1A48  0574               	andwf	___fleq@ff1+1,w
  9471  1A49  00A1               	movwf	??___fleq+1
  9472  1A4A  3080               	movlw	128
  9473  1A4B  0575               	andwf	___fleq@ff1+2,w
  9474  1A4C  00A2               	movwf	??___fleq+2
  9475  1A4D  307F               	movlw	127
  9476  1A4E  0576               	andwf	___fleq@ff1+3,w
  9477  1A4F  00A3               	movwf	??___fleq+3
  9478  1A50  0823               	movf	??___fleq+3,w
  9479  1A51  0422               	iorwf	??___fleq+2,w
  9480  1A52  0421               	iorwf	??___fleq+1,w
  9481  1A53  0420               	iorwf	??___fleq,w
  9482  1A54  1D03               	skipz
  9483  1A55  2A57               	goto	u4941
  9484  1A56  2A58               	goto	u4940
  9485  1A57                     u4941:	
  9486  1A57  2A60               	goto	l546
  9487  1A58                     u4940:	
  9488  1A58                     l3147:	
  9489  1A58  3000               	movlw	0
  9490  1A59  00F6               	movwf	___fleq@ff1+3
  9491  1A5A  3000               	movlw	0
  9492  1A5B  00F5               	movwf	___fleq@ff1+2
  9493  1A5C  3000               	movlw	0
  9494  1A5D  00F4               	movwf	___fleq@ff1+1
  9495  1A5E  3000               	movlw	0
  9496  1A5F  00F3               	movwf	___fleq@ff1
  9497  1A60                     l546:	
  9498  1A60  3000               	movlw	0
  9499  1A61  0577               	andwf	___fleq@ff2,w
  9500  1A62  00A0               	movwf	??___fleq
  9501  1A63  3000               	movlw	0
  9502  1A64  0578               	andwf	___fleq@ff2+1,w
  9503  1A65  00A1               	movwf	??___fleq+1
  9504  1A66  3080               	movlw	128
  9505  1A67  0579               	andwf	___fleq@ff2+2,w
  9506  1A68  00A2               	movwf	??___fleq+2
  9507  1A69  307F               	movlw	127
  9508  1A6A  057A               	andwf	___fleq@ff2+3,w
  9509  1A6B  00A3               	movwf	??___fleq+3
  9510  1A6C  0823               	movf	??___fleq+3,w
  9511  1A6D  0422               	iorwf	??___fleq+2,w
  9512  1A6E  0421               	iorwf	??___fleq+1,w
  9513  1A6F  0420               	iorwf	??___fleq,w
  9514  1A70  1D03               	skipz
  9515  1A71  2A73               	goto	u4951
  9516  1A72  2A74               	goto	u4950
  9517  1A73                     u4951:	
  9518  1A73  2A7C               	goto	l547
  9519  1A74                     u4950:	
  9520  1A74                     l3149:	
  9521  1A74  3000               	movlw	0
  9522  1A75  00FA               	movwf	___fleq@ff2+3
  9523  1A76  3000               	movlw	0
  9524  1A77  00F9               	movwf	___fleq@ff2+2
  9525  1A78  3000               	movlw	0
  9526  1A79  00F8               	movwf	___fleq@ff2+1
  9527  1A7A  3000               	movlw	0
  9528  1A7B  00F7               	movwf	___fleq@ff2
  9529  1A7C                     l547:	
  9530  1A7C  087A               	movf	___fleq@ff2+3,w
  9531  1A7D  0676               	xorwf	___fleq@ff1+3,w
  9532  1A7E  1D03               	skipz
  9533  1A7F  2A8A               	goto	u4965
  9534  1A80  0879               	movf	___fleq@ff2+2,w
  9535  1A81  0675               	xorwf	___fleq@ff1+2,w
  9536  1A82  1D03               	skipz
  9537  1A83  2A8A               	goto	u4965
  9538  1A84  0878               	movf	___fleq@ff2+1,w
  9539  1A85  0674               	xorwf	___fleq@ff1+1,w
  9540  1A86  1D03               	skipz
  9541  1A87  2A8A               	goto	u4965
  9542  1A88  0877               	movf	___fleq@ff2,w
  9543  1A89  0673               	xorwf	___fleq@ff1,w
  9544  1A8A                     u4965:	
  9545  1A8A  1903               	skipnz
  9546  1A8B  2A8D               	goto	u4961
  9547  1A8C  2A8E               	goto	u4960
  9548  1A8D                     u4961:	
  9549  1A8D  2A90               	goto	l3153
  9550  1A8E                     u4960:	
  9551  1A8E                     l3151:	
  9552  1A8E  1003               	clrc
  9553  1A8F  2A91               	goto	l548
  9554  1A90                     l3153:	
  9555  1A90  1403               	setc
  9556  1A91                     l548:	
  9557  1A91  0008               	return
  9558  1A92                     __end_of___fleq:	
  9559                           
  9560                           	psect	text23
  9561  190D                     __ptext23:	
  9562 ;; *************** function _setup *****************
  9563 ;; Defined at:
  9564 ;;		line 114 in file "Lab3_v2.c"
  9565 ;; Parameters:    Size  Location     Type
  9566 ;;		None
  9567 ;; Auto vars:     Size  Location     Type
  9568 ;;		None
  9569 ;; Return value:  Size  Location     Type
  9570 ;;                  1    wreg      void 
  9571 ;; Registers used:
  9572 ;;		wreg, status,2
  9573 ;; Tracked objects:
  9574 ;;		On entry : 0/0
  9575 ;;		On exit  : 0/0
  9576 ;;		Unchanged: 0/0
  9577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9578 ;;      Params:         0       0       0       0       0
  9579 ;;      Locals:         0       0       0       0       0
  9580 ;;      Temps:          0       0       0       0       0
  9581 ;;      Totals:         0       0       0       0       0
  9582 ;;Total ram usage:        0 bytes
  9583 ;; Hardware stack levels used:    1
  9584 ;; Hardware stack levels required when called:    1
  9585 ;; This function calls:
  9586 ;;		Nothing
  9587 ;; This function is called by:
  9588 ;;		_main
  9589 ;; This function uses a non-reentrant model
  9590 ;;
  9591                           
  9592                           
  9593                           ;psect for function _setup
  9594  190D                     _setup:	
  9595  190D                     l3291:	
  9596                           ;incstack = 0
  9597                           ; Regs used in _setup: [wreg+status,2]
  9598                           
  9599                           
  9600                           ;Lab3_v2.c: 115:     TRISA = 0x00;
  9601  190D  1683               	bsf	3,5	;RP0=1, select bank1
  9602  190E  1303               	bcf	3,6	;RP1=0, select bank1
  9603  190F  0185               	clrf	5	;volatile
  9604  1910                     l3293:	
  9605                           
  9606                           ;Lab3_v2.c: 116:     TRISB = 0xFF;
  9607  1910  30FF               	movlw	255
  9608  1911  0086               	movwf	6	;volatile
  9609  1912                     l3295:	
  9610                           
  9611                           ;Lab3_v2.c: 117:     TRISC = 0x00;
  9612  1912  0187               	clrf	7	;volatile
  9613  1913                     l3297:	
  9614                           
  9615                           ;Lab3_v2.c: 118:     TRISD = 0x00;
  9616  1913  0188               	clrf	8	;volatile
  9617  1914                     l3299:	
  9618                           
  9619                           ;Lab3_v2.c: 119:     ANSEL = 0x00;
  9620  1914  1683               	bsf	3,5	;RP0=1, select bank3
  9621  1915  1703               	bsf	3,6	;RP1=1, select bank3
  9622  1916  0188               	clrf	8	;volatile
  9623  1917                     l3301:	
  9624                           
  9625                           ;Lab3_v2.c: 120:     ANSELHbits.ANS13 = 1;
  9626  1917  1689               	bsf	9,5	;volatile
  9627  1918                     l3303:	
  9628                           
  9629                           ;Lab3_v2.c: 121:     ANSELHbits.ANS8 = 1;
  9630  1918  1409               	bsf	9,0	;volatile
  9631  1919                     l3305:	
  9632                           
  9633                           ;Lab3_v2.c: 122:     PORTA = 0x00;
  9634  1919  1283               	bcf	3,5	;RP0=0, select bank0
  9635  191A  1303               	bcf	3,6	;RP1=0, select bank0
  9636  191B  0185               	clrf	5	;volatile
  9637  191C                     l3307:	
  9638                           
  9639                           ;Lab3_v2.c: 123:     PORTB = 0x00;
  9640  191C  0186               	clrf	6	;volatile
  9641  191D                     l3309:	
  9642                           
  9643                           ;Lab3_v2.c: 124:     PORTC = 0x00;
  9644  191D  0187               	clrf	7	;volatile
  9645  191E                     l3311:	
  9646                           
  9647                           ;Lab3_v2.c: 125:     PORTD = 0x00;
  9648  191E  0188               	clrf	8	;volatile
  9649  191F                     l89:	
  9650  191F  0008               	return
  9651  1920                     __end_of_setup:	
  9652                           
  9653                           	psect	text24
  9654  1D23                     __ptext24:	
  9655 ;; *************** function _oscInt *****************
  9656 ;; Defined at:
  9657 ;;		line 11 in file "lib_osccon.c"
  9658 ;; Parameters:    Size  Location     Type
  9659 ;;  freq            1    wreg     unsigned char 
  9660 ;; Auto vars:     Size  Location     Type
  9661 ;;  freq            1    5[COMMON] unsigned char 
  9662 ;; Return value:  Size  Location     Type
  9663 ;;                  1    wreg      unsigned char 
  9664 ;; Registers used:
  9665 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9666 ;; Tracked objects:
  9667 ;;		On entry : 0/0
  9668 ;;		On exit  : 0/0
  9669 ;;		Unchanged: 0/0
  9670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9671 ;;      Params:         0       0       0       0       0
  9672 ;;      Locals:         1       0       0       0       0
  9673 ;;      Temps:          2       0       0       0       0
  9674 ;;      Totals:         3       0       0       0       0
  9675 ;;Total ram usage:        3 bytes
  9676 ;; Hardware stack levels used:    1
  9677 ;; Hardware stack levels required when called:    1
  9678 ;; This function calls:
  9679 ;;		Nothing
  9680 ;; This function is called by:
  9681 ;;		_main
  9682 ;; This function uses a non-reentrant model
  9683 ;;
  9684                           
  9685                           
  9686                           ;psect for function _oscInt
  9687  1D23                     _oscInt:	
  9688                           
  9689                           ;incstack = 0
  9690                           ; Regs used in _oscInt: [wreg-fsr0h+status,2+status,0]
  9691                           ;oscInt@freq stored from wreg
  9692  1D23  00F5               	movwf	oscInt@freq
  9693  1D24                     l3313:	
  9694                           
  9695                           ;lib_osccon.c: 12:     switch(freq){
  9696  1D24  2D75               	goto	l3317
  9697  1D25                     l172:	
  9698                           ;lib_osccon.c: 13:         case 0:
  9699                           
  9700                           
  9701                           ;lib_osccon.c: 14:             OSCCONbits.IRCF2 = 1;
  9702  1D25  1683               	bsf	3,5	;RP0=1, select bank1
  9703  1D26  1303               	bcf	3,6	;RP1=0, select bank1
  9704  1D27  170F               	bsf	15,6	;volatile
  9705                           
  9706                           ;lib_osccon.c: 15:             OSCCONbits.IRCF1 = 1;
  9707  1D28  168F               	bsf	15,5	;volatile
  9708                           
  9709                           ;lib_osccon.c: 16:             OSCCONbits.IRCF0 = 1;
  9710  1D29  160F               	bsf	15,4	;volatile
  9711                           
  9712                           ;lib_osccon.c: 17:             OSCCONbits.OSTS = 0;
  9713  1D2A  118F               	bcf	15,3	;volatile
  9714                           
  9715                           ;lib_osccon.c: 18:             OSCCONbits.HTS = 1;
  9716  1D2B  150F               	bsf	15,2	;volatile
  9717                           
  9718                           ;lib_osccon.c: 19:             OSCCONbits.LTS = 0;
  9719  1D2C  108F               	bcf	15,1	;volatile
  9720                           
  9721                           ;lib_osccon.c: 20:             OSCCONbits.SCS = 1;
  9722  1D2D  140F               	bsf	15,0	;volatile
  9723                           
  9724                           ;lib_osccon.c: 21:             break;
  9725  1D2E  2D97               	goto	l181
  9726  1D2F                     l174:	
  9727                           ;lib_osccon.c: 22:         case 1:
  9728                           
  9729                           
  9730                           ;lib_osccon.c: 23:             OSCCONbits.IRCF2 = 1;
  9731  1D2F  1683               	bsf	3,5	;RP0=1, select bank1
  9732  1D30  1303               	bcf	3,6	;RP1=0, select bank1
  9733  1D31  170F               	bsf	15,6	;volatile
  9734                           
  9735                           ;lib_osccon.c: 24:             OSCCONbits.IRCF1 = 1;
  9736  1D32  168F               	bsf	15,5	;volatile
  9737                           
  9738                           ;lib_osccon.c: 25:             OSCCONbits.IRCF0 = 0;
  9739  1D33  120F               	bcf	15,4	;volatile
  9740                           
  9741                           ;lib_osccon.c: 26:             OSCCONbits.OSTS = 0;
  9742  1D34  118F               	bcf	15,3	;volatile
  9743                           
  9744                           ;lib_osccon.c: 27:             OSCCONbits.HTS = 1;
  9745  1D35  150F               	bsf	15,2	;volatile
  9746                           
  9747                           ;lib_osccon.c: 28:             OSCCONbits.LTS = 0;
  9748  1D36  108F               	bcf	15,1	;volatile
  9749                           
  9750                           ;lib_osccon.c: 29:             OSCCONbits.SCS = 1;
  9751  1D37  140F               	bsf	15,0	;volatile
  9752                           
  9753                           ;lib_osccon.c: 30:             break;
  9754  1D38  2D97               	goto	l181
  9755  1D39                     l175:	
  9756                           ;lib_osccon.c: 31:         case 2:
  9757                           
  9758                           
  9759                           ;lib_osccon.c: 32:             OSCCONbits.IRCF2 = 1;
  9760  1D39  1683               	bsf	3,5	;RP0=1, select bank1
  9761  1D3A  1303               	bcf	3,6	;RP1=0, select bank1
  9762  1D3B  170F               	bsf	15,6	;volatile
  9763                           
  9764                           ;lib_osccon.c: 33:             OSCCONbits.IRCF1 = 0;
  9765  1D3C  128F               	bcf	15,5	;volatile
  9766                           
  9767                           ;lib_osccon.c: 34:             OSCCONbits.IRCF0 = 1;
  9768  1D3D  160F               	bsf	15,4	;volatile
  9769                           
  9770                           ;lib_osccon.c: 35:             OSCCONbits.OSTS = 0;
  9771  1D3E  118F               	bcf	15,3	;volatile
  9772                           
  9773                           ;lib_osccon.c: 36:             OSCCONbits.HTS = 1;
  9774  1D3F  150F               	bsf	15,2	;volatile
  9775                           
  9776                           ;lib_osccon.c: 37:             OSCCONbits.LTS = 0;
  9777  1D40  108F               	bcf	15,1	;volatile
  9778                           
  9779                           ;lib_osccon.c: 38:             OSCCONbits.SCS = 1;
  9780  1D41  140F               	bsf	15,0	;volatile
  9781                           
  9782                           ;lib_osccon.c: 39:             break;
  9783  1D42  2D97               	goto	l181
  9784  1D43                     l176:	
  9785                           ;lib_osccon.c: 40:         case 3:
  9786                           
  9787                           
  9788                           ;lib_osccon.c: 41:             OSCCONbits.IRCF2 = 1;
  9789  1D43  1683               	bsf	3,5	;RP0=1, select bank1
  9790  1D44  1303               	bcf	3,6	;RP1=0, select bank1
  9791  1D45  170F               	bsf	15,6	;volatile
  9792                           
  9793                           ;lib_osccon.c: 42:             OSCCONbits.IRCF1 = 0;
  9794  1D46  128F               	bcf	15,5	;volatile
  9795                           
  9796                           ;lib_osccon.c: 43:             OSCCONbits.IRCF0 = 0;
  9797  1D47  120F               	bcf	15,4	;volatile
  9798                           
  9799                           ;lib_osccon.c: 44:             OSCCONbits.OSTS = 0;
  9800  1D48  118F               	bcf	15,3	;volatile
  9801                           
  9802                           ;lib_osccon.c: 45:             OSCCONbits.HTS = 1;
  9803  1D49  150F               	bsf	15,2	;volatile
  9804                           
  9805                           ;lib_osccon.c: 46:             OSCCONbits.LTS = 0;
  9806  1D4A  108F               	bcf	15,1	;volatile
  9807                           
  9808                           ;lib_osccon.c: 47:             OSCCONbits.SCS = 1;
  9809  1D4B  140F               	bsf	15,0	;volatile
  9810                           
  9811                           ;lib_osccon.c: 48:             break;
  9812  1D4C  2D97               	goto	l181
  9813  1D4D                     l177:	
  9814                           ;lib_osccon.c: 49:         case 4:
  9815                           
  9816                           
  9817                           ;lib_osccon.c: 50:             OSCCONbits.IRCF2 = 0;
  9818  1D4D  1683               	bsf	3,5	;RP0=1, select bank1
  9819  1D4E  1303               	bcf	3,6	;RP1=0, select bank1
  9820  1D4F  130F               	bcf	15,6	;volatile
  9821                           
  9822                           ;lib_osccon.c: 51:             OSCCONbits.IRCF1 = 1;
  9823  1D50  168F               	bsf	15,5	;volatile
  9824                           
  9825                           ;lib_osccon.c: 52:             OSCCONbits.IRCF0 = 1;
  9826  1D51  160F               	bsf	15,4	;volatile
  9827                           
  9828                           ;lib_osccon.c: 53:             OSCCONbits.OSTS = 0;
  9829  1D52  118F               	bcf	15,3	;volatile
  9830                           
  9831                           ;lib_osccon.c: 54:             OSCCONbits.HTS = 1;
  9832  1D53  150F               	bsf	15,2	;volatile
  9833                           
  9834                           ;lib_osccon.c: 55:             OSCCONbits.LTS = 0;
  9835  1D54  108F               	bcf	15,1	;volatile
  9836                           
  9837                           ;lib_osccon.c: 56:             OSCCONbits.SCS = 1;
  9838  1D55  140F               	bsf	15,0	;volatile
  9839                           
  9840                           ;lib_osccon.c: 57:             break;
  9841  1D56  2D97               	goto	l181
  9842  1D57                     l178:	
  9843                           ;lib_osccon.c: 58:         case 5:
  9844                           
  9845                           
  9846                           ;lib_osccon.c: 59:             OSCCONbits.IRCF2 = 0;
  9847  1D57  1683               	bsf	3,5	;RP0=1, select bank1
  9848  1D58  1303               	bcf	3,6	;RP1=0, select bank1
  9849  1D59  130F               	bcf	15,6	;volatile
  9850                           
  9851                           ;lib_osccon.c: 60:             OSCCONbits.IRCF1 = 1;
  9852  1D5A  168F               	bsf	15,5	;volatile
  9853                           
  9854                           ;lib_osccon.c: 61:             OSCCONbits.IRCF0 = 0;
  9855  1D5B  120F               	bcf	15,4	;volatile
  9856                           
  9857                           ;lib_osccon.c: 62:             OSCCONbits.OSTS = 0;
  9858  1D5C  118F               	bcf	15,3	;volatile
  9859                           
  9860                           ;lib_osccon.c: 63:             OSCCONbits.HTS = 1;
  9861  1D5D  150F               	bsf	15,2	;volatile
  9862                           
  9863                           ;lib_osccon.c: 64:             OSCCONbits.LTS = 0;
  9864  1D5E  108F               	bcf	15,1	;volatile
  9865                           
  9866                           ;lib_osccon.c: 65:             OSCCONbits.SCS = 1;
  9867  1D5F  140F               	bsf	15,0	;volatile
  9868                           
  9869                           ;lib_osccon.c: 66:             break;
  9870  1D60  2D97               	goto	l181
  9871  1D61                     l179:	
  9872                           ;lib_osccon.c: 67:         case 6:
  9873                           
  9874                           
  9875                           ;lib_osccon.c: 68:             OSCCONbits.IRCF2 = 0;
  9876  1D61  1683               	bsf	3,5	;RP0=1, select bank1
  9877  1D62  1303               	bcf	3,6	;RP1=0, select bank1
  9878  1D63  130F               	bcf	15,6	;volatile
  9879                           
  9880                           ;lib_osccon.c: 69:             OSCCONbits.IRCF1 = 0;
  9881  1D64  128F               	bcf	15,5	;volatile
  9882                           
  9883                           ;lib_osccon.c: 70:             OSCCONbits.IRCF0 = 1;
  9884  1D65  160F               	bsf	15,4	;volatile
  9885                           
  9886                           ;lib_osccon.c: 71:             OSCCONbits.OSTS = 0;
  9887  1D66  118F               	bcf	15,3	;volatile
  9888                           
  9889                           ;lib_osccon.c: 72:             OSCCONbits.HTS = 1;
  9890  1D67  150F               	bsf	15,2	;volatile
  9891                           
  9892                           ;lib_osccon.c: 73:             OSCCONbits.LTS = 0;
  9893  1D68  108F               	bcf	15,1	;volatile
  9894                           
  9895                           ;lib_osccon.c: 74:             OSCCONbits.SCS = 1;
  9896  1D69  140F               	bsf	15,0	;volatile
  9897                           
  9898                           ;lib_osccon.c: 75:             break;
  9899  1D6A  2D97               	goto	l181
  9900  1D6B                     l180:	
  9901                           ;lib_osccon.c: 76:         case 7:
  9902                           
  9903                           
  9904                           ;lib_osccon.c: 77:             OSCCONbits.IRCF2 = 0;
  9905  1D6B  1683               	bsf	3,5	;RP0=1, select bank1
  9906  1D6C  1303               	bcf	3,6	;RP1=0, select bank1
  9907  1D6D  130F               	bcf	15,6	;volatile
  9908                           
  9909                           ;lib_osccon.c: 78:             OSCCONbits.IRCF1 = 0;
  9910  1D6E  128F               	bcf	15,5	;volatile
  9911                           
  9912                           ;lib_osccon.c: 79:             OSCCONbits.IRCF0 = 0;
  9913  1D6F  120F               	bcf	15,4	;volatile
  9914                           
  9915                           ;lib_osccon.c: 80:             OSCCONbits.OSTS = 0;
  9916  1D70  118F               	bcf	15,3	;volatile
  9917                           
  9918                           ;lib_osccon.c: 81:             OSCCONbits.HTS = 0;
  9919  1D71  110F               	bcf	15,2	;volatile
  9920                           
  9921                           ;lib_osccon.c: 82:             OSCCONbits.LTS = 1;
  9922  1D72  148F               	bsf	15,1	;volatile
  9923                           
  9924                           ;lib_osccon.c: 83:             OSCCONbits.SCS = 1;
  9925  1D73  140F               	bsf	15,0	;volatile
  9926                           
  9927                           ;lib_osccon.c: 84:             break;
  9928  1D74  2D97               	goto	l181
  9929  1D75                     l3317:	
  9930  1D75  0875               	movf	oscInt@freq,w
  9931  1D76  00F3               	movwf	??_oscInt
  9932  1D77  01F4               	clrf	??_oscInt+1
  9933                           
  9934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9935                           ; Switch size 1, requested type "simple"
  9936                           ; Number of cases is 1, Range of values is 0 to 0
  9937                           ; switch strategies available:
  9938                           ; Name         Instructions Cycles
  9939                           ; simple_byte            4     3 (average)
  9940                           ; direct_byte           11     8 (fixed)
  9941                           ; jumptable            260     6 (fixed)
  9942                           ;	Chosen strategy is simple_byte
  9943  1D78  0874               	movf	??_oscInt+1,w
  9944  1D79  3A00               	xorlw	0	; case 0
  9945  1D7A  1903               	skipnz
  9946  1D7B  2D7D               	goto	l3915
  9947  1D7C  2D97               	goto	l181
  9948  1D7D                     l3915:	
  9949                           
  9950                           ; Switch size 1, requested type "simple"
  9951                           ; Number of cases is 8, Range of values is 0 to 7
  9952                           ; switch strategies available:
  9953                           ; Name         Instructions Cycles
  9954                           ; simple_byte           25    13 (average)
  9955                           ; direct_byte           32     8 (fixed)
  9956                           ; jumptable            260     6 (fixed)
  9957                           ;	Chosen strategy is simple_byte
  9958  1D7D  0873               	movf	??_oscInt,w
  9959  1D7E  3A00               	xorlw	0	; case 0
  9960  1D7F  1903               	skipnz
  9961  1D80  2D25               	goto	l172
  9962  1D81  3A01               	xorlw	1	; case 1
  9963  1D82  1903               	skipnz
  9964  1D83  2D2F               	goto	l174
  9965  1D84  3A03               	xorlw	3	; case 2
  9966  1D85  1903               	skipnz
  9967  1D86  2D39               	goto	l175
  9968  1D87  3A01               	xorlw	1	; case 3
  9969  1D88  1903               	skipnz
  9970  1D89  2D43               	goto	l176
  9971  1D8A  3A07               	xorlw	7	; case 4
  9972  1D8B  1903               	skipnz
  9973  1D8C  2D4D               	goto	l177
  9974  1D8D  3A01               	xorlw	1	; case 5
  9975  1D8E  1903               	skipnz
  9976  1D8F  2D57               	goto	l178
  9977  1D90  3A03               	xorlw	3	; case 6
  9978  1D91  1903               	skipnz
  9979  1D92  2D61               	goto	l179
  9980  1D93  3A01               	xorlw	1	; case 7
  9981  1D94  1903               	skipnz
  9982  1D95  2D6B               	goto	l180
  9983  1D96  2D97               	goto	l181
  9984  1D97                     l181:	
  9985  1D97  0008               	return
  9986  1D98                     __end_of_oscInt:	
  9987                           
  9988                           	psect	text25
  9989  1936                     __ptext25:	
  9990 ;; *************** function _lcd8_setCursor *****************
  9991 ;; Defined at:
  9992 ;;		line 58 in file "LCDv1.c"
  9993 ;; Parameters:    Size  Location     Type
  9994 ;;  fila            1    wreg     unsigned char 
  9995 ;;  columna         1    6[COMMON] unsigned char 
  9996 ;; Auto vars:     Size  Location     Type
  9997 ;;  fila            1    7[COMMON] unsigned char 
  9998 ;; Return value:  Size  Location     Type
  9999 ;;                  1    wreg      void 
 10000 ;; Registers used:
 10001 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10002 ;; Tracked objects:
 10003 ;;		On entry : 0/0
 10004 ;;		On exit  : 0/0
 10005 ;;		Unchanged: 0/0
 10006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10007 ;;      Params:         1       0       0       0       0
 10008 ;;      Locals:         1       0       0       0       0
 10009 ;;      Temps:          0       0       0       0       0
 10010 ;;      Totals:         2       0       0       0       0
 10011 ;;Total ram usage:        2 bytes
 10012 ;; Hardware stack levels used:    1
 10013 ;; Hardware stack levels required when called:    3
 10014 ;; This function calls:
 10015 ;;		_lcd8_cmd
 10016 ;; This function is called by:
 10017 ;;		_main
 10018 ;; This function uses a non-reentrant model
 10019 ;;
 10020                           
 10021                           
 10022                           ;psect for function _lcd8_setCursor
 10023  1936                     _lcd8_setCursor:	
 10024                           
 10025                           ;incstack = 0
 10026                           ; Regs used in _lcd8_setCursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10027                           ;lcd8_setCursor@fila stored from wreg
 10028  1936  00F7               	movwf	lcd8_setCursor@fila
 10029  1937                     l3369:	
 10030                           
 10031                           ;LCDv1.c: 59:     if (fila == 1){
 10032  1937  0377               	decf	lcd8_setCursor@fila,w
 10033  1938  1D03               	btfss	3,2
 10034  1939  293B               	goto	u5351
 10035  193A  293C               	goto	u5350
 10036  193B                     u5351:	
 10037  193B  2944               	goto	l3373
 10038  193C                     u5350:	
 10039  193C                     l3371:	
 10040                           
 10041                           ;LCDv1.c: 60:         lcd8_cmd(0x80 + columna);
 10042  193C  0876               	movf	lcd8_setCursor@columna,w
 10043  193D  3E80               	addlw	128
 10044  193E  160A  158A  20EA  160A  158A  	fcall	_lcd8_cmd
 10045                           
 10046                           ;LCDv1.c: 61:     }
 10047  1943  2951               	goto	l123
 10048  1944                     l3373:	
 10049  1944  3002               	movlw	2
 10050  1945  0677               	xorwf	lcd8_setCursor@fila,w
 10051  1946  1D03               	btfss	3,2
 10052  1947  2949               	goto	u5361
 10053  1948  294A               	goto	u5360
 10054  1949                     u5361:	
 10055  1949  2951               	goto	l123
 10056  194A                     u5360:	
 10057  194A                     l3375:	
 10058                           
 10059                           ;LCDv1.c: 63:         lcd8_cmd(0xC0 + columna);
 10060  194A  0876               	movf	lcd8_setCursor@columna,w
 10061  194B  3EC0               	addlw	192
 10062  194C  160A  158A  20EA  160A  158A  	fcall	_lcd8_cmd
 10063  1951                     l123:	
 10064  1951  0008               	return
 10065  1952                     __end_of_lcd8_setCursor:	
 10066                           
 10067                           	psect	text26
 10068  1AE2                     __ptext26:	
 10069 ;; *************** function _lcd8_init2 *****************
 10070 ;; Defined at:
 10071 ;;		line 18 in file "LCDv1.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;		None
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;		None
 10076 ;; Return value:  Size  Location     Type
 10077 ;;                  1    wreg      void 
 10078 ;; Registers used:
 10079 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/0
 10082 ;;		On exit  : 0/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10085 ;;      Params:         0       0       0       0       0
 10086 ;;      Locals:         0       0       0       0       0
 10087 ;;      Temps:          2       0       0       0       0
 10088 ;;      Totals:         2       0       0       0       0
 10089 ;;Total ram usage:        2 bytes
 10090 ;; Hardware stack levels used:    1
 10091 ;; Hardware stack levels required when called:    3
 10092 ;; This function calls:
 10093 ;;		_lcd8_cmd
 10094 ;; This function is called by:
 10095 ;;		_main
 10096 ;; This function uses a non-reentrant model
 10097 ;;
 10098                           
 10099                           
 10100                           ;psect for function _lcd8_init2
 10101  1AE2                     _lcd8_init2:	
 10102  1AE2                     l3323:	
 10103                           ;incstack = 0
 10104                           ; Regs used in _lcd8_init2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10105                           
 10106                           
 10107                           ;LCDv1.c: 19:     _delay((unsigned long)((20)*(4000000/4000.0)));
 10108  1AE2  301A               	movlw	26
 10109  1AE3  00F7               	movwf	??_lcd8_init2+1
 10110  1AE4  30F8               	movlw	248
 10111  1AE5  00F6               	movwf	??_lcd8_init2
 10112  1AE6                     u6227:	
 10113  1AE6  0BF6               	decfsz	??_lcd8_init2,f
 10114  1AE7  2AE6               	goto	u6227
 10115  1AE8  0BF7               	decfsz	??_lcd8_init2+1,f
 10116  1AE9  2AE6               	goto	u6227
 10117  1AEA  0000               	nop
 10118  1AEB                     l3325:	
 10119                           
 10120                           ;LCDv1.c: 20:     lcd8_cmd(0x30);
 10121  1AEB  3030               	movlw	48
 10122  1AEC  160A  158A  20EA  160A  158A  	fcall	_lcd8_cmd
 10123  1AF1                     l3327:	
 10124                           
 10125                           ;LCDv1.c: 21:     _delay((unsigned long)((5)*(4000000/4000.0)));
 10126  1AF1  3007               	movlw	7
 10127  1AF2  00F7               	movwf	??_lcd8_init2+1
 10128  1AF3  307D               	movlw	125
 10129  1AF4  00F6               	movwf	??_lcd8_init2
 10130  1AF5                     u6237:	
 10131  1AF5  0BF6               	decfsz	??_lcd8_init2,f
 10132  1AF6  2AF5               	goto	u6237
 10133  1AF7  0BF7               	decfsz	??_lcd8_init2+1,f
 10134  1AF8  2AF5               	goto	u6237
 10135                           
 10136                           ;LCDv1.c: 22:     lcd8_cmd(0x30);
 10137  1AF9  3030               	movlw	48
 10138  1AFA  160A  158A  20EA  160A  158A  	fcall	_lcd8_cmd
 10139  1AFF                     l3329:	
 10140                           
 10141                           ;LCDv1.c: 23:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10142  1AFF  30C7               	movlw	199
 10143  1B00  00F6               	movwf	??_lcd8_init2
 10144  1B01                     u6247:	
 10145  1B01  2B02               	nop2
 10146  1B02  0BF6               	decfsz	??_lcd8_init2,f
 10147  1B03  2B01               	goto	u6247
 10148  1B04  2B05               	nop2
 10149  1B05  2B06               	nop2
 10150  1B06                     l3331:	
 10151                           
 10152                           ;LCDv1.c: 24:     lcd8_cmd(0x30);
 10153  1B06  3030               	movlw	48
 10154  1B07  160A  158A  20EA  160A  158A  	fcall	_lcd8_cmd
 10155                           
 10156                           ;LCDv1.c: 25:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10157  1B0C  30C7               	movlw	199
 10158  1B0D  00F6               	movwf	??_lcd8_init2
 10159  1B0E                     u6257:	
 10160  1B0E  2B0F               	nop2
 10161  1B0F  0BF6               	decfsz	??_lcd8_init2,f
 10162  1B10  2B0E               	goto	u6257
 10163  1B11  2B12               	nop2
 10164  1B12  2B13               	nop2
 10165  1B13                     l3333:	
 10166                           
 10167                           ;LCDv1.c: 26:     lcd8_cmd(0x38);
 10168  1B13  3038               	movlw	56
 10169  1B14  160A  158A  20EA  160A  158A  	fcall	_lcd8_cmd
 10170  1B19                     l3335:	
 10171                           
 10172                           ;LCDv1.c: 27:     lcd8_cmd(0x10);
 10173  1B19  3010               	movlw	16
 10174  1B1A  160A  158A  20EA  160A  158A  	fcall	_lcd8_cmd
 10175  1B1F                     l3337:	
 10176                           
 10177                           ;LCDv1.c: 28:     lcd8_cmd(0x01);
 10178  1B1F  3001               	movlw	1
 10179  1B20  160A  158A  20EA  160A  158A  	fcall	_lcd8_cmd
 10180  1B25                     l3339:	
 10181                           
 10182                           ;LCDv1.c: 29:     lcd8_cmd(0x06);
 10183  1B25  3006               	movlw	6
 10184  1B26  160A  158A  20EA  160A  158A  	fcall	_lcd8_cmd
 10185  1B2B                     l3341:	
 10186                           
 10187                           ;LCDv1.c: 30:     lcd8_cmd(0x0C);
 10188  1B2B  300C               	movlw	12
 10189  1B2C  160A  158A  20EA  160A  158A  	fcall	_lcd8_cmd
 10190  1B31                     l3343:	
 10191                           
 10192                           ;LCDv1.c: 31:     lcd8_cmd(0x80);
 10193  1B31  3080               	movlw	128
 10194  1B32  160A  158A  20EA  160A  158A  	fcall	_lcd8_cmd
 10195  1B37                     l105:	
 10196  1B37  0008               	return
 10197  1B38                     __end_of_lcd8_init2:	
 10198                           
 10199                           	psect	text27
 10200  18EA                     __ptext27:	
 10201 ;; *************** function _lcd8_cmd *****************
 10202 ;; Defined at:
 10203 ;;		line 34 in file "LCDv1.c"
 10204 ;; Parameters:    Size  Location     Type
 10205 ;;  cmd             1    wreg     unsigned char 
 10206 ;; Auto vars:     Size  Location     Type
 10207 ;;  cmd             1    5[COMMON] unsigned char 
 10208 ;; Return value:  Size  Location     Type
 10209 ;;                  1    wreg      void 
 10210 ;; Registers used:
 10211 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10212 ;; Tracked objects:
 10213 ;;		On entry : 0/0
 10214 ;;		On exit  : 0/0
 10215 ;;		Unchanged: 0/0
 10216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10217 ;;      Params:         0       0       0       0       0
 10218 ;;      Locals:         1       0       0       0       0
 10219 ;;      Temps:          0       0       0       0       0
 10220 ;;      Totals:         1       0       0       0       0
 10221 ;;Total ram usage:        1 bytes
 10222 ;; Hardware stack levels used:    1
 10223 ;; Hardware stack levels required when called:    2
 10224 ;; This function calls:
 10225 ;;		_delay_1ms2
 10226 ;; This function is called by:
 10227 ;;		_lcd8_init2
 10228 ;;		_lcd8_setCursor
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232                           
 10233                           ;psect for function _lcd8_cmd
 10234  18EA                     _lcd8_cmd:	
 10235                           
 10236                           ;incstack = 0
 10237                           ; Regs used in _lcd8_cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10238                           ;lcd8_cmd@cmd stored from wreg
 10239  18EA  00F5               	movwf	lcd8_cmd@cmd
 10240  18EB                     l2909:	
 10241                           
 10242                           ;LCDv1.c: 35:     PORTA = cmd;
 10243  18EB  0875               	movf	lcd8_cmd@cmd,w
 10244  18EC  1283               	bcf	3,5	;RP0=0, select bank0
 10245  18ED  1303               	bcf	3,6	;RP1=0, select bank0
 10246  18EE  0085               	movwf	5	;volatile
 10247  18EF                     l2911:	
 10248                           
 10249                           ;LCDv1.c: 36:     PORTCbits.RC0 = 0;
 10250  18EF  1007               	bcf	7,0	;volatile
 10251  18F0                     l2913:	
 10252                           
 10253                           ;LCDv1.c: 37:     PORTCbits.RC1 = 0;
 10254  18F0  1087               	bcf	7,1	;volatile
 10255  18F1                     l2915:	
 10256                           
 10257                           ;LCDv1.c: 38:     PORTCbits.RC2 = 1;
 10258  18F1  1507               	bsf	7,2	;volatile
 10259  18F2                     l2917:	
 10260                           
 10261                           ;LCDv1.c: 39:     delay_1ms2();
 10262  18F2  160A  158A  2120  160A  158A  	fcall	_delay_1ms2
 10263  18F7                     l2919:	
 10264                           
 10265                           ;LCDv1.c: 40:     PORTCbits.RC2 = 0;
 10266  18F7  1283               	bcf	3,5	;RP0=0, select bank0
 10267  18F8  1303               	bcf	3,6	;RP1=0, select bank0
 10268  18F9  1107               	bcf	7,2	;volatile
 10269  18FA                     l108:	
 10270  18FA  0008               	return
 10271  18FB                     __end_of_lcd8_cmd:	
 10272                           
 10273                           	psect	text28
 10274  199C                     __ptext28:	
 10275 ;; *************** function _lcd8_display *****************
 10276 ;; Defined at:
 10277 ;;		line 52 in file "LCDv1.c"
 10278 ;; Parameters:    Size  Location     Type
 10279 ;;  value           2    6[COMMON] PTR unsigned char 
 10280 ;;		 -> datos2(10), datos1(10), STR_3(4), STR_2(4), 
 10281 ;;		 -> STR_1(4), 
 10282 ;; Auto vars:     Size  Location     Type
 10283 ;;		None
 10284 ;; Return value:  Size  Location     Type
 10285 ;;                  1    wreg      void 
 10286 ;; Registers used:
 10287 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10288 ;; Tracked objects:
 10289 ;;		On entry : 0/0
 10290 ;;		On exit  : 0/0
 10291 ;;		Unchanged: 0/0
 10292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10293 ;;      Params:         2       0       0       0       0
 10294 ;;      Locals:         0       0       0       0       0
 10295 ;;      Temps:          0       0       0       0       0
 10296 ;;      Totals:         2       0       0       0       0
 10297 ;;Total ram usage:        2 bytes
 10298 ;; Hardware stack levels used:    1
 10299 ;; Hardware stack levels required when called:    3
 10300 ;; This function calls:
 10301 ;;		_lcd8_write
 10302 ;; This function is called by:
 10303 ;;		_main
 10304 ;; This function uses a non-reentrant model
 10305 ;;
 10306                           
 10307                           
 10308                           ;psect for function _lcd8_display
 10309  199C                     _lcd8_display:	
 10310  199C                     l3377:	
 10311                           ;incstack = 0
 10312                           ; Regs used in _lcd8_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10313                           
 10314                           
 10315                           ;LCDv1.c: 53:     while(*value){
 10316  199C  29B1               	goto	l3383
 10317  199D                     l3379:	
 10318                           
 10319                           ;LCDv1.c: 54:         lcd8_write(*value++);
 10320  199D  0877               	movf	lcd8_display@value+1,w
 10321  199E  00FF               	movwf	btemp+1
 10322  199F  0876               	movf	lcd8_display@value,w
 10323  19A0  0084               	movwf	4
 10324  19A1  160A  118A  2000  160A  158A  	fcall	stringtab
 10325  19A6  160A  158A  20D9  160A  158A  	fcall	_lcd8_write
 10326  19AB                     l3381:	
 10327  19AB  3001               	movlw	1
 10328  19AC  07F6               	addwf	lcd8_display@value,f
 10329  19AD  1803               	skipnc
 10330  19AE  0AF7               	incf	lcd8_display@value+1,f
 10331  19AF  3000               	movlw	0
 10332  19B0  07F7               	addwf	lcd8_display@value+1,f
 10333  19B1                     l3383:	
 10334                           
 10335                           ;LCDv1.c: 53:     while(*value){
 10336  19B1  0877               	movf	lcd8_display@value+1,w
 10337  19B2  1283               	bcf	3,5	;RP0=0, select bank0
 10338  19B3  1303               	bcf	3,6	;RP1=0, select bank0
 10339  19B4  00FF               	movwf	btemp+1
 10340  19B5  0876               	movf	lcd8_display@value,w
 10341  19B6  0084               	movwf	4
 10342  19B7  160A  118A  2000  160A  158A  	fcall	stringtab
 10343  19BC  3A00               	xorlw	0
 10344  19BD  1D03               	skipz
 10345  19BE  29C0               	goto	u5371
 10346  19BF  29C1               	goto	u5370
 10347  19C0                     u5371:	
 10348  19C0  299D               	goto	l3379
 10349  19C1                     u5370:	
 10350  19C1                     l117:	
 10351  19C1  0008               	return
 10352  19C2                     __end_of_lcd8_display:	
 10353                           
 10354                           	psect	text29
 10355  18D9                     __ptext29:	
 10356 ;; *************** function _lcd8_write *****************
 10357 ;; Defined at:
 10358 ;;		line 43 in file "LCDv1.c"
 10359 ;; Parameters:    Size  Location     Type
 10360 ;;  dat             1    wreg     unsigned char 
 10361 ;; Auto vars:     Size  Location     Type
 10362 ;;  dat             1    5[COMMON] unsigned char 
 10363 ;; Return value:  Size  Location     Type
 10364 ;;                  1    wreg      void 
 10365 ;; Registers used:
 10366 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10367 ;; Tracked objects:
 10368 ;;		On entry : 0/0
 10369 ;;		On exit  : 0/0
 10370 ;;		Unchanged: 0/0
 10371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10372 ;;      Params:         0       0       0       0       0
 10373 ;;      Locals:         1       0       0       0       0
 10374 ;;      Temps:          0       0       0       0       0
 10375 ;;      Totals:         1       0       0       0       0
 10376 ;;Total ram usage:        1 bytes
 10377 ;; Hardware stack levels used:    1
 10378 ;; Hardware stack levels required when called:    2
 10379 ;; This function calls:
 10380 ;;		_delay_1ms2
 10381 ;; This function is called by:
 10382 ;;		_lcd8_display
 10383 ;; This function uses a non-reentrant model
 10384 ;;
 10385                           
 10386                           
 10387                           ;psect for function _lcd8_write
 10388  18D9                     _lcd8_write:	
 10389                           
 10390                           ;incstack = 0
 10391                           ; Regs used in _lcd8_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10392                           ;lcd8_write@dat stored from wreg
 10393  18D9  00F5               	movwf	lcd8_write@dat
 10394  18DA                     l2921:	
 10395                           
 10396                           ;LCDv1.c: 44:     PORTA = dat;
 10397  18DA  0875               	movf	lcd8_write@dat,w
 10398  18DB  1283               	bcf	3,5	;RP0=0, select bank0
 10399  18DC  1303               	bcf	3,6	;RP1=0, select bank0
 10400  18DD  0085               	movwf	5	;volatile
 10401  18DE                     l2923:	
 10402                           
 10403                           ;LCDv1.c: 45:     PORTCbits.RC0 = 1;
 10404  18DE  1407               	bsf	7,0	;volatile
 10405  18DF                     l2925:	
 10406                           
 10407                           ;LCDv1.c: 46:     PORTCbits.RC1 = 0;
 10408  18DF  1087               	bcf	7,1	;volatile
 10409  18E0                     l2927:	
 10410                           
 10411                           ;LCDv1.c: 47:     PORTCbits.RC2 = 1;
 10412  18E0  1507               	bsf	7,2	;volatile
 10413  18E1                     l2929:	
 10414                           
 10415                           ;LCDv1.c: 48:     delay_1ms2();
 10416  18E1  160A  158A  2120  160A  158A  	fcall	_delay_1ms2
 10417  18E6                     l2931:	
 10418                           
 10419                           ;LCDv1.c: 49:     PORTCbits.RC2 = 0;
 10420  18E6  1283               	bcf	3,5	;RP0=0, select bank0
 10421  18E7  1303               	bcf	3,6	;RP1=0, select bank0
 10422  18E8  1107               	bcf	7,2	;volatile
 10423  18E9                     l111:	
 10424  18E9  0008               	return
 10425  18EA                     __end_of_lcd8_write:	
 10426                           
 10427                           	psect	text30
 10428  1920                     __ptext30:	
 10429 ;; *************** function _delay_1ms2 *****************
 10430 ;; Defined at:
 10431 ;;		line 67 in file "LCDv1.c"
 10432 ;; Parameters:    Size  Location     Type
 10433 ;;		None
 10434 ;; Auto vars:     Size  Location     Type
 10435 ;;  i               2    3[COMMON] int 
 10436 ;; Return value:  Size  Location     Type
 10437 ;;                  1    wreg      void 
 10438 ;; Registers used:
 10439 ;;		wreg, status,2, btemp+1
 10440 ;; Tracked objects:
 10441 ;;		On entry : 0/0
 10442 ;;		On exit  : 0/0
 10443 ;;		Unchanged: 0/0
 10444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10445 ;;      Params:         0       0       0       0       0
 10446 ;;      Locals:         2       0       0       0       0
 10447 ;;      Temps:          0       0       0       0       0
 10448 ;;      Totals:         2       0       0       0       0
 10449 ;;Total ram usage:        2 bytes
 10450 ;; Hardware stack levels used:    1
 10451 ;; Hardware stack levels required when called:    1
 10452 ;; This function calls:
 10453 ;;		Nothing
 10454 ;; This function is called by:
 10455 ;;		_main
 10456 ;;		_lcd8_cmd
 10457 ;;		_lcd8_write
 10458 ;; This function uses a non-reentrant model
 10459 ;;
 10460                           
 10461                           
 10462                           ;psect for function _delay_1ms2
 10463  1920                     _delay_1ms2:	
 10464  1920                     l2435:	
 10465                           ;incstack = 0
 10466                           ; Regs used in _delay_1ms2: [wreg+status,2+btemp+1]
 10467                           
 10468                           
 10469                           ;LCDv1.c: 68:     for (int i = 0; i < 50; i++);
 10470  1920  01F3               	clrf	delay_1ms2@i
 10471  1921  01F4               	clrf	delay_1ms2@i+1
 10472  1922                     l2441:	
 10473  1922  3001               	movlw	1
 10474  1923  07F3               	addwf	delay_1ms2@i,f
 10475  1924  1803               	skipnc
 10476  1925  0AF4               	incf	delay_1ms2@i+1,f
 10477  1926  3000               	movlw	0
 10478  1927  07F4               	addwf	delay_1ms2@i+1,f
 10479  1928                     l2443:	
 10480  1928  0874               	movf	delay_1ms2@i+1,w
 10481  1929  3A80               	xorlw	128
 10482  192A  00FF               	movwf	btemp+1
 10483  192B  3080               	movlw	128
 10484  192C  027F               	subwf	btemp+1,w
 10485  192D  1D03               	skipz
 10486  192E  2931               	goto	u3145
 10487  192F  3032               	movlw	50
 10488  1930  0273               	subwf	delay_1ms2@i,w
 10489  1931                     u3145:	
 10490  1931  1C03               	skipc
 10491  1932  2934               	goto	u3141
 10492  1933  2935               	goto	u3140
 10493  1934                     u3141:	
 10494  1934  2922               	goto	l2441
 10495  1935                     u3140:	
 10496  1935                     l128:	
 10497  1935  0008               	return
 10498  1936                     __end_of_delay_1ms2:	
 10499                           
 10500                           	psect	text31
 10501  18C0                     __ptext31:	
 10502 ;; *************** function _intEnable *****************
 10503 ;; Defined at:
 10504 ;;		line 128 in file "Lab3_v2.c"
 10505 ;; Parameters:    Size  Location     Type
 10506 ;;		None
 10507 ;; Auto vars:     Size  Location     Type
 10508 ;;		None
 10509 ;; Return value:  Size  Location     Type
 10510 ;;                  1    wreg      void 
 10511 ;; Registers used:
 10512 ;;		None
 10513 ;; Tracked objects:
 10514 ;;		On entry : 0/0
 10515 ;;		On exit  : 0/0
 10516 ;;		Unchanged: 0/0
 10517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10518 ;;      Params:         0       0       0       0       0
 10519 ;;      Locals:         0       0       0       0       0
 10520 ;;      Temps:          0       0       0       0       0
 10521 ;;      Totals:         0       0       0       0       0
 10522 ;;Total ram usage:        0 bytes
 10523 ;; Hardware stack levels used:    1
 10524 ;; Hardware stack levels required when called:    1
 10525 ;; This function calls:
 10526 ;;		Nothing
 10527 ;; This function is called by:
 10528 ;;		_main
 10529 ;; This function uses a non-reentrant model
 10530 ;;
 10531                           
 10532                           
 10533                           ;psect for function _intEnable
 10534  18C0                     _intEnable:	
 10535  18C0                     l3367:	
 10536                           ;incstack = 0
 10537                           ; Regs used in _intEnable: []
 10538                           
 10539                           
 10540                           ;Lab3_v2.c: 129:     INTCONbits.GIE = 1;
 10541  18C0  178B               	bsf	11,7	;volatile
 10542                           
 10543                           ;Lab3_v2.c: 130:     INTCONbits.PEIE = 1;
 10544  18C1  170B               	bsf	11,6	;volatile
 10545                           
 10546                           ;Lab3_v2.c: 131:     PIE1bits.ADIE = 1;
 10547  18C2  1683               	bsf	3,5	;RP0=1, select bank1
 10548  18C3  1303               	bcf	3,6	;RP1=0, select bank1
 10549  18C4  170C               	bsf	12,6	;volatile
 10550  18C5                     l92:	
 10551  18C5  0008               	return
 10552  18C6                     __end_of_intEnable:	
 10553                           
 10554                           	psect	text32
 10555  1D98                     __ptext32:	
 10556 ;; *************** function _analogInSel *****************
 10557 ;; Defined at:
 10558 ;;		line 21 in file "lib_adc.c"
 10559 ;; Parameters:    Size  Location     Type
 10560 ;;  analogIn        1    wreg     unsigned char 
 10561 ;; Auto vars:     Size  Location     Type
 10562 ;;  analogIn        1    5[COMMON] unsigned char 
 10563 ;; Return value:  Size  Location     Type
 10564 ;;                  1    wreg      unsigned char 
 10565 ;; Registers used:
 10566 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10567 ;; Tracked objects:
 10568 ;;		On entry : 0/0
 10569 ;;		On exit  : 0/0
 10570 ;;		Unchanged: 0/0
 10571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10572 ;;      Params:         0       0       0       0       0
 10573 ;;      Locals:         1       0       0       0       0
 10574 ;;      Temps:          2       0       0       0       0
 10575 ;;      Totals:         3       0       0       0       0
 10576 ;;Total ram usage:        3 bytes
 10577 ;; Hardware stack levels used:    1
 10578 ;; Hardware stack levels required when called:    1
 10579 ;; This function calls:
 10580 ;;		Nothing
 10581 ;; This function is called by:
 10582 ;;		_main
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586                           
 10587                           ;psect for function _analogInSel
 10588  1D98                     _analogInSel:	
 10589                           
 10590                           ;incstack = 0
 10591                           ; Regs used in _analogInSel: [wreg-fsr0h+status,2+status,0]
 10592                           ;analogInSel@analogIn stored from wreg
 10593  1D98  00F5               	movwf	analogInSel@analogIn
 10594  1D99                     l3347:	
 10595                           
 10596                           ;lib_adc.c: 22:     switch(analogIn){
 10597  1D99  2DFC               	goto	l3351
 10598  1D9A                     l143:	
 10599                           ;lib_adc.c: 23:         case 0:
 10600                           
 10601                           
 10602                           ;lib_adc.c: 24:             ADCON0bits.CHS3 = 0;
 10603  1D9A  1283               	bcf	3,5	;RP0=0, select bank0
 10604  1D9B  1303               	bcf	3,6	;RP1=0, select bank0
 10605  1D9C  129F               	bcf	31,5	;volatile
 10606                           
 10607                           ;lib_adc.c: 25:             ADCON0bits.CHS2 = 0;
 10608  1D9D  121F               	bcf	31,4	;volatile
 10609                           
 10610                           ;lib_adc.c: 26:             ADCON0bits.CHS1 = 0;
 10611  1D9E  119F               	bcf	31,3	;volatile
 10612                           
 10613                           ;lib_adc.c: 27:             ADCON0bits.CHS0 = 0;
 10614  1D9F  111F               	bcf	31,2	;volatile
 10615                           
 10616                           ;lib_adc.c: 28:             break;
 10617  1DA0  2E30               	goto	l158
 10618  1DA1                     l145:	
 10619                           ;lib_adc.c: 29:         case 1:
 10620                           
 10621                           
 10622                           ;lib_adc.c: 30:             ADCON0bits.CHS3 = 0;
 10623  1DA1  1283               	bcf	3,5	;RP0=0, select bank0
 10624  1DA2  1303               	bcf	3,6	;RP1=0, select bank0
 10625  1DA3  129F               	bcf	31,5	;volatile
 10626                           
 10627                           ;lib_adc.c: 31:             ADCON0bits.CHS2 = 0;
 10628  1DA4  121F               	bcf	31,4	;volatile
 10629                           
 10630                           ;lib_adc.c: 32:             ADCON0bits.CHS1 = 0;
 10631  1DA5  119F               	bcf	31,3	;volatile
 10632                           
 10633                           ;lib_adc.c: 33:             ADCON0bits.CHS0 = 1;
 10634  1DA6  151F               	bsf	31,2	;volatile
 10635                           
 10636                           ;lib_adc.c: 34:             break;
 10637  1DA7  2E30               	goto	l158
 10638  1DA8                     l146:	
 10639                           ;lib_adc.c: 35:         case 2:
 10640                           
 10641                           
 10642                           ;lib_adc.c: 36:             ADCON0bits.CHS3 = 0;
 10643  1DA8  1283               	bcf	3,5	;RP0=0, select bank0
 10644  1DA9  1303               	bcf	3,6	;RP1=0, select bank0
 10645  1DAA  129F               	bcf	31,5	;volatile
 10646                           
 10647                           ;lib_adc.c: 37:             ADCON0bits.CHS2 = 0;
 10648  1DAB  121F               	bcf	31,4	;volatile
 10649                           
 10650                           ;lib_adc.c: 38:             ADCON0bits.CHS1 = 1;
 10651  1DAC  159F               	bsf	31,3	;volatile
 10652                           
 10653                           ;lib_adc.c: 39:             ADCON0bits.CHS0 = 0;
 10654  1DAD  111F               	bcf	31,2	;volatile
 10655                           
 10656                           ;lib_adc.c: 40:             break;
 10657  1DAE  2E30               	goto	l158
 10658  1DAF                     l147:	
 10659                           ;lib_adc.c: 41:         case 3:
 10660                           
 10661                           
 10662                           ;lib_adc.c: 42:             ADCON0bits.CHS3 = 0;
 10663  1DAF  1283               	bcf	3,5	;RP0=0, select bank0
 10664  1DB0  1303               	bcf	3,6	;RP1=0, select bank0
 10665  1DB1  129F               	bcf	31,5	;volatile
 10666                           
 10667                           ;lib_adc.c: 43:             ADCON0bits.CHS2 = 0;
 10668  1DB2  121F               	bcf	31,4	;volatile
 10669                           
 10670                           ;lib_adc.c: 44:             ADCON0bits.CHS1 = 1;
 10671  1DB3  159F               	bsf	31,3	;volatile
 10672                           
 10673                           ;lib_adc.c: 45:             ADCON0bits.CHS0 = 1;
 10674  1DB4  151F               	bsf	31,2	;volatile
 10675                           
 10676                           ;lib_adc.c: 46:             break;
 10677  1DB5  2E30               	goto	l158
 10678  1DB6                     l148:	
 10679                           ;lib_adc.c: 47:         case 4:
 10680                           
 10681                           
 10682                           ;lib_adc.c: 48:             ADCON0bits.CHS3 = 0;
 10683  1DB6  1283               	bcf	3,5	;RP0=0, select bank0
 10684  1DB7  1303               	bcf	3,6	;RP1=0, select bank0
 10685  1DB8  129F               	bcf	31,5	;volatile
 10686                           
 10687                           ;lib_adc.c: 49:             ADCON0bits.CHS2 = 1;
 10688  1DB9  161F               	bsf	31,4	;volatile
 10689                           
 10690                           ;lib_adc.c: 50:             ADCON0bits.CHS1 = 0;
 10691  1DBA  119F               	bcf	31,3	;volatile
 10692                           
 10693                           ;lib_adc.c: 51:             ADCON0bits.CHS0 = 0;
 10694  1DBB  111F               	bcf	31,2	;volatile
 10695                           
 10696                           ;lib_adc.c: 52:             break;
 10697  1DBC  2E30               	goto	l158
 10698  1DBD                     l149:	
 10699                           ;lib_adc.c: 53:         case 5:
 10700                           
 10701                           
 10702                           ;lib_adc.c: 54:             ADCON0bits.CHS3 = 0;
 10703  1DBD  1283               	bcf	3,5	;RP0=0, select bank0
 10704  1DBE  1303               	bcf	3,6	;RP1=0, select bank0
 10705  1DBF  129F               	bcf	31,5	;volatile
 10706                           
 10707                           ;lib_adc.c: 55:             ADCON0bits.CHS2 = 1;
 10708  1DC0  161F               	bsf	31,4	;volatile
 10709                           
 10710                           ;lib_adc.c: 56:             ADCON0bits.CHS1 = 0;
 10711  1DC1  119F               	bcf	31,3	;volatile
 10712                           
 10713                           ;lib_adc.c: 57:             ADCON0bits.CHS0 = 1;
 10714  1DC2  151F               	bsf	31,2	;volatile
 10715                           
 10716                           ;lib_adc.c: 58:             break;
 10717  1DC3  2E30               	goto	l158
 10718  1DC4                     l150:	
 10719                           ;lib_adc.c: 59:         case 6:
 10720                           
 10721                           
 10722                           ;lib_adc.c: 60:             ADCON0bits.CHS3 = 0;
 10723  1DC4  1283               	bcf	3,5	;RP0=0, select bank0
 10724  1DC5  1303               	bcf	3,6	;RP1=0, select bank0
 10725  1DC6  129F               	bcf	31,5	;volatile
 10726                           
 10727                           ;lib_adc.c: 61:             ADCON0bits.CHS2 = 1;
 10728  1DC7  161F               	bsf	31,4	;volatile
 10729                           
 10730                           ;lib_adc.c: 62:             ADCON0bits.CHS1 = 1;
 10731  1DC8  159F               	bsf	31,3	;volatile
 10732                           
 10733                           ;lib_adc.c: 63:             ADCON0bits.CHS0 = 0;
 10734  1DC9  111F               	bcf	31,2	;volatile
 10735                           
 10736                           ;lib_adc.c: 64:             break;
 10737  1DCA  2E30               	goto	l158
 10738  1DCB                     l151:	
 10739                           ;lib_adc.c: 65:         case 7:
 10740                           
 10741                           
 10742                           ;lib_adc.c: 66:             ADCON0bits.CHS3 = 0;
 10743  1DCB  1283               	bcf	3,5	;RP0=0, select bank0
 10744  1DCC  1303               	bcf	3,6	;RP1=0, select bank0
 10745  1DCD  129F               	bcf	31,5	;volatile
 10746                           
 10747                           ;lib_adc.c: 67:             ADCON0bits.CHS2 = 1;
 10748  1DCE  161F               	bsf	31,4	;volatile
 10749                           
 10750                           ;lib_adc.c: 68:             ADCON0bits.CHS1 = 1;
 10751  1DCF  159F               	bsf	31,3	;volatile
 10752                           
 10753                           ;lib_adc.c: 69:             ADCON0bits.CHS0 = 1;
 10754  1DD0  151F               	bsf	31,2	;volatile
 10755                           
 10756                           ;lib_adc.c: 70:             break;
 10757  1DD1  2E30               	goto	l158
 10758  1DD2                     l152:	
 10759                           ;lib_adc.c: 71:         case 8:
 10760                           
 10761                           
 10762                           ;lib_adc.c: 72:             ADCON0bits.CHS3 = 1;
 10763  1DD2  1283               	bcf	3,5	;RP0=0, select bank0
 10764  1DD3  1303               	bcf	3,6	;RP1=0, select bank0
 10765  1DD4  169F               	bsf	31,5	;volatile
 10766                           
 10767                           ;lib_adc.c: 73:             ADCON0bits.CHS2 = 0;
 10768  1DD5  121F               	bcf	31,4	;volatile
 10769                           
 10770                           ;lib_adc.c: 74:             ADCON0bits.CHS1 = 0;
 10771  1DD6  119F               	bcf	31,3	;volatile
 10772                           
 10773                           ;lib_adc.c: 75:             ADCON0bits.CHS0 = 0;
 10774  1DD7  111F               	bcf	31,2	;volatile
 10775                           
 10776                           ;lib_adc.c: 76:             break;
 10777  1DD8  2E30               	goto	l158
 10778  1DD9                     l153:	
 10779                           ;lib_adc.c: 77:         case 9:
 10780                           
 10781                           
 10782                           ;lib_adc.c: 78:             ADCON0bits.CHS3 = 1;
 10783  1DD9  1283               	bcf	3,5	;RP0=0, select bank0
 10784  1DDA  1303               	bcf	3,6	;RP1=0, select bank0
 10785  1DDB  169F               	bsf	31,5	;volatile
 10786                           
 10787                           ;lib_adc.c: 79:             ADCON0bits.CHS2 = 0;
 10788  1DDC  121F               	bcf	31,4	;volatile
 10789                           
 10790                           ;lib_adc.c: 80:             ADCON0bits.CHS1 = 0;
 10791  1DDD  119F               	bcf	31,3	;volatile
 10792                           
 10793                           ;lib_adc.c: 81:             ADCON0bits.CHS0 = 1;
 10794  1DDE  151F               	bsf	31,2	;volatile
 10795                           
 10796                           ;lib_adc.c: 82:             break;
 10797  1DDF  2E30               	goto	l158
 10798  1DE0                     l154:	
 10799                           ;lib_adc.c: 83:         case 10:
 10800                           
 10801                           
 10802                           ;lib_adc.c: 84:             ADCON0bits.CHS3 = 1;
 10803  1DE0  1283               	bcf	3,5	;RP0=0, select bank0
 10804  1DE1  1303               	bcf	3,6	;RP1=0, select bank0
 10805  1DE2  169F               	bsf	31,5	;volatile
 10806                           
 10807                           ;lib_adc.c: 85:             ADCON0bits.CHS2 = 0;
 10808  1DE3  121F               	bcf	31,4	;volatile
 10809                           
 10810                           ;lib_adc.c: 86:             ADCON0bits.CHS1 = 1;
 10811  1DE4  159F               	bsf	31,3	;volatile
 10812                           
 10813                           ;lib_adc.c: 87:             ADCON0bits.CHS0 = 0;
 10814  1DE5  111F               	bcf	31,2	;volatile
 10815                           
 10816                           ;lib_adc.c: 88:             break;
 10817  1DE6  2E30               	goto	l158
 10818  1DE7                     l155:	
 10819                           ;lib_adc.c: 89:         case 11:
 10820                           
 10821                           
 10822                           ;lib_adc.c: 90:             ADCON0bits.CHS3 = 1;
 10823  1DE7  1283               	bcf	3,5	;RP0=0, select bank0
 10824  1DE8  1303               	bcf	3,6	;RP1=0, select bank0
 10825  1DE9  169F               	bsf	31,5	;volatile
 10826                           
 10827                           ;lib_adc.c: 91:             ADCON0bits.CHS2 = 0;
 10828  1DEA  121F               	bcf	31,4	;volatile
 10829                           
 10830                           ;lib_adc.c: 92:             ADCON0bits.CHS1 = 1;
 10831  1DEB  159F               	bsf	31,3	;volatile
 10832                           
 10833                           ;lib_adc.c: 93:             ADCON0bits.CHS0 = 1;
 10834  1DEC  151F               	bsf	31,2	;volatile
 10835                           
 10836                           ;lib_adc.c: 94:             break;
 10837  1DED  2E30               	goto	l158
 10838  1DEE                     l156:	
 10839                           ;lib_adc.c: 95:         case 12:
 10840                           
 10841                           
 10842                           ;lib_adc.c: 96:             ADCON0bits.CHS3 = 1;
 10843  1DEE  1283               	bcf	3,5	;RP0=0, select bank0
 10844  1DEF  1303               	bcf	3,6	;RP1=0, select bank0
 10845  1DF0  169F               	bsf	31,5	;volatile
 10846                           
 10847                           ;lib_adc.c: 97:             ADCON0bits.CHS2 = 1;
 10848  1DF1  161F               	bsf	31,4	;volatile
 10849                           
 10850                           ;lib_adc.c: 98:             ADCON0bits.CHS1 = 0;
 10851  1DF2  119F               	bcf	31,3	;volatile
 10852                           
 10853                           ;lib_adc.c: 99:             ADCON0bits.CHS0 = 0;
 10854  1DF3  111F               	bcf	31,2	;volatile
 10855                           
 10856                           ;lib_adc.c: 100:             break;
 10857  1DF4  2E30               	goto	l158
 10858  1DF5                     l157:	
 10859                           ;lib_adc.c: 101:         case 13:
 10860                           
 10861                           
 10862                           ;lib_adc.c: 102:             ADCON0bits.CHS3 = 1;
 10863  1DF5  1283               	bcf	3,5	;RP0=0, select bank0
 10864  1DF6  1303               	bcf	3,6	;RP1=0, select bank0
 10865  1DF7  169F               	bsf	31,5	;volatile
 10866                           
 10867                           ;lib_adc.c: 103:             ADCON0bits.CHS2 = 1;
 10868  1DF8  161F               	bsf	31,4	;volatile
 10869                           
 10870                           ;lib_adc.c: 104:             ADCON0bits.CHS1 = 0;
 10871  1DF9  119F               	bcf	31,3	;volatile
 10872                           
 10873                           ;lib_adc.c: 105:             ADCON0bits.CHS0 = 1;
 10874  1DFA  151F               	bsf	31,2	;volatile
 10875                           
 10876                           ;lib_adc.c: 106:             break;
 10877  1DFB  2E30               	goto	l158
 10878  1DFC                     l3351:	
 10879  1DFC  0875               	movf	analogInSel@analogIn,w
 10880  1DFD  00F3               	movwf	??_analogInSel
 10881  1DFE  01F4               	clrf	??_analogInSel+1
 10882                           
 10883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10884                           ; Switch size 1, requested type "simple"
 10885                           ; Number of cases is 1, Range of values is 0 to 0
 10886                           ; switch strategies available:
 10887                           ; Name         Instructions Cycles
 10888                           ; simple_byte            4     3 (average)
 10889                           ; direct_byte           11     8 (fixed)
 10890                           ; jumptable            260     6 (fixed)
 10891                           ;	Chosen strategy is simple_byte
 10892  1DFF  0874               	movf	??_analogInSel+1,w
 10893  1E00  3A00               	xorlw	0	; case 0
 10894  1E01  1903               	skipnz
 10895  1E02  2E04               	goto	l3917
 10896  1E03  2E30               	goto	l158
 10897  1E04                     l3917:	
 10898                           
 10899                           ; Switch size 1, requested type "simple"
 10900                           ; Number of cases is 14, Range of values is 0 to 13
 10901                           ; switch strategies available:
 10902                           ; Name         Instructions Cycles
 10903                           ; simple_byte           43    22 (average)
 10904                           ; direct_byte           50     8 (fixed)
 10905                           ; jumptable            260     6 (fixed)
 10906                           ;	Chosen strategy is simple_byte
 10907  1E04  0873               	movf	??_analogInSel,w
 10908  1E05  3A00               	xorlw	0	; case 0
 10909  1E06  1903               	skipnz
 10910  1E07  2D9A               	goto	l143
 10911  1E08  3A01               	xorlw	1	; case 1
 10912  1E09  1903               	skipnz
 10913  1E0A  2DA1               	goto	l145
 10914  1E0B  3A03               	xorlw	3	; case 2
 10915  1E0C  1903               	skipnz
 10916  1E0D  2DA8               	goto	l146
 10917  1E0E  3A01               	xorlw	1	; case 3
 10918  1E0F  1903               	skipnz
 10919  1E10  2DAF               	goto	l147
 10920  1E11  3A07               	xorlw	7	; case 4
 10921  1E12  1903               	skipnz
 10922  1E13  2DB6               	goto	l148
 10923  1E14  3A01               	xorlw	1	; case 5
 10924  1E15  1903               	skipnz
 10925  1E16  2DBD               	goto	l149
 10926  1E17  3A03               	xorlw	3	; case 6
 10927  1E18  1903               	skipnz
 10928  1E19  2DC4               	goto	l150
 10929  1E1A  3A01               	xorlw	1	; case 7
 10930  1E1B  1903               	skipnz
 10931  1E1C  2DCB               	goto	l151
 10932  1E1D  3A0F               	xorlw	15	; case 8
 10933  1E1E  1903               	skipnz
 10934  1E1F  2DD2               	goto	l152
 10935  1E20  3A01               	xorlw	1	; case 9
 10936  1E21  1903               	skipnz
 10937  1E22  2DD9               	goto	l153
 10938  1E23  3A03               	xorlw	3	; case 10
 10939  1E24  1903               	skipnz
 10940  1E25  2DE0               	goto	l154
 10941  1E26  3A01               	xorlw	1	; case 11
 10942  1E27  1903               	skipnz
 10943  1E28  2DE7               	goto	l155
 10944  1E29  3A07               	xorlw	7	; case 12
 10945  1E2A  1903               	skipnz
 10946  1E2B  2DEE               	goto	l156
 10947  1E2C  3A01               	xorlw	1	; case 13
 10948  1E2D  1903               	skipnz
 10949  1E2E  2DF5               	goto	l157
 10950  1E2F  2E30               	goto	l158
 10951  1E30                     l158:	
 10952  1E30  0008               	return
 10953  1E31                     __end_of_analogInSel:	
 10954                           
 10955                           	psect	text33
 10956  10B4                     __ptext33:	
 10957 ;; *************** function _adcSetup *****************
 10958 ;; Defined at:
 10959 ;;		line 12 in file "lib_adc.c"
 10960 ;; Parameters:    Size  Location     Type
 10961 ;;		None
 10962 ;; Auto vars:     Size  Location     Type
 10963 ;;		None
 10964 ;; Return value:  Size  Location     Type
 10965 ;;                  1    wreg      void 
 10966 ;; Registers used:
 10967 ;;		None
 10968 ;; Tracked objects:
 10969 ;;		On entry : 0/0
 10970 ;;		On exit  : 0/0
 10971 ;;		Unchanged: 0/0
 10972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10973 ;;      Params:         0       0       0       0       0
 10974 ;;      Locals:         0       0       0       0       0
 10975 ;;      Temps:          0       0       0       0       0
 10976 ;;      Totals:         0       0       0       0       0
 10977 ;;Total ram usage:        0 bytes
 10978 ;; Hardware stack levels used:    1
 10979 ;; Hardware stack levels required when called:    1
 10980 ;; This function calls:
 10981 ;;		Nothing
 10982 ;; This function is called by:
 10983 ;;		_main
 10984 ;; This function uses a non-reentrant model
 10985 ;;
 10986                           
 10987                           
 10988                           ;psect for function _adcSetup
 10989  10B4                     _adcSetup:	
 10990  10B4                     l3345:	
 10991                           ;incstack = 0
 10992                           ; Regs used in _adcSetup: []
 10993                           
 10994                           
 10995                           ;lib_adc.c: 13:     ADCON0bits.ADON = 1;
 10996  10B4  1283               	bcf	3,5	;RP0=0, select bank0
 10997  10B5  1303               	bcf	3,6	;RP1=0, select bank0
 10998  10B6  141F               	bsf	31,0	;volatile
 10999                           
 11000                           ;lib_adc.c: 14:     ADCON1bits.ADFM = 0;
 11001  10B7  1683               	bsf	3,5	;RP0=1, select bank1
 11002  10B8  1303               	bcf	3,6	;RP1=0, select bank1
 11003  10B9  139F               	bcf	31,7	;volatile
 11004                           
 11005                           ;lib_adc.c: 15:     ADCON1bits.VCFG1 = 0;
 11006  10BA  129F               	bcf	31,5	;volatile
 11007                           
 11008                           ;lib_adc.c: 16:     ADCON1bits.VCFG0 = 0;
 11009  10BB  121F               	bcf	31,4	;volatile
 11010                           
 11011                           ;lib_adc.c: 17:     PIE1bits.ADIE = 1;
 11012  10BC  170C               	bsf	12,6	;volatile
 11013                           
 11014                           ;lib_adc.c: 18:     PIR1bits.ADIF = 0;
 11015  10BD  1283               	bcf	3,5	;RP0=0, select bank0
 11016  10BE  1303               	bcf	3,6	;RP1=0, select bank0
 11017  10BF  130C               	bcf	12,6	;volatile
 11018  10C0                     l139:	
 11019  10C0  0008               	return
 11020  10C1                     __end_of_adcSetup:	
 11021                           
 11022                           	psect	text34
 11023  1952                     __ptext34:	
 11024 ;; *************** function _adcFoscSel *****************
 11025 ;; Defined at:
 11026 ;;		line 111 in file "lib_adc.c"
 11027 ;; Parameters:    Size  Location     Type
 11028 ;;  fosc            1    wreg     unsigned char 
 11029 ;; Auto vars:     Size  Location     Type
 11030 ;;  fosc            1    5[COMMON] unsigned char 
 11031 ;; Return value:  Size  Location     Type
 11032 ;;                  1    wreg      unsigned char 
 11033 ;; Registers used:
 11034 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11035 ;; Tracked objects:
 11036 ;;		On entry : 0/0
 11037 ;;		On exit  : 0/0
 11038 ;;		Unchanged: 0/0
 11039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11040 ;;      Params:         0       0       0       0       0
 11041 ;;      Locals:         1       0       0       0       0
 11042 ;;      Temps:          2       0       0       0       0
 11043 ;;      Totals:         3       0       0       0       0
 11044 ;;Total ram usage:        3 bytes
 11045 ;; Hardware stack levels used:    1
 11046 ;; Hardware stack levels required when called:    1
 11047 ;; This function calls:
 11048 ;;		Nothing
 11049 ;; This function is called by:
 11050 ;;		_main
 11051 ;; This function uses a non-reentrant model
 11052 ;;
 11053                           
 11054                           
 11055                           ;psect for function _adcFoscSel
 11056  1952                     _adcFoscSel:	
 11057                           
 11058                           ;incstack = 0
 11059                           ; Regs used in _adcFoscSel: [wreg-fsr0h+status,2+status,0]
 11060                           ;adcFoscSel@fosc stored from wreg
 11061  1952  00F5               	movwf	adcFoscSel@fosc
 11062  1953                     l3357:	
 11063                           
 11064                           ;lib_adc.c: 112:     switch(fosc){
 11065  1953  2963               	goto	l3361
 11066  1954                     l162:	
 11067                           ;lib_adc.c: 113:         case 0:
 11068                           
 11069                           
 11070                           ;lib_adc.c: 114:             ADCON0bits.ADCS1 = 0;
 11071  1954  1283               	bcf	3,5	;RP0=0, select bank0
 11072  1955  1303               	bcf	3,6	;RP1=0, select bank0
 11073  1956  139F               	bcf	31,7	;volatile
 11074                           
 11075                           ;lib_adc.c: 115:             ADCON0bits.ADCS0 = 0;
 11076  1957  131F               	bcf	31,6	;volatile
 11077                           
 11078                           ;lib_adc.c: 116:             break;
 11079  1958  2976               	goto	l166
 11080  1959                     l164:	
 11081                           ;lib_adc.c: 117:         case 1:
 11082                           
 11083                           
 11084                           ;lib_adc.c: 118:             ADCON0bits.ADCS1 = 0;
 11085  1959  1283               	bcf	3,5	;RP0=0, select bank0
 11086  195A  1303               	bcf	3,6	;RP1=0, select bank0
 11087  195B  139F               	bcf	31,7	;volatile
 11088                           
 11089                           ;lib_adc.c: 119:             ADCON0bits.ADCS0 = 1;
 11090  195C  171F               	bsf	31,6	;volatile
 11091                           
 11092                           ;lib_adc.c: 120:             break;
 11093  195D  2976               	goto	l166
 11094  195E                     l165:	
 11095                           ;lib_adc.c: 121:         case 3:
 11096                           
 11097                           
 11098                           ;lib_adc.c: 122:             ADCON0bits.ADCS1 = 1;
 11099  195E  1283               	bcf	3,5	;RP0=0, select bank0
 11100  195F  1303               	bcf	3,6	;RP1=0, select bank0
 11101  1960  179F               	bsf	31,7	;volatile
 11102                           
 11103                           ;lib_adc.c: 123:             ADCON0bits.ADCS0 = 0;
 11104  1961  131F               	bcf	31,6	;volatile
 11105                           
 11106                           ;lib_adc.c: 124:             break;
 11107  1962  2976               	goto	l166
 11108  1963                     l3361:	
 11109  1963  0875               	movf	adcFoscSel@fosc,w
 11110  1964  00F3               	movwf	??_adcFoscSel
 11111  1965  01F4               	clrf	??_adcFoscSel+1
 11112                           
 11113                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11114                           ; Switch size 1, requested type "simple"
 11115                           ; Number of cases is 1, Range of values is 0 to 0
 11116                           ; switch strategies available:
 11117                           ; Name         Instructions Cycles
 11118                           ; simple_byte            4     3 (average)
 11119                           ; direct_byte           11     8 (fixed)
 11120                           ; jumptable            260     6 (fixed)
 11121                           ;	Chosen strategy is simple_byte
 11122  1966  0874               	movf	??_adcFoscSel+1,w
 11123  1967  3A00               	xorlw	0	; case 0
 11124  1968  1903               	skipnz
 11125  1969  296B               	goto	l3919
 11126  196A  2976               	goto	l166
 11127  196B                     l3919:	
 11128                           
 11129                           ; Switch size 1, requested type "simple"
 11130                           ; Number of cases is 3, Range of values is 0 to 3
 11131                           ; switch strategies available:
 11132                           ; Name         Instructions Cycles
 11133                           ; simple_byte           10     6 (average)
 11134                           ; direct_byte           20     8 (fixed)
 11135                           ; jumptable            260     6 (fixed)
 11136                           ;	Chosen strategy is simple_byte
 11137  196B  0873               	movf	??_adcFoscSel,w
 11138  196C  3A00               	xorlw	0	; case 0
 11139  196D  1903               	skipnz
 11140  196E  2954               	goto	l162
 11141  196F  3A01               	xorlw	1	; case 1
 11142  1970  1903               	skipnz
 11143  1971  2959               	goto	l164
 11144  1972  3A02               	xorlw	2	; case 3
 11145  1973  1903               	skipnz
 11146  1974  295E               	goto	l165
 11147  1975  2976               	goto	l166
 11148  1976                     l166:	
 11149  1976  0008               	return
 11150  1977                     __end_of_adcFoscSel:	
 11151                           
 11152                           	psect	text35
 11153  118E                     __ptext35:	
 11154 ;; *************** function ___fldiv *****************
 11155 ;; Defined at:
 11156 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
 11157 ;; Parameters:    Size  Location     Type
 11158 ;;  a               4   34[BANK0 ] unsigned char 
 11159 ;;  b               4   38[BANK0 ] unsigned char 
 11160 ;; Auto vars:     Size  Location     Type
 11161 ;;  grs             4   54[BANK0 ] unsigned long 
 11162 ;;  rem             4   47[BANK0 ] unsigned long 
 11163 ;;  new_exp         2   52[BANK0 ] int 
 11164 ;;  aexp            1   59[BANK0 ] unsigned char 
 11165 ;;  bexp            1   58[BANK0 ] unsigned char 
 11166 ;;  sign            1   51[BANK0 ] unsigned char 
 11167 ;; Return value:  Size  Location     Type
 11168 ;;                  4   34[BANK0 ] unsigned char 
 11169 ;; Registers used:
 11170 ;;		wreg, status,2, status,0, btemp+1
 11171 ;; Tracked objects:
 11172 ;;		On entry : 0/0
 11173 ;;		On exit  : 0/0
 11174 ;;		Unchanged: 0/0
 11175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11176 ;;      Params:         0       8       0       0       0
 11177 ;;      Locals:         0      13       0       0       0
 11178 ;;      Temps:          0       5       0       0       0
 11179 ;;      Totals:         0      26       0       0       0
 11180 ;;Total ram usage:       26 bytes
 11181 ;; Hardware stack levels used:    1
 11182 ;; Hardware stack levels required when called:    1
 11183 ;; This function calls:
 11184 ;;		Nothing
 11185 ;; This function is called by:
 11186 ;;		_main
 11187 ;; This function uses a non-reentrant model
 11188 ;;
 11189                           
 11190                           
 11191                           ;psect for function ___fldiv
 11192  118E                     ___fldiv:	
 11193  118E                     l3591:	
 11194                           ;incstack = 0
 11195                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 11196                           
 11197  118E  1283               	bcf	3,5	;RP0=0, select bank0
 11198  118F  1303               	bcf	3,6	;RP1=0, select bank0
 11199  1190  0849               	movf	___fldiv@b+3,w
 11200  1191  3980               	andlw	128
 11201  1192  00CA               	movwf	??___fldiv
 11202  1193  084A               	movf	??___fldiv,w
 11203  1194  00D3               	movwf	___fldiv@sign
 11204  1195                     l3593:	
 11205  1195  0849               	movf	___fldiv@b+3,w
 11206  1196  00CA               	movwf	??___fldiv
 11207  1197  074A               	addwf	??___fldiv,w
 11208  1198  00CB               	movwf	??___fldiv+1
 11209  1199  084B               	movf	??___fldiv+1,w
 11210  119A  00DA               	movwf	___fldiv@bexp
 11211  119B                     l3595:	
 11212  119B  1FC8               	btfss	___fldiv@b+2,7
 11213  119C  299E               	goto	u5731
 11214  119D  299F               	goto	u5730
 11215  119E                     u5731:	
 11216  119E  29A0               	goto	l3599
 11217  119F                     u5730:	
 11218  119F                     l3597:	
 11219  119F  145A               	bsf	___fldiv@bexp,0
 11220  11A0                     l3599:	
 11221  11A0  085A               	movf	___fldiv@bexp,w
 11222  11A1  1903               	btfsc	3,2
 11223  11A2  29A4               	goto	u5741
 11224  11A3  29A5               	goto	u5740
 11225  11A4                     u5741:	
 11226  11A4  29B5               	goto	l3609
 11227  11A5                     u5740:	
 11228  11A5                     l3601:	
 11229  11A5  0A5A               	incf	___fldiv@bexp,w
 11230  11A6  1D03               	btfss	3,2
 11231  11A7  29A9               	goto	u5751
 11232  11A8  29AA               	goto	u5750
 11233  11A9                     u5751:	
 11234  11A9  29B2               	goto	l3605
 11235  11AA                     u5750:	
 11236  11AA                     l3603:	
 11237  11AA  3000               	movlw	0
 11238  11AB  00C9               	movwf	___fldiv@b+3
 11239  11AC  3000               	movlw	0
 11240  11AD  00C8               	movwf	___fldiv@b+2
 11241  11AE  3000               	movlw	0
 11242  11AF  00C7               	movwf	___fldiv@b+1
 11243  11B0  3000               	movlw	0
 11244  11B1  00C6               	movwf	___fldiv@b
 11245  11B2                     l3605:	
 11246  11B2  17C8               	bsf	___fldiv@b+2,7
 11247  11B3                     l3607:	
 11248  11B3  01C9               	clrf	___fldiv@b+3
 11249  11B4  29BD               	goto	l3611
 11250  11B5                     l3609:	
 11251  11B5  3000               	movlw	0
 11252  11B6  00C9               	movwf	___fldiv@b+3
 11253  11B7  3000               	movlw	0
 11254  11B8  00C8               	movwf	___fldiv@b+2
 11255  11B9  3000               	movlw	0
 11256  11BA  00C7               	movwf	___fldiv@b+1
 11257  11BB  3000               	movlw	0
 11258  11BC  00C6               	movwf	___fldiv@b
 11259  11BD                     l3611:	
 11260  11BD  0845               	movf	___fldiv@a+3,w
 11261  11BE  3980               	andlw	128
 11262  11BF  00CA               	movwf	??___fldiv
 11263  11C0  084A               	movf	??___fldiv,w
 11264  11C1  06D3               	xorwf	___fldiv@sign,f
 11265  11C2                     l3613:	
 11266  11C2  0845               	movf	___fldiv@a+3,w
 11267  11C3  00CA               	movwf	??___fldiv
 11268  11C4  074A               	addwf	??___fldiv,w
 11269  11C5  00CB               	movwf	??___fldiv+1
 11270  11C6  084B               	movf	??___fldiv+1,w
 11271  11C7  00DB               	movwf	___fldiv@aexp
 11272  11C8                     l3615:	
 11273  11C8  1FC4               	btfss	___fldiv@a+2,7
 11274  11C9  29CB               	goto	u5761
 11275  11CA  29CC               	goto	u5760
 11276  11CB                     u5761:	
 11277  11CB  29CD               	goto	l3619
 11278  11CC                     u5760:	
 11279  11CC                     l3617:	
 11280  11CC  145B               	bsf	___fldiv@aexp,0
 11281  11CD                     l3619:	
 11282  11CD  085B               	movf	___fldiv@aexp,w
 11283  11CE  1903               	btfsc	3,2
 11284  11CF  29D1               	goto	u5771
 11285  11D0  29D2               	goto	u5770
 11286  11D1                     u5771:	
 11287  11D1  29E2               	goto	l3629
 11288  11D2                     u5770:	
 11289  11D2                     l3621:	
 11290  11D2  0A5B               	incf	___fldiv@aexp,w
 11291  11D3  1D03               	btfss	3,2
 11292  11D4  29D6               	goto	u5781
 11293  11D5  29D7               	goto	u5780
 11294  11D6                     u5781:	
 11295  11D6  29DF               	goto	l3625
 11296  11D7                     u5780:	
 11297  11D7                     l3623:	
 11298  11D7  3000               	movlw	0
 11299  11D8  00C5               	movwf	___fldiv@a+3
 11300  11D9  3000               	movlw	0
 11301  11DA  00C4               	movwf	___fldiv@a+2
 11302  11DB  3000               	movlw	0
 11303  11DC  00C3               	movwf	___fldiv@a+1
 11304  11DD  3000               	movlw	0
 11305  11DE  00C2               	movwf	___fldiv@a
 11306  11DF                     l3625:	
 11307  11DF  17C4               	bsf	___fldiv@a+2,7
 11308  11E0                     l3627:	
 11309  11E0  01C5               	clrf	___fldiv@a+3
 11310  11E1  29EA               	goto	l743
 11311  11E2                     l3629:	
 11312  11E2  3000               	movlw	0
 11313  11E3  00C5               	movwf	___fldiv@a+3
 11314  11E4  3000               	movlw	0
 11315  11E5  00C4               	movwf	___fldiv@a+2
 11316  11E6  3000               	movlw	0
 11317  11E7  00C3               	movwf	___fldiv@a+1
 11318  11E8  3000               	movlw	0
 11319  11E9  00C2               	movwf	___fldiv@a
 11320  11EA                     l743:	
 11321  11EA  0845               	movf	___fldiv@a+3,w
 11322  11EB  0444               	iorwf	___fldiv@a+2,w
 11323  11EC  0443               	iorwf	___fldiv@a+1,w
 11324  11ED  0442               	iorwf	___fldiv@a,w
 11325  11EE  1D03               	skipz
 11326  11EF  29F1               	goto	u5791
 11327  11F0  29F2               	goto	u5790
 11328  11F1                     u5791:	
 11329  11F1  2A0B               	goto	l3639
 11330  11F2                     u5790:	
 11331  11F2                     l3631:	
 11332  11F2  3000               	movlw	0
 11333  11F3  00C9               	movwf	___fldiv@b+3
 11334  11F4  3000               	movlw	0
 11335  11F5  00C8               	movwf	___fldiv@b+2
 11336  11F6  3000               	movlw	0
 11337  11F7  00C7               	movwf	___fldiv@b+1
 11338  11F8  3000               	movlw	0
 11339  11F9  00C6               	movwf	___fldiv@b
 11340  11FA  3080               	movlw	128
 11341  11FB  04C8               	iorwf	___fldiv@b+2,f
 11342  11FC  307F               	movlw	127
 11343  11FD  04C9               	iorwf	___fldiv@b+3,f
 11344  11FE                     l3633:	
 11345  11FE  0853               	movf	___fldiv@sign,w
 11346  11FF  00CA               	movwf	??___fldiv
 11347  1200  084A               	movf	??___fldiv,w
 11348  1201  04C9               	iorwf	___fldiv@b+3,f
 11349  1202                     l3635:	
 11350  1202  0849               	movf	___fldiv@b+3,w
 11351  1203  00C5               	movwf	?___fldiv+3
 11352  1204  0848               	movf	___fldiv@b+2,w
 11353  1205  00C4               	movwf	?___fldiv+2
 11354  1206  0847               	movf	___fldiv@b+1,w
 11355  1207  00C3               	movwf	?___fldiv+1
 11356  1208  0846               	movf	___fldiv@b,w
 11357  1209  00C2               	movwf	?___fldiv
 11358  120A  2B6A               	goto	l745
 11359  120B                     l3639:	
 11360  120B  085A               	movf	___fldiv@bexp,w
 11361  120C  1D03               	btfss	3,2
 11362  120D  2A0F               	goto	u5801
 11363  120E  2A10               	goto	u5800
 11364  120F                     u5801:	
 11365  120F  2A19               	goto	l3645
 11366  1210                     u5800:	
 11367  1210                     l3641:	
 11368  1210  3000               	movlw	0
 11369  1211  00C5               	movwf	?___fldiv+3
 11370  1212  3000               	movlw	0
 11371  1213  00C4               	movwf	?___fldiv+2
 11372  1214  3000               	movlw	0
 11373  1215  00C3               	movwf	?___fldiv+1
 11374  1216  3000               	movlw	0
 11375  1217  00C2               	movwf	?___fldiv
 11376  1218  2B6A               	goto	l745
 11377  1219                     l3645:	
 11378  1219  085A               	movf	___fldiv@bexp,w
 11379  121A  00CA               	movwf	??___fldiv
 11380  121B  01CB               	clrf	??___fldiv+1
 11381  121C  084B               	movf	??___fldiv+1,w
 11382  121D  00CD               	movwf	??___fldiv+3
 11383  121E  085B               	movf	___fldiv@aexp,w
 11384  121F  024A               	subwf	??___fldiv,w
 11385  1220  00CC               	movwf	??___fldiv+2
 11386  1221  1C03               	skipc
 11387  1222  03CD               	decf	??___fldiv+3,f
 11388  1223  084C               	movf	??___fldiv+2,w
 11389  1224  3E7F               	addlw	127
 11390  1225  00D4               	movwf	___fldiv@new_exp
 11391  1226  084D               	movf	??___fldiv+3,w
 11392  1227  1803               	skipnc
 11393  1228  3E01               	addlw	1
 11394  1229  3E00               	addlw	0
 11395  122A  00D5               	movwf	___fldiv@new_exp+1
 11396  122B                     l3647:	
 11397  122B  0849               	movf	___fldiv@b+3,w
 11398  122C  00D2               	movwf	___fldiv@rem+3
 11399  122D  0848               	movf	___fldiv@b+2,w
 11400  122E  00D1               	movwf	___fldiv@rem+2
 11401  122F  0847               	movf	___fldiv@b+1,w
 11402  1230  00D0               	movwf	___fldiv@rem+1
 11403  1231  0846               	movf	___fldiv@b,w
 11404  1232  00CF               	movwf	___fldiv@rem
 11405  1233                     l3649:	
 11406  1233  3000               	movlw	0
 11407  1234  00C9               	movwf	___fldiv@b+3
 11408  1235  3000               	movlw	0
 11409  1236  00C8               	movwf	___fldiv@b+2
 11410  1237  3000               	movlw	0
 11411  1238  00C7               	movwf	___fldiv@b+1
 11412  1239  3000               	movlw	0
 11413  123A  00C6               	movwf	___fldiv@b
 11414  123B                     l3651:	
 11415  123B  3000               	movlw	0
 11416  123C  00D9               	movwf	___fldiv@grs+3
 11417  123D  3000               	movlw	0
 11418  123E  00D8               	movwf	___fldiv@grs+2
 11419  123F  3000               	movlw	0
 11420  1240  00D7               	movwf	___fldiv@grs+1
 11421  1241  3000               	movlw	0
 11422  1242  00D6               	movwf	___fldiv@grs
 11423  1243                     l3653:	
 11424  1243  01DB               	clrf	___fldiv@aexp
 11425  1244  2A8F               	goto	l3673
 11426  1245                     l3655:	
 11427  1245  085B               	movf	___fldiv@aexp,w
 11428  1246  1903               	btfsc	3,2
 11429  1247  2A49               	goto	u5811
 11430  1248  2A4A               	goto	u5810
 11431  1249                     u5811:	
 11432  1249  2A6A               	goto	l3665
 11433  124A                     u5810:	
 11434  124A                     l3657:	
 11435  124A  3001               	movlw	1
 11436  124B  00CA               	movwf	??___fldiv
 11437  124C                     u5825:	
 11438  124C  1003               	clrc
 11439  124D  0DCF               	rlf	___fldiv@rem,f
 11440  124E  0DD0               	rlf	___fldiv@rem+1,f
 11441  124F  0DD1               	rlf	___fldiv@rem+2,f
 11442  1250  0DD2               	rlf	___fldiv@rem+3,f
 11443  1251  0BCA               	decfsz	??___fldiv,f
 11444  1252  2A4C               	goto	u5825
 11445  1253  3001               	movlw	1
 11446  1254  00CA               	movwf	??___fldiv
 11447  1255                     u5835:	
 11448  1255  1003               	clrc
 11449  1256  0DC6               	rlf	___fldiv@b,f
 11450  1257  0DC7               	rlf	___fldiv@b+1,f
 11451  1258  0DC8               	rlf	___fldiv@b+2,f
 11452  1259  0DC9               	rlf	___fldiv@b+3,f
 11453  125A  0BCA               	decfsz	??___fldiv,f
 11454  125B  2A55               	goto	u5835
 11455  125C                     l3659:	
 11456  125C  1FD9               	btfss	___fldiv@grs+3,7
 11457  125D  2A5F               	goto	u5841
 11458  125E  2A60               	goto	u5840
 11459  125F                     u5841:	
 11460  125F  2A61               	goto	l3663
 11461  1260                     u5840:	
 11462  1260                     l3661:	
 11463  1260  1446               	bsf	___fldiv@b,0
 11464  1261                     l3663:	
 11465  1261  3001               	movlw	1
 11466  1262  00CA               	movwf	??___fldiv
 11467  1263                     u5855:	
 11468  1263  1003               	clrc
 11469  1264  0DD6               	rlf	___fldiv@grs,f
 11470  1265  0DD7               	rlf	___fldiv@grs+1,f
 11471  1266  0DD8               	rlf	___fldiv@grs+2,f
 11472  1267  0DD9               	rlf	___fldiv@grs+3,f
 11473  1268  0BCA               	decfsz	??___fldiv,f
 11474  1269  2A63               	goto	u5855
 11475  126A                     l3665:	
 11476  126A  0845               	movf	___fldiv@a+3,w
 11477  126B  0252               	subwf	___fldiv@rem+3,w
 11478  126C  1D03               	skipz
 11479  126D  2A78               	goto	u5865
 11480  126E  0844               	movf	___fldiv@a+2,w
 11481  126F  0251               	subwf	___fldiv@rem+2,w
 11482  1270  1D03               	skipz
 11483  1271  2A78               	goto	u5865
 11484  1272  0843               	movf	___fldiv@a+1,w
 11485  1273  0250               	subwf	___fldiv@rem+1,w
 11486  1274  1D03               	skipz
 11487  1275  2A78               	goto	u5865
 11488  1276  0842               	movf	___fldiv@a,w
 11489  1277  024F               	subwf	___fldiv@rem,w
 11490  1278                     u5865:	
 11491  1278  1C03               	skipc
 11492  1279  2A7B               	goto	u5861
 11493  127A  2A7C               	goto	u5860
 11494  127B                     u5861:	
 11495  127B  2A8B               	goto	l3671
 11496  127C                     u5860:	
 11497  127C                     l3667:	
 11498  127C  1759               	bsf	___fldiv@grs+3,6
 11499  127D                     l3669:	
 11500  127D  0842               	movf	___fldiv@a,w
 11501  127E  02CF               	subwf	___fldiv@rem,f
 11502  127F  0843               	movf	___fldiv@a+1,w
 11503  1280  1C03               	skipc
 11504  1281  0F43               	incfsz	___fldiv@a+1,w
 11505  1282  02D0               	subwf	___fldiv@rem+1,f
 11506  1283  0844               	movf	___fldiv@a+2,w
 11507  1284  1C03               	skipc
 11508  1285  0F44               	incfsz	___fldiv@a+2,w
 11509  1286  02D1               	subwf	___fldiv@rem+2,f
 11510  1287  0845               	movf	___fldiv@a+3,w
 11511  1288  1C03               	skipc
 11512  1289  0F45               	incfsz	___fldiv@a+3,w
 11513  128A  02D2               	subwf	___fldiv@rem+3,f
 11514  128B                     l3671:	
 11515  128B  3001               	movlw	1
 11516  128C  00CA               	movwf	??___fldiv
 11517  128D  084A               	movf	??___fldiv,w
 11518  128E  07DB               	addwf	___fldiv@aexp,f
 11519  128F                     l3673:	
 11520  128F  301A               	movlw	26
 11521  1290  025B               	subwf	___fldiv@aexp,w
 11522  1291  1C03               	skipc
 11523  1292  2A94               	goto	u5871
 11524  1293  2A95               	goto	u5870
 11525  1294                     u5871:	
 11526  1294  2A45               	goto	l3655
 11527  1295                     u5870:	
 11528  1295                     l3675:	
 11529  1295  0852               	movf	___fldiv@rem+3,w
 11530  1296  0451               	iorwf	___fldiv@rem+2,w
 11531  1297  0450               	iorwf	___fldiv@rem+1,w
 11532  1298  044F               	iorwf	___fldiv@rem,w
 11533  1299  1903               	skipnz
 11534  129A  2A9C               	goto	u5881
 11535  129B  2A9D               	goto	u5880
 11536  129C                     u5881:	
 11537  129C  2ABC               	goto	l3689
 11538  129D                     u5880:	
 11539  129D                     l3677:	
 11540  129D  1456               	bsf	___fldiv@grs,0
 11541  129E  2ABC               	goto	l3689
 11542  129F                     l3679:	
 11543  129F  3001               	movlw	1
 11544  12A0  00CA               	movwf	??___fldiv
 11545  12A1                     u5895:	
 11546  12A1  1003               	clrc
 11547  12A2  0DC6               	rlf	___fldiv@b,f
 11548  12A3  0DC7               	rlf	___fldiv@b+1,f
 11549  12A4  0DC8               	rlf	___fldiv@b+2,f
 11550  12A5  0DC9               	rlf	___fldiv@b+3,f
 11551  12A6  0BCA               	decfsz	??___fldiv,f
 11552  12A7  2AA1               	goto	u5895
 11553  12A8                     l3681:	
 11554  12A8  1FD9               	btfss	___fldiv@grs+3,7
 11555  12A9  2AAB               	goto	u5901
 11556  12AA  2AAC               	goto	u5900
 11557  12AB                     u5901:	
 11558  12AB  2AAD               	goto	l3685
 11559  12AC                     u5900:	
 11560  12AC                     l3683:	
 11561  12AC  1446               	bsf	___fldiv@b,0
 11562  12AD                     l3685:	
 11563  12AD  3001               	movlw	1
 11564  12AE  00CA               	movwf	??___fldiv
 11565  12AF                     u5915:	
 11566  12AF  1003               	clrc
 11567  12B0  0DD6               	rlf	___fldiv@grs,f
 11568  12B1  0DD7               	rlf	___fldiv@grs+1,f
 11569  12B2  0DD8               	rlf	___fldiv@grs+2,f
 11570  12B3  0DD9               	rlf	___fldiv@grs+3,f
 11571  12B4  0BCA               	decfsz	??___fldiv,f
 11572  12B5  2AAF               	goto	u5915
 11573  12B6                     l3687:	
 11574  12B6  30FF               	movlw	255
 11575  12B7  07D4               	addwf	___fldiv@new_exp,f
 11576  12B8  1803               	skipnc
 11577  12B9  0AD5               	incf	___fldiv@new_exp+1,f
 11578  12BA  30FF               	movlw	255
 11579  12BB  07D5               	addwf	___fldiv@new_exp+1,f
 11580  12BC                     l3689:	
 11581  12BC  1FC8               	btfss	___fldiv@b+2,7
 11582  12BD  2ABF               	goto	u5921
 11583  12BE  2AC0               	goto	u5920
 11584  12BF                     u5921:	
 11585  12BF  2A9F               	goto	l3679
 11586  12C0                     u5920:	
 11587  12C0                     l3691:	
 11588  12C0  01DB               	clrf	___fldiv@aexp
 11589  12C1                     l3693:	
 11590  12C1  1FD9               	btfss	___fldiv@grs+3,7
 11591  12C2  2AC4               	goto	u5931
 11592  12C3  2AC5               	goto	u5930
 11593  12C4                     u5931:	
 11594  12C4  2AE1               	goto	l3701
 11595  12C5                     u5930:	
 11596  12C5                     l3695:	
 11597  12C5  30FF               	movlw	255
 11598  12C6  0556               	andwf	___fldiv@grs,w
 11599  12C7  00CA               	movwf	??___fldiv
 11600  12C8  30FF               	movlw	255
 11601  12C9  0557               	andwf	___fldiv@grs+1,w
 11602  12CA  00CB               	movwf	??___fldiv+1
 11603  12CB  30FF               	movlw	255
 11604  12CC  0558               	andwf	___fldiv@grs+2,w
 11605  12CD  00CC               	movwf	??___fldiv+2
 11606  12CE  307F               	movlw	127
 11607  12CF  0559               	andwf	___fldiv@grs+3,w
 11608  12D0  00CD               	movwf	??___fldiv+3
 11609  12D1  084D               	movf	??___fldiv+3,w
 11610  12D2  044C               	iorwf	??___fldiv+2,w
 11611  12D3  044B               	iorwf	??___fldiv+1,w
 11612  12D4  044A               	iorwf	??___fldiv,w
 11613  12D5  1903               	skipnz
 11614  12D6  2AD8               	goto	u5941
 11615  12D7  2AD9               	goto	u5940
 11616  12D8                     u5941:	
 11617  12D8  2ADC               	goto	l759
 11618  12D9                     u5940:	
 11619  12D9                     l3697:	
 11620  12D9  01DB               	clrf	___fldiv@aexp
 11621  12DA  0ADB               	incf	___fldiv@aexp,f
 11622  12DB  2AE1               	goto	l3701
 11623  12DC                     l759:	
 11624  12DC  1C46               	btfss	___fldiv@b,0
 11625  12DD  2ADF               	goto	u5951
 11626  12DE  2AE0               	goto	u5950
 11627  12DF                     u5951:	
 11628  12DF  2AE1               	goto	l3701
 11629  12E0                     u5950:	
 11630  12E0  2AD9               	goto	l3697
 11631  12E1                     l3701:	
 11632  12E1  085B               	movf	___fldiv@aexp,w
 11633  12E2  1903               	btfsc	3,2
 11634  12E3  2AE5               	goto	u5961
 11635  12E4  2AE6               	goto	u5960
 11636  12E5                     u5961:	
 11637  12E5  2B17               	goto	l3711
 11638  12E6                     u5960:	
 11639  12E6                     l3703:	
 11640  12E6  3001               	movlw	1
 11641  12E7  07C6               	addwf	___fldiv@b,f
 11642  12E8  3000               	movlw	0
 11643  12E9  1803               	skipnc
 11644  12EA  3001               	movlw	1
 11645  12EB  07C7               	addwf	___fldiv@b+1,f
 11646  12EC  3000               	movlw	0
 11647  12ED  1803               	skipnc
 11648  12EE  3001               	movlw	1
 11649  12EF  07C8               	addwf	___fldiv@b+2,f
 11650  12F0  3000               	movlw	0
 11651  12F1  1803               	skipnc
 11652  12F2  3001               	movlw	1
 11653  12F3  07C9               	addwf	___fldiv@b+3,f
 11654  12F4                     l3705:	
 11655  12F4  1C49               	btfss	___fldiv@b+3,0
 11656  12F5  2AF7               	goto	u5971
 11657  12F6  2AF8               	goto	u5970
 11658  12F7                     u5971:	
 11659  12F7  2B17               	goto	l3711
 11660  12F8                     u5970:	
 11661  12F8                     l3707:	
 11662  12F8  0846               	movf	___fldiv@b,w
 11663  12F9  00CA               	movwf	??___fldiv
 11664  12FA  0847               	movf	___fldiv@b+1,w
 11665  12FB  00CB               	movwf	??___fldiv+1
 11666  12FC  0848               	movf	___fldiv@b+2,w
 11667  12FD  00CC               	movwf	??___fldiv+2
 11668  12FE  0849               	movf	___fldiv@b+3,w
 11669  12FF  00CD               	movwf	??___fldiv+3
 11670  1300  3001               	movlw	1
 11671  1301  00CE               	movwf	??___fldiv+4
 11672  1302                     u5985:	
 11673  1302  0D4D               	rlf	??___fldiv+3,w
 11674  1303  0CCD               	rrf	??___fldiv+3,f
 11675  1304  0CCC               	rrf	??___fldiv+2,f
 11676  1305  0CCB               	rrf	??___fldiv+1,f
 11677  1306  0CCA               	rrf	??___fldiv,f
 11678  1307                     u5980:	
 11679  1307  0BCE               	decfsz	??___fldiv+4,f
 11680  1308  2B02               	goto	u5985
 11681  1309  084D               	movf	??___fldiv+3,w
 11682  130A  00C9               	movwf	___fldiv@b+3
 11683  130B  084C               	movf	??___fldiv+2,w
 11684  130C  00C8               	movwf	___fldiv@b+2
 11685  130D  084B               	movf	??___fldiv+1,w
 11686  130E  00C7               	movwf	___fldiv@b+1
 11687  130F  084A               	movf	??___fldiv,w
 11688  1310  00C6               	movwf	___fldiv@b
 11689  1311                     l3709:	
 11690  1311  3001               	movlw	1
 11691  1312  07D4               	addwf	___fldiv@new_exp,f
 11692  1313  1803               	skipnc
 11693  1314  0AD5               	incf	___fldiv@new_exp+1,f
 11694  1315  3000               	movlw	0
 11695  1316  07D5               	addwf	___fldiv@new_exp+1,f
 11696  1317                     l3711:	
 11697  1317  0855               	movf	___fldiv@new_exp+1,w
 11698  1318  3A80               	xorlw	128
 11699  1319  00FF               	movwf	btemp+1
 11700  131A  3080               	movlw	128
 11701  131B  027F               	subwf	btemp+1,w
 11702  131C  1D03               	skipz
 11703  131D  2B20               	goto	u5995
 11704  131E  30FF               	movlw	255
 11705  131F  0254               	subwf	___fldiv@new_exp,w
 11706  1320                     u5995:	
 11707  1320  1C03               	skipc
 11708  1321  2B23               	goto	u5991
 11709  1322  2B24               	goto	u5990
 11710  1323                     u5991:	
 11711  1323  2B32               	goto	l3715
 11712  1324                     u5990:	
 11713  1324                     l3713:	
 11714  1324  30FF               	movlw	255
 11715  1325  1283               	bcf	3,5	;RP0=0, select bank0
 11716  1326  1303               	bcf	3,6	;RP1=0, select bank0
 11717  1327  00D4               	movwf	___fldiv@new_exp
 11718  1328  3000               	movlw	0
 11719  1329  00D5               	movwf	___fldiv@new_exp+1
 11720  132A  3000               	movlw	0
 11721  132B  00C9               	movwf	___fldiv@b+3
 11722  132C  3000               	movlw	0
 11723  132D  00C8               	movwf	___fldiv@b+2
 11724  132E  3000               	movlw	0
 11725  132F  00C7               	movwf	___fldiv@b+1
 11726  1330  3000               	movlw	0
 11727  1331  00C6               	movwf	___fldiv@b
 11728  1332                     l3715:	
 11729  1332  1283               	bcf	3,5	;RP0=0, select bank0
 11730  1333  1303               	bcf	3,6	;RP1=0, select bank0
 11731  1334  0855               	movf	___fldiv@new_exp+1,w
 11732  1335  3A80               	xorlw	128
 11733  1336  00FF               	movwf	btemp+1
 11734  1337  3080               	movlw	128
 11735  1338  027F               	subwf	btemp+1,w
 11736  1339  1D03               	skipz
 11737  133A  2B3D               	goto	u6005
 11738  133B  3001               	movlw	1
 11739  133C  0254               	subwf	___fldiv@new_exp,w
 11740  133D                     u6005:	
 11741  133D  1803               	skipnc
 11742  133E  2B40               	goto	u6001
 11743  133F  2B41               	goto	u6000
 11744  1340                     u6001:	
 11745  1340  2B4E               	goto	l765
 11746  1341                     u6000:	
 11747  1341                     l3717:	
 11748  1341  1283               	bcf	3,5	;RP0=0, select bank0
 11749  1342  1303               	bcf	3,6	;RP1=0, select bank0
 11750  1343  01D4               	clrf	___fldiv@new_exp
 11751  1344  01D5               	clrf	___fldiv@new_exp+1
 11752  1345                     l3719:	
 11753  1345  3000               	movlw	0
 11754  1346  00C9               	movwf	___fldiv@b+3
 11755  1347  3000               	movlw	0
 11756  1348  00C8               	movwf	___fldiv@b+2
 11757  1349  3000               	movlw	0
 11758  134A  00C7               	movwf	___fldiv@b+1
 11759  134B  3000               	movlw	0
 11760  134C  00C6               	movwf	___fldiv@b
 11761  134D                     l3721:	
 11762  134D  01D3               	clrf	___fldiv@sign
 11763  134E                     l765:	
 11764  134E  1283               	bcf	3,5	;RP0=0, select bank0
 11765  134F  1303               	bcf	3,6	;RP1=0, select bank0
 11766  1350  0854               	movf	___fldiv@new_exp,w
 11767  1351  00CA               	movwf	??___fldiv
 11768  1352  084A               	movf	??___fldiv,w
 11769  1353  00DA               	movwf	___fldiv@bexp
 11770  1354                     l3723:	
 11771  1354  1C5A               	btfss	___fldiv@bexp,0
 11772  1355  2B57               	goto	u6011
 11773  1356  2B58               	goto	u6010
 11774  1357                     u6011:	
 11775  1357  2B5A               	goto	l3727
 11776  1358                     u6010:	
 11777  1358                     l3725:	
 11778  1358  17C8               	bsf	___fldiv@b+2,7
 11779  1359  2B5E               	goto	l767
 11780  135A                     l3727:	
 11781  135A  307F               	movlw	127
 11782  135B  00CA               	movwf	??___fldiv
 11783  135C  084A               	movf	??___fldiv,w
 11784  135D  05C8               	andwf	___fldiv@b+2,f
 11785  135E                     l767:	
 11786  135E  085A               	movf	___fldiv@bexp,w
 11787  135F  00CA               	movwf	??___fldiv
 11788  1360  1003               	clrc
 11789  1361  0C4A               	rrf	??___fldiv,w
 11790  1362  00CB               	movwf	??___fldiv+1
 11791  1363  084B               	movf	??___fldiv+1,w
 11792  1364  00C9               	movwf	___fldiv@b+3
 11793  1365  0853               	movf	___fldiv@sign,w
 11794  1366  00CA               	movwf	??___fldiv
 11795  1367  084A               	movf	??___fldiv,w
 11796  1368  04C9               	iorwf	___fldiv@b+3,f
 11797  1369  2A02               	goto	l3635
 11798  136A                     l745:	
 11799  136A  0008               	return
 11800  136B                     __end_of___fldiv:	
 11801                           
 11802                           	psect	text36
 11803  1CB8                     __ptext36:	
 11804 ;; *************** function _isr *****************
 11805 ;; Defined at:
 11806 ;;		line 50 in file "Lab3_v2.c"
 11807 ;; Parameters:    Size  Location     Type
 11808 ;;		None
 11809 ;; Auto vars:     Size  Location     Type
 11810 ;;		None
 11811 ;; Return value:  Size  Location     Type
 11812 ;;                  1    wreg      void 
 11813 ;; Registers used:
 11814 ;;		wreg
 11815 ;; Tracked objects:
 11816 ;;		On entry : 0/0
 11817 ;;		On exit  : 0/0
 11818 ;;		Unchanged: 0/0
 11819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11820 ;;      Params:         0       0       0       0       0
 11821 ;;      Locals:         0       0       0       0       0
 11822 ;;      Temps:          3       0       0       0       0
 11823 ;;      Totals:         3       0       0       0       0
 11824 ;;Total ram usage:        3 bytes
 11825 ;; Hardware stack levels used:    1
 11826 ;; This function calls:
 11827 ;;		Nothing
 11828 ;; This function is called by:
 11829 ;;		Interrupt level 1
 11830 ;; This function uses a non-reentrant model
 11831 ;;
 11832                           
 11833                           
 11834                           ;psect for function _isr
 11835  1CB8                     _isr:	
 11836  1CB8                     i1l3733:	
 11837                           
 11838                           ;Lab3_v2.c: 51:     (INTCONbits.GIE = 0);
 11839  1CB8  138B               	bcf	11,7	;volatile
 11840                           
 11841                           ;Lab3_v2.c: 52:     if (PIR1bits.ADIF == 1 && ADCON0bits.CHS3 == 1 && ADCON0bits.CHS2 ==
      +                           0 && ADCON0bits.CHS1 == 0 && ADCON0bits.CHS0 == 0){
 11842  1CB9  1283               	bcf	3,5	;RP0=0, select bank0
 11843  1CBA  1303               	bcf	3,6	;RP1=0, select bank0
 11844  1CBB  1F0C               	btfss	12,6	;volatile
 11845  1CBC  2CBE               	goto	u602_21
 11846  1CBD  2CBF               	goto	u602_20
 11847  1CBE                     u602_21:	
 11848  1CBE  2CD5               	goto	i1l71
 11849  1CBF                     u602_20:	
 11850  1CBF                     i1l3735:	
 11851  1CBF  1E9F               	btfss	31,5	;volatile
 11852  1CC0  2CC2               	goto	u603_21
 11853  1CC1  2CC3               	goto	u603_20
 11854  1CC2                     u603_21:	
 11855  1CC2  2CD5               	goto	i1l71
 11856  1CC3                     u603_20:	
 11857  1CC3                     i1l3737:	
 11858  1CC3  1A1F               	btfsc	31,4	;volatile
 11859  1CC4  2CC6               	goto	u604_21
 11860  1CC5  2CC7               	goto	u604_20
 11861  1CC6                     u604_21:	
 11862  1CC6  2CD5               	goto	i1l71
 11863  1CC7                     u604_20:	
 11864  1CC7                     i1l3739:	
 11865  1CC7  199F               	btfsc	31,3	;volatile
 11866  1CC8  2CCA               	goto	u605_21
 11867  1CC9  2CCB               	goto	u605_20
 11868  1CCA                     u605_21:	
 11869  1CCA  2CD5               	goto	i1l71
 11870  1CCB                     u605_20:	
 11871  1CCB                     i1l3741:	
 11872  1CCB  191F               	btfsc	31,2	;volatile
 11873  1CCC  2CCE               	goto	u606_21
 11874  1CCD  2CCF               	goto	u606_20
 11875  1CCE                     u606_21:	
 11876  1CCE  2CD5               	goto	i1l71
 11877  1CCF                     u606_20:	
 11878  1CCF                     i1l3743:	
 11879                           
 11880                           ;Lab3_v2.c: 53:         pot1 = ADRESH;
 11881  1CCF  081E               	movf	30,w	;volatile
 11882  1CD0  00F0               	movwf	??_isr
 11883  1CD1  0870               	movf	??_isr,w
 11884  1CD2  00EF               	movwf	_pot1
 11885  1CD3                     i1l3745:	
 11886                           
 11887                           ;Lab3_v2.c: 54:         PIR1bits.ADIF = 0;
 11888  1CD3  130C               	bcf	12,6	;volatile
 11889                           
 11890                           ;Lab3_v2.c: 55:     }
 11891  1CD4  2CF2               	goto	i1l3759
 11892  1CD5                     i1l71:	
 11893                           ;Lab3_v2.c: 56:     else if (PIR1bits.ADIF == 1 && ADCON0bits.CHS3 == 1 && ADCON0bits.CH
      +                          S2 == 1 && ADCON0bits.CHS1 == 0 && ADCON0bits.CHS0 == 1){
 11894                           
 11895  1CD5  1F0C               	btfss	12,6	;volatile
 11896  1CD6  2CD8               	goto	u607_21
 11897  1CD7  2CD9               	goto	u607_20
 11898  1CD8                     u607_21:	
 11899  1CD8  2CF2               	goto	i1l3759
 11900  1CD9                     u607_20:	
 11901  1CD9                     i1l3747:	
 11902  1CD9  1E9F               	btfss	31,5	;volatile
 11903  1CDA  2CDC               	goto	u608_21
 11904  1CDB  2CDD               	goto	u608_20
 11905  1CDC                     u608_21:	
 11906  1CDC  2CF2               	goto	i1l3759
 11907  1CDD                     u608_20:	
 11908  1CDD                     i1l3749:	
 11909  1CDD  1E1F               	btfss	31,4	;volatile
 11910  1CDE  2CE0               	goto	u609_21
 11911  1CDF  2CE1               	goto	u609_20
 11912  1CE0                     u609_21:	
 11913  1CE0  2CF2               	goto	i1l3759
 11914  1CE1                     u609_20:	
 11915  1CE1                     i1l3751:	
 11916  1CE1  199F               	btfsc	31,3	;volatile
 11917  1CE2  2CE4               	goto	u610_21
 11918  1CE3  2CE5               	goto	u610_20
 11919  1CE4                     u610_21:	
 11920  1CE4  2CF2               	goto	i1l3759
 11921  1CE5                     u610_20:	
 11922  1CE5                     i1l3753:	
 11923  1CE5  1D1F               	btfss	31,2	;volatile
 11924  1CE6  2CE8               	goto	u611_21
 11925  1CE7  2CE9               	goto	u611_20
 11926  1CE8                     u611_21:	
 11927  1CE8  2CF2               	goto	i1l3759
 11928  1CE9                     u611_20:	
 11929  1CE9                     i1l3755:	
 11930                           
 11931                           ;Lab3_v2.c: 57:         pot2 = ADRESH;
 11932  1CE9  081E               	movf	30,w	;volatile
 11933  1CEA  00F0               	movwf	??_isr
 11934  1CEB  0870               	movf	??_isr,w
 11935  1CEC  1683               	bsf	3,5	;RP0=1, select bank1
 11936  1CED  1303               	bcf	3,6	;RP1=0, select bank1
 11937  1CEE  00D2               	movwf	_pot2^(0+128)
 11938  1CEF                     i1l3757:	
 11939                           
 11940                           ;Lab3_v2.c: 58:         PIR1bits.ADIF = 0;
 11941  1CEF  1283               	bcf	3,5	;RP0=0, select bank0
 11942  1CF0  1303               	bcf	3,6	;RP1=0, select bank0
 11943  1CF1  130C               	bcf	12,6	;volatile
 11944  1CF2                     i1l3759:	
 11945                           
 11946                           ;Lab3_v2.c: 60:     if (ADCON0bits.CHS3 == 1 && ADCON0bits.CHS2 == 0 && ADCON0bits.CHS1 
      +                          == 0 && ADCON0bits.CHS0 == 0){
 11947  1CF2  1E9F               	btfss	31,5	;volatile
 11948  1CF3  2CF5               	goto	u612_21
 11949  1CF4  2CF6               	goto	u612_20
 11950  1CF5                     u612_21:	
 11951  1CF5  2D07               	goto	i1l74
 11952  1CF6                     u612_20:	
 11953  1CF6                     i1l3761:	
 11954  1CF6  1A1F               	btfsc	31,4	;volatile
 11955  1CF7  2CF9               	goto	u613_21
 11956  1CF8  2CFA               	goto	u613_20
 11957  1CF9                     u613_21:	
 11958  1CF9  2D07               	goto	i1l74
 11959  1CFA                     u613_20:	
 11960  1CFA                     i1l3763:	
 11961  1CFA  199F               	btfsc	31,3	;volatile
 11962  1CFB  2CFD               	goto	u614_21
 11963  1CFC  2CFE               	goto	u614_20
 11964  1CFD                     u614_21:	
 11965  1CFD  2D07               	goto	i1l74
 11966  1CFE                     u614_20:	
 11967  1CFE                     i1l3765:	
 11968  1CFE  191F               	btfsc	31,2	;volatile
 11969  1CFF  2D01               	goto	u615_21
 11970  1D00  2D02               	goto	u615_20
 11971  1D01                     u615_21:	
 11972  1D01  2D07               	goto	i1l74
 11973  1D02                     u615_20:	
 11974  1D02                     i1l3767:	
 11975                           
 11976                           ;Lab3_v2.c: 61:         ADCON0bits.CHS3 = 1;
 11977  1D02  169F               	bsf	31,5	;volatile
 11978                           
 11979                           ;Lab3_v2.c: 62:         ADCON0bits.CHS2 = 1;
 11980  1D03  161F               	bsf	31,4	;volatile
 11981                           
 11982                           ;Lab3_v2.c: 63:         ADCON0bits.CHS1 = 0;
 11983  1D04  119F               	bcf	31,3	;volatile
 11984                           
 11985                           ;Lab3_v2.c: 64:         ADCON0bits.CHS0 = 1;
 11986  1D05  151F               	bsf	31,2	;volatile
 11987                           
 11988                           ;Lab3_v2.c: 65:     }
 11989  1D06  2D1B               	goto	i1l75
 11990  1D07                     i1l74:	
 11991                           ;Lab3_v2.c: 66:     else if (ADCON0bits.CHS3 == 1 && ADCON0bits.CHS2 == 1 && ADCON0bits.
      +                          CHS1 == 0 && ADCON0bits.CHS0 == 1){
 11992                           
 11993  1D07  1E9F               	btfss	31,5	;volatile
 11994  1D08  2D0A               	goto	u616_21
 11995  1D09  2D0B               	goto	u616_20
 11996  1D0A                     u616_21:	
 11997  1D0A  2D1B               	goto	i1l75
 11998  1D0B                     u616_20:	
 11999  1D0B                     i1l3769:	
 12000  1D0B  1E1F               	btfss	31,4	;volatile
 12001  1D0C  2D0E               	goto	u617_21
 12002  1D0D  2D0F               	goto	u617_20
 12003  1D0E                     u617_21:	
 12004  1D0E  2D1B               	goto	i1l75
 12005  1D0F                     u617_20:	
 12006  1D0F                     i1l3771:	
 12007  1D0F  199F               	btfsc	31,3	;volatile
 12008  1D10  2D12               	goto	u618_21
 12009  1D11  2D13               	goto	u618_20
 12010  1D12                     u618_21:	
 12011  1D12  2D1B               	goto	i1l75
 12012  1D13                     u618_20:	
 12013  1D13                     i1l3773:	
 12014  1D13  1D1F               	btfss	31,2	;volatile
 12015  1D14  2D16               	goto	u619_21
 12016  1D15  2D17               	goto	u619_20
 12017  1D16                     u619_21:	
 12018  1D16  2D1B               	goto	i1l75
 12019  1D17                     u619_20:	
 12020  1D17                     i1l3775:	
 12021                           
 12022                           ;Lab3_v2.c: 67:         ADCON0bits.CHS3 = 1;
 12023  1D17  169F               	bsf	31,5	;volatile
 12024                           
 12025                           ;Lab3_v2.c: 68:         ADCON0bits.CHS2 = 0;
 12026  1D18  121F               	bcf	31,4	;volatile
 12027                           
 12028                           ;Lab3_v2.c: 69:         ADCON0bits.CHS1 = 0;
 12029  1D19  119F               	bcf	31,3	;volatile
 12030                           
 12031                           ;Lab3_v2.c: 70:         ADCON0bits.CHS0 = 0;
 12032  1D1A  111F               	bcf	31,2	;volatile
 12033  1D1B                     i1l75:	
 12034                           
 12035                           ;Lab3_v2.c: 72:     (INTCONbits.GIE = 1);
 12036  1D1B  178B               	bsf	11,7	;volatile
 12037  1D1C                     i1l77:	
 12038  1D1C  0872               	movf	??_isr+2,w
 12039  1D1D  008A               	movwf	10
 12040  1D1E  0E71               	swapf	(??_isr+1)^(0+4294967168),w
 12041  1D1F  0083               	movwf	3
 12042  1D20  0EFE               	swapf	btemp,f
 12043  1D21  0E7E               	swapf	btemp,w
 12044  1D22  0009               	retfie
 12045  1D23                     __end_of_isr:	
 12046  007E                     btemp	set	126	;btemp
 12047  007E                     wtemp0	set	126
 12048                           
 12049                           	psect	intentry
 12050  0004                     __pintentry:	
 12051                           ;incstack = 0
 12052                           ; Regs used in _isr: [wreg]
 12053                           
 12054  0004                     interrupt_function:	
 12055  007E                     saved_w	set	btemp
 12056  0004  00FE               	movwf	btemp
 12057  0005  0E03               	swapf	3,w
 12058  0006  00F1               	movwf	??_isr+1
 12059  0007  080A               	movf	10,w
 12060  0008  00F2               	movwf	??_isr+2
 12061  0009  160A  158A  2CB8   	ljmp	_isr


Data Sizes:
    Strings     17
    Constant    144
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     79      80
    BANK1            80     42      71
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> datos2(BANK1[10]), datos1(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd8_display@value	PTR unsigned char  size(2) Largest target is 10
		 -> datos2(BANK1[10]), datos1(BANK1[10]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___awdiv
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->___xxtofl
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    _lcd8_setCursor->_lcd8_cmd
    _lcd8_init2->_lcd8_cmd
    _lcd8_cmd->_delay_1ms2
    _lcd8_display->_lcd8_write
    _lcd8_write->_delay_1ms2
    ___fldiv->___xxtofl

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   39494
                                             38 BANK1      4     4      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                         _adcFoscSel
                           _adcSetup
                        _analogInSel
                         _delay_1ms2
                          _intEnable
                       _lcd8_display
                         _lcd8_init2
                     _lcd8_setCursor
                             _oscInt
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   31595
                                             74 BANK0      5     0      5
                                              8 BANK1     30    30      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                             10 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              3 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              3 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _oscInt                                               3     3      0      28
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd8_setCursor                                       2     1      1     536
                                              6 COMMON     2     1      1
                           _lcd8_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd8_init2                                           2     2      0      68
                                              6 COMMON     2     2      0
                           _lcd8_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd8_cmd                                             1     1      0      68
                                              5 COMMON     1     1      0
                         _delay_1ms2
 ---------------------------------------------------------------------------------
 (1) _lcd8_display                                         2     0      2     493
                                              6 COMMON     2     0      2
                         _lcd8_write
 ---------------------------------------------------------------------------------
 (2) _lcd8_write                                           1     1      0      68
                                              5 COMMON     1     1      0
                         _delay_1ms2
 ---------------------------------------------------------------------------------
 (3) _delay_1ms2                                           2     2      0      46
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _intEnable                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _analogInSel                                          3     3      0      28
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _adcSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcFoscSel                                           3     3      0      28
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                             34 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _adcFoscSel
   _adcSetup
   _analogInSel
   _delay_1ms2
   _intEnable
   _lcd8_display
     _lcd8_write
       _delay_1ms2
   _lcd8_init2
     _lcd8_cmd
       _delay_1ms2
   _lcd8_setCursor
     _lcd8_cmd
       _delay_1ms2
   _oscInt
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A2       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2A      47       7       88.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A2      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 10 17:59:44 2020

            ___fldiv@aexp 005B              ___fldiv@bexp 005A                         pc 0002  
            ___fldiv@sign 0053               __CFG_CP$OFF 0000                        l92 18C5  
                      l89 191F              ___awdiv@sign 0025                        fsr 0004  
     ___wmul@multiplicand 0075       __Umul8_16@word_mpld 0022                       l111 18E9  
                     l105 1B37                       l123 1951                       l108 18FA  
                     l117 19C1                       l150 1DC4                       l151 1DCB  
                     l143 1D9A                       l152 1DD2                       l128 1935  
                     l153 1DD9                       l145 1DA1                       l162 1954  
                     l154 1DE0                       l146 1DA8                       l139 10C0  
                     l155 1DE7                       l147 1DAF                       l164 1959  
                     l156 1DEE                       l148 1DB6                       l180 1D6B  
                     l172 1D25                       l165 195E                       l157 1DF5  
                     l149 1DBD                       l181 1D97                       l309 00A1  
                     l166 1976                       l158 1E30                       l174 1D2F  
                     l350 0634                       l342 04CD                       l175 1D39  
                     l335 0489                       l176 1D43                       l360 1983  
                     l177 1D4D                       l513 1CB7                       l178 1D57  
                     l362 199B                       l530 073D                       l290 0FFF  
                     l179 1D61                       l531 06A2                       l283 1577  
                     l700 17FF                       l356 067F                       l541 0730  
                     l534 0700                       l526 1BE6                       l551 1108  
                     l712 1771                       l616 1B8D                       l721 17D1  
                     l546 1A60                       l554 1174                       l730 17FF  
                     l570 086A                       l547 1A7C                       l555 118D  
                     l563 087F                       l548 1A91                       l708 174D  
                     l396 1C4E                       l733 1AE1                       l573 087F  
                     l821 08A4                       l581 07BD                       l718 1793  
                     l743 11EA                       l559 18D8                       l823 093B  
                     l745 136A                       l729 17F3                       l577 07FA  
                     l841 190C                       l834 0905                       l578 076C  
                     l666 1A41                       l691 1682                       l835 0911  
                     l827 08E9                       l851 10E9                       l588 07ED  
                     l676 19FB                       l765 134E                       l693 1659  
                     l767 135E                       l759 12DC                       l687 15DB  
                     l783 0C9C                       l849 10D7                       l795 0C90  
                     l789 0C08              __CFG_CPD$OFF 0000                       _isr 1CB8  
                     fsr0 0004                       indf 0000              ___awmod@sign 0079  
            ___flmul@aexp 003A              ___flmul@bexp 003B      __end_of_lcd8_display 19C2  
            ___flmul@sign 0035              ___flmul@temp 0040              ___flmul@prod 003C  
     analogInSel@analogIn 0075              __CFG_LVP$OFF 0000              ___fltol@exp1 005F  
                    l3003 073E                      l3101 0725                      l3021 0784  
                    l3005 0751                      l3111 197D                      l3103 0735  
                    l3031 07AF                      l3023 078D                      l3015 076D  
                    l3201 083E                      l3121 1BE7                      l3113 198A  
                    l3041 07C9                      l3033 07B7                      l3025 0796  
                    l3017 0773                      l3009 075A                      l3131 1C16  
                    l3123 1BF9                      l3115 1991                      l3107 1977  
                    l3051 07F2                      l3035 07C1                      l3043 07DB  
                    l3027 07A4                      l3019 0782                      l3301 1917  
                    l3133 1C28                      l3125 1BFC                      l3141 1C46  
                    l3221 1B38                      l3117 1997                      l3109 1979  
                    l3061 0696                      l3029 07AE                      l2421 10C4  
                    l2501 1BA3                      l3311 191E                      l3303 1918  
                    l3151 1A8E                      l3215 085F                      l3207 0846  
                    l3135 1C36                      l3127 1C09                      l3231 1B68  
                    l3223 1B40                      l3071 06BC                      l3055 0680  
                    l2431 10E5                      l2423 10C6                      l2511 1BBB  
                    l2503 1BA9                      l2441 1922                      l3313 1D24  
                    l3305 1919                      l3153 1A90                      l3145 1A42  
                    l3161 111C                      l2601 15B3                      l3241 1A92  
                    l3217 086F                      l3209 0858                      l3137 1C37  
                    l3129 1C0D                      l3233 1B76                      l3225 1B45  
                    l3081 06F0                      l3073 06BE                      l3057 068D  
                    l3049 07E2                      l2425 10CD                      l2521 1BDD  
                    l2513 1BC5                      l2505 1BAC                      l3401 0052  
                    l2443 1928                      l2435 1920                      l3331 1B06  
                    l3323 1AE2                      l3307 191C                      l3147 1A58  
                    l3171 118A                      l3163 1124                      l2611 15C8  
                    l2603 15B9                      l3243 1A96                      l3219 0874  
                    l3139 1C40                      l3235 1B7F                      l3227 1B52  
                    l3251 088C                      l3083 06F1                      l3075 06C7  
                    l3067 06A3                      l2427 10D1                      l2531 1A06  
                    l2451 1C5B                      l2523 1BE2                      l2515 1BCB  
                    l2507 1BB3                      l3403 0057                      l3411 009B  
                    l3341 1B2B                      l3333 1B13                      l3325 1AEB  
                    l3317 1D75                      l3309 191D                      l3149 1A74  
                    l3173 118C                      l3165 1128                      l3157 10EA  
                    l3181 18D8                      l2701 1725                      l2621 15E5  
                    l2613 15D0                      l2605 15BD                      l3229 1B56  
                    l3237 1B85                      l3261 08BA                      l3253 089C  
                    l3093 070C                      l3085 06FA                      l3077 06D0  
                    l3069 06AB                      l2429 10E0                      l2541 1A29  
                    l2533 1A09                      l2461 1C6C                      l2453 1C5D  
                    l2445 1C4F                      l2517 1BD2                      l2509 1BB7  
                    l3501 03CA                      l3421 00CD                      l3413 009F  
                    l3405 006C                      l3351 1DFC                      l3343 1B31  
                    l3335 1B19                      l3327 1AF1                      l3167 114C  
                    l3159 1100                      l2711 175A                      l2703 172B  
                    l2631 15F9                      l2623 15E9                      l2615 15D1  
                    l2607 15BE                      l3191 081A                      l3271 08F0  
                    l3263 08C7                      l3255 08AC                      l3247 0883  
                    l3087 0704                      l3095 071E                      l3079 06E2  
                    l2543 1A2F                      l2535 1A10                      l2527 19FC  
                    l2471 1C84                      l2463 1C72                      l2455 1C61  
                    l2447 1C52                      l2519 1BD8                      l3511 041E  
                    l3431 0100                      l3423 00D1                      l3407 0083  
                    l3601 11A5                      l3361 1963                      l3345 10B4  
                    l3337 1B1F                      l3329 1AFF                      l3169 1150  
                    l3177 18CE                      l2721 1775                      l2705 1730  
                    l2641 160D                      l2633 15FD                      l2625 15ED  
                    l2609 15C3                      l2617 15D3                      l3193 082F  
                    l3185 0804                      l3281 0929                      l3273 08FB  
                    l3265 08CE                      l3249 0888                      l2801 098C  
                    l2545 1A30                      l2537 1A14                      l2529 1A00  
                    l2561 19D6                      l2553 19C2                      l2473 1C95  
                    l2465 1C75                      l2481 1CA9                      l2457 1C66  
                    l2449 1C56                      l3521 049A                      l3513 0423  
                    l3505 0401                      l3441 0145                      l3433 0119  
                    l3425 00D5                      l3417 00A3                      l3409 0089  
                    l3611 11BD                      l3603 11AA                      l3347 1D99  
                    l3339 1B25                      l3371 193C                      l3291 190D  
                    l3179 18D6                      l2723 1778                      l2715 1763  
                    l2707 173F                      l2731 1785                      l2651 1621  
                    l2643 1611                      l2635 1601                      l2627 15F1  
                    l2619 15E1                      l3195 0830                      l3187 0811  
                    l3283 092E                      l3275 08FF                      l3267 08D2  
                    l3259 08B5                      l2803 098E                      l2547 1A37  
                    l2539 1A18                      l2563 19DA                      l2555 19C8  
                    l2571 19F7                      l2483 1CAE                      l2475 1C9B  
                    l2467 1C7C                      l2459 1C6A                      l2491 1B8F  
                    l3531 04C7                      l3523 049E                      l3515 045E  
                    l3507 040B                      l3451 018B                      l3443 014B  
                    l3435 011D                      l3427 00E3                      l3419 00C1  
                    l3701 12E1                      l3621 11D2                      l3613 11C2  
                    l3605 11B2                      l3357 1953                      l3381 19AB  
                    l3373 1944                      l3293 1910                      l2741 1798  
                    l2733 1786                      l2725 177A                      l2717 176C  
                    l2709 1755                      l2661 1666                      l2645 1615  
                    l2637 1605                      l2629 15F5                      l2653 1625  
                    l2581 1589                      l3197 0838                      l3285 0932  
                    l3277 0909                      l3269 08E0                      l2901 0C88  
                    l2821 09FF                      l2813 09A9                      l2805 0996  
                    l2549 1A3D                      l2565 19E4                      l2557 19CB  
                    l2485 1CB3                      l2477 1C9C                      l2469 1C80  
                    l2493 1B93                      l3541 0504                      l3533 04D6  
                    l3525 04A4                      l3517 047D                      l3509 0417  
                    l3461 0232                      l3453 01AA                      l3445 015E  
                    l3437 0121                      l3429 00E7                      l3703 12E6  
                    l3711 1317                      l3631 11F2                      l3623 11D7  
                    l3615 11C8                      l3607 11B3                      l3367 18C0  
                    l3383 19B1                      l2911 18EF                      l3375 194A  
                    l3295 1912                      l2751 17D6                      l2743 179D  
                    l2735 178A                      l2727 177F                      l2719 1770  
                    l2663 1668                      l2671 167A                      l2655 1626  
                    l2647 1619                      l2639 1609                      l2591 159D  
                    l2583 158A                      l2575 1578                      l3199 083A  
                    l3287 0933                      l3279 0913                      l2903 0C89  
                    l2831 0A7C                      l2823 0A2B                      l2815 09B9  
                    l2807 099B                      l2567 19EA                      l2559 19D2  
                    l2479 1CA3                      l2495 1B98                      l3543 055F  
                    l3551 0600                      l3535 04DB                      l3527 04B1  
                    l3519 0491                      l3471 02BA                      l3455 01F5  
                    l3447 0181                      l3439 013A                      l3463 023A  
                    l3391 0034                      l3721 134D                      l3713 1324  
                    l3705 12F4                      l3641 1210                      l3633 11FE  
                    l3625 11DF                      l3617 11CC                      l3609 11B5  
                    l2921 18DA                      l3377 199C                      l2913 18F0  
                    l3369 1937                      l3297 1913                      l2761 17ED  
                    l2753 17DB                      l2745 17AB                      l2737 1790  
                    l2729 1781                      l2681 16AB                      l2673 1686  
                    l2665 166C                      l2657 163D                      l2649 161D  
                    l2585 158F                      l2593 159F                      l2577 157F  
                    l2905 0C94                      l2841 0AFC                      l2833 0A99  
                    l2825 0A47                      l2817 09C6                      l2809 09A0  
                    l2569 19F1                      l2497 1B9A                      l2489 1B8E  
                    l3553 0608                      l3545 059A                      l3537 04E2  
                    l3529 04C0                      l3481 031C                      l3473 02E1  
                    l3465 0249                      l3457 020E                      l3449 0185  
                    l3561 0620                      l3393 0039                      l3385 0022  
                    l3801 1E79                      l3723 1354                      l3715 1332  
                    l3707 12F8                      l3651 123B                      l3635 1202  
                    l3627 11E0                      l3619 11CD                      l2931 18E6  
                    l2923 18DE                      l3379 199D                      l2915 18F1  
                    l3299 1914                      l2763 17EF                      l2755 17E3  
                    l2747 17AF                      l2691 16C2                      l2683 16AF  
                    l2675 168B                      l2667 166D                      l2659 165D  
                    l2595 15A7                      l2587 1594                      l2579 1585  
                    l2851 0BB4                      l2843 0B29                      l2835 0AA9  
                    l2827 0A63                      l2819 09E3                      l2771 0943  
                    l2499 1B9E                      l3571 064F                      l3563 0626  
                    l3555 060F                      l3547 05B9                      l3539 04E6  
                    l3491 0397                      l3483 033A                      l3475 02F0  
                    l3467 0290                      l3459 0217                      l3395 003B  
                    l3387 0027                      l3811 1EA9                      l3803 1E85  
                    l3725 1358                      l3717 1341                      l3709 1311  
                    l3661 1260                      l3653 1243                      l3645 1219  
                    l3629 11E2                      l2925 18DF                      l2917 18F2  
                    l2909 18EB                      l2765 17FA                      l2757 17E8  
                    l2749 17CD                      l2693 16C3                      l2685 16B3  
                    l2669 1676                      l2597 15AC                      l2589 159C  
                    l2861 0BD9                      l2853 0BBD                      l2845 0B39  
                    l2837 0AC6                      l2829 0A6C                      l2781 0958  
                    l2773 0949                      l2941 1483                      l2933 136E  
                    l3573 064F                      l3565 062E                      l3557 0613  
                    l3549 05C5                      l3493 03C6                      l3477 030B  
                    l3469 029F                      l3581 067B                      l3397 0049  
                    l3389 002D                      l3821 1FF2                      l3813 1F7E  
                    l3805 1E93                      l3727 135A                      l3719 1345  
                    l3671 128B                      l3663 1261                      l3655 1245  
                    l3647 122B                      l3639 120B                      l3591 118E  
                    l2927 18E0                      l2919 18F7                      l2767 17FE  
                    l2759 17E9                      l2695 16CC                      l2687 16BC  
                    l2679 1694                      l2599 15B2                      l2871 0BF1  
                    l2863 0BE2                      l2855 0BCB                      l2847 0B66  
                    l2839 0ADF                      l2791 0975                      l2783 0960  
                    l2775 094D                      l2943 1489                      l2935 1374  
                    l2951 0CA0                      l3575 065D                      l3567 063F  
                    l3559 0619                      l3495 03C8                      l3487 0359  
                    l3479 0314                      l3399 004C                      l3815 1FA4  
                    l3807 1E98                      l3681 12A8                      l3657 124A  
                    l3665 126A                      l3673 128F                      l3649 1233  
                    l3593 1195                      l2929 18E1                      l2689 16BE  
                    l2697 16D1                      l2881 0C20                      l2873 0C05  
                    l2857 0BD4                      l2865 0BE8                      l2849 0B8C  
                    l2793 0979                      l2785 0962                      l2777 094E  
                    l2769 093C                      l2953 0CA4                      l3569 0640  
                    l3489 0362                      l3913 00B9                      l3817 1FC3  
                    l3809 1EA4                      l3691 12C0                      l3683 12AC  
                    l3675 1295                      l3667 127C                      l3659 125C  
                    l3595 119B                      l3915 1D7D                      l2699 16E7  
                    l2891 0C5B                      l2883 0C24                      l2867 0BEC  
                    l2859 0BD8                      l2795 097A                      l2787 096A  
                    l2779 0953                      l2947 1534                      l2963 0D97  
                    l2955 0CA6                      l3579 0665                      l3819 1FE9  
                    l3693 12C1                      l3685 12AD                      l3677 129D  
                    l3669 127D                      l3597 119F                      l3917 1E04  
                    l2893 0C6A                      l2885 0C3D                      l2877 0C0D  
                    l2869 0BED                      l2797 097F                      l2789 096F  
                    l2981 0F44                      l2965 0D9E                      l2957 0CAD  
                    l2973 0E53                      l3781 1E3C                      l3695 12C5  
                    l3687 12B6                      l3679 129F                      l3599 11A0  
                    l3919 196B                      l2895 0C74                      l2879 0C12  
                    l2887 0C43                      l2799 0984                      l2991 18FC  
                    l2983 0F4B                      l2975 0E5A                      l3791 1E57  
                    l3783 1E41                      l3697 12D9                      l3689 12BC  
                    l2897 0C76                      l2889 0C50                      l2993 18FD  
                    l2969 0E26                      l3793 1E5D                      l3785 1E46  
                    l3777 1E31                      l2899 0C84                      l2995 1903  
                    l2987 0FD3                      l3795 1E5E                      l3787 1E4C  
                    l3779 1E36                      l2997 1909                      l3797 1E6B  
                    l3789 1E52                      l2999 190B                      l3799 1E74  
                    ?_isr 0070                      STR_1 10A5                      STR_2 10A9  
                    STR_3 10AD                      STR_4 10A0                      STR_5 10A0  
                    u3110 10D1                      u3111 10D0                      u4000 09A0  
                    u4001 099F                      u3130 10E5                      u3210 1C95  
                    u3131 10E4                      u4011 09F1                      u3211 1C94  
                    u3140 1935                      u4012 09F8                      u3300 1BC5  
                    u3141 1934                      u3125 10D8                      u4101 0B1B  
                    u4021 0A0D                      u4013 09FF                      u3205 1C85  
                    u3301 1BC4                      u4102 0B22                      u4022 0A14  
                    u3230 1CA9                      u3150 1C56                      u4111 0B48  
                    u4103 0B29                      u4031 0A39                      u4023 0A1B  
                    u3231 1CA8                      u3215 1C91                      u3151 1C55  
                    u4200 0BEC                      u4120 0B72                      u4112 0B4F  
                    u4032 0A40                      u3400 1A3D                      u3240 1CAE  
                    u3160 1C61                      u3320 1BD8                      u3145 1931  
                    u5001 1137                      u4201 0BEB                      u4113 0B56  
                    u4041 0A55                      u4033 0A47                      u3401 1A3C  
                    u3241 1CAD                      u3225 1C9D                      u3161 1C60  
                    u3321 1BD7                      u3305 1BC1                      u5010 1150  
                    u5002 1138                      u4210 0BF1                      u4042 0A5C  
                    u3410 19C8                      u3170 1C72                      u3330 1BDD  
                    u3250 1B93                      u5011 114F                      u5003 113D  
                    u4211 0BF0                      u4131 0B7E                      u4043 0A63  
                    u3411 19C7                      u3171 1C71                      u3331 1BDC  
                    u3315 1BCC                      u3251 1B92                      u5004 113E  
                    u3500 15B2                      u5100 0857                      u4220 0C05  
                    u4140 0B9A                      u4132 0B85                      u3340 1A06  
                    u4300 1374                      u3260 1B9E                      u5021 115F  
                    u5005 1143                      u3501 15B1                      u5101 0856  
                    u4221 0C04                      u4133 0B8C                      u4125 0B6D  
                    u4061 0A8B                      u3341 1A05                      u4301 1373  
                    u3261 1B9D                      u5030 118A                      u5022 1160  
                    u5006 1144                      u3510 15BD                      u5110 085E  
                    u4230 0C0C                      u4062 0A92                      u3430 19DA  
                    u3190 1C84                      u3270 1BA9                      u5031 1189  
                    u5023 1165                      u3511 15BC                      u5111 085D  
                    u4231 0C0B                      u4151 0BA6                      u4071 0AB8  
                    u4063 0A99                      u4055 0A65                      u3431 19D9  
                    u3191 1C83                      u3271 1BA8                      u6000 1341  
                    u5024 1166                      u5040 18D6                      u3600 166C  
                    u3520 15C3                      u5200 1B85                      u4240 0C12  
                    u4152 0BAD                      u4072 0ABF                      u3360 1A18  
                    u3440 19E4                      u6001 1340                      u5025 116B  
                    u5041 18D5                      u3601 166B                      u3521 15C2  
                    u5201 1B84                      u4241 0C11                      u4153 0BB4  
                    u4145 0B95                      u4073 0AC6                      u3361 1A17  
                    u3441 19E3                      u3425 19CC                      u3185 1C76  
                    u6010 1358                      u5026 116C                      u3530 15C8  
                    u5130 086F                      u5050 0811                      u5210 0888  
                    u4250 0C24                      u3290 1BBB                      u6011 1357  
                    u5035 1186                      u3531 15C7                      u5131 086E  
                    u5051 0810                      u5211 0887                      u4251 0C23  
                    u4091 0AEE                      u3355 1A0A                      u4315 1391  
                    u3291 1BBA                      u3700 16E7                      u3620 1682  
                    u3540 15E1                      u5140 0874                      u5060 0828  
                    u5300 0905                      u5220 088C                      u4260 0C33  
                    u4180 0BD8                      u4092 0AF5                      u3380 1A29  
                    u3460 19F7                      u4340 1489                      u6005 133D  
                    u3701 16E6                      u3621 1681                      u3541 15E0  
                    u5141 0873                      u5125 0861                      u5301 0904  
                    u5221 088B                      u4181 0BD7                      u4165 0BB6  
                    u4093 0AFC                      u4085 0AC8                      u3381 1A28  
                    u3461 19F6                      u3445 19E0                      u4341 1488  
                    u4325 13ED                      u3285 1BAD                      u4405 0CCF  
                    u3630 1686                      u3550 15E5                      u3470 1589  
                    u5070 083E                      u5150 1B40                      u5310 0909  
                    u5230 08AC                      u4270 0C50                      u4510 0F4B  
                    u4430 0D9E                      u3711 16FE                      u3703 16E3  
                    u3631 1685                      u3615 166F                      u3551 15E4  
                    u3471 1588                      u5071 083D                      u5151 1B3F  
                    u5311 0908                      u5231 08AB                      u4271 0C4F  
                    u4175 0BCD                      u3375 1A19                      u3455 19EB  
                    u4335 1442                      u4511 0F4A                      u4431 0D9D  
                    u4415 0D0B                      u3800 1785                      u3720 1712  
                    u3712 16FF                      u3640 168B                      u3560 163D  
                    u3480 158F                      u5080 0845                      u5320 091E  
                    u4600 07A4                      u4280 0C6A                      u5400 009A  
                    u6200 1E5D                      u3801 1784                      u3721 1713  
                    u3713 1704                      u3641 168A                      u3561 163C  
                    u3481 158E                      u5081 0844                      u5065 0823  
                    u4601 07A3                      u4281 0C69                      u4265 0C2E  
                    u3385 1A25                      u4505 0F03                      u4425 0D56  
                    u5401 0099                      u6201 1E5C                      u3810 178A  
                    u3730 1730                      u3722 1718                      u3714 1705  
                    u3570 1648                      u3490 1594                      u5170 1B56  
                    u5330 092E                      u5250 08CD                      u4290 0C88  
                    u5410 00CD                      u3811 1789                      u3731 172F  
                    u3723 1719                      u3715 170A                      u3651 169D  
                    u3571 1646                      u3491 1593                      u5171 1B55  
                    u5331 092D                      u5251 08CC                      u4291 0C87  
                    u4275 0C4C                      u4195 0BDB                      u3395 1A31  
                    u4355 14A6                      u5411 00CC                      u3900 17E8  
                    u3820 1790                      u3740 1755                      u3716 170B  
                    u3660 16AF                      u3652 16A4                      u3580 1649  
                    u5180 1B68                      u5340 0932                      u4700 068D  
                    u4620 07BD                      u4380 0CA4                      u5500 02BA  
                    u5420 00D1                      u3901 17E7                      u3821 178F  
                    u3741 1754                      u3661 16AE                      u3653 16AB  
                    u3565 1639                      u5181 1B67                      u5165 1B47  
                    u5341 0931                      u5325 0919                      u5245 08BF  
                    u4701 068C                      u4621 07BC                      u4605 07A0  
                    u4285 0C66                      u4365 14F3                      u4525 0F5E  
                    u4445 0DB1                      u4381 0CA3                      u5501 02B9  
                    u5421 00D0                      u5350 193C                      u3910 17ED  
                    u3830 1797                      u3750 175A                      u3670 16B3  
                    u3590 165D                      u5270 08EF                      u4710 06A1  
                    u4630 07C1                      u4550 1903                      u4470 0E5A  
                    u4390 0CAD                      u5510 02E1                      u5430 0100  
                    u5351 193B                      u3911 17EC                      u3831 1796  
                    u3751 1759                      u3671 16B2                      u3591 165C  
                    u5095 0847                      u5271 08EE                      u4711 06A0  
                    u4631 07C0                      u4615 07B0                      u4375 153F  
                    u4551 1902                      u4535 0F9A                      u4471 0E59  
                    u4455 0DED                      u4391 0CAC                      u5511 02E0  
                    u5431 00FF                      u5360 194A                      u3920 17FE  
                    u3840 179D                      u3680 16C2                      u4800 0724  
                    u4640 07C8                      u4560 1909                      u5600 04B1  
                    u5520 02F0                      u5440 013A                      u5361 1949  
                    u3921 17FD                      u3841 179C                      u3681 16C1  
                    u5185 1B64                      u5265 08E1                      u4801 0723  
                    u4641 07C7                      u4561 1908                      u4545 0FD6  
                    u4465 0E29                      u5601 04B0                      u5521 02EF  
                    u5441 0139                      u6217 1FF8                      u5370 19C1  
                    u3850 17AF                      u3770 1770                      u5290 08FF  
                    u4730 06E2                      u4570 0751                      u3930 094D  
                    u5610 04C0                      u5530 030B                      u5450 0185  
                    u5371 19C0                      u6227 1AE6                      u3851 17AE  
                    u3771 176F                      u5195 1B77                      u5291 08FE  
                    u4731 06E1                      u4571 0750                      u3931 094C  
                    u5611 04BF                      u5531 030A                      u5451 0184  
                    u3860 17BE                      u3780 1775                      u4820 0735  
                    u4660 07DA                      u4580 076B                      u3940 0953  
                    u5700 064F                      u5620 04DB                      u5460 020E  
                    u5380 002D                      u6237 1AF5                      u3781 1774  
                    u3765 1765                      u5285 08F4                      u4821 0734  
                    u4725 06C9                      u4661 07D9                      u4581 076A  
                    u3941 0952                      u4485 0E7C                      u5701 064E  
                    u5621 04DA                      u5605 04AD                      u5525 02EC  
                    u5461 020D                      u5381 002C                      u3870 17CD  
                    u3790 177F                      u4910 1C28                      u4830 197D  
                    u4750 0700                      u4670 07E1                      u3950 0958  
                    u5710 065D                      u5550 0400                      u5470 0232  
                    u5390 0049                      i1l71 1CD5                      u6247 1B01  
                    u3871 17CC                      u3791 177E                      u3695 16C5  
                    u4911 1C27                      u4831 197C                      u4815 0727  
                    u4751 06FF                      u4735 06DE                      u4671 07E0  
                    u4655 07CA                      u3951 0957                      u4495 0EB8  
                    u5711 065C                      u5615 04BC                      u5551 03FF  
                    u5471 0231                      u5391 0048                      u5800 1210  
                    u3880 17D6                      u4760 0704                      u3960 0979  
                    u5720 067B                      u5560 040B                      u5480 0249  
                    u5801 120F                      u6257 1B0E                      u3881 17D5  
                    u3865 17B9                      u4905 1C0F                      u4761 0703  
                    u4745 06F3                      u3961 0978                      u5721 067A  
                    u5705 064B                      u5561 040A                      u5545 03CD  
                    u5481 0248                      i1l74 1D07                      u5810 124A  
                    u5730 119F                      u3890 17DB                      u4930 1C46  
                    u4770 070B                      u4690 07F2                      u3970 097F  
                    u5650 0607                      u5570 0417                      u5490 029F  
                    i1l75 1D1B                      u5811 1249                      u5731 119E  
                    u3891 17DA                      u4931 1C45                      u4915 1C24  
                    u4771 070A                      u4691 07F1                      u4595 078F  
                    u3971 097E                      u5651 0606                      u5635 0562  
                    u5571 0416                      u5555 03FC                      u5491 029E  
                    u5900 12AC                      u5740 11A5                      u4940 1A58  
                    u4860 1997                      u3980 0984                      u5660 061F  
                    i1l77 1D1C                      u5901 12AB                      u5741 11A4  
                    u4941 1A57                      u4925 1C38                      u4861 1996  
                    u4845 1984                      u4685 07E4                      u3981 0983  
                    u5661 061E                      u5645 05C8                      u5485 0245  
                    u5750 11AA                      u4950 1A74                      u4870 1BF9  
                    u4790 071D                      u3990 099B                      u5670 0626  
                    u5590 0490                      u5751 11A9                      u4951 1A73  
                    u4871 1BF8                      u4855 198B                      u4791 071C  
                    u3991 099A                      u5671 0625                      u5591 048F  
                    u5495 029B                      u5920 12C0                      u5840 1260  
                    u5760 11CC                      u4960 1A8E                      u5680 062E  
                    u5921 12BF                      u5841 125F                      u5825 124C  
                    u5761 11CB                      u4961 1A8D                      u4785 070D  
                    u5681 062D                      u5585 0426                      u5930 12C5  
                    u5770 11D2                      u4970 1100                      u4890 1C0D  
                    u5690 063F                      u5931 12C4                      u5915 12AF  
                    u5835 1255                      u5771 11D1                      u4971 10FF  
                    u4891 1C0C                      u5691 063E                      u5940 12D9  
                    u5860 127C                      u5780 11D7                      u4980 111C  
                    u5941 12D8                      u5861 127B                      u5781 11D6  
                    u4965 1A8A                      u4981 111B                      u4885 1BFE  
                    u5950 12E0                      u5870 1295                      u5790 11F2  
                    u4990 1128                      u5951 12DF                      u5871 1294  
                    u5855 1263                      u5791 11F1                      u4991 1127  
                    u5695 063B                      u5960 12E6                      u5880 129D  
                    u5961 12E5                      u5881 129C                      u5865 1278  
                    u5970 12F8                      u5971 12F7                      u5980 1307  
                    u5990 1324                      u5991 1323                      u5895 12A1  
                    u5985 1302                      u5995 1320              __CFG_WRT$OFF 0000  
                    _main 1E31                      _pot1 006F                      _pot2 00D2  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
         ___fldiv@new_exp 0054              _sprintf$1111 00AD                     ??_isr 0070  
           ___fltol@sign1 005E           __end_of___fladd 1800                     ?_main 0070  
         __end_of___fldiv 136B           __end_of___awdiv 1CB8           __end_of___flneg 18D9  
           __CFG_WDTE$OFF 0000           __end_of___awmod 1BE7           __end_of___flmul 0C9D  
         __end_of___flsub 1AE2           __end_of___fltol 0880                     _ANSEL 0188  
         __end_of___lldiv 1C4F           ___awdiv@divisor 0020           __end_of___llmod 1B8E  
         __end_of___lwdiv 1A42           __end_of___lwmod 19FC           ___awdiv@counter 0024  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088            __CFG_FCMEN$OFF 0000  
         __end_of_dpowers 10A0                     _scale 0C9D           __end_of_isdigit 190D  
                   _setup 190D            __CFG_BOREN$OFF 0000                     pclath 000A  
          _lcd8_setCursor 1936                     status 0003                     wtemp0 007E  
         __end_of_sprintf 0680      __size_of_analogInSel 0099            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 2000                    ??_main 00C6  
    __size_of__tdiv_to_l_ 00BD          ___llmod@dividend 0077                    ?_scale 0042  
                  _ADRESH 001E    __end_of_lcd8_setCursor 1952          ___awdiv@dividend 0022  
                  ?_setup 0070          __end_of_adcSetup 10C1                    i1l3741 1CCB  
                  i1l3733 1CB8                    i1l3751 1CE1                    i1l3743 1CCF  
                  i1l3735 1CBF                    i1l3761 1CF6                    i1l3753 1CE5  
                  i1l3745 1CD3                    i1l3737 1CC3                    i1l3771 1D0F  
                  i1l3763 1CFA                    i1l3755 1CE9                    i1l3747 1CD9  
                  i1l3739 1CC7                    i1l3773 1D13                    i1l3765 1CFE  
                  i1l3757 1CEF                    i1l3749 1CDD                    i1l3775 1D17  
                  i1l3767 1D02                    i1l3759 1CF2                    i1l3769 1D0B  
                  u610_20 1CE5                    u602_20 1CBF                    u610_21 1CE4  
                  u602_21 1CBE                    u611_20 1CE9                    u603_20 1CC3  
                  u611_21 1CE8                    u603_21 1CC2                    u612_20 1CF6  
                  u604_20 1CC7                    u612_21 1CF5                    u604_21 1CC6  
                  u613_20 1CFA                    u605_20 1CCB                    u613_21 1CF9  
                  u605_21 1CCA                    u614_20 1CFE                    u606_20 1CCF  
                  u614_21 1CFD                    u606_21 1CCE                    u615_20 1D02  
                  u607_20 1CD9                    u615_21 1D01                    u607_21 1CD8  
                  u616_20 1D0B                    u608_20 1CDD                    u616_21 1D0A  
                  u608_21 1CDC                    u617_20 1D0F                    u609_20 1CE1  
                  u617_21 1D0E                    u609_21 1CE0                    u618_20 1D13  
                  u618_21 1D12                    u619_20 1D17                    u619_21 1D16  
        __end_of___xxtofl 093C          __end_of_lcd8_cmd 18FB            __CFG_PWRTE$OFF 0000  
        __end_of__powers_ 1044                    ___flge 10EA                    ___fleq 1A42  
               ??___fladd 005E                    ___wmul 1977                 ??___fldiv 004A  
               ??___awdiv 007A                 ??___flneg 0077                 ??___awmod 0077  
               ??___flmul 0030                 ??___flsub 007B                 ??___fltol 0059  
                  _datos1 00DD                    _datos2 00D3                 ??___lldiv 0020  
               ??___llmod 0020                 ??___lwdiv 0079                 ??___lwmod 0077  
                  _fround 136B                    _oscInt 1D23          ___awdiv@quotient 0026  
         ___awmod@divisor 0073           ___awmod@counter 0078     __size_of_lcd8_display 0026  
               ??_isdigit 0073        __size_of__Umul8_16 0029                    saved_w 007E  
               ??_sprintf 00A8           ?_lcd8_setCursor 0076                ___flge@ff1 0073  
              ___flge@ff2 0077              ___xxtofl@arg 0022              ___xxtofl@exp 0021  
            ___xxtofl@val 0073                ___fleq@ff1 0073                ___fleq@ff2 0077  
              _adcFoscSel 1952   __end_of__initialization 001B                ___flneg@f1 0073  
              ___fltol@f1 0055            __pcstackCOMMON 0070              _lcd8_display 199C  
           __end_of_scale 1000             __end_of_setup 1920                __div_to_l_ 0680  
         __div_to_l_@exp1 0026           __div_to_l_@cntr 0025                   ??_scale 0046  
         __div_to_l_@quot 0021                   ??_setup 0073                __pbssBANK0 006F  
              __pbssBANK1 00CA        __size_of_intEnable 0006                _lcd8_init2 1AE2  
              _delay_1ms2 1920                _lcd8_write 18D9             __div_to_l_@f1 0073  
           __div_to_l_@f2 0077         __end_of__Umul8_16 10EA        lcd8_setCursor@fila 0077  
              __pmaintext 1E31                   ?___flge 0073                   ?___fleq 0073  
                 ?___wmul 0073                __pintentry 0004                   ?_fround 0042  
                 ?_oscInt 0070                 ?_adcSetup 0070                 ?___xxtofl 0073  
               ?_lcd8_cmd 0070                __stringtab 1000               ?_adcFoscSel 0070  
       __end_of__npowers_ 1078                _scale$1110 0050           __size_of___flge 00A4  
         __size_of___fleq 0050                   ___fladd 1578                   ___fldiv 118E  
                 ___awdiv 1C4F                   ___flneg 18CE                   ___awmod 1B8E  
                 ___flmul 093C                   ___flsub 1A92                   ___fltol 0804  
                 ___lldiv 1BE7           __size_of___wmul 0025                   ___llmod 1B38  
                 ___lwdiv 19FC                   ___lwmod 19C2                ??_adcSetup 0073  
       __end_of_intEnable 18C6           __size_of_fround 020D           __size_of_oscInt 0075  
                 __ptext1 001F                   __ptext2 0C9D                   __ptext3 1B8E  
                 __ptext4 1C4F                   __ptext5 18FB                   __ptext6 136B  
                 __ptext7 19C2                   __ptext8 19FC                   __ptext9 093C  
             ?__div_to_l_ 0073                   _dpowers 1078                   _isdigit 18FB  
            __size_of_isr 006B                ??___xxtofl 0077                ??_lcd8_cmd 0075  
        ___awmod@dividend 0075             lcd8_write@dat 0075                   _sprintf 001F  
                 clrloop0 18C7             ??_analogInSel 0073      end_of_initialization 001B  
             ?_lcd8_init2 0070               ?_delay_1ms2 0070               ?_lcd8_write 0070  
         ___lldiv@divisor 0073           ___lldiv@counter 0025            __tdiv_to_l_@f1 0073  
          __tdiv_to_l_@f2 0077             ??__tdiv_to_l_ 0020                 _PORTCbits 0007  
     __size_of_adcFoscSel 0025               ___fladd@grs 0069          ??_lcd8_setCursor 0077  
           ___xxtofl@sign 0020               ___fldiv@grs 0056               ___fldiv@rem 004F  
             ___flmul@grs 0036       __end_of_analogInSel 1E31       __size_of__div_to_l_ 00BE  
          adcFoscSel@fosc 0075            __end_of___flge 118E            __end_of___fleq 1A92  
          __end_of___wmul 199C            __end_of_fround 1578            __end_of_oscInt 1D98  
     __size_of_lcd8_init2 0056       __size_of_delay_1ms2 0016       __size_of_lcd8_write 0011  
     start_initialization 000F         lcd8_display@value 0076       __end_of__tdiv_to_l_ 07FB  
             __end_of_isr 1D23           ___llmod@divisor 0073           ___llmod@counter 0021  
__CFG_FOSC$INTRC_NOCLKOUT 0000                  ??___flge 0020                  ??___fleq 0020  
                ??___wmul 0077                 __Umul8_16 10C1                  ??_fround 0046  
                ??_oscInt 0073             sprintf@tmpval 00BA                 ___fladd@a 005A  
               ___fladd@b 0056                fround@prec 0055         __size_of_adcSetup 000D  
               ___fldiv@a 0042                 ___fldiv@b 0046                 ___flmul@a 002C  
               ___flmul@b 0028                 ___flsub@a 00A0                 ___flsub@b 00A4  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00A0  
       __size_of___xxtofl 00BC         __size_of_lcd8_cmd 0011               _analogInSel 1D98  
              oscInt@freq 0075              ??_adcFoscSel 0073               sprintf@flag 00B2  
             sprintf@eexp 00B8               sprintf@fval 00C1               sprintf@prec 00BF  
   lcd8_setCursor@columna 0076          ___lwdiv@dividend 0022                  ?___fladd 0056  
                ?___fldiv 0042                  ?___awdiv 0020                  ?___flneg 0073  
                ?___awmod 0073                  ?___flmul 0028                  ?___flsub 00A0  
                ?___fltol 0055                  ?___lldiv 0073                  ?___llmod 0073  
               __npowers_ 1044                ?__Umul8_16 0073                  ?___lwdiv 0020  
                ?___lwmod 0073                 __pstrings 1000               __tdiv_to_l_ 073E  
            ??__div_to_l_ 0020        __end_of_adcFoscSel 1977                  ?_isdigit 0070  
               _intEnable 18C0          ___lwdiv@quotient 0024                  ?_sprintf 006A  
          __size_of_scale 0363            __size_of_setup 0013              ??_lcd8_init2 0076  
       interrupt_function 0004            ___wmul@product 0077              ??_delay_1ms2 0073  
            ??_lcd8_write 0075                 clear_ram0 18C6                  _PIE1bits 008C  
                _PIR1bits 000C        __end_of__div_to_l_ 073E                _ADCON0bits 001F  
             __stringbase 100F                _ADCON1bits 009F         ___wmul@multiplier 0073  
      __end_of_lcd8_init2 1B38                ?_intEnable 0070        __end_of_delay_1ms2 1936  
      __end_of_lcd8_write 18EA             ?_lcd8_display 0076               ??__Umul8_16 0075  
        __size_of___fladd 0288          __size_of___fldiv 01DD          __size_of___awdiv 0069  
        __size_of___flneg 000B          __size_of___awmod 0059          __size_of___flmul 0361  
        __size_of___flsub 0050          __size_of___fltol 007C          __size_of___lldiv 0068  
        __size_of___llmod 0056          __size_of___lwdiv 0046          __size_of___lwmod 003A  
                _adcSetup 10B4               _fround$1108 0051               _fround$1109 004D  
      __end_of__stringtab 1010               _isdigit$932 0073                _ANSELHbits 0189  
              sprintf@val 00B4               lcd8_cmd@cmd 0075                  ___xxtofl 0880  
                _lcd8_cmd 18EA          __size_of_isdigit 0012           ___lwdiv@divisor 0020  
         ___lwdiv@counter 0026                  __ptext10 10C1                  __ptext11 073E  
                __ptext20 18CE                  __ptext12 0680                  __ptext21 10EA  
                __ptext13 0880                  __ptext30 1920                  __ptext22 1A42  
                __ptext14 1977                  __ptext31 18C0                  __ptext23 190D  
                __ptext15 1B38                  __ptext32 1D98                  __ptext24 1D23  
                __ptext16 1BE7                  __ptext33 10B4                  __ptext25 1936  
                __ptext17 0804                  __ptext34 1952                  __ptext26 1AE2  
                __ptext18 1A92                  __ptext35 118E                  __ptext27 18EA  
                __ptext19 1578                  __ptext36 1CB8                  __ptext28 199C  
                __ptext29 18D9         __CFG_BOR4V$BOR40V 0000                  __powers_ 1010  
        __size_of_sprintf 0661             __size_of_main 01CF               delay_1ms2@i 0073  
                _pot1_val 00CE                  _pot2_val 00CA            ??_lcd8_display 0078  
              _INTCONbits 000B               ??_intEnable 0073                  isdigit@c 0074  
                scale@scl 0054                  intlevel1 0000              ?_analogInSel 0070  
               sprintf@ap 00B1          __tdiv_to_l_@exp1 0029          __tdiv_to_l_@cntr 0028  
               sprintf@sp 00BE          __tdiv_to_l_@quot 0024   __size_of_lcd8_setCursor 001C  
        ___lwmod@dividend 0075          ___lldiv@dividend 0077                 stringcode 100A  
              _OSCCONbits 008F              ?__tdiv_to_l_ 0073    __Umul8_16@multiplicand 0073  
                sprintf@c 00C5                  sprintf@f 006A          ___lldiv@quotient 0021  
         ___lwmod@divisor 0073           ___lwmod@counter 0078                  stringdir 100A  
                stringtab 1000             ___fladd@signs 0066              ___fladd@aexp 0067  
            ___fladd@bexp 0068      __Umul8_16@multiplier 0024         __Umul8_16@product 0020  
