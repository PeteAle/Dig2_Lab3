

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 09 23:03:28 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0007                     _PORTCbits	set	7
   287  0008                     _PORTD	set	8
   288  0007                     _PORTC	set	7
   289  0005                     _PORTA	set	5
   290  0088                     _TRISD	set	136
   291  0087                     _TRISC	set	135
   292  0086                     _TRISB	set	134
   293  0085                     _TRISA	set	133
   294  0189                     _ANSELHbits	set	393
   295  0188                     _ANSEL	set	392
   296                           
   297                           	psect	strings
   298  00A8                     __pstrings:	
   299  00A8                     stringtab:	
   300  00A8                     __stringtab:	
   301  00A8                     stringcode:	
   302                           ;	String table - string pointers are 1 byte each
   303                           
   304  00A8                     stringdir:	
   305  00A8  3000               	movlw	high stringdir
   306  00A9  008A               	movwf	10
   307  00AA  0804               	movf	4,w
   308  00AB  0A84               	incf	4,f
   309  00AC  0782               	addwf	2,f
   310  00AD                     __stringbase:	
   311  00AD  3400               	retlw	0
   312  00AE                     __end_of__stringtab:	
   313  00AE                     STR_1:	
   314  00AE  3450               	retlw	80	;'P'
   315  00AF  3449               	retlw	73	;'I'
   316  00B0  344E               	retlw	78	;'N'
   317  00B1  3443               	retlw	67	;'C'
   318  00B2  3448               	retlw	72	;'H'
   319  00B3  3445               	retlw	69	;'E'
   320  00B4  3420               	retlw	32	;' '
   321  00B5  3450               	retlw	80	;'P'
   322  00B6  3449               	retlw	73	;'I'
   323  00B7  3452               	retlw	82	;'R'
   324  00B8  3455               	retlw	85	;'U'
   325  00B9  344A               	retlw	74	;'J'
   326  00BA  3441               	retlw	65	;'A'
   327  00BB  3400               	retlw	0
   328  00BC                     STR_2:	
   329  00BC  3443               	retlw	67	;'C'
   330  00BD  3448               	retlw	72	;'H'
   331  00BE  3449               	retlw	73	;'I'
   332  00BF  344E               	retlw	78	;'N'
   333  00C0  3447               	retlw	71	;'G'
   334  00C1  3455               	retlw	85	;'U'
   335  00C2  3445               	retlw	69	;'E'
   336  00C3  3453               	retlw	83	;'S'
   337  00C4  3445               	retlw	69	;'E'
   338  00C5  3400               	retlw	0
   339                           
   340                           ; #config settings
   341  0000                     
   342                           	psect	cinit
   343  000F                     start_initialization:	
   344  000F                     __initialization:	
   345  000F                     end_of_initialization:	
   346                           ;End of C runtime variable initialization code
   347                           
   348  000F                     __end_of__initialization:	
   349  000F  0183               	clrf	3
   350  0010  120A  118A  2869   	ljmp	_main	;jump to C main() function
   351                           
   352                           	psect	cstackCOMMON
   353  0070                     __pcstackCOMMON:	
   354  0070                     ?_setup:	
   355  0070                     ?_lcd8_init2:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_lcd8_display:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_lcd8_cmd:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ?_delay_1ms2:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_isr:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ??_isr:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_main:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?_lcd8_write:	
   377                           ; 1 bytes @ 0x0
   378                           
   379                           
   380                           ; 1 bytes @ 0x0
   381  0070                     	ds	2
   382  0072                     ??_setup:	
   383  0072                     ??_delay_1ms2:	
   384                           ; 1 bytes @ 0x2
   385                           
   386  0072                     delay_1ms2@i:	
   387                           ; 1 bytes @ 0x2
   388                           
   389                           
   390                           ; 2 bytes @ 0x2
   391  0072                     	ds	2
   392  0074                     ??_lcd8_cmd:	
   393  0074                     ??_lcd8_write:	
   394                           ; 1 bytes @ 0x4
   395                           
   396  0074                     lcd8_cmd@cmd:	
   397                           ; 1 bytes @ 0x4
   398                           
   399  0074                     lcd8_write@dat:	
   400                           ; 1 bytes @ 0x4
   401                           
   402                           
   403                           ; 1 bytes @ 0x4
   404  0074                     	ds	1
   405  0075                     ??_lcd8_init2:	
   406  0075                     ??_lcd8_display:	
   407                           ; 1 bytes @ 0x5
   408                           
   409                           
   410                           ; 1 bytes @ 0x5
   411  0075                     	ds	1
   412  0076                     lcd8_display@value:	
   413                           
   414                           ; 1 bytes @ 0x6
   415  0076                     	ds	1
   416  0077                     ??_main:	
   417                           
   418                           	psect	maintext
   419  0069                     __pmaintext:	
   420                           ; 1 bytes @ 0x7
   421 ;;
   422 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   423 ;;
   424 ;; *************** function _main *****************
   425 ;; Defined at:
   426 ;;		line 45 in file "Lab3_v2.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : B00/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   440 ;;      Params:         0       0       0       0       0
   441 ;;      Locals:         0       0       0       0       0
   442 ;;      Temps:          0       0       0       0       0
   443 ;;      Totals:         0       0       0       0       0
   444 ;;Total ram usage:        0 bytes
   445 ;; Hardware stack levels required when called:    4
   446 ;; This function calls:
   447 ;;		_lcd8_cmd
   448 ;;		_lcd8_display
   449 ;;		_lcd8_init2
   450 ;;		_setup
   451 ;; This function is called by:
   452 ;;		Startup code after reset
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           
   457                           ;psect for function _main
   458  0069                     _main:	
   459  0069                     l766:	
   460                           ;incstack = 0
   461                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   462                           
   463                           
   464                           ;Lab3_v2.c: 46:     setup();
   465  0069  120A  118A  20DC  120A  118A  	fcall	_setup
   466  006E                     l768:	
   467                           
   468                           ;Lab3_v2.c: 47:     lcd8_init2();
   469  006E  120A  118A  2013  120A  118A  	fcall	_lcd8_init2
   470  0073                     l770:	
   471                           
   472                           ;Lab3_v2.c: 48:     lcd8_display("PINCHE PIRUJA");
   473  0073  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   474  0074  120A  118A  2089  120A  118A  	fcall	_lcd8_display
   475  0079                     l772:	
   476                           
   477                           ;Lab3_v2.c: 49:     lcd8_cmd(0xC0);
   478  0079  30C0               	movlw	192
   479  007A  120A  118A  20EE  120A  118A  	fcall	_lcd8_cmd
   480  007F                     l774:	
   481                           
   482                           ;Lab3_v2.c: 50:     lcd8_display("CHINGUESE");
   483  007F  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   484  0080  120A  118A  2089  120A  118A  	fcall	_lcd8_display
   485  0085                     l36:	
   486                           ;Lab3_v2.c: 51:     while(1);
   487                           
   488  0085                     l37:	
   489  0085  2885               	goto	l36
   490  0086  120A  118A  280C   	ljmp	start
   491  0089                     __end_of_main:	
   492                           
   493                           	psect	text1
   494  00DC                     __ptext1:	
   495 ;; *************** function _setup *****************
   496 ;; Defined at:
   497 ;;		line 54 in file "Lab3_v2.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;		None
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, status,2
   506 ;; Tracked objects:
   507 ;;		On entry : 0/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   511 ;;      Params:         0       0       0       0       0
   512 ;;      Locals:         0       0       0       0       0
   513 ;;      Temps:          0       0       0       0       0
   514 ;;      Totals:         0       0       0       0       0
   515 ;;Total ram usage:        0 bytes
   516 ;; Hardware stack levels used:    1
   517 ;; Hardware stack levels required when called:    1
   518 ;; This function calls:
   519 ;;		Nothing
   520 ;; This function is called by:
   521 ;;		_main
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           
   526                           ;psect for function _setup
   527  00DC                     _setup:	
   528  00DC                     l698:	
   529                           ;incstack = 0
   530                           ; Regs used in _setup: [wreg+status,2]
   531                           
   532                           
   533                           ;Lab3_v2.c: 55:     TRISA = 0x00;
   534  00DC  1683               	bsf	3,5	;RP0=1, select bank1
   535  00DD  1303               	bcf	3,6	;RP1=0, select bank1
   536  00DE  0185               	clrf	5	;volatile
   537  00DF                     l700:	
   538                           
   539                           ;Lab3_v2.c: 56:     TRISB = 0xFF;
   540  00DF  30FF               	movlw	255
   541  00E0  0086               	movwf	6	;volatile
   542  00E1                     l702:	
   543                           
   544                           ;Lab3_v2.c: 57:     TRISC = 0x00;
   545  00E1  0187               	clrf	7	;volatile
   546  00E2                     l704:	
   547                           
   548                           ;Lab3_v2.c: 58:     TRISD = 0x00;
   549  00E2  0188               	clrf	8	;volatile
   550  00E3                     l706:	
   551                           
   552                           ;Lab3_v2.c: 59:     ANSEL = 0x00;
   553  00E3  1683               	bsf	3,5	;RP0=1, select bank3
   554  00E4  1703               	bsf	3,6	;RP1=1, select bank3
   555  00E5  0188               	clrf	8	;volatile
   556  00E6                     l708:	
   557                           
   558                           ;Lab3_v2.c: 60:     ANSELHbits.ANS13 = 1;
   559  00E6  1689               	bsf	9,5	;volatile
   560  00E7                     l710:	
   561                           
   562                           ;Lab3_v2.c: 61:     ANSELHbits.ANS8 = 1;
   563  00E7  1409               	bsf	9,0	;volatile
   564  00E8                     l712:	
   565                           
   566                           ;Lab3_v2.c: 62:     PORTA = 0x00;
   567  00E8  1283               	bcf	3,5	;RP0=0, select bank0
   568  00E9  1303               	bcf	3,6	;RP1=0, select bank0
   569  00EA  0185               	clrf	5	;volatile
   570  00EB                     l714:	
   571                           
   572                           ;Lab3_v2.c: 63:     PORTC = 0x00;
   573  00EB  0187               	clrf	7	;volatile
   574  00EC                     l716:	
   575                           
   576                           ;Lab3_v2.c: 64:     PORTD = 0x00;
   577  00EC  0188               	clrf	8	;volatile
   578  00ED                     l42:	
   579  00ED  0008               	return
   580  00EE                     __end_of_setup:	
   581                           
   582                           	psect	text2
   583  0013                     __ptext2:	
   584 ;; *************** function _lcd8_init2 *****************
   585 ;; Defined at:
   586 ;;		line 18 in file "LCDv1.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   600 ;;      Params:         0       0       0       0       0
   601 ;;      Locals:         0       0       0       0       0
   602 ;;      Temps:          2       0       0       0       0
   603 ;;      Totals:         2       0       0       0       0
   604 ;;Total ram usage:        2 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; Hardware stack levels required when called:    3
   607 ;; This function calls:
   608 ;;		_lcd8_cmd
   609 ;; This function is called by:
   610 ;;		_main
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           
   615                           ;psect for function _lcd8_init2
   616  0013                     _lcd8_init2:	
   617  0013                     l718:	
   618                           ;incstack = 0
   619                           ; Regs used in _lcd8_init2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   620                           
   621                           
   622                           ;LCDv1.c: 19:     _delay((unsigned long)((20)*(4000000/4000.0)));
   623  0013  301A               	movlw	26
   624  0014  00F6               	movwf	??_lcd8_init2+1
   625  0015  30F8               	movlw	248
   626  0016  00F5               	movwf	??_lcd8_init2
   627  0017                     u47:	
   628  0017  0BF5               	decfsz	??_lcd8_init2,f
   629  0018  2817               	goto	u47
   630  0019  0BF6               	decfsz	??_lcd8_init2+1,f
   631  001A  2817               	goto	u47
   632  001B  0000               	nop
   633  001C                     l720:	
   634                           
   635                           ;LCDv1.c: 20:     lcd8_cmd(0x30);
   636  001C  3030               	movlw	48
   637  001D  120A  118A  20EE  120A  118A  	fcall	_lcd8_cmd
   638  0022                     l722:	
   639                           
   640                           ;LCDv1.c: 21:     _delay((unsigned long)((5)*(4000000/4000.0)));
   641  0022  3007               	movlw	7
   642  0023  00F6               	movwf	??_lcd8_init2+1
   643  0024  307D               	movlw	125
   644  0025  00F5               	movwf	??_lcd8_init2
   645  0026                     u57:	
   646  0026  0BF5               	decfsz	??_lcd8_init2,f
   647  0027  2826               	goto	u57
   648  0028  0BF6               	decfsz	??_lcd8_init2+1,f
   649  0029  2826               	goto	u57
   650                           
   651                           ;LCDv1.c: 22:     lcd8_cmd(0x30);
   652  002A  3030               	movlw	48
   653  002B  120A  118A  20EE  120A  118A  	fcall	_lcd8_cmd
   654  0030                     l724:	
   655                           
   656                           ;LCDv1.c: 23:     _delay((unsigned long)((1)*(4000000/4000.0)));
   657  0030  30C7               	movlw	199
   658  0031  00F5               	movwf	??_lcd8_init2
   659  0032                     u67:	
   660  0032  2833               	nop2
   661  0033  0BF5               	decfsz	??_lcd8_init2,f
   662  0034  2832               	goto	u67
   663  0035  2836               	nop2
   664  0036  2837               	nop2
   665  0037                     l726:	
   666                           
   667                           ;LCDv1.c: 24:     lcd8_cmd(0x30);
   668  0037  3030               	movlw	48
   669  0038  120A  118A  20EE  120A  118A  	fcall	_lcd8_cmd
   670                           
   671                           ;LCDv1.c: 25:     _delay((unsigned long)((1)*(4000000/4000.0)));
   672  003D  30C7               	movlw	199
   673  003E  00F5               	movwf	??_lcd8_init2
   674  003F                     u77:	
   675  003F  2840               	nop2
   676  0040  0BF5               	decfsz	??_lcd8_init2,f
   677  0041  283F               	goto	u77
   678  0042  2843               	nop2
   679  0043  2844               	nop2
   680  0044                     l728:	
   681                           
   682                           ;LCDv1.c: 26:     lcd8_cmd(0x38);
   683  0044  3038               	movlw	56
   684  0045  120A  118A  20EE  120A  118A  	fcall	_lcd8_cmd
   685  004A                     l730:	
   686                           
   687                           ;LCDv1.c: 27:     lcd8_cmd(0x10);
   688  004A  3010               	movlw	16
   689  004B  120A  118A  20EE  120A  118A  	fcall	_lcd8_cmd
   690  0050                     l732:	
   691                           
   692                           ;LCDv1.c: 28:     lcd8_cmd(0x01);
   693  0050  3001               	movlw	1
   694  0051  120A  118A  20EE  120A  118A  	fcall	_lcd8_cmd
   695  0056                     l734:	
   696                           
   697                           ;LCDv1.c: 29:     lcd8_cmd(0x06);
   698  0056  3006               	movlw	6
   699  0057  120A  118A  20EE  120A  118A  	fcall	_lcd8_cmd
   700  005C                     l736:	
   701                           
   702                           ;LCDv1.c: 30:     lcd8_cmd(0x0C);
   703  005C  300C               	movlw	12
   704  005D  120A  118A  20EE  120A  118A  	fcall	_lcd8_cmd
   705  0062                     l738:	
   706                           
   707                           ;LCDv1.c: 31:     lcd8_cmd(0x80);
   708  0062  3080               	movlw	128
   709  0063  120A  118A  20EE  120A  118A  	fcall	_lcd8_cmd
   710  0068                     l55:	
   711  0068  0008               	return
   712  0069                     __end_of_lcd8_init2:	
   713                           
   714                           	psect	text3
   715  00EE                     __ptext3:	
   716 ;; *************** function _lcd8_cmd *****************
   717 ;; Defined at:
   718 ;;		line 34 in file "LCDv1.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;  cmd             1    wreg     unsigned char 
   721 ;; Auto vars:     Size  Location     Type
   722 ;;  cmd             1    4[COMMON] unsigned char 
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   732 ;;      Params:         0       0       0       0       0
   733 ;;      Locals:         1       0       0       0       0
   734 ;;      Temps:          0       0       0       0       0
   735 ;;      Totals:         1       0       0       0       0
   736 ;;Total ram usage:        1 bytes
   737 ;; Hardware stack levels used:    1
   738 ;; Hardware stack levels required when called:    2
   739 ;; This function calls:
   740 ;;		_delay_1ms2
   741 ;; This function is called by:
   742 ;;		_main
   743 ;;		_lcd8_init2
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           
   748                           ;psect for function _lcd8_cmd
   749  00EE                     _lcd8_cmd:	
   750                           
   751                           ;incstack = 0
   752                           ; Regs used in _lcd8_cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   753                           ;lcd8_cmd@cmd stored from wreg
   754  00EE  00F4               	movwf	lcd8_cmd@cmd
   755  00EF                     l674:	
   756                           
   757                           ;LCDv1.c: 35:     PORTA = cmd;
   758  00EF  0874               	movf	lcd8_cmd@cmd,w
   759  00F0  1283               	bcf	3,5	;RP0=0, select bank0
   760  00F1  1303               	bcf	3,6	;RP1=0, select bank0
   761  00F2  0085               	movwf	5	;volatile
   762  00F3                     l676:	
   763                           
   764                           ;LCDv1.c: 36:     PORTCbits.RC0 = 0;
   765  00F3  1007               	bcf	7,0	;volatile
   766  00F4                     l678:	
   767                           
   768                           ;LCDv1.c: 37:     PORTCbits.RC1 = 0;
   769  00F4  1087               	bcf	7,1	;volatile
   770  00F5                     l680:	
   771                           
   772                           ;LCDv1.c: 38:     PORTCbits.RC2 = 1;
   773  00F5  1507               	bsf	7,2	;volatile
   774  00F6                     l682:	
   775                           
   776                           ;LCDv1.c: 39:     delay_1ms2();
   777  00F6  120A  118A  20C6  120A  118A  	fcall	_delay_1ms2
   778  00FB                     l684:	
   779                           
   780                           ;LCDv1.c: 40:     PORTCbits.RC2 = 0;
   781  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   782  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   783  00FD  1107               	bcf	7,2	;volatile
   784  00FE                     l58:	
   785  00FE  0008               	return
   786  00FF                     __end_of_lcd8_cmd:	
   787                           
   788                           	psect	text4
   789  0089                     __ptext4:	
   790 ;; *************** function _lcd8_display *****************
   791 ;; Defined at:
   792 ;;		line 52 in file "LCDv1.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;  value           1    wreg     PTR unsigned char 
   795 ;;		 -> STR_2(10), STR_1(14), 
   796 ;; Auto vars:     Size  Location     Type
   797 ;;  value           1    6[COMMON] PTR unsigned char 
   798 ;;		 -> STR_2(10), STR_1(14), 
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   808 ;;      Params:         0       0       0       0       0
   809 ;;      Locals:         1       0       0       0       0
   810 ;;      Temps:          1       0       0       0       0
   811 ;;      Totals:         2       0       0       0       0
   812 ;;Total ram usage:        2 bytes
   813 ;; Hardware stack levels used:    1
   814 ;; Hardware stack levels required when called:    3
   815 ;; This function calls:
   816 ;;		_lcd8_write
   817 ;; This function is called by:
   818 ;;		_main
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           
   823                           ;psect for function _lcd8_display
   824  0089                     _lcd8_display:	
   825                           
   826                           ;incstack = 0
   827                           ; Regs used in _lcd8_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   828                           ;lcd8_display@value stored from wreg
   829  0089  00F6               	movwf	lcd8_display@value
   830  008A                     l758:	
   831                           
   832                           ;LCDv1.c: 53:     while(*value){
   833  008A  289B               	goto	l764
   834  008B                     l760:	
   835                           
   836                           ;LCDv1.c: 54:         lcd8_write(*value++);
   837  008B  0876               	movf	lcd8_display@value,w
   838  008C  0084               	movwf	4
   839  008D  120A  118A  20A8  120A  118A  	fcall	stringdir
   840  0092  120A  118A  20FF  120A  118A  	fcall	_lcd8_write
   841  0097                     l762:	
   842  0097  3001               	movlw	1
   843  0098  00F5               	movwf	??_lcd8_display
   844  0099  0875               	movf	??_lcd8_display,w
   845  009A  07F6               	addwf	lcd8_display@value,f
   846  009B                     l764:	
   847                           
   848                           ;LCDv1.c: 53:     while(*value){
   849  009B  0876               	movf	lcd8_display@value,w
   850  009C  0084               	movwf	4
   851  009D  120A  118A  20A8  120A  118A  	fcall	stringdir
   852  00A2  3A00               	xorlw	0
   853  00A3  1D03               	skipz
   854  00A4  28A6               	goto	u31
   855  00A5  28A7               	goto	u30
   856  00A6                     u31:	
   857  00A6  288B               	goto	l760
   858  00A7                     u30:	
   859  00A7                     l67:	
   860  00A7  0008               	return
   861  00A8                     __end_of_lcd8_display:	
   862                           
   863                           	psect	text5
   864  00FF                     __ptext5:	
   865 ;; *************** function _lcd8_write *****************
   866 ;; Defined at:
   867 ;;		line 43 in file "LCDv1.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;  dat             1    wreg     unsigned char 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  dat             1    4[COMMON] unsigned char 
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   881 ;;      Params:         0       0       0       0       0
   882 ;;      Locals:         1       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0
   884 ;;      Totals:         1       0       0       0       0
   885 ;;Total ram usage:        1 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; Hardware stack levels required when called:    2
   888 ;; This function calls:
   889 ;;		_delay_1ms2
   890 ;; This function is called by:
   891 ;;		_lcd8_display
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           
   896                           ;psect for function _lcd8_write
   897  00FF                     _lcd8_write:	
   898                           
   899                           ;incstack = 0
   900                           ; Regs used in _lcd8_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   901                           ;lcd8_write@dat stored from wreg
   902  00FF  00F4               	movwf	lcd8_write@dat
   903  0100                     l686:	
   904                           
   905                           ;LCDv1.c: 44:     PORTA = dat;
   906  0100  0874               	movf	lcd8_write@dat,w
   907  0101  1283               	bcf	3,5	;RP0=0, select bank0
   908  0102  1303               	bcf	3,6	;RP1=0, select bank0
   909  0103  0085               	movwf	5	;volatile
   910  0104                     l688:	
   911                           
   912                           ;LCDv1.c: 45:     PORTCbits.RC0 = 1;
   913  0104  1407               	bsf	7,0	;volatile
   914  0105                     l690:	
   915                           
   916                           ;LCDv1.c: 46:     PORTCbits.RC1 = 0;
   917  0105  1087               	bcf	7,1	;volatile
   918  0106                     l692:	
   919                           
   920                           ;LCDv1.c: 47:     PORTCbits.RC2 = 1;
   921  0106  1507               	bsf	7,2	;volatile
   922  0107                     l694:	
   923                           
   924                           ;LCDv1.c: 48:     delay_1ms2();
   925  0107  120A  118A  20C6  120A  118A  	fcall	_delay_1ms2
   926  010C                     l696:	
   927                           
   928                           ;LCDv1.c: 49:     PORTCbits.RC2 = 0;
   929  010C  1283               	bcf	3,5	;RP0=0, select bank0
   930  010D  1303               	bcf	3,6	;RP1=0, select bank0
   931  010E  1107               	bcf	7,2	;volatile
   932  010F                     l61:	
   933  010F  0008               	return
   934  0110                     __end_of_lcd8_write:	
   935                           
   936                           	psect	text6
   937  00C6                     __ptext6:	
   938 ;; *************** function _delay_1ms2 *****************
   939 ;; Defined at:
   940 ;;		line 58 in file "LCDv1.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  i               2    2[COMMON] int 
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, status,2, btemp+1
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   954 ;;      Params:         0       0       0       0       0
   955 ;;      Locals:         2       0       0       0       0
   956 ;;      Temps:          0       0       0       0       0
   957 ;;      Totals:         2       0       0       0       0
   958 ;;Total ram usage:        2 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:    1
   961 ;; This function calls:
   962 ;;		Nothing
   963 ;; This function is called by:
   964 ;;		_lcd8_cmd
   965 ;;		_lcd8_write
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           
   970                           ;psect for function _delay_1ms2
   971  00C6                     _delay_1ms2:	
   972  00C6                     l664:	
   973                           ;incstack = 0
   974                           ; Regs used in _delay_1ms2: [wreg+status,2+btemp+1]
   975                           
   976                           
   977                           ;LCDv1.c: 59:     for (int i = 0; i < 50; i++);
   978  00C6  01F2               	clrf	delay_1ms2@i
   979  00C7  01F3               	clrf	delay_1ms2@i+1
   980  00C8                     l670:	
   981  00C8  3001               	movlw	1
   982  00C9  07F2               	addwf	delay_1ms2@i,f
   983  00CA  1803               	skipnc
   984  00CB  0AF3               	incf	delay_1ms2@i+1,f
   985  00CC  3000               	movlw	0
   986  00CD  07F3               	addwf	delay_1ms2@i+1,f
   987  00CE                     l672:	
   988  00CE  0873               	movf	delay_1ms2@i+1,w
   989  00CF  3A80               	xorlw	128
   990  00D0  00FF               	movwf	btemp+1
   991  00D1  3080               	movlw	128
   992  00D2  027F               	subwf	btemp+1,w
   993  00D3  1D03               	skipz
   994  00D4  28D7               	goto	u15
   995  00D5  3032               	movlw	50
   996  00D6  0272               	subwf	delay_1ms2@i,w
   997  00D7                     u15:	
   998  00D7  1C03               	skipc
   999  00D8  28DA               	goto	u11
  1000  00D9  28DB               	goto	u10
  1001  00DA                     u11:	
  1002  00DA  28C8               	goto	l670
  1003  00DB                     u10:	
  1004  00DB                     l72:	
  1005  00DB  0008               	return
  1006  00DC                     __end_of_delay_1ms2:	
  1007                           
  1008                           	psect	text7
  1009  0110                     __ptext7:	
  1010 ;; *************** function _isr *****************
  1011 ;; Defined at:
  1012 ;;		line 41 in file "Lab3_v2.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		None
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1026 ;;      Params:         0       0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0
  1028 ;;      Temps:          2       0       0       0       0
  1029 ;;      Totals:         2       0       0       0       0
  1030 ;;Total ram usage:        2 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; This function calls:
  1033 ;;		Nothing
  1034 ;; This function is called by:
  1035 ;;		Interrupt level 1
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           
  1040                           ;psect for function _isr
  1041  0110                     _isr:	
  1042  0110                     i1l31:	
  1043  0110  0871               	movf	??_isr+1,w
  1044  0111  008A               	movwf	10
  1045  0112  0E70               	swapf	??_isr^(0+4294967168),w
  1046  0113  0083               	movwf	3
  1047  0114  0EFE               	swapf	btemp,f
  1048  0115  0E7E               	swapf	btemp,w
  1049  0116  0009               	retfie
  1050  0117                     __end_of_isr:	
  1051  007E                     btemp	set	126	;btemp
  1052  007E                     wtemp0	set	126
  1053                           
  1054                           	psect	intentry
  1055  0004                     __pintentry:	
  1056                           ;incstack = 0
  1057                           ; Regs used in _isr: []
  1058                           
  1059  0004                     interrupt_function:	
  1060  007E                     saved_w	set	btemp
  1061  0004  00FE               	movwf	btemp
  1062  0005  0E03               	swapf	3,w
  1063  0006  00F0               	movwf	??_isr
  1064  0007  080A               	movf	10,w
  1065  0008  00F1               	movwf	??_isr+1
  1066  0009  120A  118A  2910   	ljmp	_isr


Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd8_display@value	PTR unsigned char  size(1) Largest target is 14
		 -> STR_2(CODE[10]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_lcd8_display
    _main->_lcd8_init2
    _lcd8_init2->_lcd8_cmd
    _lcd8_cmd->_delay_1ms2
    _lcd8_display->_lcd8_write
    _lcd8_write->_delay_1ms2

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     246
                           _lcd8_cmd
                       _lcd8_display
                         _lcd8_init2
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd8_init2                                           2     2      0      45
                                              5 COMMON     2     2      0
                           _lcd8_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd8_cmd                                             1     1      0      45
                                              4 COMMON     1     1      0
                         _delay_1ms2
 ---------------------------------------------------------------------------------
 (1) _lcd8_display                                         2     2      0     156
                                              5 COMMON     2     2      0
                         _lcd8_write
 ---------------------------------------------------------------------------------
 (2) _lcd8_write                                           1     1      0      45
                                              4 COMMON     1     1      0
                         _delay_1ms2
 ---------------------------------------------------------------------------------
 (3) _delay_1ms2                                           2     2      0      30
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd8_cmd
     _delay_1ms2
   _lcd8_display
     _lcd8_write
       _delay_1ms2
   _lcd8_init2
     _lcd8_cmd
       _delay_1ms2
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 09 23:03:28 2020

                       pc 0002               __CFG_CP$OFF 0000                        l42 00ED  
                      l36 0085                        l61 010F                        l37 0085  
                      l55 0068                        l72 00DB                        l58 00FE  
                      l67 00A7                        u10 00DB                        u11 00DA  
                      u30 00A7                        u15 00D7                        u31 00A6  
                      u47 0017                        u57 0026                        u67 0032  
                      u77 003F                        fsr 0004                       l700 00DF  
                     l710 00E7                       l702 00E1                       l720 001C  
                     l712 00E8                       l704 00E2                       l730 004A  
                     l722 0022                       l714 00EB                       l706 00E3  
                     l732 0050                       l724 0030                       l716 00EC  
                     l708 00E6                       l670 00C8                       l734 0056  
                     l726 0037                       l718 0013                       l672 00CE  
                     l664 00C6                       l760 008B                       l680 00F5  
                     l736 005C                       l728 0044                       l690 0105  
                     l762 0097                       l682 00F6                       l674 00EF  
                     l738 0062                       l770 0073                       l692 0106  
                     l764 009B                       l684 00FB                       l676 00F3  
                     l772 0079                       l694 0107                       l686 0100  
                     l758 008A                       l678 00F4                       l774 007F  
                     l766 0069                       l696 010C                       l688 0104  
                     l768 006E                       l698 00DC              __CFG_CPD$OFF 0000  
                     _isr 0110                       fsr0 0004      __end_of_lcd8_display 00A8  
            __CFG_LVP$OFF 0000                      ?_isr 0070                      STR_1 00AE  
                    STR_2 00BC                      i1l31 0110              __CFG_WRT$OFF 0000  
                    _main 0069                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000                     ??_isr 0070                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _PORTA 0005  
                   _PORTC 0007                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
          __CFG_FCMEN$OFF 0000                     _setup 00DC            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 0089  
                  ??_main 0077                    ?_setup 0070          __end_of_lcd8_cmd 00FF  
          __CFG_PWRTE$OFF 0000     __size_of_lcd8_display 001F                    saved_w 007E  
 __end_of__initialization 000F            __pcstackCOMMON 0070              _lcd8_display 0089  
           __end_of_setup 00EE                   ??_setup 0072                _lcd8_init2 0013  
              _delay_1ms2 00C6                _lcd8_write 00FF                __pmaintext 0069  
              __pintentry 0004                 ?_lcd8_cmd 0070                __stringtab 00A8  
                 __ptext1 00DC                   __ptext2 0013                   __ptext3 00EE  
                 __ptext4 0089                   __ptext5 00FF                   __ptext6 00C6  
                 __ptext7 0110              __size_of_isr 0007                ??_lcd8_cmd 0074  
           lcd8_write@dat 0074      end_of_initialization 000F               ?_lcd8_init2 0070  
             ?_delay_1ms2 0070               ?_lcd8_write 0070                 _PORTCbits 0007  
     __size_of_lcd8_init2 0056       __size_of_delay_1ms2 0016       __size_of_lcd8_write 0011  
     start_initialization 000F         lcd8_display@value 0076               __end_of_isr 0117  
__CFG_FOSC$INTRC_NOCLKOUT 0000                 ___latbits 0002         __size_of_lcd8_cmd 0011  
               __pstrings 00A8            __size_of_setup 0012              ??_lcd8_init2 0075  
       interrupt_function 0004              ??_delay_1ms2 0072              ??_lcd8_write 0074  
             __stringbase 00AD        __end_of_lcd8_init2 0069        __end_of_delay_1ms2 00DC  
      __end_of_lcd8_write 0110             ?_lcd8_display 0070        __end_of__stringtab 00AE  
              _ANSELHbits 0189               lcd8_cmd@cmd 0074                  _lcd8_cmd 00EE  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0020               delay_1ms2@i 0072  
          ??_lcd8_display 0075                  intlevel1 0000                 stringcode 00A8  
                stringdir 00A8                  stringtab 00A8  
