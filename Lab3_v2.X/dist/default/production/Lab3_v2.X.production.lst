

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 10 17:39:52 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.10
    53                           ; Generated 31/07/2019 GMT
    54                           ; 
    55                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F887 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  0105                     	;# 
   150  0107                     	;# 
   151  0108                     	;# 
   152  0109                     	;# 
   153  010C                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  0185                     	;# 
   159  0187                     	;# 
   160  0188                     	;# 
   161  0189                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0013                     	;# 
   185  0014                     	;# 
   186  0015                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0017                     	;# 
   190  0018                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  001D                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  0081                     	;# 
   200  0085                     	;# 
   201  0086                     	;# 
   202  0087                     	;# 
   203  0088                     	;# 
   204  0089                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0095                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  0105                     	;# 
   228  0107                     	;# 
   229  0108                     	;# 
   230  0109                     	;# 
   231  010C                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  010E                     	;# 
   235  010F                     	;# 
   236  0185                     	;# 
   237  0187                     	;# 
   238  0188                     	;# 
   239  0189                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  000E                     	;# 
   258  000F                     	;# 
   259  0010                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0013                     	;# 
   263  0014                     	;# 
   264  0015                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001B                     	;# 
   273  001C                     	;# 
   274  001D                     	;# 
   275  001E                     	;# 
   276  001F                     	;# 
   277  0081                     	;# 
   278  0085                     	;# 
   279  0086                     	;# 
   280  0087                     	;# 
   281  0088                     	;# 
   282  0089                     	;# 
   283  008C                     	;# 
   284  008D                     	;# 
   285  008E                     	;# 
   286  008F                     	;# 
   287  0090                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0094                     	;# 
   294  0095                     	;# 
   295  0096                     	;# 
   296  0097                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009A                     	;# 
   300  009B                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  009F                     	;# 
   305  0105                     	;# 
   306  0107                     	;# 
   307  0108                     	;# 
   308  0109                     	;# 
   309  010C                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  010F                     	;# 
   314  0185                     	;# 
   315  0187                     	;# 
   316  0188                     	;# 
   317  0189                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320  0000                     	;# 
   321  0001                     	;# 
   322  0002                     	;# 
   323  0003                     	;# 
   324  0004                     	;# 
   325  0005                     	;# 
   326  0006                     	;# 
   327  0007                     	;# 
   328  0008                     	;# 
   329  0009                     	;# 
   330  000A                     	;# 
   331  000B                     	;# 
   332  000C                     	;# 
   333  000D                     	;# 
   334  000E                     	;# 
   335  000E                     	;# 
   336  000F                     	;# 
   337  0010                     	;# 
   338  0011                     	;# 
   339  0012                     	;# 
   340  0013                     	;# 
   341  0014                     	;# 
   342  0015                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0017                     	;# 
   346  0018                     	;# 
   347  0019                     	;# 
   348  001A                     	;# 
   349  001B                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  001D                     	;# 
   353  001E                     	;# 
   354  001F                     	;# 
   355  0081                     	;# 
   356  0085                     	;# 
   357  0086                     	;# 
   358  0087                     	;# 
   359  0088                     	;# 
   360  0089                     	;# 
   361  008C                     	;# 
   362  008D                     	;# 
   363  008E                     	;# 
   364  008F                     	;# 
   365  0090                     	;# 
   366  0091                     	;# 
   367  0092                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0095                     	;# 
   373  0096                     	;# 
   374  0097                     	;# 
   375  0098                     	;# 
   376  0099                     	;# 
   377  009A                     	;# 
   378  009B                     	;# 
   379  009C                     	;# 
   380  009D                     	;# 
   381  009E                     	;# 
   382  009F                     	;# 
   383  0105                     	;# 
   384  0107                     	;# 
   385  0108                     	;# 
   386  0109                     	;# 
   387  010C                     	;# 
   388  010C                     	;# 
   389  010D                     	;# 
   390  010E                     	;# 
   391  010F                     	;# 
   392  0185                     	;# 
   393  0187                     	;# 
   394  0188                     	;# 
   395  0189                     	;# 
   396  018C                     	;# 
   397  018D                     	;# 
   398  0000                     	;# 
   399  0001                     	;# 
   400  0002                     	;# 
   401  0003                     	;# 
   402  0004                     	;# 
   403  0005                     	;# 
   404  0006                     	;# 
   405  0007                     	;# 
   406  0008                     	;# 
   407  0009                     	;# 
   408  000A                     	;# 
   409  000B                     	;# 
   410  000C                     	;# 
   411  000D                     	;# 
   412  000E                     	;# 
   413  000E                     	;# 
   414  000F                     	;# 
   415  0010                     	;# 
   416  0011                     	;# 
   417  0012                     	;# 
   418  0013                     	;# 
   419  0014                     	;# 
   420  0015                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0017                     	;# 
   424  0018                     	;# 
   425  0019                     	;# 
   426  001A                     	;# 
   427  001B                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  001D                     	;# 
   431  001E                     	;# 
   432  001F                     	;# 
   433  0081                     	;# 
   434  0085                     	;# 
   435  0086                     	;# 
   436  0087                     	;# 
   437  0088                     	;# 
   438  0089                     	;# 
   439  008C                     	;# 
   440  008D                     	;# 
   441  008E                     	;# 
   442  008F                     	;# 
   443  0090                     	;# 
   444  0091                     	;# 
   445  0092                     	;# 
   446  0093                     	;# 
   447  0093                     	;# 
   448  0093                     	;# 
   449  0094                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009A                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  009F                     	;# 
   461  0105                     	;# 
   462  0107                     	;# 
   463  0108                     	;# 
   464  0109                     	;# 
   465  010C                     	;# 
   466  010C                     	;# 
   467  010D                     	;# 
   468  010E                     	;# 
   469  010F                     	;# 
   470  0185                     	;# 
   471  0187                     	;# 
   472  0188                     	;# 
   473  0189                     	;# 
   474  018C                     	;# 
   475  018D                     	;# 
   476                           
   477                           	psect	strings
   478  1800                     __pstrings:	
   479  1800                     stringtab:	
   480  1800                     __stringtab:	
   481                           
   482                           ;	String table - string pointers are 1 byte each
   483  1800  1BFF               	btfsc	btemp+1,7
   484  1801  280A               	ljmp	stringcode
   485  1802  1383               	bcf	3,7
   486  1803  187F               	btfsc	btemp+1,0
   487  1804  1783               	bsf	3,7
   488  1805  0800               	movf	0,w
   489  1806  0A84               	incf	4,f
   490  1807  1903               	skipnz
   491  1808  0AFF               	incf	btemp+1,f
   492  1809  0008               	return
   493  180A                     stringcode:	
   494  180A                     stringdir:	
   495  180A  3018               	movlw	high stringdir
   496  180B  008A               	movwf	10
   497  180C  0804               	movf	4,w
   498  180D  0A84               	incf	4,f
   499  180E  0782               	addwf	2,f
   500  180F                     __stringbase:	
   501  180F  3400               	retlw	0
   502  1810                     __end_of__stringtab:	
   503  1810                     __powers_:	
   504  1810  3400               	retlw	0
   505  1811  3400               	retlw	0
   506  1812  3480               	retlw	128
   507  1813  343F               	retlw	63
   508  1814  3400               	retlw	0
   509  1815  3400               	retlw	0
   510  1816  3420               	retlw	32
   511  1817  3441               	retlw	65
   512  1818  3400               	retlw	0
   513  1819  3400               	retlw	0
   514  181A  34C8               	retlw	200
   515  181B  3442               	retlw	66
   516  181C  3400               	retlw	0
   517  181D  3400               	retlw	0
   518  181E  347A               	retlw	122
   519  181F  3444               	retlw	68
   520  1820  3400               	retlw	0
   521  1821  3440               	retlw	64
   522  1822  341C               	retlw	28
   523  1823  3446               	retlw	70
   524  1824  3400               	retlw	0
   525  1825  3450               	retlw	80
   526  1826  34C3               	retlw	195
   527  1827  3447               	retlw	71
   528  1828  3400               	retlw	0
   529  1829  3424               	retlw	36
   530  182A  3474               	retlw	116
   531  182B  3449               	retlw	73
   532  182C  3480               	retlw	128
   533  182D  3496               	retlw	150
   534  182E  3418               	retlw	24
   535  182F  344B               	retlw	75
   536  1830  3420               	retlw	32
   537  1831  34BC               	retlw	188
   538  1832  34BE               	retlw	190
   539  1833  344C               	retlw	76
   540  1834  3428               	retlw	40
   541  1835  346B               	retlw	107
   542  1836  346E               	retlw	110
   543  1837  344E               	retlw	78
   544  1838  34F9               	retlw	249
   545  1839  3402               	retlw	2
   546  183A  3415               	retlw	21
   547  183B  3450               	retlw	80
   548  183C  34EC               	retlw	236
   549  183D  3478               	retlw	120
   550  183E  34AD               	retlw	173
   551  183F  3460               	retlw	96
   552  1840  34CA               	retlw	202
   553  1841  34F2               	retlw	242
   554  1842  3449               	retlw	73
   555  1843  3471               	retlw	113
   556  1844                     __end_of__powers_:	
   557  1844                     __npowers_:	
   558  1844  3400               	retlw	0
   559  1845  3400               	retlw	0
   560  1846  3480               	retlw	128
   561  1847  343F               	retlw	63
   562  1848  34CD               	retlw	205
   563  1849  34CC               	retlw	204
   564  184A  34CC               	retlw	204
   565  184B  343D               	retlw	61
   566  184C  340A               	retlw	10
   567  184D  34D7               	retlw	215
   568  184E  3423               	retlw	35
   569  184F  343C               	retlw	60
   570  1850  346F               	retlw	111
   571  1851  3412               	retlw	18
   572  1852  3483               	retlw	131
   573  1853  343A               	retlw	58
   574  1854  3417               	retlw	23
   575  1855  34B7               	retlw	183
   576  1856  34D1               	retlw	209
   577  1857  3438               	retlw	56
   578  1858  34AC               	retlw	172
   579  1859  34C5               	retlw	197
   580  185A  3427               	retlw	39
   581  185B  3437               	retlw	55
   582  185C  34BD               	retlw	189
   583  185D  3437               	retlw	55
   584  185E  3486               	retlw	134
   585  185F  3435               	retlw	53
   586  1860  3495               	retlw	149
   587  1861  34BF               	retlw	191
   588  1862  34D6               	retlw	214
   589  1863  3433               	retlw	51
   590  1864  3477               	retlw	119
   591  1865  34CC               	retlw	204
   592  1866  342B               	retlw	43
   593  1867  3432               	retlw	50
   594  1868  345F               	retlw	95
   595  1869  3470               	retlw	112
   596  186A  3489               	retlw	137
   597  186B  3430               	retlw	48
   598  186C  34FF               	retlw	255
   599  186D  34E6               	retlw	230
   600  186E  34DB               	retlw	219
   601  186F  342E               	retlw	46
   602  1870  3408               	retlw	8
   603  1871  34E5               	retlw	229
   604  1872  343C               	retlw	60
   605  1873  341E               	retlw	30
   606  1874  3460               	retlw	96
   607  1875  3442               	retlw	66
   608  1876  34A2               	retlw	162
   609  1877  340D               	retlw	13
   610  1878                     __end_of__npowers_:	
   611  1878                     _dpowers:	
   612  1878  3401               	retlw	1
   613  1879  3400               	retlw	0
   614  187A  3400               	retlw	0
   615  187B  3400               	retlw	0
   616  187C  340A               	retlw	10
   617  187D  3400               	retlw	0
   618  187E  3400               	retlw	0
   619  187F  3400               	retlw	0
   620  1880  3464               	retlw	100
   621  1881  3400               	retlw	0
   622  1882  3400               	retlw	0
   623  1883  3400               	retlw	0
   624  1884  34E8               	retlw	232
   625  1885  3403               	retlw	3
   626  1886  3400               	retlw	0
   627  1887  3400               	retlw	0
   628  1888  3410               	retlw	16
   629  1889  3427               	retlw	39
   630  188A  3400               	retlw	0
   631  188B  3400               	retlw	0
   632  188C  34A0               	retlw	160
   633  188D  3486               	retlw	134
   634  188E  3401               	retlw	1
   635  188F  3400               	retlw	0
   636  1890  3440               	retlw	64
   637  1891  3442               	retlw	66
   638  1892  340F               	retlw	15
   639  1893  3400               	retlw	0
   640  1894  3480               	retlw	128
   641  1895  3496               	retlw	150
   642  1896  3498               	retlw	152
   643  1897  3400               	retlw	0
   644  1898  3400               	retlw	0
   645  1899  34E1               	retlw	225
   646  189A  34F5               	retlw	245
   647  189B  3405               	retlw	5
   648  189C  3400               	retlw	0
   649  189D  34CA               	retlw	202
   650  189E  349A               	retlw	154
   651  189F  343B               	retlw	59
   652  18A0                     __end_of_dpowers:	
   653  0007                     _PORTCbits	set	7
   654  0008                     _PORTD	set	8
   655  0007                     _PORTC	set	7
   656  0006                     _PORTB	set	6
   657  0005                     _PORTA	set	5
   658  001E                     _ADRESH	set	30
   659  001F                     _ADCON0bits	set	31
   660  000C                     _PIR1bits	set	12
   661  000B                     _INTCONbits	set	11
   662  008F                     _OSCCONbits	set	143
   663  009F                     _ADCON1bits	set	159
   664  008C                     _PIE1bits	set	140
   665  0088                     _TRISD	set	136
   666  0087                     _TRISC	set	135
   667  0086                     _TRISB	set	134
   668  0085                     _TRISA	set	133
   669  0189                     _ANSELHbits	set	393
   670  0188                     _ANSEL	set	392
   671  18A0                     STR_2:	
   672  18A0  3425               	retlw	37	;'%'
   673  18A1  342E               	retlw	46	;'.'
   674  18A2  3431               	retlw	49	;'1'
   675  18A3  3466               	retlw	102	;'f'
   676  18A4  3400               	retlw	0
   677  18A5                     STR_1:	
   678  18A5  3453               	retlw	83	;'S'
   679  18A6  3431               	retlw	49	;'1'
   680  18A7  343A               	retlw	58	;':'
   681  18A8  3400               	retlw	0
   682                           
   683                           ; #config settings
   684  0000                     
   685                           	psect	cinit
   686  000F                     start_initialization:	
   687  000F                     __initialization:	
   688                           
   689                           ; Clear objects allocated to COMMON
   690  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   691                           
   692                           ; Clear objects allocated to BANK0
   693  0010  1283               	bcf	3,5	;RP0=0, select bank0
   694  0011  1303               	bcf	3,6	;RP1=0, select bank0
   695  0012  01EC               	clrf	__pbssBANK0& (0+127)
   696                           
   697                           ; Clear objects allocated to BANK1
   698  0013  1383               	bcf	3,7	;select IRP bank0
   699  0014  30CF               	movlw	low __pbssBANK1
   700  0015  0084               	movwf	4
   701  0016  30E1               	movlw	low (__pbssBANK1+18)
   702  0017  160A  158A  2191  120A  118A  	fcall	clear_ram0
   703  001C                     end_of_initialization:	
   704                           ;End of C runtime variable initialization code
   705                           
   706  001C                     __end_of__initialization:	
   707  001C  0183               	clrf	3
   708  001D  120A  158A  2868   	ljmp	_main	;jump to C main() function
   709                           
   710                           	psect	bssCOMMON
   711  007A                     __pbssCOMMON:	
   712  007A                     _pot2:	
   713  007A                     	ds	1
   714                           
   715                           	psect	bssBANK0
   716  006C                     __pbssBANK0:	
   717  006C                     _pot1:	
   718  006C                     	ds	1
   719                           
   720                           	psect	bssBANK1
   721  00CF                     __pbssBANK1:	
   722  00CF                     _pot2_val:	
   723  00CF                     	ds	4
   724  00D3                     _pot1_val:	
   725  00D3                     	ds	4
   726  00D7                     _datos:	
   727  00D7                     	ds	10
   728                           
   729                           	psect	clrtext
   730  1991                     clear_ram0:	
   731                           ;	Called with FSR containing the base address, and
   732                           ;	W with the last address+1
   733                           
   734  1991  0064               	clrwdt	;clear the watchdog before getting into this loop
   735  1992                     clrloop0:	
   736  1992  0180               	clrf	0	;clear RAM location pointed to by FSR
   737  1993  0A84               	incf	4,f	;increment pointer
   738  1994  0604               	xorwf	4,w	;XOR with final address
   739  1995  1903               	btfsc	3,2	;have we reached the end yet?
   740  1996  3400               	retlw	0	;all done for this memory range, return
   741  1997  0604               	xorwf	4,w	;XOR again to restore value
   742  1998  2992               	goto	clrloop0	;do the next byte
   743                           
   744                           	psect	cstackBANK1
   745  00A0                     __pcstackBANK1:	
   746  00A0                     ?___flsub:	
   747  00A0                     ___flsub@a:	
   748                           ; 4 bytes @ 0x0
   749                           
   750                           
   751                           ; 4 bytes @ 0x0
   752  00A0                     	ds	4
   753  00A4                     ___flsub@b:	
   754                           
   755                           ; 4 bytes @ 0x4
   756  00A4                     	ds	4
   757  00A8                     ?_sprintf:	
   758  00A8                     sprintf@f:	
   759                           ; 2 bytes @ 0x8
   760                           
   761                           
   762                           ; 1 bytes @ 0x8
   763  00A8                     	ds	5
   764  00AD                     ??_sprintf:	
   765                           
   766                           ; 1 bytes @ 0xD
   767  00AD                     	ds	5
   768  00B2                     _sprintf$1103:	
   769                           
   770                           ; 4 bytes @ 0x12
   771  00B2                     	ds	4
   772  00B6                     sprintf@ap:	
   773                           
   774                           ; 1 bytes @ 0x16
   775  00B6                     	ds	1
   776  00B7                     sprintf@flag:	
   777                           
   778                           ; 2 bytes @ 0x17
   779  00B7                     	ds	2
   780  00B9                     sprintf@val:	
   781                           
   782                           ; 4 bytes @ 0x19
   783  00B9                     	ds	4
   784  00BD                     sprintf@eexp:	
   785                           
   786                           ; 2 bytes @ 0x1D
   787  00BD                     	ds	2
   788  00BF                     sprintf@sp:	
   789                           
   790                           ; 1 bytes @ 0x1F
   791  00BF                     	ds	1
   792  00C0                     sprintf@tmpval:	
   793                           
   794                           ; 4 bytes @ 0x20
   795  00C0                     	ds	4
   796  00C4                     sprintf@prec:	
   797                           
   798                           ; 2 bytes @ 0x24
   799  00C4                     	ds	2
   800  00C6                     sprintf@fval:	
   801                           
   802                           ; 4 bytes @ 0x26
   803  00C6                     	ds	4
   804  00CA                     sprintf@c:	
   805                           
   806                           ; 1 bytes @ 0x2A
   807  00CA                     	ds	1
   808  00CB                     ??_main:	
   809                           
   810                           ; 1 bytes @ 0x2B
   811  00CB                     	ds	4
   812                           
   813                           	psect	cstackCOMMON
   814  0070                     __pcstackCOMMON:	
   815  0070                     ?_isdigit:	
   816  0070                     ?_setup:	
   817                           ; 1 bit 
   818                           
   819  0070                     ?_oscInt:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     ?_lcd8_init2:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ?_adcSetup:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_analogInSel:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ?_adcFoscSel:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     ?_intEnable:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     ?_lcd8_cmd:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?_delay_1ms2:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ?_isr:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0070                     ??_isr:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0070                     ?_main:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0070                     ?_lcd8_write:	
   853                           ; 1 bytes @ 0x0
   854                           
   855                           
   856                           ; 1 bytes @ 0x0
   857  0070                     	ds	3
   858  0073                     ??_setup:	
   859  0073                     ??_oscInt:	
   860                           ; 1 bytes @ 0x3
   861                           
   862  0073                     ??_adcSetup:	
   863                           ; 1 bytes @ 0x3
   864                           
   865  0073                     ??_analogInSel:	
   866                           ; 1 bytes @ 0x3
   867                           
   868  0073                     ??_adcFoscSel:	
   869                           ; 1 bytes @ 0x3
   870                           
   871  0073                     ??_intEnable:	
   872                           ; 1 bytes @ 0x3
   873                           
   874  0073                     ??_delay_1ms2:	
   875                           ; 1 bytes @ 0x3
   876                           
   877  0073                     ??_isdigit:	
   878                           ; 1 bytes @ 0x3
   879                           
   880  0073                     ??__tdiv_to_l_:	
   881                           ; 1 bytes @ 0x3
   882                           
   883  0073                     ??__div_to_l_:	
   884                           ; 1 bytes @ 0x3
   885                           
   886  0073                     ??___lldiv:	
   887                           ; 1 bytes @ 0x3
   888                           
   889  0073                     ??___fleq:	
   890                           ; 1 bytes @ 0x3
   891                           
   892  0073                     ??___flge:	
   893                           ; 1 bytes @ 0x3
   894                           
   895  0073                     ??___llmod:	
   896                           ; 1 bytes @ 0x3
   897                           
   898  0073                     ?__Umul8_16:	
   899                           ; 1 bytes @ 0x3
   900                           
   901  0073                     ?___wmul:	
   902                           ; 2 bytes @ 0x3
   903                           
   904  0073                     ?___awmod:	
   905                           ; 2 bytes @ 0x3
   906                           
   907  0073                     ?___lwmod:	
   908                           ; 2 bytes @ 0x3
   909                           
   910  0073                     ?___flneg:	
   911                           ; 2 bytes @ 0x3
   912                           
   913  0073                     ?___xxtofl:	
   914                           ; 4 bytes @ 0x3
   915                           
   916  0073                     _isdigit$921:	
   917                           ; 4 bytes @ 0x3
   918                           
   919  0073                     __Umul8_16@multiplicand:	
   920                           ; 1 bytes @ 0x3
   921                           
   922  0073                     delay_1ms2@i:	
   923                           ; 1 bytes @ 0x3
   924                           
   925  0073                     ___wmul@multiplier:	
   926                           ; 2 bytes @ 0x3
   927                           
   928  0073                     ___awmod@divisor:	
   929                           ; 2 bytes @ 0x3
   930                           
   931  0073                     ___lwmod@divisor:	
   932                           ; 2 bytes @ 0x3
   933                           
   934  0073                     ___flneg@f1:	
   935                           ; 2 bytes @ 0x3
   936                           
   937  0073                     ___xxtofl@val:	
   938                           ; 4 bytes @ 0x3
   939                           
   940                           
   941                           ; 4 bytes @ 0x3
   942  0073                     	ds	1
   943  0074                     ___llmod@counter:	
   944  0074                     isdigit@c:	
   945                           ; 1 bytes @ 0x4
   946                           
   947  0074                     ___lldiv@quotient:	
   948                           ; 1 bytes @ 0x4
   949                           
   950  0074                     __div_to_l_@quot:	
   951                           ; 4 bytes @ 0x4
   952                           
   953                           
   954                           ; 4 bytes @ 0x4
   955  0074                     	ds	1
   956  0075                     ??_lcd8_cmd:	
   957  0075                     ??__Umul8_16:	
   958                           ; 1 bytes @ 0x5
   959                           
   960  0075                     ??_lcd8_write:	
   961                           ; 1 bytes @ 0x5
   962                           
   963  0075                     lcd8_cmd@cmd:	
   964                           ; 1 bytes @ 0x5
   965                           
   966  0075                     lcd8_write@dat:	
   967                           ; 1 bytes @ 0x5
   968                           
   969  0075                     analogInSel@analogIn:	
   970                           ; 1 bytes @ 0x5
   971                           
   972  0075                     adcFoscSel@fosc:	
   973                           ; 1 bytes @ 0x5
   974                           
   975  0075                     oscInt@freq:	
   976                           ; 1 bytes @ 0x5
   977                           
   978  0075                     ___wmul@multiplicand:	
   979                           ; 1 bytes @ 0x5
   980                           
   981  0075                     ___awmod@dividend:	
   982                           ; 2 bytes @ 0x5
   983                           
   984  0075                     ___lwmod@dividend:	
   985                           ; 2 bytes @ 0x5
   986                           
   987                           
   988                           ; 2 bytes @ 0x5
   989  0075                     	ds	1
   990  0076                     ??_lcd8_init2:	
   991  0076                     ?_lcd8_display:	
   992                           ; 1 bytes @ 0x6
   993                           
   994  0076                     lcd8_display@value:	
   995                           ; 1 bytes @ 0x6
   996                           
   997                           
   998                           ; 2 bytes @ 0x6
   999  0076                     	ds	1
  1000  0077                     ??___wmul:	
  1001  0077                     ??___awmod:	
  1002                           ; 1 bytes @ 0x7
  1003                           
  1004  0077                     ??___flneg:	
  1005                           ; 1 bytes @ 0x7
  1006                           
  1007  0077                     ??___lwmod:	
  1008                           ; 1 bytes @ 0x7
  1009                           
  1010  0077                     ___wmul@product:	
  1011                           ; 1 bytes @ 0x7
  1012                           
  1013                           
  1014                           ; 2 bytes @ 0x7
  1015  0077                     	ds	1
  1016  0078                     ??_lcd8_display:	
  1017  0078                     ___lldiv@counter:	
  1018                           ; 1 bytes @ 0x8
  1019                           
  1020  0078                     ___awmod@counter:	
  1021                           ; 1 bytes @ 0x8
  1022                           
  1023  0078                     __div_to_l_@cntr:	
  1024                           ; 1 bytes @ 0x8
  1025                           
  1026  0078                     ___lwmod@counter:	
  1027                           ; 1 bytes @ 0x8
  1028                           
  1029                           
  1030                           ; 1 bytes @ 0x8
  1031  0078                     	ds	1
  1032  0079                     ??___lwdiv:	
  1033  0079                     ___awmod@sign:	
  1034                           ; 1 bytes @ 0x9
  1035                           
  1036  0079                     __div_to_l_@exp1:	
  1037                           ; 1 bytes @ 0x9
  1038                           
  1039                           
  1040                           ; 1 bytes @ 0x9
  1041  0079                     	ds	1
  1042  007A                     ??___flsub:	
  1043                           
  1044                           	psect	cstackBANK0
  1045  0020                     __pcstackBANK0:	
  1046                           ; 1 bytes @ 0xA
  1047                           
  1048  0020                     ?___fleq:	
  1049  0020                     ?___flge:	
  1050                           ; 1 bit 
  1051                           
  1052  0020                     ??___xxtofl:	
  1053                           ; 1 bit 
  1054                           
  1055  0020                     ?___awdiv:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058  0020                     ?___lwdiv:	
  1059                           ; 2 bytes @ 0x0
  1060                           
  1061  0020                     ?__tdiv_to_l_:	
  1062                           ; 2 bytes @ 0x0
  1063                           
  1064  0020                     ?__div_to_l_:	
  1065                           ; 4 bytes @ 0x0
  1066                           
  1067  0020                     ?___lldiv:	
  1068                           ; 4 bytes @ 0x0
  1069                           
  1070  0020                     ?___llmod:	
  1071                           ; 4 bytes @ 0x0
  1072                           
  1073  0020                     ___awdiv@divisor:	
  1074                           ; 4 bytes @ 0x0
  1075                           
  1076  0020                     ___lwdiv@divisor:	
  1077                           ; 2 bytes @ 0x0
  1078                           
  1079  0020                     __Umul8_16@product:	
  1080                           ; 2 bytes @ 0x0
  1081                           
  1082  0020                     ___lldiv@divisor:	
  1083                           ; 2 bytes @ 0x0
  1084                           
  1085  0020                     __div_to_l_@f1:	
  1086                           ; 4 bytes @ 0x0
  1087                           
  1088  0020                     ___fleq@ff1:	
  1089                           ; 4 bytes @ 0x0
  1090                           
  1091  0020                     ___flge@ff1:	
  1092                           ; 4 bytes @ 0x0
  1093                           
  1094  0020                     __tdiv_to_l_@f1:	
  1095                           ; 4 bytes @ 0x0
  1096                           
  1097  0020                     ___llmod@divisor:	
  1098                           ; 4 bytes @ 0x0
  1099                           
  1100                           
  1101                           ; 4 bytes @ 0x0
  1102  0020                     	ds	2
  1103  0022                     ___awdiv@dividend:	
  1104  0022                     ___lwdiv@dividend:	
  1105                           ; 2 bytes @ 0x2
  1106                           
  1107  0022                     __Umul8_16@word_mpld:	
  1108                           ; 2 bytes @ 0x2
  1109                           
  1110                           
  1111                           ; 2 bytes @ 0x2
  1112  0022                     	ds	2
  1113  0024                     ??___awdiv:	
  1114  0024                     ___xxtofl@sign:	
  1115                           ; 1 bytes @ 0x4
  1116                           
  1117  0024                     __Umul8_16@multiplier:	
  1118                           ; 1 bytes @ 0x4
  1119                           
  1120  0024                     ___lwdiv@quotient:	
  1121                           ; 1 bytes @ 0x4
  1122                           
  1123  0024                     ___lldiv@dividend:	
  1124                           ; 2 bytes @ 0x4
  1125                           
  1126  0024                     __div_to_l_@f2:	
  1127                           ; 4 bytes @ 0x4
  1128                           
  1129  0024                     ___fleq@ff2:	
  1130                           ; 4 bytes @ 0x4
  1131                           
  1132  0024                     ___flge@ff2:	
  1133                           ; 4 bytes @ 0x4
  1134                           
  1135  0024                     __tdiv_to_l_@f2:	
  1136                           ; 4 bytes @ 0x4
  1137                           
  1138  0024                     ___llmod@dividend:	
  1139                           ; 4 bytes @ 0x4
  1140                           
  1141                           
  1142                           ; 4 bytes @ 0x4
  1143  0024                     	ds	1
  1144  0025                     ___awdiv@counter:	
  1145  0025                     ___xxtofl@exp:	
  1146                           ; 1 bytes @ 0x5
  1147                           
  1148                           
  1149                           ; 1 bytes @ 0x5
  1150  0025                     	ds	1
  1151  0026                     ___awdiv@sign:	
  1152  0026                     ___lwdiv@counter:	
  1153                           ; 1 bytes @ 0x6
  1154                           
  1155  0026                     ___xxtofl@arg:	
  1156                           ; 1 bytes @ 0x6
  1157                           
  1158                           
  1159                           ; 4 bytes @ 0x6
  1160  0026                     	ds	1
  1161  0027                     ___awdiv@quotient:	
  1162                           
  1163                           ; 2 bytes @ 0x7
  1164  0027                     	ds	1
  1165  0028                     __tdiv_to_l_@quot:	
  1166                           
  1167                           ; 4 bytes @ 0x8
  1168  0028                     	ds	2
  1169  002A                     ?___flmul:	
  1170  002A                     ___flmul@b:	
  1171                           ; 4 bytes @ 0xA
  1172                           
  1173                           
  1174                           ; 4 bytes @ 0xA
  1175  002A                     	ds	2
  1176  002C                     __tdiv_to_l_@cntr:	
  1177                           
  1178                           ; 1 bytes @ 0xC
  1179  002C                     	ds	1
  1180  002D                     __tdiv_to_l_@exp1:	
  1181                           
  1182                           ; 1 bytes @ 0xD
  1183  002D                     	ds	1
  1184  002E                     ___flmul@a:	
  1185                           
  1186                           ; 4 bytes @ 0xE
  1187  002E                     	ds	4
  1188  0032                     ??___flmul:	
  1189                           
  1190                           ; 1 bytes @ 0x12
  1191  0032                     	ds	5
  1192  0037                     ___flmul@sign:	
  1193                           
  1194                           ; 1 bytes @ 0x17
  1195  0037                     	ds	1
  1196  0038                     ___flmul@grs:	
  1197                           
  1198                           ; 4 bytes @ 0x18
  1199  0038                     	ds	4
  1200  003C                     ___flmul@aexp:	
  1201                           
  1202                           ; 1 bytes @ 0x1C
  1203  003C                     	ds	1
  1204  003D                     ___flmul@bexp:	
  1205                           
  1206                           ; 1 bytes @ 0x1D
  1207  003D                     	ds	1
  1208  003E                     ___flmul@prod:	
  1209                           
  1210                           ; 4 bytes @ 0x1E
  1211  003E                     	ds	4
  1212  0042                     ___flmul@temp:	
  1213                           
  1214                           ; 2 bytes @ 0x22
  1215  0042                     	ds	2
  1216  0044                     ?_fround:	
  1217  0044                     ?_scale:	
  1218                           ; 4 bytes @ 0x24
  1219                           
  1220  0044                     ?___fldiv:	
  1221                           ; 4 bytes @ 0x24
  1222                           
  1223  0044                     ___fldiv@a:	
  1224                           ; 4 bytes @ 0x24
  1225                           
  1226                           
  1227                           ; 4 bytes @ 0x24
  1228  0044                     	ds	4
  1229  0048                     ??_fround:	
  1230  0048                     ??_scale:	
  1231                           ; 1 bytes @ 0x28
  1232                           
  1233  0048                     ___fldiv@b:	
  1234                           ; 1 bytes @ 0x28
  1235                           
  1236                           
  1237                           ; 4 bytes @ 0x28
  1238  0048                     	ds	4
  1239  004C                     ??___fldiv:	
  1240                           
  1241                           ; 1 bytes @ 0x2C
  1242  004C                     	ds	3
  1243  004F                     _fround$1101:	
  1244                           
  1245                           ; 4 bytes @ 0x2F
  1246  004F                     	ds	2
  1247  0051                     ___fldiv@rem:	
  1248                           
  1249                           ; 4 bytes @ 0x31
  1250  0051                     	ds	1
  1251  0052                     _scale$1102:	
  1252                           
  1253                           ; 4 bytes @ 0x32
  1254  0052                     	ds	1
  1255  0053                     _fround$1100:	
  1256                           
  1257                           ; 4 bytes @ 0x33
  1258  0053                     	ds	2
  1259  0055                     ___fldiv@sign:	
  1260                           
  1261                           ; 1 bytes @ 0x35
  1262  0055                     	ds	1
  1263  0056                     scale@scl:	
  1264  0056                     ___fldiv@new_exp:	
  1265                           ; 1 bytes @ 0x36
  1266                           
  1267                           
  1268                           ; 2 bytes @ 0x36
  1269  0056                     	ds	1
  1270  0057                     ?___fltol:	
  1271  0057                     fround@prec:	
  1272                           ; 4 bytes @ 0x37
  1273                           
  1274  0057                     ___fltol@f1:	
  1275                           ; 1 bytes @ 0x37
  1276                           
  1277                           
  1278                           ; 4 bytes @ 0x37
  1279  0057                     	ds	1
  1280  0058                     ?___fladd:	
  1281  0058                     ___fladd@b:	
  1282                           ; 4 bytes @ 0x38
  1283                           
  1284  0058                     ___fldiv@grs:	
  1285                           ; 4 bytes @ 0x38
  1286                           
  1287                           
  1288                           ; 4 bytes @ 0x38
  1289  0058                     	ds	3
  1290  005B                     ??___fltol:	
  1291                           
  1292                           ; 1 bytes @ 0x3B
  1293  005B                     	ds	1
  1294  005C                     ___fldiv@bexp:	
  1295  005C                     ___fladd@a:	
  1296                           ; 1 bytes @ 0x3C
  1297                           
  1298                           
  1299                           ; 4 bytes @ 0x3C
  1300  005C                     	ds	1
  1301  005D                     ___fldiv@aexp:	
  1302                           
  1303                           ; 1 bytes @ 0x3D
  1304  005D                     	ds	3
  1305  0060                     ??___fladd:	
  1306  0060                     ___fltol@sign1:	
  1307                           ; 1 bytes @ 0x40
  1308                           
  1309                           
  1310                           ; 1 bytes @ 0x40
  1311  0060                     	ds	1
  1312  0061                     ___fltol@exp1:	
  1313                           
  1314                           ; 1 bytes @ 0x41
  1315  0061                     	ds	7
  1316  0068                     ___fladd@signs:	
  1317                           
  1318                           ; 1 bytes @ 0x48
  1319  0068                     	ds	1
  1320  0069                     ___fladd@aexp:	
  1321                           
  1322                           ; 1 bytes @ 0x49
  1323  0069                     	ds	1
  1324  006A                     ___fladd@bexp:	
  1325                           
  1326                           ; 1 bytes @ 0x4A
  1327  006A                     	ds	1
  1328  006B                     ___fladd@grs:	
  1329                           
  1330                           ; 1 bytes @ 0x4B
  1331  006B                     	ds	1
  1332                           
  1333                           	psect	maintext
  1334  0868                     __pmaintext:	
  1335 ;;
  1336 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1337 ;;
  1338 ;; *************** function _main *****************
  1339 ;; Defined at:
  1340 ;;		line 74 in file "Lab3_v2.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;		None
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;		None
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1349 ;; Tracked objects:
  1350 ;;		On entry : B00/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1354 ;;      Params:         0       0       0       0       0
  1355 ;;      Locals:         0       0       0       0       0
  1356 ;;      Temps:          0       0       4       0       0
  1357 ;;      Totals:         0       0       4       0       0
  1358 ;;Total ram usage:        4 bytes
  1359 ;; Hardware stack levels required when called:    5
  1360 ;; This function calls:
  1361 ;;		___fldiv
  1362 ;;		___flmul
  1363 ;;		___xxtofl
  1364 ;;		_adcFoscSel
  1365 ;;		_adcSetup
  1366 ;;		_analogInSel
  1367 ;;		_delay_1ms2
  1368 ;;		_intEnable
  1369 ;;		_lcd8_cmd
  1370 ;;		_lcd8_display
  1371 ;;		_lcd8_init2
  1372 ;;		_oscInt
  1373 ;;		_setup
  1374 ;;		_sprintf
  1375 ;; This function is called by:
  1376 ;;		Startup code after reset
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           
  1381                           ;psect for function _main
  1382  0868                     _main:	
  1383  0868                     l4411:	
  1384                           ;incstack = 0
  1385                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1386                           
  1387                           
  1388                           ;Lab3_v2.c: 75:     setup();
  1389  0868  160A  158A  21D4  120A  158A  	fcall	_setup
  1390  086D                     l4413:	
  1391                           
  1392                           ;Lab3_v2.c: 76:     oscInt(1);
  1393  086D  3001               	movlw	1
  1394  086E  120A  118A  278A  120A  158A  	fcall	_oscInt
  1395  0873                     l4415:	
  1396                           
  1397                           ;Lab3_v2.c: 77:     lcd8_init2();
  1398  0873  160A  158A  23B6  120A  158A  	fcall	_lcd8_init2
  1399  0878                     l4417:	
  1400                           
  1401                           ;Lab3_v2.c: 78:     adcSetup();
  1402  0878  160A  158A  21A4  120A  158A  	fcall	_adcSetup
  1403  087D                     l4419:	
  1404                           
  1405                           ;Lab3_v2.c: 79:     analogInSel(8);
  1406  087D  3008               	movlw	8
  1407  087E  160A  158A  2607  120A  158A  	fcall	_analogInSel
  1408  0883                     l4421:	
  1409                           
  1410                           ;Lab3_v2.c: 80:     adcFoscSel(1);
  1411  0883  3001               	movlw	1
  1412  0884  160A  158A  21FD  120A  158A  	fcall	_adcFoscSel
  1413  0889                     l4423:	
  1414                           
  1415                           ;Lab3_v2.c: 81:     intEnable();
  1416  0889  160A  158A  218B  120A  158A  	fcall	_intEnable
  1417  088E                     l4425:	
  1418                           
  1419                           ;Lab3_v2.c: 83:         if (ADCON0bits.GO_DONE != 1){
  1420  088E  1283               	bcf	3,5	;RP0=0, select bank0
  1421  088F  1303               	bcf	3,6	;RP1=0, select bank0
  1422  0890  189F               	btfsc	31,1	;volatile
  1423  0891  2893               	goto	u7461
  1424  0892  2894               	goto	u7460
  1425  0893                     u7461:	
  1426  0893  2895               	goto	l4429
  1427  0894                     u7460:	
  1428  0894                     l4427:	
  1429                           
  1430                           ;Lab3_v2.c: 84:             ADCON0bits.GO_DONE = 1;
  1431  0894  149F               	bsf	31,1	;volatile
  1432  0895                     l4429:	
  1433                           
  1434                           ;Lab3_v2.c: 86:         lcd8_cmd(0x80);
  1435  0895  3080               	movlw	128
  1436  0896  160A  118A  2000  120A  158A  	fcall	_lcd8_cmd
  1437                           
  1438                           ;Lab3_v2.c: 87:         delay_1ms2();
  1439  089B  160A  158A  21E7  120A  158A  	fcall	_delay_1ms2
  1440  08A0                     l4431:	
  1441                           
  1442                           ;Lab3_v2.c: 88:         lcd8_display("S1:");
  1443  08A0  3096               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1444  08A1  00F6               	movwf	lcd8_display@value
  1445  08A2  3080               	movlw	128
  1446  08A3  00F7               	movwf	lcd8_display@value+1
  1447  08A4  160A  158A  2247  120A  158A  	fcall	_lcd8_display
  1448  08A9                     l4433:	
  1449                           
  1450                           ;Lab3_v2.c: 89:         delay_1ms2();
  1451  08A9  160A  158A  21E7  120A  158A  	fcall	_delay_1ms2
  1452  08AE                     l4435:	
  1453                           
  1454                           ;Lab3_v2.c: 90:         pot1_val = (pot1*5.0)/255;
  1455  08AE  3043               	movlw	67
  1456  08AF  1283               	bcf	3,5	;RP0=0, select bank0
  1457  08B0  1303               	bcf	3,6	;RP1=0, select bank0
  1458  08B1  00C7               	movwf	___fldiv@a+3
  1459  08B2  307F               	movlw	127
  1460  08B3  00C6               	movwf	___fldiv@a+2
  1461  08B4  3000               	movlw	0
  1462  08B5  00C5               	movwf	___fldiv@a+1
  1463  08B6  3000               	movlw	0
  1464  08B7  00C4               	movwf	___fldiv@a
  1465  08B8  3040               	movlw	64
  1466  08B9  00AD               	movwf	___flmul@b+3
  1467  08BA  30A0               	movlw	160
  1468  08BB  00AC               	movwf	___flmul@b+2
  1469  08BC  3000               	movlw	0
  1470  08BD  00AB               	movwf	___flmul@b+1
  1471  08BE  3000               	movlw	0
  1472  08BF  00AA               	movwf	___flmul@b
  1473  08C0  086C               	movf	_pot1,w
  1474  08C1  1683               	bsf	3,5	;RP0=1, select bank1
  1475  08C2  1303               	bcf	3,6	;RP1=0, select bank1
  1476  08C3  00CB               	movwf	??_main^(0+128)
  1477  08C4  01CC               	clrf	(??_main^(0+128)+1)
  1478  08C5  01CD               	clrf	(??_main^(0+128)+2)
  1479  08C6  01CE               	clrf	(??_main^(0+128)+3)
  1480  08C7  084E               	movf	(??_main+3)^(0+128),w
  1481  08C8  00F6               	movwf	___xxtofl@val+3
  1482  08C9  084D               	movf	(??_main+2)^(0+128),w
  1483  08CA  00F5               	movwf	___xxtofl@val+2
  1484  08CB  084C               	movf	(??_main+1)^(0+128),w
  1485  08CC  00F4               	movwf	___xxtofl@val+1
  1486  08CD  084B               	movf	??_main^(0+128),w
  1487  08CE  00F3               	movwf	___xxtofl@val
  1488  08CF  3001               	movlw	1
  1489  08D0  160A  158A  2744  120A  158A  	fcall	___xxtofl
  1490  08D5  0876               	movf	?___xxtofl+3,w
  1491  08D6  1283               	bcf	3,5	;RP0=0, select bank0
  1492  08D7  1303               	bcf	3,6	;RP1=0, select bank0
  1493  08D8  00B1               	movwf	___flmul@a+3
  1494  08D9  0875               	movf	?___xxtofl+2,w
  1495  08DA  00B0               	movwf	___flmul@a+2
  1496  08DB  0874               	movf	?___xxtofl+1,w
  1497  08DC  00AF               	movwf	___flmul@a+1
  1498  08DD  0873               	movf	?___xxtofl,w
  1499  08DE  00AE               	movwf	___flmul@a
  1500  08DF  120A  158A  213C  120A  158A  	fcall	___flmul
  1501  08E4  1283               	bcf	3,5	;RP0=0, select bank0
  1502  08E5  1303               	bcf	3,6	;RP1=0, select bank0
  1503  08E6  082D               	movf	?___flmul+3,w
  1504  08E7  00CB               	movwf	___fldiv@b+3
  1505  08E8  082C               	movf	?___flmul+2,w
  1506  08E9  00CA               	movwf	___fldiv@b+2
  1507  08EA  082B               	movf	?___flmul+1,w
  1508  08EB  00C9               	movwf	___fldiv@b+1
  1509  08EC  082A               	movf	?___flmul,w
  1510  08ED  00C8               	movwf	___fldiv@b
  1511  08EE  160A  118A  218E  120A  158A  	fcall	___fldiv
  1512  08F3  1283               	bcf	3,5	;RP0=0, select bank0
  1513  08F4  1303               	bcf	3,6	;RP1=0, select bank0
  1514  08F5  0847               	movf	?___fldiv+3,w
  1515  08F6  1683               	bsf	3,5	;RP0=1, select bank1
  1516  08F7  1303               	bcf	3,6	;RP1=0, select bank1
  1517  08F8  00D6               	movwf	(_pot1_val+3)^(0+128)
  1518  08F9  1283               	bcf	3,5	;RP0=0, select bank0
  1519  08FA  1303               	bcf	3,6	;RP1=0, select bank0
  1520  08FB  0846               	movf	?___fldiv+2,w
  1521  08FC  1683               	bsf	3,5	;RP0=1, select bank1
  1522  08FD  1303               	bcf	3,6	;RP1=0, select bank1
  1523  08FE  00D5               	movwf	(_pot1_val+2)^(0+128)
  1524  08FF  1283               	bcf	3,5	;RP0=0, select bank0
  1525  0900  1303               	bcf	3,6	;RP1=0, select bank0
  1526  0901  0845               	movf	?___fldiv+1,w
  1527  0902  1683               	bsf	3,5	;RP0=1, select bank1
  1528  0903  1303               	bcf	3,6	;RP1=0, select bank1
  1529  0904  00D4               	movwf	(_pot1_val+1)^(0+128)
  1530  0905  1283               	bcf	3,5	;RP0=0, select bank0
  1531  0906  1303               	bcf	3,6	;RP1=0, select bank0
  1532  0907  0844               	movf	?___fldiv,w
  1533  0908  1683               	bsf	3,5	;RP0=1, select bank1
  1534  0909  1303               	bcf	3,6	;RP1=0, select bank1
  1535  090A  00D3               	movwf	_pot1_val^(0+128)
  1536  090B                     l4437:	
  1537                           
  1538                           ;Lab3_v2.c: 91:         lcd8_cmd(0xC0);
  1539  090B  30C0               	movlw	192
  1540  090C  160A  118A  2000  120A  158A  	fcall	_lcd8_cmd
  1541  0911                     l4439:	
  1542                           
  1543                           ;Lab3_v2.c: 92:         delay_1ms2();
  1544  0911  160A  158A  21E7  120A  158A  	fcall	_delay_1ms2
  1545  0916                     l4441:	
  1546                           
  1547                           ;Lab3_v2.c: 93:         sprintf(datos, "%.1f", pot1_val);
  1548  0916  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1549  0917  1683               	bsf	3,5	;RP0=1, select bank1
  1550  0918  1303               	bcf	3,6	;RP1=0, select bank1
  1551  0919  00CB               	movwf	??_main^(0+128)
  1552  091A  084B               	movf	??_main^(0+128),w
  1553  091B  00A8               	movwf	sprintf@f^(0+128)
  1554  091C  0856               	movf	(_pot1_val+3)^(0+128),w
  1555  091D  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1556  091E  0855               	movf	(_pot1_val+2)^(0+128),w
  1557  091F  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1558  0920  0854               	movf	(_pot1_val+1)^(0+128),w
  1559  0921  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1560  0922  0853               	movf	_pot1_val^(0+128),w
  1561  0923  00A9               	movwf	(?_sprintf^(0+128)+1)
  1562  0924  30D7               	movlw	(low (_datos| 0))& (0+255)
  1563  0925  120A  118A  2020  120A  158A  	fcall	_sprintf
  1564  092A                     l4443:	
  1565                           
  1566                           ;Lab3_v2.c: 94:         lcd8_display(datos);
  1567  092A  30D7               	movlw	(low (_datos| 0))& (0+255)
  1568  092B  00F6               	movwf	lcd8_display@value
  1569  092C  3000               	movlw	0
  1570  092D  00F7               	movwf	lcd8_display@value+1
  1571  092E  160A  158A  2247  120A  158A  	fcall	_lcd8_display
  1572  0933                     l4445:	
  1573                           
  1574                           ;Lab3_v2.c: 95:         delay_1ms2();
  1575  0933  160A  158A  21E7  120A  158A  	fcall	_delay_1ms2
  1576  0938  288E               	goto	l4425
  1577  0939  120A  118A  280C   	ljmp	start
  1578  093C                     __end_of_main:	
  1579                           
  1580                           	psect	text1
  1581  0020                     __ptext1:	
  1582 ;; *************** function _sprintf *****************
  1583 ;; Defined at:
  1584 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  sp              1    wreg     PTR unsigned char 
  1587 ;;		 -> datos(10), 
  1588 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1589 ;;		 -> STR_2(5), 
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  sp              1   31[BANK1 ] PTR unsigned char 
  1592 ;;		 -> datos(10), 
  1593 ;;  fval            4   38[BANK1 ] PTR unsigned char 
  1594 ;;  tmpval          4   32[BANK1 ] struct .
  1595 ;;  val             4   25[BANK1 ] unsigned long 
  1596 ;;  prec            2   36[BANK1 ] int 
  1597 ;;  eexp            2   29[BANK1 ] int 
  1598 ;;  flag            2   23[BANK1 ] unsigned short 
  1599 ;;  cp              2    0        PTR const unsigned char 
  1600 ;;  len             2    0        unsigned int 
  1601 ;;  width           2    0        int 
  1602 ;;  c               1   42[BANK1 ] unsigned char 
  1603 ;;  ap              1   22[BANK1 ] PTR void [1]
  1604 ;;		 -> ?_sprintf(2), 
  1605 ;;  d               1    0        unsigned char 
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  2    8[BANK1 ] int 
  1608 ;; Registers used:
  1609 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1615 ;;      Params:         0       0       5       0       0
  1616 ;;      Locals:         0       0      25       0       0
  1617 ;;      Temps:          0       0       5       0       0
  1618 ;;      Totals:         0       0      35       0       0
  1619 ;;Total ram usage:       35 bytes
  1620 ;; Hardware stack levels used:    1
  1621 ;; Hardware stack levels required when called:    4
  1622 ;; This function calls:
  1623 ;;		___awdiv
  1624 ;;		___fladd
  1625 ;;		___fleq
  1626 ;;		___flge
  1627 ;;		___flmul
  1628 ;;		___flneg
  1629 ;;		___flsub
  1630 ;;		___fltol
  1631 ;;		___lldiv
  1632 ;;		___llmod
  1633 ;;		___wmul
  1634 ;;		___xxtofl
  1635 ;;		__div_to_l_
  1636 ;;		__tdiv_to_l_
  1637 ;;		_fround
  1638 ;;		_isdigit
  1639 ;;		_scale
  1640 ;; This function is called by:
  1641 ;;		_main
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           
  1646                           ;psect for function _sprintf
  1647  0020                     _sprintf:	
  1648                           
  1649                           ;incstack = 0
  1650                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1651                           ;sprintf@sp stored from wreg
  1652  0020  1683               	bsf	3,5	;RP0=1, select bank1
  1653  0021  1303               	bcf	3,6	;RP1=0, select bank1
  1654  0022  00BF               	movwf	sprintf@sp^(0+128)
  1655  0023                     l4205:	
  1656                           
  1657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 517:  int prec;
  1658  0023  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1659  0024  00AD               	movwf	??_sprintf^(0+128)
  1660  0025  082D               	movf	??_sprintf^(0+128),w
  1661  0026  00B6               	movwf	sprintf@ap^(0+128)
  1662                           
  1663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1664  0027  2F73               	goto	l4399
  1665  0028                     l4207:	
  1666                           
  1667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1668  0028  3025               	movlw	37
  1669  0029  064A               	xorwf	sprintf@c^(0+128),w
  1670  002A  1903               	btfsc	3,2
  1671  002B  282D               	goto	u7111
  1672  002C  282E               	goto	u7110
  1673  002D                     u7111:	
  1674  002D  283A               	goto	l4213
  1675  002E                     u7110:	
  1676  002E                     l4209:	
  1677                           
  1678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1679  002E  084A               	movf	sprintf@c^(0+128),w
  1680  002F  00AD               	movwf	??_sprintf^(0+128)
  1681  0030  083F               	movf	sprintf@sp^(0+128),w
  1682  0031  0084               	movwf	4
  1683  0032  082D               	movf	??_sprintf^(0+128),w
  1684  0033  1383               	bcf	3,7	;select IRP bank0
  1685  0034  0080               	movwf	0
  1686  0035                     l4211:	
  1687  0035  3001               	movlw	1
  1688  0036  00AD               	movwf	??_sprintf^(0+128)
  1689  0037  082D               	movf	??_sprintf^(0+128),w
  1690  0038  07BF               	addwf	sprintf@sp^(0+128),f
  1691                           
  1692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1693  0039  2F73               	goto	l4399
  1694  003A                     l4213:	
  1695                           
  1696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1697  003A  01B7               	clrf	sprintf@flag^(0+128)
  1698  003B  01B8               	clrf	(sprintf@flag+1)^(0+128)
  1699  003C                     l4215:	
  1700                           
  1701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 628:   if(*
      +                          f == '.') {
  1702  003C  0828               	movf	sprintf@f^(0+128),w
  1703  003D  0084               	movwf	4
  1704  003E  160A  158A  200A  120A  118A  	fcall	stringdir
  1705  0043  3A2E               	xorlw	46
  1706  0044  1D03               	skipz
  1707  0045  2847               	goto	u7121
  1708  0046  2848               	goto	u7120
  1709  0047                     u7121:	
  1710  0047  288D               	goto	l4231
  1711  0048                     u7120:	
  1712  0048                     l4217:	
  1713                           
  1714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 629:    fla
      +                          g |= 0x4000;
  1715  0048  1738               	bsf	(sprintf@flag^(0+128)+1),6
  1716  0049                     l4219:	
  1717                           
  1718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 630:    f++
      +                          ;
  1719  0049  3001               	movlw	1
  1720  004A  00AD               	movwf	??_sprintf^(0+128)
  1721  004B  082D               	movf	??_sprintf^(0+128),w
  1722  004C  07A8               	addwf	sprintf@f^(0+128),f
  1723  004D                     l4221:	
  1724                           
  1725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 644:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 645:     prec
      +                           = 0;
  1726  004D  01C4               	clrf	sprintf@prec^(0+128)
  1727  004E  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1728                           
  1729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1730  004F  287C               	goto	l4229
  1731  0050                     l4223:	
  1732                           
  1733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 647:      p
      +                          rec *= 10;
  1734  0050  300A               	movlw	10
  1735  0051  00F3               	movwf	___wmul@multiplier
  1736  0052  3000               	movlw	0
  1737  0053  00F4               	movwf	___wmul@multiplier+1
  1738  0054  1683               	bsf	3,5	;RP0=1, select bank1
  1739  0055  1303               	bcf	3,6	;RP1=0, select bank1
  1740  0056  0845               	movf	(sprintf@prec+1)^(0+128),w
  1741  0057  00F6               	movwf	___wmul@multiplicand+1
  1742  0058  0844               	movf	sprintf@prec^(0+128),w
  1743  0059  00F5               	movwf	___wmul@multiplicand
  1744  005A  160A  158A  2222  120A  118A  	fcall	___wmul
  1745  005F  0874               	movf	?___wmul+1,w
  1746  0060  1683               	bsf	3,5	;RP0=1, select bank1
  1747  0061  1303               	bcf	3,6	;RP1=0, select bank1
  1748  0062  00C5               	movwf	(sprintf@prec+1)^(0+128)
  1749  0063  0873               	movf	?___wmul,w
  1750  0064  00C4               	movwf	sprintf@prec^(0+128)
  1751  0065                     l4225:	
  1752                           
  1753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 648:       
      +                            prec += *f++ - '0';
  1754  0065  0828               	movf	sprintf@f^(0+128),w
  1755  0066  0084               	movwf	4
  1756  0067  160A  158A  200A  120A  118A  	fcall	stringdir
  1757  006C  3ED0               	addlw	208
  1758  006D  00AD               	movwf	??_sprintf^(0+128)
  1759  006E  30FF               	movlw	255
  1760  006F  1803               	skipnc
  1761  0070  3000               	movlw	0
  1762  0071  00AE               	movwf	(??_sprintf^(0+128)+1)
  1763  0072  082D               	movf	??_sprintf^(0+128),w
  1764  0073  07C4               	addwf	sprintf@prec^(0+128),f
  1765  0074  1803               	skipnc
  1766  0075  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  1767  0076  082E               	movf	(??_sprintf+1)^(0+128),w
  1768  0077  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  1769  0078                     l4227:	
  1770  0078  3001               	movlw	1
  1771  0079  00AD               	movwf	??_sprintf^(0+128)
  1772  007A  082D               	movf	??_sprintf^(0+128),w
  1773  007B  07A8               	addwf	sprintf@f^(0+128),f
  1774  007C                     l4229:	
  1775                           
  1776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1777  007C  0828               	movf	sprintf@f^(0+128),w
  1778  007D  0084               	movwf	4
  1779  007E  160A  158A  200A  120A  118A  	fcall	stringdir
  1780  0083  160A  158A  21C2  120A  118A  	fcall	_isdigit
  1781  0088  1803               	btfsc	3,0
  1782  0089  288B               	goto	u7131
  1783  008A  288C               	goto	u7130
  1784  008B                     u7131:	
  1785  008B  2850               	goto	l4223
  1786  008C                     u7130:	
  1787  008C  2893               	goto	l4237
  1788  008D                     l4231:	
  1789                           
  1790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 652:    pre
      +                          c = 0;
  1791  008D  01C4               	clrf	sprintf@prec^(0+128)
  1792  008E  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1793  008F                     l4233:	
  1794                           
  1795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 654:    fla
      +                          g |= 0x1000;
  1796  008F  1638               	bsf	(sprintf@flag^(0+128)+1),4
  1797  0090  2893               	goto	l4237
  1798  0091                     l305:	
  1799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 688:   case
      +                           'f':
  1800                           
  1801                           
  1802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 689:    fla
      +                          g |= 0x400;
  1803  0091  1538               	bsf	(sprintf@flag^(0+128)+1),2
  1804                           
  1805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 690:    bre
      +                          ak;
  1806  0092  28AF               	goto	l4239
  1807  0093                     l4237:	
  1808  0093  3001               	movlw	1
  1809  0094  1683               	bsf	3,5	;RP0=1, select bank1
  1810  0095  1303               	bcf	3,6	;RP1=0, select bank1
  1811  0096  07A8               	addwf	sprintf@f^(0+128),f
  1812  0097  30FF               	movlw	-1
  1813  0098  0728               	addwf	sprintf@f^(0+128),w
  1814  0099  0084               	movwf	4
  1815  009A  160A  158A  200A  120A  118A  	fcall	stringdir
  1816  009F  00CA               	movwf	sprintf@c^(0+128)
  1817  00A0  00AD               	movwf	??_sprintf^(0+128)
  1818  00A1  01AE               	clrf	(??_sprintf^(0+128)+1)
  1819                           
  1820                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1821                           ; Switch size 1, requested type "simple"
  1822                           ; Number of cases is 1, Range of values is 0 to 0
  1823                           ; switch strategies available:
  1824                           ; Name         Instructions Cycles
  1825                           ; simple_byte            4     3 (average)
  1826                           ; direct_byte           11     8 (fixed)
  1827                           ; jumptable            260     6 (fixed)
  1828                           ;	Chosen strategy is simple_byte
  1829  00A2  082E               	movf	(??_sprintf+1)^(0+128),w
  1830  00A3  3A00               	xorlw	0	; case 0
  1831  00A4  1903               	skipnz
  1832  00A5  28A7               	goto	l4537
  1833  00A6  2F73               	goto	l4399
  1834  00A7                     l4537:	
  1835                           
  1836                           ; Switch size 1, requested type "simple"
  1837                           ; Number of cases is 2, Range of values is 0 to 102
  1838                           ; switch strategies available:
  1839                           ; Name         Instructions Cycles
  1840                           ; simple_byte            7     4 (average)
  1841                           ; jumptable            260     6 (fixed)
  1842                           ;	Chosen strategy is simple_byte
  1843  00A7  082D               	movf	??_sprintf^(0+128),w
  1844  00A8  3A00               	xorlw	0	; case 0
  1845  00A9  1903               	skipnz
  1846  00AA  2F85               	goto	l4401
  1847  00AB  3A66               	xorlw	102	; case 102
  1848  00AC  1903               	skipnz
  1849  00AD  2891               	goto	l305
  1850  00AE  2F73               	goto	l4399
  1851  00AF                     l4239:	
  1852                           
  1853                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 851:   if(f
      +                          lag & (0x700)) {
  1854  00AF  3000               	movlw	0
  1855  00B0  0537               	andwf	sprintf@flag^(0+128),w
  1856  00B1  00AD               	movwf	??_sprintf^(0+128)
  1857  00B2  3007               	movlw	7
  1858  00B3  0538               	andwf	(sprintf@flag+1)^(0+128),w
  1859  00B4  00AE               	movwf	(??_sprintf+1)^(0+128)
  1860  00B5  082D               	movf	??_sprintf^(0+128),w
  1861  00B6  042E               	iorwf	(??_sprintf^(0+128)+1),w
  1862  00B7  1903               	btfsc	3,2
  1863  00B8  28BA               	goto	u7141
  1864  00B9  28BB               	goto	u7140
  1865  00BA                     u7141:	
  1866  00BA  2F2E               	goto	l4381
  1867  00BB                     u7140:	
  1868  00BB                     l4241:	
  1869                           
  1870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 853:    if(
      +                          flag & 0x1000)
  1871  00BB  1E38               	btfss	(sprintf@flag+1)^(0+128),4
  1872  00BC  28BE               	goto	u7151
  1873  00BD  28BF               	goto	u7150
  1874  00BE                     u7151:	
  1875  00BE  28C3               	goto	l4245
  1876  00BF                     u7150:	
  1877  00BF                     l4243:	
  1878                           
  1879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 855:     pr
      +                          ec = 6;
  1880  00BF  3006               	movlw	6
  1881  00C0  00C4               	movwf	sprintf@prec^(0+128)
  1882  00C1  3000               	movlw	0
  1883  00C2  00C5               	movwf	(sprintf@prec^(0+128)+1)
  1884  00C3                     l4245:	
  1885                           
  1886                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 856:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  1887  00C3  0836               	movf	sprintf@ap^(0+128),w
  1888  00C4  0084               	movwf	4
  1889  00C5  1383               	bcf	3,7	;select IRP bank0
  1890  00C6  0800               	movf	0,w
  1891  00C7  00C6               	movwf	sprintf@fval^(0+128)
  1892  00C8  0A84               	incf	4,f
  1893  00C9  0800               	movf	0,w
  1894  00CA  00C7               	movwf	(sprintf@fval+1)^(0+128)
  1895  00CB  0A84               	incf	4,f
  1896  00CC  0800               	movf	0,w
  1897  00CD  00C8               	movwf	(sprintf@fval+2)^(0+128)
  1898  00CE  0A84               	incf	4,f
  1899  00CF  0800               	movf	0,w
  1900  00D0  00C9               	movwf	(sprintf@fval+3)^(0+128)
  1901  00D1                     l4247:	
  1902  00D1  3004               	movlw	4
  1903  00D2  00AD               	movwf	??_sprintf^(0+128)
  1904  00D3  082D               	movf	??_sprintf^(0+128),w
  1905  00D4  07B6               	addwf	sprintf@ap^(0+128),f
  1906  00D5                     l4249:	
  1907                           
  1908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 857:    if(
      +                          fval < 0.0) {
  1909  00D5  0849               	movf	(sprintf@fval+3)^(0+128),w
  1910  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1911  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1912  00D8  00A3               	movwf	___flge@ff1+3
  1913  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  1914  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  1915  00DB  0848               	movf	(sprintf@fval+2)^(0+128),w
  1916  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1917  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1918  00DE  00A2               	movwf	___flge@ff1+2
  1919  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  1920  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  1921  00E1  0847               	movf	(sprintf@fval+1)^(0+128),w
  1922  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1923  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1924  00E4  00A1               	movwf	___flge@ff1+1
  1925  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  1926  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  1927  00E7  0846               	movf	sprintf@fval^(0+128),w
  1928  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1929  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1930  00EA  00A0               	movwf	___flge@ff1
  1931  00EB  3000               	movlw	0
  1932  00EC  00A7               	movwf	___flge@ff2+3
  1933  00ED  3000               	movlw	0
  1934  00EE  00A6               	movwf	___flge@ff2+2
  1935  00EF  3000               	movlw	0
  1936  00F0  00A5               	movwf	___flge@ff2+1
  1937  00F1  3000               	movlw	0
  1938  00F2  00A4               	movwf	___flge@ff2
  1939  00F3  160A  158A  26A0  120A  118A  	fcall	___flge
  1940  00F8  1803               	btfsc	3,0
  1941  00F9  28FB               	goto	u7161
  1942  00FA  28FC               	goto	u7160
  1943  00FB                     u7161:	
  1944  00FB  2919               	goto	l4255
  1945  00FC                     u7160:	
  1946  00FC                     l4251:	
  1947                           
  1948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 858:     fv
      +                          al = -fval;
  1949  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  1950  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  1951  00FE  0849               	movf	(sprintf@fval+3)^(0+128),w
  1952  00FF  00F6               	movwf	___flneg@f1+3
  1953  0100  0848               	movf	(sprintf@fval+2)^(0+128),w
  1954  0101  00F5               	movwf	___flneg@f1+2
  1955  0102  0847               	movf	(sprintf@fval+1)^(0+128),w
  1956  0103  00F4               	movwf	___flneg@f1+1
  1957  0104  0846               	movf	sprintf@fval^(0+128),w
  1958  0105  00F3               	movwf	___flneg@f1
  1959  0106  160A  158A  2199  120A  118A  	fcall	___flneg
  1960  010B  0876               	movf	?___flneg+3,w
  1961  010C  1683               	bsf	3,5	;RP0=1, select bank1
  1962  010D  1303               	bcf	3,6	;RP1=0, select bank1
  1963  010E  00C9               	movwf	(sprintf@fval+3)^(0+128)
  1964  010F  0875               	movf	?___flneg+2,w
  1965  0110  00C8               	movwf	(sprintf@fval+2)^(0+128)
  1966  0111  0874               	movf	?___flneg+1,w
  1967  0112  00C7               	movwf	(sprintf@fval+1)^(0+128)
  1968  0113  0873               	movf	?___flneg,w
  1969  0114  00C6               	movwf	sprintf@fval^(0+128)
  1970  0115                     l4253:	
  1971                           
  1972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 859:     fl
      +                          ag |= 0x03;
  1973  0115  3003               	movlw	3
  1974  0116  04B7               	iorwf	sprintf@flag^(0+128),f
  1975  0117  3000               	movlw	0
  1976  0118  04B8               	iorwf	(sprintf@flag+1)^(0+128),f
  1977  0119                     l4255:	
  1978                           
  1979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 861:    eex
      +                          p = 0;
  1980  0119  1683               	bsf	3,5	;RP0=1, select bank1
  1981  011A  1303               	bcf	3,6	;RP1=0, select bank1
  1982  011B  01BD               	clrf	sprintf@eexp^(0+128)
  1983  011C  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  1984  011D                     l4257:	
  1985                           
  1986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 862:    if(
      +                           fval!=0) {
  1987  011D  0849               	movf	(sprintf@fval+3)^(0+128),w
  1988  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1989  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0120  00A3               	movwf	___fleq@ff1+3
  1991  0121  1683               	bsf	3,5	;RP0=1, select bank1
  1992  0122  1303               	bcf	3,6	;RP1=0, select bank1
  1993  0123  0848               	movf	(sprintf@fval+2)^(0+128),w
  1994  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1995  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1996  0126  00A2               	movwf	___fleq@ff1+2
  1997  0127  1683               	bsf	3,5	;RP0=1, select bank1
  1998  0128  1303               	bcf	3,6	;RP1=0, select bank1
  1999  0129  0847               	movf	(sprintf@fval+1)^(0+128),w
  2000  012A  1283               	bcf	3,5	;RP0=0, select bank0
  2001  012B  1303               	bcf	3,6	;RP1=0, select bank0
  2002  012C  00A1               	movwf	___fleq@ff1+1
  2003  012D  1683               	bsf	3,5	;RP0=1, select bank1
  2004  012E  1303               	bcf	3,6	;RP1=0, select bank1
  2005  012F  0846               	movf	sprintf@fval^(0+128),w
  2006  0130  1283               	bcf	3,5	;RP0=0, select bank0
  2007  0131  1303               	bcf	3,6	;RP1=0, select bank0
  2008  0132  00A0               	movwf	___fleq@ff1
  2009  0133  3000               	movlw	0
  2010  0134  00A7               	movwf	___fleq@ff2+3
  2011  0135  3000               	movlw	0
  2012  0136  00A6               	movwf	___fleq@ff2+2
  2013  0137  3000               	movlw	0
  2014  0138  00A5               	movwf	___fleq@ff2+1
  2015  0139  3000               	movlw	0
  2016  013A  00A4               	movwf	___fleq@ff2
  2017  013B  160A  158A  2316  120A  118A  	fcall	___fleq
  2018  0140  1803               	btfsc	3,0
  2019  0141  2943               	goto	u7171
  2020  0142  2944               	goto	u7170
  2021  0143                     u7171:	
  2022  0143  2A60               	goto	l4283
  2023  0144                     u7170:	
  2024  0144                     l4259:	
  2025                           
  2026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 863:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2027  0144  1003               	clrc
  2028  0145  1683               	bsf	3,5	;RP0=1, select bank1
  2029  0146  1303               	bcf	3,6	;RP1=0, select bank1
  2030  0147  0D48               	rlf	(sprintf@fval+2)^(0+128),w
  2031  0148  0D49               	rlf	(sprintf@fval+3)^(0+128),w
  2032  0149  3E82               	addlw	130
  2033  014A  00BD               	movwf	sprintf@eexp^(0+128)
  2034  014B  30FF               	movlw	255
  2035  014C  1803               	skipnc
  2036  014D  3000               	movlw	0
  2037  014E  00BE               	movwf	(sprintf@eexp^(0+128)+1)
  2038  014F                     l4261:	
  2039                           
  2040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 864:     ee
      +                          xp--;
  2041  014F  30FF               	movlw	255
  2042  0150  07BD               	addwf	sprintf@eexp^(0+128),f
  2043  0151  1803               	skipnc
  2044  0152  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2045  0153  30FF               	movlw	255
  2046  0154  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2047  0155                     l4263:	
  2048                           
  2049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 865:     ee
      +                          xp *= 3;
  2050  0155  3003               	movlw	3
  2051  0156  00F3               	movwf	___wmul@multiplier
  2052  0157  3000               	movlw	0
  2053  0158  00F4               	movwf	___wmul@multiplier+1
  2054  0159  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2055  015A  00F6               	movwf	___wmul@multiplicand+1
  2056  015B  083D               	movf	sprintf@eexp^(0+128),w
  2057  015C  00F5               	movwf	___wmul@multiplicand
  2058  015D  160A  158A  2222  120A  118A  	fcall	___wmul
  2059  0162  0874               	movf	?___wmul+1,w
  2060  0163  1683               	bsf	3,5	;RP0=1, select bank1
  2061  0164  1303               	bcf	3,6	;RP1=0, select bank1
  2062  0165  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  2063  0166  0873               	movf	?___wmul,w
  2064  0167  00BD               	movwf	sprintf@eexp^(0+128)
  2065  0168                     l4265:	
  2066                           
  2067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 866:     ee
      +                          xp /= 10;
  2068  0168  300A               	movlw	10
  2069  0169  1283               	bcf	3,5	;RP0=0, select bank0
  2070  016A  1303               	bcf	3,6	;RP1=0, select bank0
  2071  016B  00A0               	movwf	___awdiv@divisor
  2072  016C  3000               	movlw	0
  2073  016D  00A1               	movwf	___awdiv@divisor+1
  2074  016E  1683               	bsf	3,5	;RP0=1, select bank1
  2075  016F  1303               	bcf	3,6	;RP1=0, select bank1
  2076  0170  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2077  0171  1283               	bcf	3,5	;RP0=0, select bank0
  2078  0172  1303               	bcf	3,6	;RP1=0, select bank0
  2079  0173  00A3               	movwf	___awdiv@dividend+1
  2080  0174  1683               	bsf	3,5	;RP0=1, select bank1
  2081  0175  1303               	bcf	3,6	;RP1=0, select bank1
  2082  0176  083D               	movf	sprintf@eexp^(0+128),w
  2083  0177  1283               	bcf	3,5	;RP0=0, select bank0
  2084  0178  1303               	bcf	3,6	;RP1=0, select bank0
  2085  0179  00A2               	movwf	___awdiv@dividend
  2086  017A  160A  158A  2522  120A  118A  	fcall	___awdiv
  2087  017F  1283               	bcf	3,5	;RP0=0, select bank0
  2088  0180  1303               	bcf	3,6	;RP1=0, select bank0
  2089  0181  0821               	movf	?___awdiv+1,w
  2090  0182  1683               	bsf	3,5	;RP0=1, select bank1
  2091  0183  1303               	bcf	3,6	;RP1=0, select bank1
  2092  0184  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  2093  0185  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0186  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0187  0820               	movf	?___awdiv,w
  2096  0188  1683               	bsf	3,5	;RP0=1, select bank1
  2097  0189  1303               	bcf	3,6	;RP1=0, select bank1
  2098  018A  00BD               	movwf	sprintf@eexp^(0+128)
  2099  018B                     l4267:	
  2100                           
  2101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (eexp < 0)
  2102  018B  1FBE               	btfss	(sprintf@eexp+1)^(0+128),7
  2103  018C  298E               	goto	u7181
  2104  018D  298F               	goto	u7180
  2105  018E                     u7181:	
  2106  018E  2995               	goto	l4271
  2107  018F                     u7180:	
  2108  018F                     l4269:	
  2109                           
  2110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  2111  018F  30FF               	movlw	255
  2112  0190  07BD               	addwf	sprintf@eexp^(0+128),f
  2113  0191  1803               	skipnc
  2114  0192  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2115  0193  30FF               	movlw	255
  2116  0194  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2117  0195                     l4271:	
  2118                           
  2119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 872:     tm
      +                          pval.integ = scale(-eexp);
  2120  0195  033D               	decf	sprintf@eexp^(0+128),w
  2121  0196  3AFF               	xorlw	255
  2122  0197  120A  158A  249D  120A  118A  	fcall	_scale
  2123  019C  1283               	bcf	3,5	;RP0=0, select bank0
  2124  019D  1303               	bcf	3,6	;RP1=0, select bank0
  2125  019E  0847               	movf	?_scale+3,w
  2126  019F  1683               	bsf	3,5	;RP0=1, select bank1
  2127  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  2128  01A1  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  2129  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  2130  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  2131  01A4  0846               	movf	?_scale+2,w
  2132  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  2133  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  2134  01A7  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  2135  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2136  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2137  01AA  0845               	movf	?_scale+1,w
  2138  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  2139  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  2140  01AD  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  2141  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2142  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  2143  01B0  0844               	movf	?_scale,w
  2144  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  2145  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  2146  01B3  00C0               	movwf	sprintf@tmpval^(0+128)
  2147  01B4                     l4273:	
  2148                           
  2149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 873:     tm
      +                          pval.integ *= fval;
  2150  01B4  0849               	movf	(sprintf@fval+3)^(0+128),w
  2151  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  2152  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  2153  01B7  00AD               	movwf	___flmul@b+3
  2154  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  2155  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  2156  01BA  0848               	movf	(sprintf@fval+2)^(0+128),w
  2157  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  2158  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  2159  01BD  00AC               	movwf	___flmul@b+2
  2160  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  2161  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  2162  01C0  0847               	movf	(sprintf@fval+1)^(0+128),w
  2163  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2164  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2165  01C3  00AB               	movwf	___flmul@b+1
  2166  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  2167  01C5  1303               	bcf	3,6	;RP1=0, select bank1
  2168  01C6  0846               	movf	sprintf@fval^(0+128),w
  2169  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  2170  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  2171  01C9  00AA               	movwf	___flmul@b
  2172  01CA  1683               	bsf	3,5	;RP0=1, select bank1
  2173  01CB  1303               	bcf	3,6	;RP1=0, select bank1
  2174  01CC  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  2175  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  2176  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  2177  01CF  00B1               	movwf	___flmul@a+3
  2178  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  2179  01D1  1303               	bcf	3,6	;RP1=0, select bank1
  2180  01D2  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  2181  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  2182  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  2183  01D5  00B0               	movwf	___flmul@a+2
  2184  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  2185  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  2186  01D8  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  2187  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  2188  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  2189  01DB  00AF               	movwf	___flmul@a+1
  2190  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  2191  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  2192  01DE  0840               	movf	sprintf@tmpval^(0+128),w
  2193  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  2194  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  2195  01E1  00AE               	movwf	___flmul@a
  2196  01E2  120A  158A  213C  120A  118A  	fcall	___flmul
  2197  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2198  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  2199  01E9  082D               	movf	?___flmul+3,w
  2200  01EA  1683               	bsf	3,5	;RP0=1, select bank1
  2201  01EB  1303               	bcf	3,6	;RP1=0, select bank1
  2202  01EC  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  2203  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  2204  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  2205  01EF  082C               	movf	?___flmul+2,w
  2206  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  2207  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  2208  01F2  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  2209  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  2210  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  2211  01F5  082B               	movf	?___flmul+1,w
  2212  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  2213  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  2214  01F8  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  2215  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  2216  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  2217  01FB  082A               	movf	?___flmul,w
  2218  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  2219  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  2220  01FE  00C0               	movwf	sprintf@tmpval^(0+128)
  2221  01FF                     l4275:	
  2222                           
  2223                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 874:     if
      +                          (tmpval.integ < 1.0)
  2224  01FF  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  2225  0200  1283               	bcf	3,5	;RP0=0, select bank0
  2226  0201  1303               	bcf	3,6	;RP1=0, select bank0
  2227  0202  00A3               	movwf	___flge@ff1+3
  2228  0203  1683               	bsf	3,5	;RP0=1, select bank1
  2229  0204  1303               	bcf	3,6	;RP1=0, select bank1
  2230  0205  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  2231  0206  1283               	bcf	3,5	;RP0=0, select bank0
  2232  0207  1303               	bcf	3,6	;RP1=0, select bank0
  2233  0208  00A2               	movwf	___flge@ff1+2
  2234  0209  1683               	bsf	3,5	;RP0=1, select bank1
  2235  020A  1303               	bcf	3,6	;RP1=0, select bank1
  2236  020B  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  2237  020C  1283               	bcf	3,5	;RP0=0, select bank0
  2238  020D  1303               	bcf	3,6	;RP1=0, select bank0
  2239  020E  00A1               	movwf	___flge@ff1+1
  2240  020F  1683               	bsf	3,5	;RP0=1, select bank1
  2241  0210  1303               	bcf	3,6	;RP1=0, select bank1
  2242  0211  0840               	movf	sprintf@tmpval^(0+128),w
  2243  0212  1283               	bcf	3,5	;RP0=0, select bank0
  2244  0213  1303               	bcf	3,6	;RP1=0, select bank0
  2245  0214  00A0               	movwf	___flge@ff1
  2246  0215  303F               	movlw	63
  2247  0216  00A7               	movwf	___flge@ff2+3
  2248  0217  3080               	movlw	128
  2249  0218  00A6               	movwf	___flge@ff2+2
  2250  0219  3000               	movlw	0
  2251  021A  00A5               	movwf	___flge@ff2+1
  2252  021B  3000               	movlw	0
  2253  021C  00A4               	movwf	___flge@ff2
  2254  021D  160A  158A  26A0  120A  118A  	fcall	___flge
  2255  0222  1803               	btfsc	3,0
  2256  0223  2A25               	goto	u7191
  2257  0224  2A26               	goto	u7190
  2258  0225                     u7191:	
  2259  0225  2A2F               	goto	l4279
  2260  0226                     u7190:	
  2261  0226                     l4277:	
  2262                           
  2263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 875:      e
      +                          exp--;
  2264  0226  30FF               	movlw	255
  2265  0227  1683               	bsf	3,5	;RP0=1, select bank1
  2266  0228  1303               	bcf	3,6	;RP1=0, select bank1
  2267  0229  07BD               	addwf	sprintf@eexp^(0+128),f
  2268  022A  1803               	skipnc
  2269  022B  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2270  022C  30FF               	movlw	255
  2271  022D  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2272  022E  2A60               	goto	l4283
  2273  022F                     l4279:	
  2274  022F  1683               	bsf	3,5	;RP0=1, select bank1
  2275  0230  1303               	bcf	3,6	;RP1=0, select bank1
  2276  0231  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  2277  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0233  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0234  00A3               	movwf	___flge@ff1+3
  2280  0235  1683               	bsf	3,5	;RP0=1, select bank1
  2281  0236  1303               	bcf	3,6	;RP1=0, select bank1
  2282  0237  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  2283  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2284  0239  1303               	bcf	3,6	;RP1=0, select bank0
  2285  023A  00A2               	movwf	___flge@ff1+2
  2286  023B  1683               	bsf	3,5	;RP0=1, select bank1
  2287  023C  1303               	bcf	3,6	;RP1=0, select bank1
  2288  023D  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  2289  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2290  023F  1303               	bcf	3,6	;RP1=0, select bank0
  2291  0240  00A1               	movwf	___flge@ff1+1
  2292  0241  1683               	bsf	3,5	;RP0=1, select bank1
  2293  0242  1303               	bcf	3,6	;RP1=0, select bank1
  2294  0243  0840               	movf	sprintf@tmpval^(0+128),w
  2295  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2296  0245  1303               	bcf	3,6	;RP1=0, select bank0
  2297  0246  00A0               	movwf	___flge@ff1
  2298  0247  3041               	movlw	65
  2299  0248  00A7               	movwf	___flge@ff2+3
  2300  0249  3020               	movlw	32
  2301  024A  00A6               	movwf	___flge@ff2+2
  2302  024B  3000               	movlw	0
  2303  024C  00A5               	movwf	___flge@ff2+1
  2304  024D  3000               	movlw	0
  2305  024E  00A4               	movwf	___flge@ff2
  2306  024F  160A  158A  26A0  120A  118A  	fcall	___flge
  2307  0254  1C03               	btfss	3,0
  2308  0255  2A57               	goto	u7201
  2309  0256  2A58               	goto	u7200
  2310  0257                     u7201:	
  2311  0257  2A60               	goto	l4283
  2312  0258                     u7200:	
  2313  0258                     l4281:	
  2314                           
  2315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 877:      e
      +                          exp++;
  2316  0258  3001               	movlw	1
  2317  0259  1683               	bsf	3,5	;RP0=1, select bank1
  2318  025A  1303               	bcf	3,6	;RP1=0, select bank1
  2319  025B  07BD               	addwf	sprintf@eexp^(0+128),f
  2320  025C  1803               	skipnc
  2321  025D  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2322  025E  3000               	movlw	0
  2323  025F  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2324  0260                     l4283:	
  2325                           
  2326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1138:      
      +                          if(prec <= 12)
  2327  0260  1683               	bsf	3,5	;RP0=1, select bank1
  2328  0261  1303               	bcf	3,6	;RP1=0, select bank1
  2329  0262  0845               	movf	(sprintf@prec+1)^(0+128),w
  2330  0263  3A80               	xorlw	128
  2331  0264  00FF               	movwf	btemp+1
  2332  0265  3080               	movlw	128
  2333  0266  027F               	subwf	btemp+1,w
  2334  0267  1D03               	skipz
  2335  0268  2A6B               	goto	u7215
  2336  0269  300D               	movlw	13
  2337  026A  0244               	subwf	sprintf@prec^(0+128),w
  2338  026B                     u7215:	
  2339  026B  1803               	skipnc
  2340  026C  2A6E               	goto	u7211
  2341  026D  2A6F               	goto	u7210
  2342  026E                     u7211:	
  2343  026E  2AB6               	goto	l4287
  2344  026F                     u7210:	
  2345  026F                     l4285:	
  2346                           
  2347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1139:      
      +                           fval += fround((unsigned int)prec);
  2348  026F  1683               	bsf	3,5	;RP0=1, select bank1
  2349  0270  1303               	bcf	3,6	;RP1=0, select bank1
  2350  0271  0844               	movf	sprintf@prec^(0+128),w
  2351  0272  160A  118A  236B  120A  118A  	fcall	_fround
  2352  0277  1283               	bcf	3,5	;RP0=0, select bank0
  2353  0278  1303               	bcf	3,6	;RP1=0, select bank0
  2354  0279  0847               	movf	?_fround+3,w
  2355  027A  00DB               	movwf	___fladd@b+3
  2356  027B  0846               	movf	?_fround+2,w
  2357  027C  00DA               	movwf	___fladd@b+2
  2358  027D  0845               	movf	?_fround+1,w
  2359  027E  00D9               	movwf	___fladd@b+1
  2360  027F  0844               	movf	?_fround,w
  2361  0280  00D8               	movwf	___fladd@b
  2362  0281  1683               	bsf	3,5	;RP0=1, select bank1
  2363  0282  1303               	bcf	3,6	;RP1=0, select bank1
  2364  0283  0849               	movf	(sprintf@fval+3)^(0+128),w
  2365  0284  1283               	bcf	3,5	;RP0=0, select bank0
  2366  0285  1303               	bcf	3,6	;RP1=0, select bank0
  2367  0286  00DF               	movwf	___fladd@a+3
  2368  0287  1683               	bsf	3,5	;RP0=1, select bank1
  2369  0288  1303               	bcf	3,6	;RP1=0, select bank1
  2370  0289  0848               	movf	(sprintf@fval+2)^(0+128),w
  2371  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2372  028B  1303               	bcf	3,6	;RP1=0, select bank0
  2373  028C  00DE               	movwf	___fladd@a+2
  2374  028D  1683               	bsf	3,5	;RP0=1, select bank1
  2375  028E  1303               	bcf	3,6	;RP1=0, select bank1
  2376  028F  0847               	movf	(sprintf@fval+1)^(0+128),w
  2377  0290  1283               	bcf	3,5	;RP0=0, select bank0
  2378  0291  1303               	bcf	3,6	;RP1=0, select bank0
  2379  0292  00DD               	movwf	___fladd@a+1
  2380  0293  1683               	bsf	3,5	;RP0=1, select bank1
  2381  0294  1303               	bcf	3,6	;RP1=0, select bank1
  2382  0295  0846               	movf	sprintf@fval^(0+128),w
  2383  0296  1283               	bcf	3,5	;RP0=0, select bank0
  2384  0297  1303               	bcf	3,6	;RP1=0, select bank0
  2385  0298  00DC               	movwf	___fladd@a
  2386  0299  160A  118A  2578  120A  118A  	fcall	___fladd
  2387  029E  1283               	bcf	3,5	;RP0=0, select bank0
  2388  029F  1303               	bcf	3,6	;RP1=0, select bank0
  2389  02A0  085B               	movf	?___fladd+3,w
  2390  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2391  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  2392  02A3  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2393  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  2394  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  2395  02A6  085A               	movf	?___fladd+2,w
  2396  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  2397  02A8  1303               	bcf	3,6	;RP1=0, select bank1
  2398  02A9  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2399  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  2400  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  2401  02AC  0859               	movf	?___fladd+1,w
  2402  02AD  1683               	bsf	3,5	;RP0=1, select bank1
  2403  02AE  1303               	bcf	3,6	;RP1=0, select bank1
  2404  02AF  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2405  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2406  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  2407  02B2  0858               	movf	?___fladd,w
  2408  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  2409  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  2410  02B5  00C6               	movwf	sprintf@fval^(0+128)
  2411  02B6                     l4287:	
  2412                           
  2413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1142:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2414  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2415  02B7  1303               	bcf	3,6	;RP1=0, select bank1
  2416  02B8  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2417  02B9  3A80               	xorlw	128
  2418  02BA  00FF               	movwf	btemp+1
  2419  02BB  3080               	movlw	128
  2420  02BC  027F               	subwf	btemp+1,w
  2421  02BD  1D03               	skipz
  2422  02BE  2AC1               	goto	u7225
  2423  02BF  300A               	movlw	10
  2424  02C0  023D               	subwf	sprintf@eexp^(0+128),w
  2425  02C1                     u7225:	
  2426  02C1  1803               	skipnc
  2427  02C2  2AC4               	goto	u7221
  2428  02C3  2AC5               	goto	u7220
  2429  02C4                     u7221:	
  2430  02C4  2B24               	goto	l4295
  2431  02C5                     u7220:	
  2432  02C5                     l4289:	
  2433  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  2434  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  2435  02C7  0849               	movf	(sprintf@fval+3)^(0+128),w
  2436  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  2437  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  2438  02CA  00A3               	movwf	___fleq@ff1+3
  2439  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  2440  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  2441  02CD  0848               	movf	(sprintf@fval+2)^(0+128),w
  2442  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2443  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  2444  02D0  00A2               	movwf	___fleq@ff1+2
  2445  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  2446  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  2447  02D3  0847               	movf	(sprintf@fval+1)^(0+128),w
  2448  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2449  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2450  02D6  00A1               	movwf	___fleq@ff1+1
  2451  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  2452  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  2453  02D9  0846               	movf	sprintf@fval^(0+128),w
  2454  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  2455  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  2456  02DC  00A0               	movwf	___fleq@ff1
  2457  02DD  3000               	movlw	0
  2458  02DE  00A7               	movwf	___fleq@ff2+3
  2459  02DF  3000               	movlw	0
  2460  02E0  00A6               	movwf	___fleq@ff2+2
  2461  02E1  3000               	movlw	0
  2462  02E2  00A5               	movwf	___fleq@ff2+1
  2463  02E3  3000               	movlw	0
  2464  02E4  00A4               	movwf	___fleq@ff2
  2465  02E5  160A  158A  2316  120A  118A  	fcall	___fleq
  2466  02EA  1803               	btfsc	3,0
  2467  02EB  2AED               	goto	u7231
  2468  02EC  2AEE               	goto	u7230
  2469  02ED                     u7231:	
  2470  02ED  2BD0               	goto	l4309
  2471  02EE                     u7230:	
  2472  02EE                     l4291:	
  2473  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  2474  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  2475  02F0  0849               	movf	(sprintf@fval+3)^(0+128),w
  2476  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2477  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  2478  02F3  00DA               	movwf	___fltol@f1+3
  2479  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  2480  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  2481  02F6  0848               	movf	(sprintf@fval+2)^(0+128),w
  2482  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  2483  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  2484  02F9  00D9               	movwf	___fltol@f1+2
  2485  02FA  1683               	bsf	3,5	;RP0=1, select bank1
  2486  02FB  1303               	bcf	3,6	;RP1=0, select bank1
  2487  02FC  0847               	movf	(sprintf@fval+1)^(0+128),w
  2488  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2489  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2490  02FF  00D8               	movwf	___fltol@f1+1
  2491  0300  1683               	bsf	3,5	;RP0=1, select bank1
  2492  0301  1303               	bcf	3,6	;RP1=0, select bank1
  2493  0302  0846               	movf	sprintf@fval^(0+128),w
  2494  0303  1283               	bcf	3,5	;RP0=0, select bank0
  2495  0304  1303               	bcf	3,6	;RP1=0, select bank0
  2496  0305  00D7               	movwf	___fltol@f1
  2497  0306  160A  158A  258B  120A  118A  	fcall	___fltol
  2498  030B  1283               	bcf	3,5	;RP0=0, select bank0
  2499  030C  1303               	bcf	3,6	;RP1=0, select bank0
  2500  030D  085A               	movf	?___fltol+3,w
  2501  030E  0459               	iorwf	?___fltol+2,w
  2502  030F  0458               	iorwf	?___fltol+1,w
  2503  0310  0457               	iorwf	?___fltol,w
  2504  0311  1D03               	skipz
  2505  0312  2B14               	goto	u7241
  2506  0313  2B15               	goto	u7240
  2507  0314                     u7241:	
  2508  0314  2BD0               	goto	l4309
  2509  0315                     u7240:	
  2510  0315                     l4293:	
  2511  0315  1683               	bsf	3,5	;RP0=1, select bank1
  2512  0316  1303               	bcf	3,6	;RP1=0, select bank1
  2513  0317  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2514  0318  3A80               	xorlw	128
  2515  0319  00FF               	movwf	btemp+1
  2516  031A  3080               	movlw	128
  2517  031B  027F               	subwf	btemp+1,w
  2518  031C  1D03               	skipz
  2519  031D  2B20               	goto	u7255
  2520  031E  3002               	movlw	2
  2521  031F  023D               	subwf	sprintf@eexp^(0+128),w
  2522  0320                     u7255:	
  2523  0320  1C03               	skipc
  2524  0321  2B23               	goto	u7251
  2525  0322  2B24               	goto	u7250
  2526  0323                     u7251:	
  2527  0323  2BD0               	goto	l4309
  2528  0324                     u7250:	
  2529  0324                     l4295:	
  2530                           
  2531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1146:      
      +                          if(tmpval.integ < 4.294967296){
  2532  0324  1683               	bsf	3,5	;RP0=1, select bank1
  2533  0325  1303               	bcf	3,6	;RP1=0, select bank1
  2534  0326  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  2535  0327  1283               	bcf	3,5	;RP0=0, select bank0
  2536  0328  1303               	bcf	3,6	;RP1=0, select bank0
  2537  0329  00A3               	movwf	___flge@ff1+3
  2538  032A  1683               	bsf	3,5	;RP0=1, select bank1
  2539  032B  1303               	bcf	3,6	;RP1=0, select bank1
  2540  032C  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  2541  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2542  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2543  032F  00A2               	movwf	___flge@ff1+2
  2544  0330  1683               	bsf	3,5	;RP0=1, select bank1
  2545  0331  1303               	bcf	3,6	;RP1=0, select bank1
  2546  0332  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  2547  0333  1283               	bcf	3,5	;RP0=0, select bank0
  2548  0334  1303               	bcf	3,6	;RP1=0, select bank0
  2549  0335  00A1               	movwf	___flge@ff1+1
  2550  0336  1683               	bsf	3,5	;RP0=1, select bank1
  2551  0337  1303               	bcf	3,6	;RP1=0, select bank1
  2552  0338  0840               	movf	sprintf@tmpval^(0+128),w
  2553  0339  1283               	bcf	3,5	;RP0=0, select bank0
  2554  033A  1303               	bcf	3,6	;RP1=0, select bank0
  2555  033B  00A0               	movwf	___flge@ff1
  2556  033C  3040               	movlw	64
  2557  033D  00A7               	movwf	___flge@ff2+3
  2558  033E  3089               	movlw	137
  2559  033F  00A6               	movwf	___flge@ff2+2
  2560  0340  3070               	movlw	112
  2561  0341  00A5               	movwf	___flge@ff2+1
  2562  0342  305F               	movlw	95
  2563  0343  00A4               	movwf	___flge@ff2
  2564  0344  160A  158A  26A0  120A  118A  	fcall	___flge
  2565  0349  1803               	btfsc	3,0
  2566  034A  2B4C               	goto	u7261
  2567  034B  2B4D               	goto	u7260
  2568  034C                     u7261:	
  2569  034C  2B56               	goto	l4299
  2570  034D                     u7260:	
  2571  034D                     l4297:	
  2572                           
  2573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1147:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2574  034D  30F7               	movlw	247
  2575  034E  1683               	bsf	3,5	;RP0=1, select bank1
  2576  034F  1303               	bcf	3,6	;RP1=0, select bank1
  2577  0350  07BD               	addwf	sprintf@eexp^(0+128),f
  2578  0351  1803               	skipnc
  2579  0352  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2580  0353  30FF               	movlw	255
  2581  0354  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2582                           
  2583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1148:      
      +                          }else{
  2584  0355  2B5E               	goto	l4301
  2585  0356                     l4299:	
  2586                           
  2587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1149:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2588  0356  30F8               	movlw	248
  2589  0357  1683               	bsf	3,5	;RP0=1, select bank1
  2590  0358  1303               	bcf	3,6	;RP1=0, select bank1
  2591  0359  07BD               	addwf	sprintf@eexp^(0+128),f
  2592  035A  1803               	skipnc
  2593  035B  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2594  035C  30FF               	movlw	255
  2595  035D  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2596  035E                     l4301:	
  2597                           
  2598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1152:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  2599  035E  083D               	movf	sprintf@eexp^(0+128),w
  2600  035F  120A  158A  249D  120A  118A  	fcall	_scale
  2601  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2602  0365  1303               	bcf	3,6	;RP1=0, select bank0
  2603  0366  0847               	movf	?_scale+3,w
  2604  0367  1683               	bsf	3,5	;RP0=1, select bank1
  2605  0368  1303               	bcf	3,6	;RP1=0, select bank1
  2606  0369  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  2607  036A  1283               	bcf	3,5	;RP0=0, select bank0
  2608  036B  1303               	bcf	3,6	;RP1=0, select bank0
  2609  036C  0846               	movf	?_scale+2,w
  2610  036D  1683               	bsf	3,5	;RP0=1, select bank1
  2611  036E  1303               	bcf	3,6	;RP1=0, select bank1
  2612  036F  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  2613  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2614  0371  1303               	bcf	3,6	;RP1=0, select bank0
  2615  0372  0845               	movf	?_scale+1,w
  2616  0373  1683               	bsf	3,5	;RP0=1, select bank1
  2617  0374  1303               	bcf	3,6	;RP1=0, select bank1
  2618  0375  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  2619  0376  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2621  0378  0844               	movf	?_scale,w
  2622  0379  1683               	bsf	3,5	;RP0=1, select bank1
  2623  037A  1303               	bcf	3,6	;RP1=0, select bank1
  2624  037B  00C0               	movwf	sprintf@tmpval^(0+128)
  2625  037C                     l4303:	
  2626  037C  0849               	movf	(sprintf@fval+3)^(0+128),w
  2627  037D  1283               	bcf	3,5	;RP0=0, select bank0
  2628  037E  1303               	bcf	3,6	;RP1=0, select bank0
  2629  037F  00A3               	movwf	__div_to_l_@f1+3
  2630  0380  1683               	bsf	3,5	;RP0=1, select bank1
  2631  0381  1303               	bcf	3,6	;RP1=0, select bank1
  2632  0382  0848               	movf	(sprintf@fval+2)^(0+128),w
  2633  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2634  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2635  0385  00A2               	movwf	__div_to_l_@f1+2
  2636  0386  1683               	bsf	3,5	;RP0=1, select bank1
  2637  0387  1303               	bcf	3,6	;RP1=0, select bank1
  2638  0388  0847               	movf	(sprintf@fval+1)^(0+128),w
  2639  0389  1283               	bcf	3,5	;RP0=0, select bank0
  2640  038A  1303               	bcf	3,6	;RP1=0, select bank0
  2641  038B  00A1               	movwf	__div_to_l_@f1+1
  2642  038C  1683               	bsf	3,5	;RP0=1, select bank1
  2643  038D  1303               	bcf	3,6	;RP1=0, select bank1
  2644  038E  0846               	movf	sprintf@fval^(0+128),w
  2645  038F  1283               	bcf	3,5	;RP0=0, select bank0
  2646  0390  1303               	bcf	3,6	;RP1=0, select bank0
  2647  0391  00A0               	movwf	__div_to_l_@f1
  2648  0392  1683               	bsf	3,5	;RP0=1, select bank1
  2649  0393  1303               	bcf	3,6	;RP1=0, select bank1
  2650  0394  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  2651  0395  1283               	bcf	3,5	;RP0=0, select bank0
  2652  0396  1303               	bcf	3,6	;RP1=0, select bank0
  2653  0397  00A7               	movwf	__div_to_l_@f2+3
  2654  0398  1683               	bsf	3,5	;RP0=1, select bank1
  2655  0399  1303               	bcf	3,6	;RP1=0, select bank1
  2656  039A  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  2657  039B  1283               	bcf	3,5	;RP0=0, select bank0
  2658  039C  1303               	bcf	3,6	;RP1=0, select bank0
  2659  039D  00A6               	movwf	__div_to_l_@f2+2
  2660  039E  1683               	bsf	3,5	;RP0=1, select bank1
  2661  039F  1303               	bcf	3,6	;RP1=0, select bank1
  2662  03A0  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  2663  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2664  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  2665  03A3  00A5               	movwf	__div_to_l_@f2+1
  2666  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  2667  03A5  1303               	bcf	3,6	;RP1=0, select bank1
  2668  03A6  0840               	movf	sprintf@tmpval^(0+128),w
  2669  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2670  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2671  03A9  00A4               	movwf	__div_to_l_@f2
  2672  03AA  160A  118A  20CE  120A  118A  	fcall	__div_to_l_
  2673  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2674  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2675  03B1  0823               	movf	?__div_to_l_+3,w
  2676  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  2677  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  2678  03B4  00BC               	movwf	(sprintf@val+3)^(0+128)
  2679  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  2680  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  2681  03B7  0822               	movf	?__div_to_l_+2,w
  2682  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  2683  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  2684  03BA  00BB               	movwf	(sprintf@val+2)^(0+128)
  2685  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2686  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  2687  03BD  0821               	movf	?__div_to_l_+1,w
  2688  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  2689  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  2690  03C0  00BA               	movwf	(sprintf@val+1)^(0+128)
  2691  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  2692  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  2693  03C3  0820               	movf	?__div_to_l_,w
  2694  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  2695  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  2696  03C6  00B9               	movwf	sprintf@val^(0+128)
  2697  03C7                     l4307:	
  2698                           
  2699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1155:      
      +                          fval = 0.0;
  2700  03C7  3000               	movlw	0
  2701  03C8  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2702  03C9  3000               	movlw	0
  2703  03CA  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2704  03CB  3000               	movlw	0
  2705  03CC  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2706  03CD  3000               	movlw	0
  2707  03CE  00C6               	movwf	sprintf@fval^(0+128)
  2708                           
  2709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1156:     }
      +                           else {
  2710  03CF  2C36               	goto	l4315
  2711  03D0                     l4309:	
  2712                           
  2713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1157:      
      +                          val = (unsigned long)fval;
  2714  03D0  1683               	bsf	3,5	;RP0=1, select bank1
  2715  03D1  1303               	bcf	3,6	;RP1=0, select bank1
  2716  03D2  0849               	movf	(sprintf@fval+3)^(0+128),w
  2717  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2718  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2719  03D5  00DA               	movwf	___fltol@f1+3
  2720  03D6  1683               	bsf	3,5	;RP0=1, select bank1
  2721  03D7  1303               	bcf	3,6	;RP1=0, select bank1
  2722  03D8  0848               	movf	(sprintf@fval+2)^(0+128),w
  2723  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  2724  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  2725  03DB  00D9               	movwf	___fltol@f1+2
  2726  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  2727  03DD  1303               	bcf	3,6	;RP1=0, select bank1
  2728  03DE  0847               	movf	(sprintf@fval+1)^(0+128),w
  2729  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2730  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  2731  03E1  00D8               	movwf	___fltol@f1+1
  2732  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  2733  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  2734  03E4  0846               	movf	sprintf@fval^(0+128),w
  2735  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2736  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2737  03E7  00D7               	movwf	___fltol@f1
  2738  03E8  160A  158A  258B  120A  118A  	fcall	___fltol
  2739  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  2740  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  2741  03EF  085A               	movf	?___fltol+3,w
  2742  03F0  1683               	bsf	3,5	;RP0=1, select bank1
  2743  03F1  1303               	bcf	3,6	;RP1=0, select bank1
  2744  03F2  00BC               	movwf	(sprintf@val+3)^(0+128)
  2745  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  2746  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  2747  03F5  0859               	movf	?___fltol+2,w
  2748  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  2749  03F7  1303               	bcf	3,6	;RP1=0, select bank1
  2750  03F8  00BB               	movwf	(sprintf@val+2)^(0+128)
  2751  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2752  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  2753  03FB  0858               	movf	?___fltol+1,w
  2754  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  2755  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  2756  03FE  00BA               	movwf	(sprintf@val+1)^(0+128)
  2757  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  2758  0400  1303               	bcf	3,6	;RP1=0, select bank0
  2759  0401  0857               	movf	?___fltol,w
  2760  0402  1683               	bsf	3,5	;RP0=1, select bank1
  2761  0403  1303               	bcf	3,6	;RP1=0, select bank1
  2762  0404  00B9               	movwf	sprintf@val^(0+128)
  2763  0405                     l4311:	
  2764                           
  2765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1158:      
      +                          fval -= (double)val;
  2766  0405  083C               	movf	(sprintf@val+3)^(0+128),w
  2767  0406  00F6               	movwf	___xxtofl@val+3
  2768  0407  083B               	movf	(sprintf@val+2)^(0+128),w
  2769  0408  00F5               	movwf	___xxtofl@val+2
  2770  0409  083A               	movf	(sprintf@val+1)^(0+128),w
  2771  040A  00F4               	movwf	___xxtofl@val+1
  2772  040B  0839               	movf	sprintf@val^(0+128),w
  2773  040C  00F3               	movwf	___xxtofl@val
  2774  040D  3000               	movlw	0
  2775  040E  160A  158A  2744  120A  118A  	fcall	___xxtofl
  2776  0413  0876               	movf	?___xxtofl+3,w
  2777  0414  1683               	bsf	3,5	;RP0=1, select bank1
  2778  0415  1303               	bcf	3,6	;RP1=0, select bank1
  2779  0416  00A3               	movwf	(___flsub@a+3)^(0+128)
  2780  0417  0875               	movf	?___xxtofl+2,w
  2781  0418  00A2               	movwf	(___flsub@a+2)^(0+128)
  2782  0419  0874               	movf	?___xxtofl+1,w
  2783  041A  00A1               	movwf	(___flsub@a+1)^(0+128)
  2784  041B  0873               	movf	?___xxtofl,w
  2785  041C  00A0               	movwf	___flsub@a^(0+128)
  2786  041D  0849               	movf	(sprintf@fval+3)^(0+128),w
  2787  041E  00A7               	movwf	(___flsub@b+3)^(0+128)
  2788  041F  0848               	movf	(sprintf@fval+2)^(0+128),w
  2789  0420  00A6               	movwf	(___flsub@b+2)^(0+128)
  2790  0421  0847               	movf	(sprintf@fval+1)^(0+128),w
  2791  0422  00A5               	movwf	(___flsub@b+1)^(0+128)
  2792  0423  0846               	movf	sprintf@fval^(0+128),w
  2793  0424  00A4               	movwf	___flsub@b^(0+128)
  2794  0425  160A  158A  2366  120A  118A  	fcall	___flsub
  2795  042A  1683               	bsf	3,5	;RP0=1, select bank1
  2796  042B  1303               	bcf	3,6	;RP1=0, select bank1
  2797  042C  0823               	movf	(?___flsub+3)^(0+128),w
  2798  042D  00C9               	movwf	(sprintf@fval+3)^(0+128)
  2799  042E  0822               	movf	(?___flsub+2)^(0+128),w
  2800  042F  00C8               	movwf	(sprintf@fval+2)^(0+128)
  2801  0430  0821               	movf	(?___flsub+1)^(0+128),w
  2802  0431  00C7               	movwf	(sprintf@fval+1)^(0+128)
  2803  0432  0820               	movf	?___flsub^(0+128),w
  2804  0433  00C6               	movwf	sprintf@fval^(0+128)
  2805  0434                     l4313:	
  2806                           
  2807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1159:      
      +                          eexp = 0;
  2808  0434  01BD               	clrf	sprintf@eexp^(0+128)
  2809  0435  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  2810  0436                     l4315:	
  2811                           
  2812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1162:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2813  0436  01CA               	clrf	sprintf@c^(0+128)
  2814  0437  0ACA               	incf	sprintf@c^(0+128),f
  2815  0438                     l4321:	
  2816                           
  2817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1163:      
      +                          if(val < dpowers[c])
  2818  0438  084A               	movf	sprintf@c^(0+128),w
  2819  0439  00AD               	movwf	??_sprintf^(0+128)
  2820  043A  3001               	movlw	1
  2821  043B                     u7275:	
  2822  043B  1003               	clrc
  2823  043C  0DAD               	rlf	??_sprintf^(0+128),f
  2824  043D  3EFF               	addlw	-1
  2825  043E  1D03               	skipz
  2826  043F  2C3B               	goto	u7275
  2827  0440  1003               	clrc
  2828  0441  0D2D               	rlf	??_sprintf^(0+128),w
  2829  0442  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2830  0443  0084               	movwf	4
  2831  0444  160A  158A  200A  120A  118A  	fcall	stringdir
  2832  0449  00AE               	movwf	(??_sprintf+1)^(0+128)
  2833  044A  160A  158A  200A  120A  118A  	fcall	stringdir
  2834  044F  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
  2835  0450  160A  158A  200A  120A  118A  	fcall	stringdir
  2836  0455  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
  2837  0456  160A  158A  200A  120A  118A  	fcall	stringdir
  2838  045B  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
  2839  045C  0831               	movf	(??_sprintf+4)^(0+128),w
  2840  045D  023C               	subwf	(sprintf@val+3)^(0+128),w
  2841  045E  1D03               	skipz
  2842  045F  2C6A               	goto	u7285
  2843  0460  0830               	movf	(??_sprintf+3)^(0+128),w
  2844  0461  023B               	subwf	(sprintf@val+2)^(0+128),w
  2845  0462  1D03               	skipz
  2846  0463  2C6A               	goto	u7285
  2847  0464  082F               	movf	(??_sprintf+2)^(0+128),w
  2848  0465  023A               	subwf	(sprintf@val+1)^(0+128),w
  2849  0466  1D03               	skipz
  2850  0467  2C6A               	goto	u7285
  2851  0468  082E               	movf	(??_sprintf+1)^(0+128),w
  2852  0469  0239               	subwf	sprintf@val^(0+128),w
  2853  046A                     u7285:	
  2854  046A  1803               	skipnc
  2855  046B  2C6D               	goto	u7281
  2856  046C  2C6E               	goto	u7280
  2857  046D                     u7281:	
  2858  046D  2C6F               	goto	l4325
  2859  046E                     u7280:	
  2860  046E  2C79               	goto	l4327
  2861  046F                     l4325:	
  2862  046F  3001               	movlw	1
  2863  0470  00AD               	movwf	??_sprintf^(0+128)
  2864  0471  082D               	movf	??_sprintf^(0+128),w
  2865  0472  07CA               	addwf	sprintf@c^(0+128),f
  2866  0473  300A               	movlw	10
  2867  0474  064A               	xorwf	sprintf@c^(0+128),w
  2868  0475  1D03               	btfss	3,2
  2869  0476  2C78               	goto	u7291
  2870  0477  2C79               	goto	u7290
  2871  0478                     u7291:	
  2872  0478  2C38               	goto	l4321
  2873  0479                     u7290:	
  2874  0479                     l4327:	
  2875                           
  2876                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1201:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1214:     i
      +                          f(flag & 0x03)
  2877  0479  3003               	movlw	3
  2878  047A  0537               	andwf	sprintf@flag^(0+128),w
  2879  047B  00AD               	movwf	??_sprintf^(0+128)
  2880  047C  3000               	movlw	0
  2881  047D  0538               	andwf	(sprintf@flag+1)^(0+128),w
  2882  047E  00AE               	movwf	(??_sprintf+1)^(0+128)
  2883  047F  082D               	movf	??_sprintf^(0+128),w
  2884  0480  042E               	iorwf	(??_sprintf^(0+128)+1),w
  2885  0481  1903               	btfsc	3,2
  2886  0482  2C84               	goto	u7301
  2887  0483  2C85               	goto	u7300
  2888  0484                     u7301:	
  2889  0484  2D37               	goto	l331
  2890  0485                     u7300:	
  2891  0485                     l4329:	
  2892                           
  2893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1216:      
      +                          ((*sp++ = ('-')));
  2894  0485  302D               	movlw	45
  2895  0486  00AD               	movwf	??_sprintf^(0+128)
  2896  0487  083F               	movf	sprintf@sp^(0+128),w
  2897  0488  0084               	movwf	4
  2898  0489  082D               	movf	??_sprintf^(0+128),w
  2899  048A  1383               	bcf	3,7	;select IRP bank0
  2900  048B  0080               	movwf	0
  2901  048C                     l4331:	
  2902  048C  3001               	movlw	1
  2903  048D  00AD               	movwf	??_sprintf^(0+128)
  2904  048E  082D               	movf	??_sprintf^(0+128),w
  2905  048F  07BF               	addwf	sprintf@sp^(0+128),f
  2906  0490  2D37               	goto	l331
  2907  0491                     l4333:	
  2908                           
  2909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1226:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1227:      
      +                          tmpval.vd = val/dpowers[c];
  2910  0491  084A               	movf	sprintf@c^(0+128),w
  2911  0492  00AD               	movwf	??_sprintf^(0+128)
  2912  0493  3001               	movlw	1
  2913  0494                     u7315:	
  2914  0494  1003               	clrc
  2915  0495  0DAD               	rlf	??_sprintf^(0+128),f
  2916  0496  3EFF               	addlw	-1
  2917  0497  1D03               	skipz
  2918  0498  2C94               	goto	u7315
  2919  0499  1003               	clrc
  2920  049A  0D2D               	rlf	??_sprintf^(0+128),w
  2921  049B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2922  049C  0084               	movwf	4
  2923  049D  160A  158A  200A  120A  118A  	fcall	stringdir
  2924  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  2925  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  2926  04A4  00A0               	movwf	___lldiv@divisor
  2927  04A5  160A  158A  200A  120A  118A  	fcall	stringdir
  2928  04AA  00A1               	movwf	___lldiv@divisor+1
  2929  04AB  160A  158A  200A  120A  118A  	fcall	stringdir
  2930  04B0  00A2               	movwf	___lldiv@divisor+2
  2931  04B1  160A  158A  200A  120A  118A  	fcall	stringdir
  2932  04B6  00A3               	movwf	___lldiv@divisor+3
  2933  04B7  1683               	bsf	3,5	;RP0=1, select bank1
  2934  04B8  1303               	bcf	3,6	;RP1=0, select bank1
  2935  04B9  083C               	movf	(sprintf@val+3)^(0+128),w
  2936  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2937  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2938  04BC  00A7               	movwf	___lldiv@dividend+3
  2939  04BD  1683               	bsf	3,5	;RP0=1, select bank1
  2940  04BE  1303               	bcf	3,6	;RP1=0, select bank1
  2941  04BF  083B               	movf	(sprintf@val+2)^(0+128),w
  2942  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2943  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2944  04C2  00A6               	movwf	___lldiv@dividend+2
  2945  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  2946  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  2947  04C5  083A               	movf	(sprintf@val+1)^(0+128),w
  2948  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2949  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2950  04C8  00A5               	movwf	___lldiv@dividend+1
  2951  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  2952  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  2953  04CB  0839               	movf	sprintf@val^(0+128),w
  2954  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  2955  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  2956  04CE  00A4               	movwf	___lldiv@dividend
  2957  04CF  120A  158A  2000  120A  118A  	fcall	___lldiv
  2958  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  2959  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  2960  04D6  0823               	movf	?___lldiv+3,w
  2961  04D7  1683               	bsf	3,5	;RP0=1, select bank1
  2962  04D8  1303               	bcf	3,6	;RP1=0, select bank1
  2963  04D9  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  2964  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  2965  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  2966  04DC  0822               	movf	?___lldiv+2,w
  2967  04DD  1683               	bsf	3,5	;RP0=1, select bank1
  2968  04DE  1303               	bcf	3,6	;RP1=0, select bank1
  2969  04DF  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  2970  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  2971  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  2972  04E2  0821               	movf	?___lldiv+1,w
  2973  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  2974  04E4  1303               	bcf	3,6	;RP1=0, select bank1
  2975  04E5  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  2976  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  2977  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  2978  04E8  0820               	movf	?___lldiv,w
  2979  04E9  1683               	bsf	3,5	;RP0=1, select bank1
  2980  04EA  1303               	bcf	3,6	;RP1=0, select bank1
  2981  04EB  00C0               	movwf	sprintf@tmpval^(0+128)
  2982  04EC                     l4335:	
  2983                           
  2984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1228:      
      +                          tmpval.vd %= 10;
  2985  04EC  3000               	movlw	0
  2986  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  2987  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  2988  04EF  00A3               	movwf	___llmod@divisor+3
  2989  04F0  3000               	movlw	0
  2990  04F1  00A2               	movwf	___llmod@divisor+2
  2991  04F2  3000               	movlw	0
  2992  04F3  00A1               	movwf	___llmod@divisor+1
  2993  04F4  300A               	movlw	10
  2994  04F5  00A0               	movwf	___llmod@divisor
  2995  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  2996  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  2997  04F8  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  2998  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  2999  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  3000  04FB  00A7               	movwf	___llmod@dividend+3
  3001  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  3002  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  3003  04FE  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  3004  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  3005  0500  1303               	bcf	3,6	;RP1=0, select bank0
  3006  0501  00A6               	movwf	___llmod@dividend+2
  3007  0502  1683               	bsf	3,5	;RP0=1, select bank1
  3008  0503  1303               	bcf	3,6	;RP1=0, select bank1
  3009  0504  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  3010  0505  1283               	bcf	3,5	;RP0=0, select bank0
  3011  0506  1303               	bcf	3,6	;RP1=0, select bank0
  3012  0507  00A5               	movwf	___llmod@dividend+1
  3013  0508  1683               	bsf	3,5	;RP0=1, select bank1
  3014  0509  1303               	bcf	3,6	;RP1=0, select bank1
  3015  050A  0840               	movf	sprintf@tmpval^(0+128),w
  3016  050B  1283               	bcf	3,5	;RP0=0, select bank0
  3017  050C  1303               	bcf	3,6	;RP1=0, select bank0
  3018  050D  00A4               	movwf	___llmod@dividend
  3019  050E  160A  158A  240C  120A  118A  	fcall	___llmod
  3020  0513  1283               	bcf	3,5	;RP0=0, select bank0
  3021  0514  1303               	bcf	3,6	;RP1=0, select bank0
  3022  0515  0823               	movf	?___llmod+3,w
  3023  0516  1683               	bsf	3,5	;RP0=1, select bank1
  3024  0517  1303               	bcf	3,6	;RP1=0, select bank1
  3025  0518  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  3026  0519  1283               	bcf	3,5	;RP0=0, select bank0
  3027  051A  1303               	bcf	3,6	;RP1=0, select bank0
  3028  051B  0822               	movf	?___llmod+2,w
  3029  051C  1683               	bsf	3,5	;RP0=1, select bank1
  3030  051D  1303               	bcf	3,6	;RP1=0, select bank1
  3031  051E  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  3032  051F  1283               	bcf	3,5	;RP0=0, select bank0
  3033  0520  1303               	bcf	3,6	;RP1=0, select bank0
  3034  0521  0821               	movf	?___llmod+1,w
  3035  0522  1683               	bsf	3,5	;RP0=1, select bank1
  3036  0523  1303               	bcf	3,6	;RP1=0, select bank1
  3037  0524  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  3038  0525  1283               	bcf	3,5	;RP0=0, select bank0
  3039  0526  1303               	bcf	3,6	;RP1=0, select bank0
  3040  0527  0820               	movf	?___llmod,w
  3041  0528  1683               	bsf	3,5	;RP0=1, select bank1
  3042  0529  1303               	bcf	3,6	;RP1=0, select bank1
  3043  052A  00C0               	movwf	sprintf@tmpval^(0+128)
  3044  052B                     l4337:	
  3045                           
  3046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1229:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  3047  052B  0840               	movf	sprintf@tmpval^(0+128),w
  3048  052C  3E30               	addlw	48
  3049  052D  00AD               	movwf	??_sprintf^(0+128)
  3050  052E  083F               	movf	sprintf@sp^(0+128),w
  3051  052F  0084               	movwf	4
  3052  0530  082D               	movf	??_sprintf^(0+128),w
  3053  0531  1383               	bcf	3,7	;select IRP bank0
  3054  0532  0080               	movwf	0
  3055  0533  3001               	movlw	1
  3056  0534  00AD               	movwf	??_sprintf^(0+128)
  3057  0535  082D               	movf	??_sprintf^(0+128),w
  3058  0536  07BF               	addwf	sprintf@sp^(0+128),f
  3059  0537                     l331:	
  3060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1230:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1232:    }
  3061                           
  3062                           
  3063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1222:    wh
      +                          ile(c--) {
  3064  0537  3001               	movlw	1
  3065  0538  02CA               	subwf	sprintf@c^(0+128),f
  3066  0539  0A4A               	incf	sprintf@c^(0+128),w
  3067  053A  1D03               	btfss	3,2
  3068  053B  2D3D               	goto	u7321
  3069  053C  2D3E               	goto	u7320
  3070  053D                     u7321:	
  3071  053D  2C91               	goto	l4333
  3072  053E                     u7320:	
  3073  053E  2D52               	goto	l4345
  3074  053F                     l4339:	
  3075                           
  3076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1234:     (
      +                          (*sp++ = ('0')));
  3077  053F  3030               	movlw	48
  3078  0540  1683               	bsf	3,5	;RP0=1, select bank1
  3079  0541  1303               	bcf	3,6	;RP1=0, select bank1
  3080  0542  00AD               	movwf	??_sprintf^(0+128)
  3081  0543  083F               	movf	sprintf@sp^(0+128),w
  3082  0544  0084               	movwf	4
  3083  0545  082D               	movf	??_sprintf^(0+128),w
  3084  0546  1383               	bcf	3,7	;select IRP bank0
  3085  0547  0080               	movwf	0
  3086  0548                     l4341:	
  3087  0548  3001               	movlw	1
  3088  0549  00AD               	movwf	??_sprintf^(0+128)
  3089  054A  082D               	movf	??_sprintf^(0+128),w
  3090  054B  07BF               	addwf	sprintf@sp^(0+128),f
  3091  054C                     l4343:	
  3092                           
  3093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1235:     e
      +                          exp--;
  3094  054C  30FF               	movlw	255
  3095  054D  07BD               	addwf	sprintf@eexp^(0+128),f
  3096  054E  1803               	skipnc
  3097  054F  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  3098  0550  30FF               	movlw	255
  3099  0551  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  3100  0552                     l4345:	
  3101                           
  3102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1233:    wh
      +                          ile(eexp > 0) {
  3103  0552  083E               	movf	(sprintf@eexp+1)^(0+128),w
  3104  0553  3A80               	xorlw	128
  3105  0554  00FF               	movwf	btemp+1
  3106  0555  3080               	movlw	128
  3107  0556  027F               	subwf	btemp+1,w
  3108  0557  1D03               	skipz
  3109  0558  2D5B               	goto	u7335
  3110  0559  3001               	movlw	1
  3111  055A  023D               	subwf	sprintf@eexp^(0+128),w
  3112  055B                     u7335:	
  3113  055B  1803               	skipnc
  3114  055C  2D5E               	goto	u7331
  3115  055D  2D5F               	goto	u7330
  3116  055E                     u7331:	
  3117  055E  2D3F               	goto	l4339
  3118  055F                     u7330:	
  3119  055F                     l4347:	
  3120                           
  3121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1237:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3122  055F  1683               	bsf	3,5	;RP0=1, select bank1
  3123  0560  1303               	bcf	3,6	;RP1=0, select bank1
  3124  0561  0845               	movf	(sprintf@prec+1)^(0+128),w
  3125  0562  3A80               	xorlw	128
  3126  0563  00FF               	movwf	btemp+1
  3127  0564  3080               	movlw	128
  3128  0565  027F               	subwf	btemp+1,w
  3129  0566  1D03               	skipz
  3130  0567  2D6A               	goto	u7345
  3131  0568  3009               	movlw	9
  3132  0569  0244               	subwf	sprintf@prec^(0+128),w
  3133  056A                     u7345:	
  3134  056A  1C03               	skipc
  3135  056B  2D6D               	goto	u7341
  3136  056C  2D6E               	goto	u7340
  3137  056D                     u7341:	
  3138  056D  2D75               	goto	l4351
  3139  056E                     u7340:	
  3140  056E                     l4349:	
  3141                           
  3142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1238:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  3143  056E  3008               	movlw	8
  3144  056F  1683               	bsf	3,5	;RP0=1, select bank1
  3145  0570  1303               	bcf	3,6	;RP1=0, select bank1
  3146  0571  00AD               	movwf	??_sprintf^(0+128)
  3147  0572  082D               	movf	??_sprintf^(0+128),w
  3148  0573  00CA               	movwf	sprintf@c^(0+128)
  3149  0574  2D7B               	goto	l338
  3150  0575                     l4351:	
  3151                           
  3152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1240:     c
      +                           = (char)prec;
  3153  0575  1683               	bsf	3,5	;RP0=1, select bank1
  3154  0576  1303               	bcf	3,6	;RP1=0, select bank1
  3155  0577  0844               	movf	sprintf@prec^(0+128),w
  3156  0578  00AD               	movwf	??_sprintf^(0+128)
  3157  0579  082D               	movf	??_sprintf^(0+128),w
  3158  057A  00CA               	movwf	sprintf@c^(0+128)
  3159  057B                     l338:	
  3160                           
  3161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1241:    pr
      +                          ec -= (int)c;
  3162  057B  084A               	movf	sprintf@c^(0+128),w
  3163  057C  00AD               	movwf	??_sprintf^(0+128)
  3164  057D  01AE               	clrf	(??_sprintf^(0+128)+1)
  3165  057E  082D               	movf	??_sprintf^(0+128),w
  3166  057F  02C4               	subwf	sprintf@prec^(0+128),f
  3167  0580  082E               	movf	(??_sprintf+1)^(0+128),w
  3168  0581  1C03               	skipc
  3169  0582  03C5               	decf	(sprintf@prec+1)^(0+128),f
  3170  0583  02C5               	subwf	(sprintf@prec+1)^(0+128),f
  3171  0584                     l4353:	
  3172                           
  3173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1245:    if
      +                          (c)
  3174  0584  084A               	movf	sprintf@c^(0+128),w
  3175  0585  1903               	btfsc	3,2
  3176  0586  2D88               	goto	u7351
  3177  0587  2D89               	goto	u7350
  3178  0588                     u7351:	
  3179  0588  2D94               	goto	l4359
  3180  0589                     u7350:	
  3181  0589                     l4355:	
  3182                           
  3183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1247:     (
      +                          (*sp++ = ('.')));
  3184  0589  302E               	movlw	46
  3185  058A  00AD               	movwf	??_sprintf^(0+128)
  3186  058B  083F               	movf	sprintf@sp^(0+128),w
  3187  058C  0084               	movwf	4
  3188  058D  082D               	movf	??_sprintf^(0+128),w
  3189  058E  1383               	bcf	3,7	;select IRP bank0
  3190  058F  0080               	movwf	0
  3191  0590                     l4357:	
  3192  0590  3001               	movlw	1
  3193  0591  00AD               	movwf	??_sprintf^(0+128)
  3194  0592  082D               	movf	??_sprintf^(0+128),w
  3195  0593  07BF               	addwf	sprintf@sp^(0+128),f
  3196  0594                     l4359:	
  3197                           
  3198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  3199  0594  084A               	movf	sprintf@c^(0+128),w
  3200  0595  120A  158A  249D  120A  118A  	fcall	_scale
  3201  059A  1283               	bcf	3,5	;RP0=0, select bank0
  3202  059B  1303               	bcf	3,6	;RP1=0, select bank0
  3203  059C  0847               	movf	?_scale+3,w
  3204  059D  1683               	bsf	3,5	;RP0=1, select bank1
  3205  059E  1303               	bcf	3,6	;RP1=0, select bank1
  3206  059F  00B5               	movwf	(_sprintf$1103+3)^(0+128)
  3207  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  3208  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  3209  05A2  0846               	movf	?_scale+2,w
  3210  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  3211  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  3212  05A5  00B4               	movwf	(_sprintf$1103+2)^(0+128)
  3213  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  3214  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  3215  05A8  0845               	movf	?_scale+1,w
  3216  05A9  1683               	bsf	3,5	;RP0=1, select bank1
  3217  05AA  1303               	bcf	3,6	;RP1=0, select bank1
  3218  05AB  00B3               	movwf	(_sprintf$1103+1)^(0+128)
  3219  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  3220  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  3221  05AE  0844               	movf	?_scale,w
  3222  05AF  1683               	bsf	3,5	;RP0=1, select bank1
  3223  05B0  1303               	bcf	3,6	;RP1=0, select bank1
  3224  05B1  00B2               	movwf	_sprintf$1103^(0+128)
  3225  05B2                     l4361:	
  3226                           
  3227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  3228  05B2  0835               	movf	(_sprintf$1103+3)^(0+128),w
  3229  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  3230  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  3231  05B5  00B1               	movwf	___flmul@a+3
  3232  05B6  1683               	bsf	3,5	;RP0=1, select bank1
  3233  05B7  1303               	bcf	3,6	;RP1=0, select bank1
  3234  05B8  0834               	movf	(_sprintf$1103+2)^(0+128),w
  3235  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  3236  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  3237  05BB  00B0               	movwf	___flmul@a+2
  3238  05BC  1683               	bsf	3,5	;RP0=1, select bank1
  3239  05BD  1303               	bcf	3,6	;RP1=0, select bank1
  3240  05BE  0833               	movf	(_sprintf$1103+1)^(0+128),w
  3241  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  3242  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  3243  05C1  00AF               	movwf	___flmul@a+1
  3244  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  3245  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  3246  05C4  0832               	movf	_sprintf$1103^(0+128),w
  3247  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  3248  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  3249  05C7  00AE               	movwf	___flmul@a
  3250  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  3251  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  3252  05CA  0849               	movf	(sprintf@fval+3)^(0+128),w
  3253  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  3254  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  3255  05CD  00AD               	movwf	___flmul@b+3
  3256  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  3257  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  3258  05D0  0848               	movf	(sprintf@fval+2)^(0+128),w
  3259  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  3260  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  3261  05D3  00AC               	movwf	___flmul@b+2
  3262  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  3263  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  3264  05D6  0847               	movf	(sprintf@fval+1)^(0+128),w
  3265  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  3266  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  3267  05D9  00AB               	movwf	___flmul@b+1
  3268  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  3269  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  3270  05DC  0846               	movf	sprintf@fval^(0+128),w
  3271  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  3272  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  3273  05DF  00AA               	movwf	___flmul@b
  3274  05E0  120A  158A  213C  120A  118A  	fcall	___flmul
  3275  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3276  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  3277  05E7  082D               	movf	?___flmul+3,w
  3278  05E8  00DA               	movwf	___fltol@f1+3
  3279  05E9  082C               	movf	?___flmul+2,w
  3280  05EA  00D9               	movwf	___fltol@f1+2
  3281  05EB  082B               	movf	?___flmul+1,w
  3282  05EC  00D8               	movwf	___fltol@f1+1
  3283  05ED  082A               	movf	?___flmul,w
  3284  05EE  00D7               	movwf	___fltol@f1
  3285  05EF  160A  158A  258B  120A  118A  	fcall	___fltol
  3286  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  3287  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  3288  05F6  085A               	movf	?___fltol+3,w
  3289  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  3290  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  3291  05F9  00BC               	movwf	(sprintf@val+3)^(0+128)
  3292  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  3293  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  3294  05FC  0859               	movf	?___fltol+2,w
  3295  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  3296  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  3297  05FF  00BB               	movwf	(sprintf@val+2)^(0+128)
  3298  0600  1283               	bcf	3,5	;RP0=0, select bank0
  3299  0601  1303               	bcf	3,6	;RP1=0, select bank0
  3300  0602  0858               	movf	?___fltol+1,w
  3301  0603  1683               	bsf	3,5	;RP0=1, select bank1
  3302  0604  1303               	bcf	3,6	;RP1=0, select bank1
  3303  0605  00BA               	movwf	(sprintf@val+1)^(0+128)
  3304  0606  1283               	bcf	3,5	;RP0=0, select bank0
  3305  0607  1303               	bcf	3,6	;RP1=0, select bank0
  3306  0608  0857               	movf	?___fltol,w
  3307  0609  1683               	bsf	3,5	;RP0=1, select bank1
  3308  060A  1303               	bcf	3,6	;RP1=0, select bank1
  3309  060B  00B9               	movwf	sprintf@val^(0+128)
  3310                           
  3311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3312  060C  2F0E               	goto	l4371
  3313  060D                     l4363:	
  3314                           
  3315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1255:     t
      +                          mpval.vd = val/dpowers[c];
  3316  060D  084A               	movf	sprintf@c^(0+128),w
  3317  060E  00AD               	movwf	??_sprintf^(0+128)
  3318  060F  3001               	movlw	1
  3319  0610                     u7365:	
  3320  0610  1003               	clrc
  3321  0611  0DAD               	rlf	??_sprintf^(0+128),f
  3322  0612  3EFF               	addlw	-1
  3323  0613  1D03               	skipz
  3324  0614  2E10               	goto	u7365
  3325  0615  1003               	clrc
  3326  0616  0D2D               	rlf	??_sprintf^(0+128),w
  3327  0617  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3328  0618  0084               	movwf	4
  3329  0619  160A  158A  200A  120A  118A  	fcall	stringdir
  3330  061E  1283               	bcf	3,5	;RP0=0, select bank0
  3331  061F  1303               	bcf	3,6	;RP1=0, select bank0
  3332  0620  00A0               	movwf	___lldiv@divisor
  3333  0621  160A  158A  200A  120A  118A  	fcall	stringdir
  3334  0626  00A1               	movwf	___lldiv@divisor+1
  3335  0627  160A  158A  200A  120A  118A  	fcall	stringdir
  3336  062C  00A2               	movwf	___lldiv@divisor+2
  3337  062D  160A  158A  200A  120A  118A  	fcall	stringdir
  3338  0632  00A3               	movwf	___lldiv@divisor+3
  3339  0633  1683               	bsf	3,5	;RP0=1, select bank1
  3340  0634  1303               	bcf	3,6	;RP1=0, select bank1
  3341  0635  083C               	movf	(sprintf@val+3)^(0+128),w
  3342  0636  1283               	bcf	3,5	;RP0=0, select bank0
  3343  0637  1303               	bcf	3,6	;RP1=0, select bank0
  3344  0638  00A7               	movwf	___lldiv@dividend+3
  3345  0639  1683               	bsf	3,5	;RP0=1, select bank1
  3346  063A  1303               	bcf	3,6	;RP1=0, select bank1
  3347  063B  083B               	movf	(sprintf@val+2)^(0+128),w
  3348  063C  1283               	bcf	3,5	;RP0=0, select bank0
  3349  063D  1303               	bcf	3,6	;RP1=0, select bank0
  3350  063E  00A6               	movwf	___lldiv@dividend+2
  3351  063F  1683               	bsf	3,5	;RP0=1, select bank1
  3352  0640  1303               	bcf	3,6	;RP1=0, select bank1
  3353  0641  083A               	movf	(sprintf@val+1)^(0+128),w
  3354  0642  1283               	bcf	3,5	;RP0=0, select bank0
  3355  0643  1303               	bcf	3,6	;RP1=0, select bank0
  3356  0644  00A5               	movwf	___lldiv@dividend+1
  3357  0645  1683               	bsf	3,5	;RP0=1, select bank1
  3358  0646  1303               	bcf	3,6	;RP1=0, select bank1
  3359  0647  0839               	movf	sprintf@val^(0+128),w
  3360  0648  1283               	bcf	3,5	;RP0=0, select bank0
  3361  0649  1303               	bcf	3,6	;RP1=0, select bank0
  3362  064A  00A4               	movwf	___lldiv@dividend
  3363  064B  120A  158A  2000  120A  118A  	fcall	___lldiv
  3364  0650  1283               	bcf	3,5	;RP0=0, select bank0
  3365  0651  1303               	bcf	3,6	;RP1=0, select bank0
  3366  0652  0823               	movf	?___lldiv+3,w
  3367  0653  1683               	bsf	3,5	;RP0=1, select bank1
  3368  0654  1303               	bcf	3,6	;RP1=0, select bank1
  3369  0655  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  3370  0656  1283               	bcf	3,5	;RP0=0, select bank0
  3371  0657  1303               	bcf	3,6	;RP1=0, select bank0
  3372  0658  0822               	movf	?___lldiv+2,w
  3373  0659  1683               	bsf	3,5	;RP0=1, select bank1
  3374  065A  1303               	bcf	3,6	;RP1=0, select bank1
  3375  065B  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  3376  065C  1283               	bcf	3,5	;RP0=0, select bank0
  3377  065D  1303               	bcf	3,6	;RP1=0, select bank0
  3378  065E  0821               	movf	?___lldiv+1,w
  3379  065F  1683               	bsf	3,5	;RP0=1, select bank1
  3380  0660  1303               	bcf	3,6	;RP1=0, select bank1
  3381  0661  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  3382  0662  1283               	bcf	3,5	;RP0=0, select bank0
  3383  0663  1303               	bcf	3,6	;RP1=0, select bank0
  3384  0664  0820               	movf	?___lldiv,w
  3385  0665  1683               	bsf	3,5	;RP0=1, select bank1
  3386  0666  1303               	bcf	3,6	;RP1=0, select bank1
  3387  0667  00C0               	movwf	sprintf@tmpval^(0+128)
  3388  0668                     l4365:	
  3389                           
  3390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1256:     t
      +                          mpval.vd %= 10;
  3391  0668  3000               	movlw	0
  3392  0669  1283               	bcf	3,5	;RP0=0, select bank0
  3393  066A  1303               	bcf	3,6	;RP1=0, select bank0
  3394  066B  00A3               	movwf	___llmod@divisor+3
  3395  066C  3000               	movlw	0
  3396  066D  00A2               	movwf	___llmod@divisor+2
  3397  066E  3000               	movlw	0
  3398  066F  00A1               	movwf	___llmod@divisor+1
  3399  0670  300A               	movlw	10
  3400  0671  00A0               	movwf	___llmod@divisor
  3401  0672  1683               	bsf	3,5	;RP0=1, select bank1
  3402  0673  1303               	bcf	3,6	;RP1=0, select bank1
  3403  0674  0843               	movf	(sprintf@tmpval+3)^(0+128),w
  3404  0675  1283               	bcf	3,5	;RP0=0, select bank0
  3405  0676  1303               	bcf	3,6	;RP1=0, select bank0
  3406  0677  00A7               	movwf	___llmod@dividend+3
  3407  0678  1683               	bsf	3,5	;RP0=1, select bank1
  3408  0679  1303               	bcf	3,6	;RP1=0, select bank1
  3409  067A  0842               	movf	(sprintf@tmpval+2)^(0+128),w
  3410  067B  1283               	bcf	3,5	;RP0=0, select bank0
  3411  067C  1303               	bcf	3,6	;RP1=0, select bank0
  3412  067D  00A6               	movwf	___llmod@dividend+2
  3413  067E  1683               	bsf	3,5	;RP0=1, select bank1
  3414  067F  1303               	bcf	3,6	;RP1=0, select bank1
  3415  0680  0841               	movf	(sprintf@tmpval+1)^(0+128),w
  3416  0681  1283               	bcf	3,5	;RP0=0, select bank0
  3417  0682  1303               	bcf	3,6	;RP1=0, select bank0
  3418  0683  00A5               	movwf	___llmod@dividend+1
  3419  0684  1683               	bsf	3,5	;RP0=1, select bank1
  3420  0685  1303               	bcf	3,6	;RP1=0, select bank1
  3421  0686  0840               	movf	sprintf@tmpval^(0+128),w
  3422  0687  1283               	bcf	3,5	;RP0=0, select bank0
  3423  0688  1303               	bcf	3,6	;RP1=0, select bank0
  3424  0689  00A4               	movwf	___llmod@dividend
  3425  068A  160A  158A  240C  120A  118A  	fcall	___llmod
  3426  068F  1283               	bcf	3,5	;RP0=0, select bank0
  3427  0690  1303               	bcf	3,6	;RP1=0, select bank0
  3428  0691  0823               	movf	?___llmod+3,w
  3429  0692  1683               	bsf	3,5	;RP0=1, select bank1
  3430  0693  1303               	bcf	3,6	;RP1=0, select bank1
  3431  0694  00C3               	movwf	(sprintf@tmpval+3)^(0+128)
  3432  0695  1283               	bcf	3,5	;RP0=0, select bank0
  3433  0696  1303               	bcf	3,6	;RP1=0, select bank0
  3434  0697  0822               	movf	?___llmod+2,w
  3435  0698  1683               	bsf	3,5	;RP0=1, select bank1
  3436  0699  1303               	bcf	3,6	;RP1=0, select bank1
  3437  069A  00C2               	movwf	(sprintf@tmpval+2)^(0+128)
  3438  069B  1283               	bcf	3,5	;RP0=0, select bank0
  3439  069C  1303               	bcf	3,6	;RP1=0, select bank0
  3440  069D  0821               	movf	?___llmod+1,w
  3441  069E  1683               	bsf	3,5	;RP0=1, select bank1
  3442  069F  1303               	bcf	3,6	;RP1=0, select bank1
  3443  06A0  00C1               	movwf	(sprintf@tmpval+1)^(0+128)
  3444  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  3445  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  3446  06A3  0820               	movf	?___llmod,w
  3447  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  3448  06A5  1303               	bcf	3,6	;RP1=0, select bank1
  3449  06A6  00C0               	movwf	sprintf@tmpval^(0+128)
  3450  06A7                     l4367:	
  3451                           
  3452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1257:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  3453  06A7  0840               	movf	sprintf@tmpval^(0+128),w
  3454  06A8  3E30               	addlw	48
  3455  06A9  00AD               	movwf	??_sprintf^(0+128)
  3456  06AA  083F               	movf	sprintf@sp^(0+128),w
  3457  06AB  0084               	movwf	4
  3458  06AC  082D               	movf	??_sprintf^(0+128),w
  3459  06AD  1383               	bcf	3,7	;select IRP bank0
  3460  06AE  0080               	movwf	0
  3461  06AF  3001               	movlw	1
  3462  06B0  00AD               	movwf	??_sprintf^(0+128)
  3463  06B1  082D               	movf	??_sprintf^(0+128),w
  3464  06B2  07BF               	addwf	sprintf@sp^(0+128),f
  3465  06B3                     l4369:	
  3466                           
  3467                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1258:     v
      +                          al %= dpowers[c];
  3468  06B3  084A               	movf	sprintf@c^(0+128),w
  3469  06B4  00AD               	movwf	??_sprintf^(0+128)
  3470  06B5  3001               	movlw	1
  3471  06B6                     u7375:	
  3472  06B6  1003               	clrc
  3473  06B7  0DAD               	rlf	??_sprintf^(0+128),f
  3474  06B8  3EFF               	addlw	-1
  3475  06B9  1D03               	skipz
  3476  06BA  2EB6               	goto	u7375
  3477  06BB  1003               	clrc
  3478  06BC  0D2D               	rlf	??_sprintf^(0+128),w
  3479  06BD  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3480  06BE  0084               	movwf	4
  3481  06BF  160A  158A  200A  120A  118A  	fcall	stringdir
  3482  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  3483  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  3484  06C6  00A0               	movwf	___llmod@divisor
  3485  06C7  160A  158A  200A  120A  118A  	fcall	stringdir
  3486  06CC  00A1               	movwf	___llmod@divisor+1
  3487  06CD  160A  158A  200A  120A  118A  	fcall	stringdir
  3488  06D2  00A2               	movwf	___llmod@divisor+2
  3489  06D3  160A  158A  200A  120A  118A  	fcall	stringdir
  3490  06D8  00A3               	movwf	___llmod@divisor+3
  3491  06D9  1683               	bsf	3,5	;RP0=1, select bank1
  3492  06DA  1303               	bcf	3,6	;RP1=0, select bank1
  3493  06DB  083C               	movf	(sprintf@val+3)^(0+128),w
  3494  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  3495  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  3496  06DE  00A7               	movwf	___llmod@dividend+3
  3497  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  3498  06E0  1303               	bcf	3,6	;RP1=0, select bank1
  3499  06E1  083B               	movf	(sprintf@val+2)^(0+128),w
  3500  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  3501  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  3502  06E4  00A6               	movwf	___llmod@dividend+2
  3503  06E5  1683               	bsf	3,5	;RP0=1, select bank1
  3504  06E6  1303               	bcf	3,6	;RP1=0, select bank1
  3505  06E7  083A               	movf	(sprintf@val+1)^(0+128),w
  3506  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  3507  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  3508  06EA  00A5               	movwf	___llmod@dividend+1
  3509  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  3510  06EC  1303               	bcf	3,6	;RP1=0, select bank1
  3511  06ED  0839               	movf	sprintf@val^(0+128),w
  3512  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  3513  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  3514  06F0  00A4               	movwf	___llmod@dividend
  3515  06F1  160A  158A  240C  120A  118A  	fcall	___llmod
  3516  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  3517  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  3518  06F8  0823               	movf	?___llmod+3,w
  3519  06F9  1683               	bsf	3,5	;RP0=1, select bank1
  3520  06FA  1303               	bcf	3,6	;RP1=0, select bank1
  3521  06FB  00BC               	movwf	(sprintf@val+3)^(0+128)
  3522  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  3523  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  3524  06FE  0822               	movf	?___llmod+2,w
  3525  06FF  1683               	bsf	3,5	;RP0=1, select bank1
  3526  0700  1303               	bcf	3,6	;RP1=0, select bank1
  3527  0701  00BB               	movwf	(sprintf@val+2)^(0+128)
  3528  0702  1283               	bcf	3,5	;RP0=0, select bank0
  3529  0703  1303               	bcf	3,6	;RP1=0, select bank0
  3530  0704  0821               	movf	?___llmod+1,w
  3531  0705  1683               	bsf	3,5	;RP0=1, select bank1
  3532  0706  1303               	bcf	3,6	;RP1=0, select bank1
  3533  0707  00BA               	movwf	(sprintf@val+1)^(0+128)
  3534  0708  1283               	bcf	3,5	;RP0=0, select bank0
  3535  0709  1303               	bcf	3,6	;RP1=0, select bank0
  3536  070A  0820               	movf	?___llmod,w
  3537  070B  1683               	bsf	3,5	;RP0=1, select bank1
  3538  070C  1303               	bcf	3,6	;RP1=0, select bank1
  3539  070D  00B9               	movwf	sprintf@val^(0+128)
  3540  070E                     l4371:	
  3541                           
  3542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3543  070E  3001               	movlw	1
  3544  070F  02CA               	subwf	sprintf@c^(0+128),f
  3545  0710  0A4A               	incf	sprintf@c^(0+128),w
  3546  0711  1D03               	btfss	3,2
  3547  0712  2F14               	goto	u7381
  3548  0713  2F15               	goto	u7380
  3549  0714                     u7381:	
  3550  0714  2E0D               	goto	l4363
  3551  0715                     u7380:	
  3552  0715  2F27               	goto	l4379
  3553  0716                     l4373:	
  3554                           
  3555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1262:     (
      +                          (*sp++ = ('0')));
  3556  0716  3030               	movlw	48
  3557  0717  00AD               	movwf	??_sprintf^(0+128)
  3558  0718  083F               	movf	sprintf@sp^(0+128),w
  3559  0719  0084               	movwf	4
  3560  071A  082D               	movf	??_sprintf^(0+128),w
  3561  071B  1383               	bcf	3,7	;select IRP bank0
  3562  071C  0080               	movwf	0
  3563  071D                     l4375:	
  3564  071D  3001               	movlw	1
  3565  071E  00AD               	movwf	??_sprintf^(0+128)
  3566  071F  082D               	movf	??_sprintf^(0+128),w
  3567  0720  07BF               	addwf	sprintf@sp^(0+128),f
  3568  0721                     l4377:	
  3569                           
  3570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1263:     p
      +                          rec--;
  3571  0721  30FF               	movlw	255
  3572  0722  07C4               	addwf	sprintf@prec^(0+128),f
  3573  0723  1803               	skipnc
  3574  0724  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  3575  0725  30FF               	movlw	255
  3576  0726  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  3577  0727                     l4379:	
  3578                           
  3579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1261:    wh
      +                          ile(prec) {
  3580  0727  0844               	movf	sprintf@prec^(0+128),w
  3581  0728  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  3582  0729  1D03               	btfss	3,2
  3583  072A  2F2C               	goto	u7391
  3584  072B  2F2D               	goto	u7390
  3585  072C                     u7391:	
  3586  072C  2F16               	goto	l4373
  3587  072D                     u7390:	
  3588  072D  2F73               	goto	l4399
  3589  072E                     l4381:	
  3590                           
  3591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1316:   if(
      +                          prec == 0 && val == 0)
  3592  072E  0844               	movf	sprintf@prec^(0+128),w
  3593  072F  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  3594  0730  1D03               	btfss	3,2
  3595  0731  2F33               	goto	u7401
  3596  0732  2F34               	goto	u7400
  3597  0733                     u7401:	
  3598  0733  2F42               	goto	l346
  3599  0734                     u7400:	
  3600  0734                     l4383:	
  3601  0734  083C               	movf	(sprintf@val+3)^(0+128),w
  3602  0735  043B               	iorwf	(sprintf@val+2)^(0+128),w
  3603  0736  043A               	iorwf	(sprintf@val+1)^(0+128),w
  3604  0737  0439               	iorwf	sprintf@val^(0+128),w
  3605  0738  1D03               	skipz
  3606  0739  2F3B               	goto	u7411
  3607  073A  2F3C               	goto	u7410
  3608  073B                     u7411:	
  3609  073B  2F42               	goto	l346
  3610  073C                     u7410:	
  3611  073C                     l4385:	
  3612                           
  3613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1317:    pr
      +                          ec++;
  3614  073C  3001               	movlw	1
  3615  073D  07C4               	addwf	sprintf@prec^(0+128),f
  3616  073E  1803               	skipnc
  3617  073F  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  3618  0740  3000               	movlw	0
  3619  0741  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  3620  0742                     l346:	
  3621                           
  3622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1365:   if(
      +                          c < prec)
  3623  0742  0845               	movf	(sprintf@prec+1)^(0+128),w
  3624  0743  3A80               	xorlw	128
  3625  0744  3C80               	sublw	128
  3626  0745  1D03               	skipz
  3627  0746  2F49               	goto	u7425
  3628  0747  0844               	movf	sprintf@prec^(0+128),w
  3629  0748  024A               	subwf	sprintf@c^(0+128),w
  3630  0749                     u7425:	
  3631  0749  1803               	skipnc
  3632  074A  2F4C               	goto	u7421
  3633  074B  2F4D               	goto	u7420
  3634  074C                     u7421:	
  3635  074C  2F4E               	goto	l4389
  3636  074D                     u7420:	
  3637  074D                     l4387:	
  3638  074D  2F5D               	goto	l4393
  3639  074E                     l4389:	
  3640  074E  1683               	bsf	3,5	;RP0=1, select bank1
  3641  074F  1303               	bcf	3,6	;RP1=0, select bank1
  3642  0750  0845               	movf	(sprintf@prec+1)^(0+128),w
  3643  0751  3A80               	xorlw	128
  3644  0752  00AD               	movwf	??_sprintf^(0+128)
  3645  0753  3080               	movlw	128
  3646  0754  022D               	subwf	??_sprintf^(0+128),w
  3647  0755  1D03               	skipz
  3648  0756  2F59               	goto	u7435
  3649  0757  084A               	movf	sprintf@c^(0+128),w
  3650  0758  0244               	subwf	sprintf@prec^(0+128),w
  3651  0759                     u7435:	
  3652  0759  1803               	skipnc
  3653  075A  2F5C               	goto	u7431
  3654  075B  2F5D               	goto	u7430
  3655  075C                     u7431:	
  3656  075C  2F5D               	goto	l4393
  3657  075D                     u7430:	
  3658  075D                     l4391:	
  3659  075D                     l4393:	
  3660                           
  3661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  3662  075D  3003               	movlw	3
  3663  075E  1683               	bsf	3,5	;RP0=1, select bank1
  3664  075F  1303               	bcf	3,6	;RP1=0, select bank1
  3665  0760  0537               	andwf	sprintf@flag^(0+128),w
  3666  0761  00AD               	movwf	??_sprintf^(0+128)
  3667  0762  3000               	movlw	0
  3668  0763  0538               	andwf	(sprintf@flag+1)^(0+128),w
  3669  0764  00AE               	movwf	(??_sprintf+1)^(0+128)
  3670  0765  082D               	movf	??_sprintf^(0+128),w
  3671  0766  042E               	iorwf	(??_sprintf^(0+128)+1),w
  3672  0767  1903               	btfsc	3,2
  3673  0768  2F6A               	goto	u7441
  3674  0769  2F6B               	goto	u7440
  3675  076A                     u7441:	
  3676  076A  2F73               	goto	l4399
  3677  076B                     u7440:	
  3678  076B                     l4395:	
  3679                           
  3680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  3681  076B  302D               	movlw	45
  3682  076C  00AD               	movwf	??_sprintf^(0+128)
  3683  076D  083F               	movf	sprintf@sp^(0+128),w
  3684  076E  0084               	movwf	4
  3685  076F  082D               	movf	??_sprintf^(0+128),w
  3686  0770  1383               	bcf	3,7	;select IRP bank0
  3687  0771  0080               	movwf	0
  3688  0772  2835               	goto	l4211
  3689  0773                     l4399:	
  3690                           
  3691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  3692  0773  3001               	movlw	1
  3693  0774  07A8               	addwf	sprintf@f^(0+128),f
  3694  0775  30FF               	movlw	-1
  3695  0776  0728               	addwf	sprintf@f^(0+128),w
  3696  0777  0084               	movwf	4
  3697  0778  160A  158A  200A  120A  118A  	fcall	stringdir
  3698  077D  00AD               	movwf	??_sprintf^(0+128)
  3699  077E  082D               	movf	??_sprintf^(0+128),w
  3700  077F  00CA               	movwf	sprintf@c^(0+128)
  3701  0780  084A               	movf	sprintf@c^(0+128),w
  3702  0781  1D03               	btfss	3,2
  3703  0782  2F84               	goto	u7451
  3704  0783  2F85               	goto	u7450
  3705  0784                     u7451:	
  3706  0784  2828               	goto	l4207
  3707  0785                     u7450:	
  3708  0785                     l4401:	
  3709                           
  3710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  3711  0785  083F               	movf	sprintf@sp^(0+128),w
  3712  0786  0084               	movwf	4
  3713  0787  1383               	bcf	3,7	;select IRP bank0
  3714  0788  0180               	clrf	0
  3715  0789                     l352:	
  3716  0789  0008               	return
  3717  078A                     __end_of_sprintf:	
  3718                           
  3719                           	psect	text2
  3720  0C9D                     __ptext2:	
  3721 ;; *************** function _scale *****************
  3722 ;; Defined at:
  3723 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  scl             1    wreg     char 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  scl             1   54[BANK0 ] char 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  4   36[BANK0 ] char 
  3730 ;; Registers used:
  3731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3737 ;;      Params:         0       4       0       0       0
  3738 ;;      Locals:         0       5       0       0       0
  3739 ;;      Temps:          0      10       0       0       0
  3740 ;;      Totals:         0      19       0       0       0
  3741 ;;Total ram usage:       19 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; Hardware stack levels required when called:    3
  3744 ;; This function calls:
  3745 ;;		___awdiv
  3746 ;;		___awmod
  3747 ;;		___flmul
  3748 ;; This function is called by:
  3749 ;;		_sprintf
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           
  3754                           ;psect for function _scale
  3755  0C9D                     _scale:	
  3756                           
  3757                           ;incstack = 0
  3758                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3759                           ;scale@scl stored from wreg
  3760  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3761  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3762  0C9F  00D6               	movwf	scale@scl
  3763  0CA0                     l3941:	
  3764                           
  3765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  3766  0CA0  1FD6               	btfss	scale@scl,7
  3767  0CA1  2CA3               	goto	u6311
  3768  0CA2  2CA4               	goto	u6310
  3769  0CA3                     u6311:	
  3770  0CA3  2E53               	goto	l3963
  3771  0CA4                     u6310:	
  3772  0CA4                     l3943:	
  3773                           
  3774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  3775  0CA4  09D6               	comf	scale@scl,f
  3776  0CA5  0AD6               	incf	scale@scl,f
  3777  0CA6                     l3945:	
  3778                           
  3779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  3780  0CA6  0856               	movf	scale@scl,w
  3781  0CA7  3A80               	xorlw	128
  3782  0CA8  3E12               	addlw	-238
  3783  0CA9  1C03               	skipc
  3784  0CAA  2CAC               	goto	u6321
  3785  0CAB  2CAD               	goto	u6320
  3786  0CAC                     u6321:	
  3787  0CAC  2D97               	goto	l3953
  3788  0CAD                     u6320:	
  3789  0CAD                     l3947:	
  3790                           
  3791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3792  0CAD  300A               	movlw	10
  3793  0CAE  00A0               	movwf	___awdiv@divisor
  3794  0CAF  3000               	movlw	0
  3795  0CB0  00A1               	movwf	___awdiv@divisor+1
  3796  0CB1  0856               	movf	scale@scl,w
  3797  0CB2  00F5               	movwf	___awmod@dividend
  3798  0CB3  01F6               	clrf	___awmod@dividend+1
  3799  0CB4  1BF5               	btfsc	___awmod@dividend,7
  3800  0CB5  03F6               	decf	___awmod@dividend+1,f
  3801  0CB6  3064               	movlw	100
  3802  0CB7  00F3               	movwf	___awmod@divisor
  3803  0CB8  3000               	movlw	0
  3804  0CB9  00F4               	movwf	___awmod@divisor+1
  3805  0CBA  160A  158A  2462  120A  158A  	fcall	___awmod
  3806  0CBF  0874               	movf	?___awmod+1,w
  3807  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3808  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3809  0CC2  00A3               	movwf	___awdiv@dividend+1
  3810  0CC3  0873               	movf	?___awmod,w
  3811  0CC4  00A2               	movwf	___awdiv@dividend
  3812  0CC5  160A  158A  2522  120A  158A  	fcall	___awdiv
  3813  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3814  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3815  0CCC  0820               	movf	?___awdiv,w
  3816  0CCD  00C8               	movwf	??_scale
  3817  0CCE  3001               	movlw	1
  3818  0CCF                     u6335:	
  3819  0CCF  1003               	clrc
  3820  0CD0  0DC8               	rlf	??_scale,f
  3821  0CD1  3EFF               	addlw	-1
  3822  0CD2  1D03               	skipz
  3823  0CD3  2CCF               	goto	u6335
  3824  0CD4  1003               	clrc
  3825  0CD5  0D48               	rlf	??_scale,w
  3826  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3827  0CD7  0084               	movwf	4
  3828  0CD8  160A  158A  200A  120A  158A  	fcall	stringdir
  3829  0CDD  00C9               	movwf	??_scale+1
  3830  0CDE  160A  158A  200A  120A  158A  	fcall	stringdir
  3831  0CE3  00CA               	movwf	??_scale+2
  3832  0CE4  160A  158A  200A  120A  158A  	fcall	stringdir
  3833  0CE9  00CB               	movwf	??_scale+3
  3834  0CEA  160A  158A  200A  120A  158A  	fcall	stringdir
  3835  0CEF  00CC               	movwf	??_scale+4
  3836  0CF0  084C               	movf	??_scale+4,w
  3837  0CF1  00AD               	movwf	___flmul@b+3
  3838  0CF2  084B               	movf	??_scale+3,w
  3839  0CF3  00AC               	movwf	___flmul@b+2
  3840  0CF4  084A               	movf	??_scale+2,w
  3841  0CF5  00AB               	movwf	___flmul@b+1
  3842  0CF6  0849               	movf	??_scale+1,w
  3843  0CF7  00AA               	movwf	___flmul@b
  3844  0CF8  3064               	movlw	100
  3845  0CF9  00A0               	movwf	___awdiv@divisor
  3846  0CFA  3000               	movlw	0
  3847  0CFB  00A1               	movwf	___awdiv@divisor+1
  3848  0CFC  0856               	movf	scale@scl,w
  3849  0CFD  00A2               	movwf	___awdiv@dividend
  3850  0CFE  01A3               	clrf	___awdiv@dividend+1
  3851  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  3852  0D00  03A3               	decf	___awdiv@dividend+1,f
  3853  0D01  160A  158A  2522  120A  158A  	fcall	___awdiv
  3854  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3855  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3856  0D08  0820               	movf	?___awdiv,w
  3857  0D09  00CD               	movwf	??_scale+5
  3858  0D0A  3001               	movlw	1
  3859  0D0B                     u6345:	
  3860  0D0B  1003               	clrc
  3861  0D0C  0DCD               	rlf	??_scale+5,f
  3862  0D0D  3EFF               	addlw	-1
  3863  0D0E  1D03               	skipz
  3864  0D0F  2D0B               	goto	u6345
  3865  0D10  1003               	clrc
  3866  0D11  0D4D               	rlf	??_scale+5,w
  3867  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3868  0D13  0084               	movwf	4
  3869  0D14  160A  158A  200A  120A  158A  	fcall	stringdir
  3870  0D19  00CE               	movwf	??_scale+6
  3871  0D1A  160A  158A  200A  120A  158A  	fcall	stringdir
  3872  0D1F  00CF               	movwf	??_scale+7
  3873  0D20  160A  158A  200A  120A  158A  	fcall	stringdir
  3874  0D25  00D0               	movwf	??_scale+8
  3875  0D26  160A  158A  200A  120A  158A  	fcall	stringdir
  3876  0D2B  00D1               	movwf	??_scale+9
  3877  0D2C  0851               	movf	??_scale+9,w
  3878  0D2D  00B1               	movwf	___flmul@a+3
  3879  0D2E  0850               	movf	??_scale+8,w
  3880  0D2F  00B0               	movwf	___flmul@a+2
  3881  0D30  084F               	movf	??_scale+7,w
  3882  0D31  00AF               	movwf	___flmul@a+1
  3883  0D32  084E               	movf	??_scale+6,w
  3884  0D33  00AE               	movwf	___flmul@a
  3885  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  3886  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3887  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3888  0D3B  082D               	movf	?___flmul+3,w
  3889  0D3C  00D5               	movwf	_scale$1102+3
  3890  0D3D  082C               	movf	?___flmul+2,w
  3891  0D3E  00D4               	movwf	_scale$1102+2
  3892  0D3F  082B               	movf	?___flmul+1,w
  3893  0D40  00D3               	movwf	_scale$1102+1
  3894  0D41  082A               	movf	?___flmul,w
  3895  0D42  00D2               	movwf	_scale$1102
  3896                           
  3897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3898  0D43  300A               	movlw	10
  3899  0D44  00F3               	movwf	___awmod@divisor
  3900  0D45  3000               	movlw	0
  3901  0D46  00F4               	movwf	___awmod@divisor+1
  3902  0D47  0856               	movf	scale@scl,w
  3903  0D48  00F5               	movwf	___awmod@dividend
  3904  0D49  01F6               	clrf	___awmod@dividend+1
  3905  0D4A  1BF5               	btfsc	___awmod@dividend,7
  3906  0D4B  03F6               	decf	___awmod@dividend+1,f
  3907  0D4C  160A  158A  2462  120A  158A  	fcall	___awmod
  3908  0D51  0873               	movf	?___awmod,w
  3909  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3910  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3911  0D54  00C8               	movwf	??_scale
  3912  0D55  3001               	movlw	1
  3913  0D56                     u6355:	
  3914  0D56  1003               	clrc
  3915  0D57  0DC8               	rlf	??_scale,f
  3916  0D58  3EFF               	addlw	-1
  3917  0D59  1D03               	skipz
  3918  0D5A  2D56               	goto	u6355
  3919  0D5B  1003               	clrc
  3920  0D5C  0D48               	rlf	??_scale,w
  3921  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3922  0D5E  0084               	movwf	4
  3923  0D5F  160A  158A  200A  120A  158A  	fcall	stringdir
  3924  0D64  00C9               	movwf	??_scale+1
  3925  0D65  160A  158A  200A  120A  158A  	fcall	stringdir
  3926  0D6A  00CA               	movwf	??_scale+2
  3927  0D6B  160A  158A  200A  120A  158A  	fcall	stringdir
  3928  0D70  00CB               	movwf	??_scale+3
  3929  0D71  160A  158A  200A  120A  158A  	fcall	stringdir
  3930  0D76  00CC               	movwf	??_scale+4
  3931  0D77  084C               	movf	??_scale+4,w
  3932  0D78  00AD               	movwf	___flmul@b+3
  3933  0D79  084B               	movf	??_scale+3,w
  3934  0D7A  00AC               	movwf	___flmul@b+2
  3935  0D7B  084A               	movf	??_scale+2,w
  3936  0D7C  00AB               	movwf	___flmul@b+1
  3937  0D7D  0849               	movf	??_scale+1,w
  3938  0D7E  00AA               	movwf	___flmul@b
  3939  0D7F  0855               	movf	_scale$1102+3,w
  3940  0D80  00B1               	movwf	___flmul@a+3
  3941  0D81  0854               	movf	_scale$1102+2,w
  3942  0D82  00B0               	movwf	___flmul@a+2
  3943  0D83  0853               	movf	_scale$1102+1,w
  3944  0D84  00AF               	movwf	___flmul@a+1
  3945  0D85  0852               	movf	_scale$1102,w
  3946  0D86  00AE               	movwf	___flmul@a
  3947  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  3948  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3949  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3950  0D8E  082D               	movf	?___flmul+3,w
  3951  0D8F  00C7               	movwf	?_scale+3
  3952  0D90  082C               	movf	?___flmul+2,w
  3953  0D91  00C6               	movwf	?_scale+2
  3954  0D92  082B               	movf	?___flmul+1,w
  3955  0D93  00C5               	movwf	?_scale+1
  3956  0D94  082A               	movf	?___flmul,w
  3957  0D95  00C4               	movwf	?_scale
  3958  0D96  2FFF               	goto	l286
  3959  0D97                     l3953:	
  3960  0D97  0856               	movf	scale@scl,w
  3961  0D98  3A80               	xorlw	128
  3962  0D99  3E75               	addlw	-139
  3963  0D9A  1C03               	skipc
  3964  0D9B  2D9D               	goto	u6361
  3965  0D9C  2D9E               	goto	u6360
  3966  0D9D                     u6361:	
  3967  0D9D  2E26               	goto	l3959
  3968  0D9E                     u6360:	
  3969  0D9E                     l3955:	
  3970                           
  3971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3972  0D9E  300A               	movlw	10
  3973  0D9F  00F3               	movwf	___awmod@divisor
  3974  0DA0  3000               	movlw	0
  3975  0DA1  00F4               	movwf	___awmod@divisor+1
  3976  0DA2  0856               	movf	scale@scl,w
  3977  0DA3  00F5               	movwf	___awmod@dividend
  3978  0DA4  01F6               	clrf	___awmod@dividend+1
  3979  0DA5  1BF5               	btfsc	___awmod@dividend,7
  3980  0DA6  03F6               	decf	___awmod@dividend+1,f
  3981  0DA7  160A  158A  2462  120A  158A  	fcall	___awmod
  3982  0DAC  0873               	movf	?___awmod,w
  3983  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3984  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3985  0DAF  00C8               	movwf	??_scale
  3986  0DB0  3001               	movlw	1
  3987  0DB1                     u6375:	
  3988  0DB1  1003               	clrc
  3989  0DB2  0DC8               	rlf	??_scale,f
  3990  0DB3  3EFF               	addlw	-1
  3991  0DB4  1D03               	skipz
  3992  0DB5  2DB1               	goto	u6375
  3993  0DB6  1003               	clrc
  3994  0DB7  0D48               	rlf	??_scale,w
  3995  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3996  0DB9  0084               	movwf	4
  3997  0DBA  160A  158A  200A  120A  158A  	fcall	stringdir
  3998  0DBF  00C9               	movwf	??_scale+1
  3999  0DC0  160A  158A  200A  120A  158A  	fcall	stringdir
  4000  0DC5  00CA               	movwf	??_scale+2
  4001  0DC6  160A  158A  200A  120A  158A  	fcall	stringdir
  4002  0DCB  00CB               	movwf	??_scale+3
  4003  0DCC  160A  158A  200A  120A  158A  	fcall	stringdir
  4004  0DD1  00CC               	movwf	??_scale+4
  4005  0DD2  084C               	movf	??_scale+4,w
  4006  0DD3  00AD               	movwf	___flmul@b+3
  4007  0DD4  084B               	movf	??_scale+3,w
  4008  0DD5  00AC               	movwf	___flmul@b+2
  4009  0DD6  084A               	movf	??_scale+2,w
  4010  0DD7  00AB               	movwf	___flmul@b+1
  4011  0DD8  0849               	movf	??_scale+1,w
  4012  0DD9  00AA               	movwf	___flmul@b
  4013  0DDA  300A               	movlw	10
  4014  0DDB  00A0               	movwf	___awdiv@divisor
  4015  0DDC  3000               	movlw	0
  4016  0DDD  00A1               	movwf	___awdiv@divisor+1
  4017  0DDE  0856               	movf	scale@scl,w
  4018  0DDF  00A2               	movwf	___awdiv@dividend
  4019  0DE0  01A3               	clrf	___awdiv@dividend+1
  4020  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  4021  0DE2  03A3               	decf	___awdiv@dividend+1,f
  4022  0DE3  160A  158A  2522  120A  158A  	fcall	___awdiv
  4023  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  4024  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  4025  0DEA  0820               	movf	?___awdiv,w
  4026  0DEB  00CD               	movwf	??_scale+5
  4027  0DEC  3001               	movlw	1
  4028  0DED                     u6385:	
  4029  0DED  1003               	clrc
  4030  0DEE  0DCD               	rlf	??_scale+5,f
  4031  0DEF  3EFF               	addlw	-1
  4032  0DF0  1D03               	skipz
  4033  0DF1  2DED               	goto	u6385
  4034  0DF2  1003               	clrc
  4035  0DF3  0D4D               	rlf	??_scale+5,w
  4036  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4037  0DF5  0084               	movwf	4
  4038  0DF6  160A  158A  200A  120A  158A  	fcall	stringdir
  4039  0DFB  00CE               	movwf	??_scale+6
  4040  0DFC  160A  158A  200A  120A  158A  	fcall	stringdir
  4041  0E01  00CF               	movwf	??_scale+7
  4042  0E02  160A  158A  200A  120A  158A  	fcall	stringdir
  4043  0E07  00D0               	movwf	??_scale+8
  4044  0E08  160A  158A  200A  120A  158A  	fcall	stringdir
  4045  0E0D  00D1               	movwf	??_scale+9
  4046  0E0E  0851               	movf	??_scale+9,w
  4047  0E0F  00B1               	movwf	___flmul@a+3
  4048  0E10  0850               	movf	??_scale+8,w
  4049  0E11  00B0               	movwf	___flmul@a+2
  4050  0E12  084F               	movf	??_scale+7,w
  4051  0E13  00AF               	movwf	___flmul@a+1
  4052  0E14  084E               	movf	??_scale+6,w
  4053  0E15  00AE               	movwf	___flmul@a
  4054  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  4055  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4056  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4057  0E1D  082D               	movf	?___flmul+3,w
  4058  0E1E  00C7               	movwf	?_scale+3
  4059  0E1F  082C               	movf	?___flmul+2,w
  4060  0E20  00C6               	movwf	?_scale+2
  4061  0E21  082B               	movf	?___flmul+1,w
  4062  0E22  00C5               	movwf	?_scale+1
  4063  0E23  082A               	movf	?___flmul,w
  4064  0E24  00C4               	movwf	?_scale
  4065  0E25  2FFF               	goto	l286
  4066  0E26                     l3959:	
  4067                           
  4068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  4069  0E26  0856               	movf	scale@scl,w
  4070  0E27  00C8               	movwf	??_scale
  4071  0E28  3001               	movlw	1
  4072  0E29                     u6395:	
  4073  0E29  1003               	clrc
  4074  0E2A  0DC8               	rlf	??_scale,f
  4075  0E2B  3EFF               	addlw	-1
  4076  0E2C  1D03               	skipz
  4077  0E2D  2E29               	goto	u6395
  4078  0E2E  1003               	clrc
  4079  0E2F  0D48               	rlf	??_scale,w
  4080  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4081  0E31  0084               	movwf	4
  4082  0E32  160A  158A  200A  120A  158A  	fcall	stringdir
  4083  0E37  00C9               	movwf	??_scale+1
  4084  0E38  160A  158A  200A  120A  158A  	fcall	stringdir
  4085  0E3D  00CA               	movwf	??_scale+2
  4086  0E3E  160A  158A  200A  120A  158A  	fcall	stringdir
  4087  0E43  00CB               	movwf	??_scale+3
  4088  0E44  160A  158A  200A  120A  158A  	fcall	stringdir
  4089  0E49  00CC               	movwf	??_scale+4
  4090  0E4A  084C               	movf	??_scale+4,w
  4091  0E4B  00C7               	movwf	?_scale+3
  4092  0E4C  084B               	movf	??_scale+3,w
  4093  0E4D  00C6               	movwf	?_scale+2
  4094  0E4E  084A               	movf	??_scale+2,w
  4095  0E4F  00C5               	movwf	?_scale+1
  4096  0E50  0849               	movf	??_scale+1,w
  4097  0E51  00C4               	movwf	?_scale
  4098  0E52  2FFF               	goto	l286
  4099  0E53                     l3963:	
  4100                           
  4101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  4102  0E53  0856               	movf	scale@scl,w
  4103  0E54  3A80               	xorlw	128
  4104  0E55  3E12               	addlw	-238
  4105  0E56  1C03               	skipc
  4106  0E57  2E59               	goto	u6401
  4107  0E58  2E5A               	goto	u6400
  4108  0E59                     u6401:	
  4109  0E59  2F44               	goto	l3971
  4110  0E5A                     u6400:	
  4111  0E5A                     l3965:	
  4112                           
  4113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  4114  0E5A  300A               	movlw	10
  4115  0E5B  00A0               	movwf	___awdiv@divisor
  4116  0E5C  3000               	movlw	0
  4117  0E5D  00A1               	movwf	___awdiv@divisor+1
  4118  0E5E  0856               	movf	scale@scl,w
  4119  0E5F  00F5               	movwf	___awmod@dividend
  4120  0E60  01F6               	clrf	___awmod@dividend+1
  4121  0E61  1BF5               	btfsc	___awmod@dividend,7
  4122  0E62  03F6               	decf	___awmod@dividend+1,f
  4123  0E63  3064               	movlw	100
  4124  0E64  00F3               	movwf	___awmod@divisor
  4125  0E65  3000               	movlw	0
  4126  0E66  00F4               	movwf	___awmod@divisor+1
  4127  0E67  160A  158A  2462  120A  158A  	fcall	___awmod
  4128  0E6C  0874               	movf	?___awmod+1,w
  4129  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  4130  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  4131  0E6F  00A3               	movwf	___awdiv@dividend+1
  4132  0E70  0873               	movf	?___awmod,w
  4133  0E71  00A2               	movwf	___awdiv@dividend
  4134  0E72  160A  158A  2522  120A  158A  	fcall	___awdiv
  4135  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4136  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4137  0E79  0820               	movf	?___awdiv,w
  4138  0E7A  00C8               	movwf	??_scale
  4139  0E7B  3001               	movlw	1
  4140  0E7C                     u6415:	
  4141  0E7C  1003               	clrc
  4142  0E7D  0DC8               	rlf	??_scale,f
  4143  0E7E  3EFF               	addlw	-1
  4144  0E7F  1D03               	skipz
  4145  0E80  2E7C               	goto	u6415
  4146  0E81  1003               	clrc
  4147  0E82  0D48               	rlf	??_scale,w
  4148  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4149  0E84  0084               	movwf	4
  4150  0E85  160A  158A  200A  120A  158A  	fcall	stringdir
  4151  0E8A  00C9               	movwf	??_scale+1
  4152  0E8B  160A  158A  200A  120A  158A  	fcall	stringdir
  4153  0E90  00CA               	movwf	??_scale+2
  4154  0E91  160A  158A  200A  120A  158A  	fcall	stringdir
  4155  0E96  00CB               	movwf	??_scale+3
  4156  0E97  160A  158A  200A  120A  158A  	fcall	stringdir
  4157  0E9C  00CC               	movwf	??_scale+4
  4158  0E9D  084C               	movf	??_scale+4,w
  4159  0E9E  00AD               	movwf	___flmul@b+3
  4160  0E9F  084B               	movf	??_scale+3,w
  4161  0EA0  00AC               	movwf	___flmul@b+2
  4162  0EA1  084A               	movf	??_scale+2,w
  4163  0EA2  00AB               	movwf	___flmul@b+1
  4164  0EA3  0849               	movf	??_scale+1,w
  4165  0EA4  00AA               	movwf	___flmul@b
  4166  0EA5  3064               	movlw	100
  4167  0EA6  00A0               	movwf	___awdiv@divisor
  4168  0EA7  3000               	movlw	0
  4169  0EA8  00A1               	movwf	___awdiv@divisor+1
  4170  0EA9  0856               	movf	scale@scl,w
  4171  0EAA  00A2               	movwf	___awdiv@dividend
  4172  0EAB  01A3               	clrf	___awdiv@dividend+1
  4173  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  4174  0EAD  03A3               	decf	___awdiv@dividend+1,f
  4175  0EAE  160A  158A  2522  120A  158A  	fcall	___awdiv
  4176  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  4177  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  4178  0EB5  0820               	movf	?___awdiv,w
  4179  0EB6  00CD               	movwf	??_scale+5
  4180  0EB7  3001               	movlw	1
  4181  0EB8                     u6425:	
  4182  0EB8  1003               	clrc
  4183  0EB9  0DCD               	rlf	??_scale+5,f
  4184  0EBA  3EFF               	addlw	-1
  4185  0EBB  1D03               	skipz
  4186  0EBC  2EB8               	goto	u6425
  4187  0EBD  1003               	clrc
  4188  0EBE  0D4D               	rlf	??_scale+5,w
  4189  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4190  0EC0  0084               	movwf	4
  4191  0EC1  160A  158A  200A  120A  158A  	fcall	stringdir
  4192  0EC6  00CE               	movwf	??_scale+6
  4193  0EC7  160A  158A  200A  120A  158A  	fcall	stringdir
  4194  0ECC  00CF               	movwf	??_scale+7
  4195  0ECD  160A  158A  200A  120A  158A  	fcall	stringdir
  4196  0ED2  00D0               	movwf	??_scale+8
  4197  0ED3  160A  158A  200A  120A  158A  	fcall	stringdir
  4198  0ED8  00D1               	movwf	??_scale+9
  4199  0ED9  0851               	movf	??_scale+9,w
  4200  0EDA  00B1               	movwf	___flmul@a+3
  4201  0EDB  0850               	movf	??_scale+8,w
  4202  0EDC  00B0               	movwf	___flmul@a+2
  4203  0EDD  084F               	movf	??_scale+7,w
  4204  0EDE  00AF               	movwf	___flmul@a+1
  4205  0EDF  084E               	movf	??_scale+6,w
  4206  0EE0  00AE               	movwf	___flmul@a
  4207  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  4208  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4209  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4210  0EE8  082D               	movf	?___flmul+3,w
  4211  0EE9  00D5               	movwf	_scale$1102+3
  4212  0EEA  082C               	movf	?___flmul+2,w
  4213  0EEB  00D4               	movwf	_scale$1102+2
  4214  0EEC  082B               	movf	?___flmul+1,w
  4215  0EED  00D3               	movwf	_scale$1102+1
  4216  0EEE  082A               	movf	?___flmul,w
  4217  0EEF  00D2               	movwf	_scale$1102
  4218                           
  4219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  4220  0EF0  300A               	movlw	10
  4221  0EF1  00F3               	movwf	___awmod@divisor
  4222  0EF2  3000               	movlw	0
  4223  0EF3  00F4               	movwf	___awmod@divisor+1
  4224  0EF4  0856               	movf	scale@scl,w
  4225  0EF5  00F5               	movwf	___awmod@dividend
  4226  0EF6  01F6               	clrf	___awmod@dividend+1
  4227  0EF7  1BF5               	btfsc	___awmod@dividend,7
  4228  0EF8  03F6               	decf	___awmod@dividend+1,f
  4229  0EF9  160A  158A  2462  120A  158A  	fcall	___awmod
  4230  0EFE  0873               	movf	?___awmod,w
  4231  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4232  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4233  0F01  00C8               	movwf	??_scale
  4234  0F02  3001               	movlw	1
  4235  0F03                     u6435:	
  4236  0F03  1003               	clrc
  4237  0F04  0DC8               	rlf	??_scale,f
  4238  0F05  3EFF               	addlw	-1
  4239  0F06  1D03               	skipz
  4240  0F07  2F03               	goto	u6435
  4241  0F08  1003               	clrc
  4242  0F09  0D48               	rlf	??_scale,w
  4243  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4244  0F0B  0084               	movwf	4
  4245  0F0C  160A  158A  200A  120A  158A  	fcall	stringdir
  4246  0F11  00C9               	movwf	??_scale+1
  4247  0F12  160A  158A  200A  120A  158A  	fcall	stringdir
  4248  0F17  00CA               	movwf	??_scale+2
  4249  0F18  160A  158A  200A  120A  158A  	fcall	stringdir
  4250  0F1D  00CB               	movwf	??_scale+3
  4251  0F1E  160A  158A  200A  120A  158A  	fcall	stringdir
  4252  0F23  00CC               	movwf	??_scale+4
  4253  0F24  084C               	movf	??_scale+4,w
  4254  0F25  00AD               	movwf	___flmul@b+3
  4255  0F26  084B               	movf	??_scale+3,w
  4256  0F27  00AC               	movwf	___flmul@b+2
  4257  0F28  084A               	movf	??_scale+2,w
  4258  0F29  00AB               	movwf	___flmul@b+1
  4259  0F2A  0849               	movf	??_scale+1,w
  4260  0F2B  00AA               	movwf	___flmul@b
  4261  0F2C  0855               	movf	_scale$1102+3,w
  4262  0F2D  00B1               	movwf	___flmul@a+3
  4263  0F2E  0854               	movf	_scale$1102+2,w
  4264  0F2F  00B0               	movwf	___flmul@a+2
  4265  0F30  0853               	movf	_scale$1102+1,w
  4266  0F31  00AF               	movwf	___flmul@a+1
  4267  0F32  0852               	movf	_scale$1102,w
  4268  0F33  00AE               	movwf	___flmul@a
  4269  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  4270  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4271  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4272  0F3B  082D               	movf	?___flmul+3,w
  4273  0F3C  00C7               	movwf	?_scale+3
  4274  0F3D  082C               	movf	?___flmul+2,w
  4275  0F3E  00C6               	movwf	?_scale+2
  4276  0F3F  082B               	movf	?___flmul+1,w
  4277  0F40  00C5               	movwf	?_scale+1
  4278  0F41  082A               	movf	?___flmul,w
  4279  0F42  00C4               	movwf	?_scale
  4280  0F43  2FFF               	goto	l286
  4281  0F44                     l3971:	
  4282  0F44  0856               	movf	scale@scl,w
  4283  0F45  3A80               	xorlw	128
  4284  0F46  3E75               	addlw	-139
  4285  0F47  1C03               	skipc
  4286  0F48  2F4A               	goto	u6441
  4287  0F49  2F4B               	goto	u6440
  4288  0F4A                     u6441:	
  4289  0F4A  2FD3               	goto	l3977
  4290  0F4B                     u6440:	
  4291  0F4B                     l3973:	
  4292                           
  4293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4294  0F4B  300A               	movlw	10
  4295  0F4C  00F3               	movwf	___awmod@divisor
  4296  0F4D  3000               	movlw	0
  4297  0F4E  00F4               	movwf	___awmod@divisor+1
  4298  0F4F  0856               	movf	scale@scl,w
  4299  0F50  00F5               	movwf	___awmod@dividend
  4300  0F51  01F6               	clrf	___awmod@dividend+1
  4301  0F52  1BF5               	btfsc	___awmod@dividend,7
  4302  0F53  03F6               	decf	___awmod@dividend+1,f
  4303  0F54  160A  158A  2462  120A  158A  	fcall	___awmod
  4304  0F59  0873               	movf	?___awmod,w
  4305  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4306  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4307  0F5C  00C8               	movwf	??_scale
  4308  0F5D  3001               	movlw	1
  4309  0F5E                     u6455:	
  4310  0F5E  1003               	clrc
  4311  0F5F  0DC8               	rlf	??_scale,f
  4312  0F60  3EFF               	addlw	-1
  4313  0F61  1D03               	skipz
  4314  0F62  2F5E               	goto	u6455
  4315  0F63  1003               	clrc
  4316  0F64  0D48               	rlf	??_scale,w
  4317  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4318  0F66  0084               	movwf	4
  4319  0F67  160A  158A  200A  120A  158A  	fcall	stringdir
  4320  0F6C  00C9               	movwf	??_scale+1
  4321  0F6D  160A  158A  200A  120A  158A  	fcall	stringdir
  4322  0F72  00CA               	movwf	??_scale+2
  4323  0F73  160A  158A  200A  120A  158A  	fcall	stringdir
  4324  0F78  00CB               	movwf	??_scale+3
  4325  0F79  160A  158A  200A  120A  158A  	fcall	stringdir
  4326  0F7E  00CC               	movwf	??_scale+4
  4327  0F7F  084C               	movf	??_scale+4,w
  4328  0F80  00AD               	movwf	___flmul@b+3
  4329  0F81  084B               	movf	??_scale+3,w
  4330  0F82  00AC               	movwf	___flmul@b+2
  4331  0F83  084A               	movf	??_scale+2,w
  4332  0F84  00AB               	movwf	___flmul@b+1
  4333  0F85  0849               	movf	??_scale+1,w
  4334  0F86  00AA               	movwf	___flmul@b
  4335  0F87  300A               	movlw	10
  4336  0F88  00A0               	movwf	___awdiv@divisor
  4337  0F89  3000               	movlw	0
  4338  0F8A  00A1               	movwf	___awdiv@divisor+1
  4339  0F8B  0856               	movf	scale@scl,w
  4340  0F8C  00A2               	movwf	___awdiv@dividend
  4341  0F8D  01A3               	clrf	___awdiv@dividend+1
  4342  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  4343  0F8F  03A3               	decf	___awdiv@dividend+1,f
  4344  0F90  160A  158A  2522  120A  158A  	fcall	___awdiv
  4345  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4346  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4347  0F97  0820               	movf	?___awdiv,w
  4348  0F98  00CD               	movwf	??_scale+5
  4349  0F99  3001               	movlw	1
  4350  0F9A                     u6465:	
  4351  0F9A  1003               	clrc
  4352  0F9B  0DCD               	rlf	??_scale+5,f
  4353  0F9C  3EFF               	addlw	-1
  4354  0F9D  1D03               	skipz
  4355  0F9E  2F9A               	goto	u6465
  4356  0F9F  1003               	clrc
  4357  0FA0  0D4D               	rlf	??_scale+5,w
  4358  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4359  0FA2  0084               	movwf	4
  4360  0FA3  160A  158A  200A  120A  158A  	fcall	stringdir
  4361  0FA8  00CE               	movwf	??_scale+6
  4362  0FA9  160A  158A  200A  120A  158A  	fcall	stringdir
  4363  0FAE  00CF               	movwf	??_scale+7
  4364  0FAF  160A  158A  200A  120A  158A  	fcall	stringdir
  4365  0FB4  00D0               	movwf	??_scale+8
  4366  0FB5  160A  158A  200A  120A  158A  	fcall	stringdir
  4367  0FBA  00D1               	movwf	??_scale+9
  4368  0FBB  0851               	movf	??_scale+9,w
  4369  0FBC  00B1               	movwf	___flmul@a+3
  4370  0FBD  0850               	movf	??_scale+8,w
  4371  0FBE  00B0               	movwf	___flmul@a+2
  4372  0FBF  084F               	movf	??_scale+7,w
  4373  0FC0  00AF               	movwf	___flmul@a+1
  4374  0FC1  084E               	movf	??_scale+6,w
  4375  0FC2  00AE               	movwf	___flmul@a
  4376  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  4377  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4378  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4379  0FCA  082D               	movf	?___flmul+3,w
  4380  0FCB  00C7               	movwf	?_scale+3
  4381  0FCC  082C               	movf	?___flmul+2,w
  4382  0FCD  00C6               	movwf	?_scale+2
  4383  0FCE  082B               	movf	?___flmul+1,w
  4384  0FCF  00C5               	movwf	?_scale+1
  4385  0FD0  082A               	movf	?___flmul,w
  4386  0FD1  00C4               	movwf	?_scale
  4387  0FD2  2FFF               	goto	l286
  4388  0FD3                     l3977:	
  4389                           
  4390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  4391  0FD3  0856               	movf	scale@scl,w
  4392  0FD4  00C8               	movwf	??_scale
  4393  0FD5  3001               	movlw	1
  4394  0FD6                     u6475:	
  4395  0FD6  1003               	clrc
  4396  0FD7  0DC8               	rlf	??_scale,f
  4397  0FD8  3EFF               	addlw	-1
  4398  0FD9  1D03               	skipz
  4399  0FDA  2FD6               	goto	u6475
  4400  0FDB  1003               	clrc
  4401  0FDC  0D48               	rlf	??_scale,w
  4402  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4403  0FDE  0084               	movwf	4
  4404  0FDF  160A  158A  200A  120A  158A  	fcall	stringdir
  4405  0FE4  00C9               	movwf	??_scale+1
  4406  0FE5  160A  158A  200A  120A  158A  	fcall	stringdir
  4407  0FEA  00CA               	movwf	??_scale+2
  4408  0FEB  160A  158A  200A  120A  158A  	fcall	stringdir
  4409  0FF0  00CB               	movwf	??_scale+3
  4410  0FF1  160A  158A  200A  120A  158A  	fcall	stringdir
  4411  0FF6  00CC               	movwf	??_scale+4
  4412  0FF7  084C               	movf	??_scale+4,w
  4413  0FF8  00C7               	movwf	?_scale+3
  4414  0FF9  084B               	movf	??_scale+3,w
  4415  0FFA  00C6               	movwf	?_scale+2
  4416  0FFB  084A               	movf	??_scale+2,w
  4417  0FFC  00C5               	movwf	?_scale+1
  4418  0FFD  0849               	movf	??_scale+1,w
  4419  0FFE  00C4               	movwf	?_scale
  4420  0FFF                     l286:	
  4421  0FFF  0008               	return
  4422  1000                     __end_of_scale:	
  4423                           
  4424                           	psect	text3
  4425  1C62                     __ptext3:	
  4426 ;; *************** function ___awmod *****************
  4427 ;; Defined at:
  4428 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  divisor         2    3[COMMON] int 
  4431 ;;  dividend        2    5[COMMON] int 
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;  sign            1    9[COMMON] unsigned char 
  4434 ;;  counter         1    8[COMMON] unsigned char 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  2    3[COMMON] int 
  4437 ;; Registers used:
  4438 ;;		wreg, status,2, status,0
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4444 ;;      Params:         4       0       0       0       0
  4445 ;;      Locals:         2       0       0       0       0
  4446 ;;      Temps:          1       0       0       0       0
  4447 ;;      Totals:         7       0       0       0       0
  4448 ;;Total ram usage:        7 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; Hardware stack levels required when called:    1
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_scale
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           
  4459                           ;psect for function ___awmod
  4460  1C62                     ___awmod:	
  4461  1C62                     l2475:	
  4462                           ;incstack = 0
  4463                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4464                           
  4465  1C62  01F9               	clrf	___awmod@sign
  4466  1C63                     l2477:	
  4467  1C63  1FF6               	btfss	___awmod@dividend+1,7
  4468  1C64  2C66               	goto	u3251
  4469  1C65  2C67               	goto	u3250
  4470  1C66                     u3251:	
  4471  1C66  2C6E               	goto	l2483
  4472  1C67                     u3250:	
  4473  1C67                     l2479:	
  4474  1C67  09F5               	comf	___awmod@dividend,f
  4475  1C68  09F6               	comf	___awmod@dividend+1,f
  4476  1C69  0AF5               	incf	___awmod@dividend,f
  4477  1C6A  1903               	skipnz
  4478  1C6B  0AF6               	incf	___awmod@dividend+1,f
  4479  1C6C                     l2481:	
  4480  1C6C  01F9               	clrf	___awmod@sign
  4481  1C6D  0AF9               	incf	___awmod@sign,f
  4482  1C6E                     l2483:	
  4483  1C6E  1FF4               	btfss	___awmod@divisor+1,7
  4484  1C6F  2C71               	goto	u3261
  4485  1C70  2C72               	goto	u3260
  4486  1C71                     u3261:	
  4487  1C71  2C77               	goto	l2487
  4488  1C72                     u3260:	
  4489  1C72                     l2485:	
  4490  1C72  09F3               	comf	___awmod@divisor,f
  4491  1C73  09F4               	comf	___awmod@divisor+1,f
  4492  1C74  0AF3               	incf	___awmod@divisor,f
  4493  1C75  1903               	skipnz
  4494  1C76  0AF4               	incf	___awmod@divisor+1,f
  4495  1C77                     l2487:	
  4496  1C77  0873               	movf	___awmod@divisor,w
  4497  1C78  0474               	iorwf	___awmod@divisor+1,w
  4498  1C79  1903               	btfsc	3,2
  4499  1C7A  2C7C               	goto	u3271
  4500  1C7B  2C7D               	goto	u3270
  4501  1C7C                     u3271:	
  4502  1C7C  2CAC               	goto	l2505
  4503  1C7D                     u3270:	
  4504  1C7D                     l2489:	
  4505  1C7D  01F8               	clrf	___awmod@counter
  4506  1C7E  0AF8               	incf	___awmod@counter,f
  4507  1C7F  2C8B               	goto	l2495
  4508  1C80                     l2491:	
  4509  1C80  3001               	movlw	1
  4510  1C81                     u3285:	
  4511  1C81  1003               	clrc
  4512  1C82  0DF3               	rlf	___awmod@divisor,f
  4513  1C83  0DF4               	rlf	___awmod@divisor+1,f
  4514  1C84  3EFF               	addlw	-1
  4515  1C85  1D03               	skipz
  4516  1C86  2C81               	goto	u3285
  4517  1C87                     l2493:	
  4518  1C87  3001               	movlw	1
  4519  1C88  00F7               	movwf	??___awmod
  4520  1C89  0877               	movf	??___awmod,w
  4521  1C8A  07F8               	addwf	___awmod@counter,f
  4522  1C8B                     l2495:	
  4523  1C8B  1FF4               	btfss	___awmod@divisor+1,7
  4524  1C8C  2C8E               	goto	u3291
  4525  1C8D  2C8F               	goto	u3290
  4526  1C8E                     u3291:	
  4527  1C8E  2C80               	goto	l2491
  4528  1C8F                     u3290:	
  4529  1C8F                     l2497:	
  4530  1C8F  0874               	movf	___awmod@divisor+1,w
  4531  1C90  0276               	subwf	___awmod@dividend+1,w
  4532  1C91  1D03               	skipz
  4533  1C92  2C95               	goto	u3305
  4534  1C93  0873               	movf	___awmod@divisor,w
  4535  1C94  0275               	subwf	___awmod@dividend,w
  4536  1C95                     u3305:	
  4537  1C95  1C03               	skipc
  4538  1C96  2C98               	goto	u3301
  4539  1C97  2C99               	goto	u3300
  4540  1C98                     u3301:	
  4541  1C98  2C9F               	goto	l2501
  4542  1C99                     u3300:	
  4543  1C99                     l2499:	
  4544  1C99  0873               	movf	___awmod@divisor,w
  4545  1C9A  02F5               	subwf	___awmod@dividend,f
  4546  1C9B  0874               	movf	___awmod@divisor+1,w
  4547  1C9C  1C03               	skipc
  4548  1C9D  03F6               	decf	___awmod@dividend+1,f
  4549  1C9E  02F6               	subwf	___awmod@dividend+1,f
  4550  1C9F                     l2501:	
  4551  1C9F  3001               	movlw	1
  4552  1CA0                     u3315:	
  4553  1CA0  1003               	clrc
  4554  1CA1  0CF4               	rrf	___awmod@divisor+1,f
  4555  1CA2  0CF3               	rrf	___awmod@divisor,f
  4556  1CA3  3EFF               	addlw	-1
  4557  1CA4  1D03               	skipz
  4558  1CA5  2CA0               	goto	u3315
  4559  1CA6                     l2503:	
  4560  1CA6  3001               	movlw	1
  4561  1CA7  02F8               	subwf	___awmod@counter,f
  4562  1CA8  1D03               	btfss	3,2
  4563  1CA9  2CAB               	goto	u3321
  4564  1CAA  2CAC               	goto	u3320
  4565  1CAB                     u3321:	
  4566  1CAB  2C8F               	goto	l2497
  4567  1CAC                     u3320:	
  4568  1CAC                     l2505:	
  4569  1CAC  0879               	movf	___awmod@sign,w
  4570  1CAD  1903               	btfsc	3,2
  4571  1CAE  2CB0               	goto	u3331
  4572  1CAF  2CB1               	goto	u3330
  4573  1CB0                     u3331:	
  4574  1CB0  2CB6               	goto	l2509
  4575  1CB1                     u3330:	
  4576  1CB1                     l2507:	
  4577  1CB1  09F5               	comf	___awmod@dividend,f
  4578  1CB2  09F6               	comf	___awmod@dividend+1,f
  4579  1CB3  0AF5               	incf	___awmod@dividend,f
  4580  1CB4  1903               	skipnz
  4581  1CB5  0AF6               	incf	___awmod@dividend+1,f
  4582  1CB6                     l2509:	
  4583  1CB6  0876               	movf	___awmod@dividend+1,w
  4584  1CB7  00F4               	movwf	?___awmod+1
  4585  1CB8  0875               	movf	___awmod@dividend,w
  4586  1CB9  00F3               	movwf	?___awmod
  4587  1CBA                     l522:	
  4588  1CBA  0008               	return
  4589  1CBB                     __end_of___awmod:	
  4590                           
  4591                           	psect	text4
  4592  1D22                     __ptext4:	
  4593 ;; *************** function ___awdiv *****************
  4594 ;; Defined at:
  4595 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  divisor         2    0[BANK0 ] int 
  4598 ;;  dividend        2    2[BANK0 ] int 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;  quotient        2    7[BANK0 ] int 
  4601 ;;  sign            1    6[BANK0 ] unsigned char 
  4602 ;;  counter         1    5[BANK0 ] unsigned char 
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  2    0[BANK0 ] int 
  4605 ;; Registers used:
  4606 ;;		wreg, status,2, status,0
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4612 ;;      Params:         0       4       0       0       0
  4613 ;;      Locals:         0       4       0       0       0
  4614 ;;      Temps:          0       1       0       0       0
  4615 ;;      Totals:         0       9       0       0       0
  4616 ;;Total ram usage:        9 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:    1
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_scale
  4623 ;;		_sprintf
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           
  4628                           ;psect for function ___awdiv
  4629  1D22                     ___awdiv:	
  4630  1D22                     l3897:	
  4631                           ;incstack = 0
  4632                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4633                           
  4634  1D22  1283               	bcf	3,5	;RP0=0, select bank0
  4635  1D23  1303               	bcf	3,6	;RP1=0, select bank0
  4636  1D24  01A6               	clrf	___awdiv@sign
  4637  1D25                     l3899:	
  4638  1D25  1FA1               	btfss	___awdiv@divisor+1,7
  4639  1D26  2D28               	goto	u6211
  4640  1D27  2D29               	goto	u6210
  4641  1D28                     u6211:	
  4642  1D28  2D30               	goto	l3905
  4643  1D29                     u6210:	
  4644  1D29                     l3901:	
  4645  1D29  09A0               	comf	___awdiv@divisor,f
  4646  1D2A  09A1               	comf	___awdiv@divisor+1,f
  4647  1D2B  0AA0               	incf	___awdiv@divisor,f
  4648  1D2C  1903               	skipnz
  4649  1D2D  0AA1               	incf	___awdiv@divisor+1,f
  4650  1D2E                     l3903:	
  4651  1D2E  01A6               	clrf	___awdiv@sign
  4652  1D2F  0AA6               	incf	___awdiv@sign,f
  4653  1D30                     l3905:	
  4654  1D30  1FA3               	btfss	___awdiv@dividend+1,7
  4655  1D31  2D33               	goto	u6221
  4656  1D32  2D34               	goto	u6220
  4657  1D33                     u6221:	
  4658  1D33  2D3D               	goto	l3911
  4659  1D34                     u6220:	
  4660  1D34                     l3907:	
  4661  1D34  09A2               	comf	___awdiv@dividend,f
  4662  1D35  09A3               	comf	___awdiv@dividend+1,f
  4663  1D36  0AA2               	incf	___awdiv@dividend,f
  4664  1D37  1903               	skipnz
  4665  1D38  0AA3               	incf	___awdiv@dividend+1,f
  4666  1D39                     l3909:	
  4667  1D39  3001               	movlw	1
  4668  1D3A  00A4               	movwf	??___awdiv
  4669  1D3B  0824               	movf	??___awdiv,w
  4670  1D3C  06A6               	xorwf	___awdiv@sign,f
  4671  1D3D                     l3911:	
  4672  1D3D  01A7               	clrf	___awdiv@quotient
  4673  1D3E  01A8               	clrf	___awdiv@quotient+1
  4674  1D3F                     l3913:	
  4675  1D3F  0820               	movf	___awdiv@divisor,w
  4676  1D40  0421               	iorwf	___awdiv@divisor+1,w
  4677  1D41  1903               	btfsc	3,2
  4678  1D42  2D44               	goto	u6231
  4679  1D43  2D45               	goto	u6230
  4680  1D44                     u6231:	
  4681  1D44  2D7C               	goto	l3933
  4682  1D45                     u6230:	
  4683  1D45                     l3915:	
  4684  1D45  01A5               	clrf	___awdiv@counter
  4685  1D46  0AA5               	incf	___awdiv@counter,f
  4686  1D47  2D53               	goto	l3921
  4687  1D48                     l3917:	
  4688  1D48  3001               	movlw	1
  4689  1D49                     u6245:	
  4690  1D49  1003               	clrc
  4691  1D4A  0DA0               	rlf	___awdiv@divisor,f
  4692  1D4B  0DA1               	rlf	___awdiv@divisor+1,f
  4693  1D4C  3EFF               	addlw	-1
  4694  1D4D  1D03               	skipz
  4695  1D4E  2D49               	goto	u6245
  4696  1D4F                     l3919:	
  4697  1D4F  3001               	movlw	1
  4698  1D50  00A4               	movwf	??___awdiv
  4699  1D51  0824               	movf	??___awdiv,w
  4700  1D52  07A5               	addwf	___awdiv@counter,f
  4701  1D53                     l3921:	
  4702  1D53  1FA1               	btfss	___awdiv@divisor+1,7
  4703  1D54  2D56               	goto	u6251
  4704  1D55  2D57               	goto	u6250
  4705  1D56                     u6251:	
  4706  1D56  2D48               	goto	l3917
  4707  1D57                     u6250:	
  4708  1D57                     l3923:	
  4709  1D57  3001               	movlw	1
  4710  1D58                     u6265:	
  4711  1D58  1003               	clrc
  4712  1D59  0DA7               	rlf	___awdiv@quotient,f
  4713  1D5A  0DA8               	rlf	___awdiv@quotient+1,f
  4714  1D5B  3EFF               	addlw	-1
  4715  1D5C  1D03               	skipz
  4716  1D5D  2D58               	goto	u6265
  4717  1D5E  0821               	movf	___awdiv@divisor+1,w
  4718  1D5F  0223               	subwf	___awdiv@dividend+1,w
  4719  1D60  1D03               	skipz
  4720  1D61  2D64               	goto	u6275
  4721  1D62  0820               	movf	___awdiv@divisor,w
  4722  1D63  0222               	subwf	___awdiv@dividend,w
  4723  1D64                     u6275:	
  4724  1D64  1C03               	skipc
  4725  1D65  2D67               	goto	u6271
  4726  1D66  2D68               	goto	u6270
  4727  1D67                     u6271:	
  4728  1D67  2D6F               	goto	l3929
  4729  1D68                     u6270:	
  4730  1D68                     l3925:	
  4731  1D68  0820               	movf	___awdiv@divisor,w
  4732  1D69  02A2               	subwf	___awdiv@dividend,f
  4733  1D6A  0821               	movf	___awdiv@divisor+1,w
  4734  1D6B  1C03               	skipc
  4735  1D6C  03A3               	decf	___awdiv@dividend+1,f
  4736  1D6D  02A3               	subwf	___awdiv@dividend+1,f
  4737  1D6E                     l3927:	
  4738  1D6E  1427               	bsf	___awdiv@quotient,0
  4739  1D6F                     l3929:	
  4740  1D6F  3001               	movlw	1
  4741  1D70                     u6285:	
  4742  1D70  1003               	clrc
  4743  1D71  0CA1               	rrf	___awdiv@divisor+1,f
  4744  1D72  0CA0               	rrf	___awdiv@divisor,f
  4745  1D73  3EFF               	addlw	-1
  4746  1D74  1D03               	skipz
  4747  1D75  2D70               	goto	u6285
  4748  1D76                     l3931:	
  4749  1D76  3001               	movlw	1
  4750  1D77  02A5               	subwf	___awdiv@counter,f
  4751  1D78  1D03               	btfss	3,2
  4752  1D79  2D7B               	goto	u6291
  4753  1D7A  2D7C               	goto	u6290
  4754  1D7B                     u6291:	
  4755  1D7B  2D57               	goto	l3923
  4756  1D7C                     u6290:	
  4757  1D7C                     l3933:	
  4758  1D7C  0826               	movf	___awdiv@sign,w
  4759  1D7D  1903               	btfsc	3,2
  4760  1D7E  2D80               	goto	u6301
  4761  1D7F  2D81               	goto	u6300
  4762  1D80                     u6301:	
  4763  1D80  2D86               	goto	l3937
  4764  1D81                     u6300:	
  4765  1D81                     l3935:	
  4766  1D81  09A7               	comf	___awdiv@quotient,f
  4767  1D82  09A8               	comf	___awdiv@quotient+1,f
  4768  1D83  0AA7               	incf	___awdiv@quotient,f
  4769  1D84  1903               	skipnz
  4770  1D85  0AA8               	incf	___awdiv@quotient+1,f
  4771  1D86                     l3937:	
  4772  1D86  0828               	movf	___awdiv@quotient+1,w
  4773  1D87  00A1               	movwf	?___awdiv+1
  4774  1D88  0827               	movf	___awdiv@quotient,w
  4775  1D89  00A0               	movwf	?___awdiv
  4776  1D8A                     l509:	
  4777  1D8A  0008               	return
  4778  1D8B                     __end_of___awdiv:	
  4779                           
  4780                           	psect	text5
  4781  19C2                     __ptext5:	
  4782 ;; *************** function _isdigit *****************
  4783 ;; Defined at:
  4784 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;  c               1    wreg     unsigned char 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  c               1    4[COMMON] unsigned char 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;		None               void
  4791 ;; Registers used:
  4792 ;;		wreg, status,2, status,0
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4798 ;;      Params:         0       0       0       0       0
  4799 ;;      Locals:         2       0       0       0       0
  4800 ;;      Temps:          0       0       0       0       0
  4801 ;;      Totals:         2       0       0       0       0
  4802 ;;Total ram usage:        2 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:    1
  4805 ;; This function calls:
  4806 ;;		Nothing
  4807 ;; This function is called by:
  4808 ;;		_sprintf
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           
  4813                           ;psect for function _isdigit
  4814  19C2                     _isdigit:	
  4815                           
  4816                           ;incstack = 0
  4817                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4818                           ;isdigit@c stored from wreg
  4819  19C2  00F4               	movwf	isdigit@c
  4820  19C3                     l2977:	
  4821  19C3  01F3               	clrf	_isdigit$921
  4822  19C4                     l2979:	
  4823  19C4  303A               	movlw	58
  4824  19C5  0274               	subwf	isdigit@c,w
  4825  19C6  1803               	skipnc
  4826  19C7  29C9               	goto	u4551
  4827  19C8  29CA               	goto	u4550
  4828  19C9                     u4551:	
  4829  19C9  29D2               	goto	l2985
  4830  19CA                     u4550:	
  4831  19CA                     l2981:	
  4832  19CA  3030               	movlw	48
  4833  19CB  0274               	subwf	isdigit@c,w
  4834  19CC  1C03               	skipc
  4835  19CD  29CF               	goto	u4561
  4836  19CE  29D0               	goto	u4560
  4837  19CF                     u4561:	
  4838  19CF  29D2               	goto	l2985
  4839  19D0                     u4560:	
  4840  19D0                     l2983:	
  4841  19D0  01F3               	clrf	_isdigit$921
  4842  19D1  0AF3               	incf	_isdigit$921,f
  4843  19D2                     l2985:	
  4844  19D2  0C73               	rrf	_isdigit$921,w
  4845  19D3                     l837:	
  4846  19D3  0008               	return
  4847  19D4                     __end_of_isdigit:	
  4848                           
  4849                           	psect	text6
  4850  136B                     __ptext6:	
  4851 ;; *************** function _fround *****************
  4852 ;; Defined at:
  4853 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  prec            1    wreg     unsigned char 
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;  prec            1   55[BANK0 ] unsigned char 
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  4   36[BANK0 ] unsigned char 
  4860 ;; Registers used:
  4861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4867 ;;      Params:         0       4       0       0       0
  4868 ;;      Locals:         0       9       0       0       0
  4869 ;;      Temps:          0       7       0       0       0
  4870 ;;      Totals:         0      20       0       0       0
  4871 ;;Total ram usage:       20 bytes
  4872 ;; Hardware stack levels used:    1
  4873 ;; Hardware stack levels required when called:    3
  4874 ;; This function calls:
  4875 ;;		___flmul
  4876 ;;		___lwdiv
  4877 ;;		___lwmod
  4878 ;; This function is called by:
  4879 ;;		_sprintf
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           
  4884                           ;psect for function _fround
  4885  136B                     _fround:	
  4886                           
  4887                           ;incstack = 0
  4888                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4889                           ;fround@prec stored from wreg
  4890  136B  1283               	bcf	3,5	;RP0=0, select bank0
  4891  136C  1303               	bcf	3,6	;RP1=0, select bank0
  4892  136D  00D7               	movwf	fround@prec
  4893  136E                     l2919:	
  4894                           
  4895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  4896  136E  306E               	movlw	110
  4897  136F  0257               	subwf	fround@prec,w
  4898  1370  1C03               	skipc
  4899  1371  2B73               	goto	u4301
  4900  1372  2B74               	goto	u4300
  4901  1373                     u4301:	
  4902  1373  2C83               	goto	l2927
  4903  1374                     u4300:	
  4904  1374                     l2921:	
  4905                           
  4906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4907  1374  303F               	movlw	63
  4908  1375  00AD               	movwf	___flmul@b+3
  4909  1376  3000               	movlw	0
  4910  1377  00AC               	movwf	___flmul@b+2
  4911  1378  3000               	movlw	0
  4912  1379  00AB               	movwf	___flmul@b+1
  4913  137A  3000               	movlw	0
  4914  137B  00AA               	movwf	___flmul@b
  4915  137C  3064               	movlw	100
  4916  137D  00A0               	movwf	___lwdiv@divisor
  4917  137E  3000               	movlw	0
  4918  137F  00A1               	movwf	___lwdiv@divisor+1
  4919  1380  0857               	movf	fround@prec,w
  4920  1381  00C8               	movwf	??_fround
  4921  1382  01C9               	clrf	??_fround+1
  4922  1383  0848               	movf	??_fround,w
  4923  1384  00A2               	movwf	___lwdiv@dividend
  4924  1385  0849               	movf	??_fround+1,w
  4925  1386  00A3               	movwf	___lwdiv@dividend+1
  4926  1387  160A  158A  22D0  160A  118A  	fcall	___lwdiv
  4927  138C  1283               	bcf	3,5	;RP0=0, select bank0
  4928  138D  1303               	bcf	3,6	;RP1=0, select bank0
  4929  138E  0820               	movf	?___lwdiv,w
  4930  138F  00CA               	movwf	??_fround+2
  4931  1390  3001               	movlw	1
  4932  1391                     u4315:	
  4933  1391  1003               	clrc
  4934  1392  0DCA               	rlf	??_fround+2,f
  4935  1393  3EFF               	addlw	-1
  4936  1394  1D03               	skipz
  4937  1395  2B91               	goto	u4315
  4938  1396  1003               	clrc
  4939  1397  0D4A               	rlf	??_fround+2,w
  4940  1398  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4941  1399  0084               	movwf	4
  4942  139A  160A  158A  200A  160A  118A  	fcall	stringdir
  4943  139F  00CB               	movwf	??_fround+3
  4944  13A0  160A  158A  200A  160A  118A  	fcall	stringdir
  4945  13A5  00CC               	movwf	??_fround+4
  4946  13A6  160A  158A  200A  160A  118A  	fcall	stringdir
  4947  13AB  00CD               	movwf	??_fround+5
  4948  13AC  160A  158A  200A  160A  118A  	fcall	stringdir
  4949  13B1  00CE               	movwf	??_fround+6
  4950  13B2  084E               	movf	??_fround+6,w
  4951  13B3  00B1               	movwf	___flmul@a+3
  4952  13B4  084D               	movf	??_fround+5,w
  4953  13B5  00B0               	movwf	___flmul@a+2
  4954  13B6  084C               	movf	??_fround+4,w
  4955  13B7  00AF               	movwf	___flmul@a+1
  4956  13B8  084B               	movf	??_fround+3,w
  4957  13B9  00AE               	movwf	___flmul@a
  4958  13BA  120A  158A  213C  160A  118A  	fcall	___flmul
  4959  13BF  1283               	bcf	3,5	;RP0=0, select bank0
  4960  13C0  1303               	bcf	3,6	;RP1=0, select bank0
  4961  13C1  082D               	movf	?___flmul+3,w
  4962  13C2  00D6               	movwf	_fround$1100+3
  4963  13C3  082C               	movf	?___flmul+2,w
  4964  13C4  00D5               	movwf	_fround$1100+2
  4965  13C5  082B               	movf	?___flmul+1,w
  4966  13C6  00D4               	movwf	_fround$1100+1
  4967  13C7  082A               	movf	?___flmul,w
  4968  13C8  00D3               	movwf	_fround$1100
  4969                           
  4970                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4971  13C9  300A               	movlw	10
  4972  13CA  00A0               	movwf	___lwdiv@divisor
  4973  13CB  3000               	movlw	0
  4974  13CC  00A1               	movwf	___lwdiv@divisor+1
  4975  13CD  0857               	movf	fround@prec,w
  4976  13CE  00C8               	movwf	??_fround
  4977  13CF  01C9               	clrf	??_fround+1
  4978  13D0  0848               	movf	??_fround,w
  4979  13D1  00F5               	movwf	___lwmod@dividend
  4980  13D2  0849               	movf	??_fround+1,w
  4981  13D3  00F6               	movwf	___lwmod@dividend+1
  4982  13D4  3064               	movlw	100
  4983  13D5  00F3               	movwf	___lwmod@divisor
  4984  13D6  3000               	movlw	0
  4985  13D7  00F4               	movwf	___lwmod@divisor+1
  4986  13D8  160A  158A  2296  160A  118A  	fcall	___lwmod
  4987  13DD  0874               	movf	?___lwmod+1,w
  4988  13DE  1283               	bcf	3,5	;RP0=0, select bank0
  4989  13DF  1303               	bcf	3,6	;RP1=0, select bank0
  4990  13E0  00A3               	movwf	___lwdiv@dividend+1
  4991  13E1  0873               	movf	?___lwmod,w
  4992  13E2  00A2               	movwf	___lwdiv@dividend
  4993  13E3  160A  158A  22D0  160A  118A  	fcall	___lwdiv
  4994  13E8  1283               	bcf	3,5	;RP0=0, select bank0
  4995  13E9  1303               	bcf	3,6	;RP1=0, select bank0
  4996  13EA  0820               	movf	?___lwdiv,w
  4997  13EB  00CA               	movwf	??_fround+2
  4998  13EC  3001               	movlw	1
  4999  13ED                     u4325:	
  5000  13ED  1003               	clrc
  5001  13EE  0DCA               	rlf	??_fround+2,f
  5002  13EF  3EFF               	addlw	-1
  5003  13F0  1D03               	skipz
  5004  13F1  2BED               	goto	u4325
  5005  13F2  1003               	clrc
  5006  13F3  0D4A               	rlf	??_fround+2,w
  5007  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5008  13F5  0084               	movwf	4
  5009  13F6  160A  158A  200A  160A  118A  	fcall	stringdir
  5010  13FB  00CB               	movwf	??_fround+3
  5011  13FC  160A  158A  200A  160A  118A  	fcall	stringdir
  5012  1401  00CC               	movwf	??_fround+4
  5013  1402  160A  158A  200A  160A  118A  	fcall	stringdir
  5014  1407  00CD               	movwf	??_fround+5
  5015  1408  160A  158A  200A  160A  118A  	fcall	stringdir
  5016  140D  00CE               	movwf	??_fround+6
  5017  140E  084E               	movf	??_fround+6,w
  5018  140F  00AD               	movwf	___flmul@b+3
  5019  1410  084D               	movf	??_fround+5,w
  5020  1411  00AC               	movwf	___flmul@b+2
  5021  1412  084C               	movf	??_fround+4,w
  5022  1413  00AB               	movwf	___flmul@b+1
  5023  1414  084B               	movf	??_fround+3,w
  5024  1415  00AA               	movwf	___flmul@b
  5025  1416  0856               	movf	_fround$1100+3,w
  5026  1417  00B1               	movwf	___flmul@a+3
  5027  1418  0855               	movf	_fround$1100+2,w
  5028  1419  00B0               	movwf	___flmul@a+2
  5029  141A  0854               	movf	_fround$1100+1,w
  5030  141B  00AF               	movwf	___flmul@a+1
  5031  141C  0853               	movf	_fround$1100,w
  5032  141D  00AE               	movwf	___flmul@a
  5033  141E  120A  158A  213C  160A  118A  	fcall	___flmul
  5034  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5035  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5036  1425  082D               	movf	?___flmul+3,w
  5037  1426  00D2               	movwf	_fround$1101+3
  5038  1427  082C               	movf	?___flmul+2,w
  5039  1428  00D1               	movwf	_fround$1101+2
  5040  1429  082B               	movf	?___flmul+1,w
  5041  142A  00D0               	movwf	_fround$1101+1
  5042  142B  082A               	movf	?___flmul,w
  5043  142C  00CF               	movwf	_fround$1101
  5044                           
  5045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5046  142D  300A               	movlw	10
  5047  142E  00F3               	movwf	___lwmod@divisor
  5048  142F  3000               	movlw	0
  5049  1430  00F4               	movwf	___lwmod@divisor+1
  5050  1431  0857               	movf	fround@prec,w
  5051  1432  00C8               	movwf	??_fround
  5052  1433  01C9               	clrf	??_fround+1
  5053  1434  0848               	movf	??_fround,w
  5054  1435  00F5               	movwf	___lwmod@dividend
  5055  1436  0849               	movf	??_fround+1,w
  5056  1437  00F6               	movwf	___lwmod@dividend+1
  5057  1438  160A  158A  2296  160A  118A  	fcall	___lwmod
  5058  143D  0873               	movf	?___lwmod,w
  5059  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5060  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5061  1440  00CA               	movwf	??_fround+2
  5062  1441  3001               	movlw	1
  5063  1442                     u4335:	
  5064  1442  1003               	clrc
  5065  1443  0DCA               	rlf	??_fround+2,f
  5066  1444  3EFF               	addlw	-1
  5067  1445  1D03               	skipz
  5068  1446  2C42               	goto	u4335
  5069  1447  1003               	clrc
  5070  1448  0D4A               	rlf	??_fround+2,w
  5071  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5072  144A  0084               	movwf	4
  5073  144B  160A  158A  200A  160A  118A  	fcall	stringdir
  5074  1450  00CB               	movwf	??_fround+3
  5075  1451  160A  158A  200A  160A  118A  	fcall	stringdir
  5076  1456  00CC               	movwf	??_fround+4
  5077  1457  160A  158A  200A  160A  118A  	fcall	stringdir
  5078  145C  00CD               	movwf	??_fround+5
  5079  145D  160A  158A  200A  160A  118A  	fcall	stringdir
  5080  1462  00CE               	movwf	??_fround+6
  5081  1463  084E               	movf	??_fround+6,w
  5082  1464  00AD               	movwf	___flmul@b+3
  5083  1465  084D               	movf	??_fround+5,w
  5084  1466  00AC               	movwf	___flmul@b+2
  5085  1467  084C               	movf	??_fround+4,w
  5086  1468  00AB               	movwf	___flmul@b+1
  5087  1469  084B               	movf	??_fround+3,w
  5088  146A  00AA               	movwf	___flmul@b
  5089  146B  0852               	movf	_fround$1101+3,w
  5090  146C  00B1               	movwf	___flmul@a+3
  5091  146D  0851               	movf	_fround$1101+2,w
  5092  146E  00B0               	movwf	___flmul@a+2
  5093  146F  0850               	movf	_fround$1101+1,w
  5094  1470  00AF               	movwf	___flmul@a+1
  5095  1471  084F               	movf	_fround$1101,w
  5096  1472  00AE               	movwf	___flmul@a
  5097  1473  120A  158A  213C  160A  118A  	fcall	___flmul
  5098  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5099  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5100  147A  082D               	movf	?___flmul+3,w
  5101  147B  00C7               	movwf	?_fround+3
  5102  147C  082C               	movf	?___flmul+2,w
  5103  147D  00C6               	movwf	?_fround+2
  5104  147E  082B               	movf	?___flmul+1,w
  5105  147F  00C5               	movwf	?_fround+1
  5106  1480  082A               	movf	?___flmul,w
  5107  1481  00C4               	movwf	?_fround
  5108  1482  2D77               	goto	l279
  5109  1483                     l2927:	
  5110  1483  300B               	movlw	11
  5111  1484  0257               	subwf	fround@prec,w
  5112  1485  1C03               	skipc
  5113  1486  2C88               	goto	u4341
  5114  1487  2C89               	goto	u4340
  5115  1488                     u4341:	
  5116  1488  2D34               	goto	l2933
  5117  1489                     u4340:	
  5118  1489                     l2929:	
  5119                           
  5120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5121  1489  303F               	movlw	63
  5122  148A  00AD               	movwf	___flmul@b+3
  5123  148B  3000               	movlw	0
  5124  148C  00AC               	movwf	___flmul@b+2
  5125  148D  3000               	movlw	0
  5126  148E  00AB               	movwf	___flmul@b+1
  5127  148F  3000               	movlw	0
  5128  1490  00AA               	movwf	___flmul@b
  5129  1491  300A               	movlw	10
  5130  1492  00A0               	movwf	___lwdiv@divisor
  5131  1493  3000               	movlw	0
  5132  1494  00A1               	movwf	___lwdiv@divisor+1
  5133  1495  0857               	movf	fround@prec,w
  5134  1496  00C8               	movwf	??_fround
  5135  1497  01C9               	clrf	??_fround+1
  5136  1498  0848               	movf	??_fround,w
  5137  1499  00A2               	movwf	___lwdiv@dividend
  5138  149A  0849               	movf	??_fround+1,w
  5139  149B  00A3               	movwf	___lwdiv@dividend+1
  5140  149C  160A  158A  22D0  160A  118A  	fcall	___lwdiv
  5141  14A1  1283               	bcf	3,5	;RP0=0, select bank0
  5142  14A2  1303               	bcf	3,6	;RP1=0, select bank0
  5143  14A3  0820               	movf	?___lwdiv,w
  5144  14A4  00CA               	movwf	??_fround+2
  5145  14A5  3001               	movlw	1
  5146  14A6                     u4355:	
  5147  14A6  1003               	clrc
  5148  14A7  0DCA               	rlf	??_fround+2,f
  5149  14A8  3EFF               	addlw	-1
  5150  14A9  1D03               	skipz
  5151  14AA  2CA6               	goto	u4355
  5152  14AB  1003               	clrc
  5153  14AC  0D4A               	rlf	??_fround+2,w
  5154  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5155  14AE  0084               	movwf	4
  5156  14AF  160A  158A  200A  160A  118A  	fcall	stringdir
  5157  14B4  00CB               	movwf	??_fround+3
  5158  14B5  160A  158A  200A  160A  118A  	fcall	stringdir
  5159  14BA  00CC               	movwf	??_fround+4
  5160  14BB  160A  158A  200A  160A  118A  	fcall	stringdir
  5161  14C0  00CD               	movwf	??_fround+5
  5162  14C1  160A  158A  200A  160A  118A  	fcall	stringdir
  5163  14C6  00CE               	movwf	??_fround+6
  5164  14C7  084E               	movf	??_fround+6,w
  5165  14C8  00B1               	movwf	___flmul@a+3
  5166  14C9  084D               	movf	??_fround+5,w
  5167  14CA  00B0               	movwf	___flmul@a+2
  5168  14CB  084C               	movf	??_fround+4,w
  5169  14CC  00AF               	movwf	___flmul@a+1
  5170  14CD  084B               	movf	??_fround+3,w
  5171  14CE  00AE               	movwf	___flmul@a
  5172  14CF  120A  158A  213C  160A  118A  	fcall	___flmul
  5173  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5174  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5175  14D6  082D               	movf	?___flmul+3,w
  5176  14D7  00D6               	movwf	_fround$1100+3
  5177  14D8  082C               	movf	?___flmul+2,w
  5178  14D9  00D5               	movwf	_fround$1100+2
  5179  14DA  082B               	movf	?___flmul+1,w
  5180  14DB  00D4               	movwf	_fround$1100+1
  5181  14DC  082A               	movf	?___flmul,w
  5182  14DD  00D3               	movwf	_fround$1100
  5183                           
  5184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5185  14DE  300A               	movlw	10
  5186  14DF  00F3               	movwf	___lwmod@divisor
  5187  14E0  3000               	movlw	0
  5188  14E1  00F4               	movwf	___lwmod@divisor+1
  5189  14E2  0857               	movf	fround@prec,w
  5190  14E3  00C8               	movwf	??_fround
  5191  14E4  01C9               	clrf	??_fround+1
  5192  14E5  0848               	movf	??_fround,w
  5193  14E6  00F5               	movwf	___lwmod@dividend
  5194  14E7  0849               	movf	??_fround+1,w
  5195  14E8  00F6               	movwf	___lwmod@dividend+1
  5196  14E9  160A  158A  2296  160A  118A  	fcall	___lwmod
  5197  14EE  0873               	movf	?___lwmod,w
  5198  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5199  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5200  14F1  00CA               	movwf	??_fround+2
  5201  14F2  3001               	movlw	1
  5202  14F3                     u4365:	
  5203  14F3  1003               	clrc
  5204  14F4  0DCA               	rlf	??_fround+2,f
  5205  14F5  3EFF               	addlw	-1
  5206  14F6  1D03               	skipz
  5207  14F7  2CF3               	goto	u4365
  5208  14F8  1003               	clrc
  5209  14F9  0D4A               	rlf	??_fround+2,w
  5210  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5211  14FB  0084               	movwf	4
  5212  14FC  160A  158A  200A  160A  118A  	fcall	stringdir
  5213  1501  00CB               	movwf	??_fround+3
  5214  1502  160A  158A  200A  160A  118A  	fcall	stringdir
  5215  1507  00CC               	movwf	??_fround+4
  5216  1508  160A  158A  200A  160A  118A  	fcall	stringdir
  5217  150D  00CD               	movwf	??_fround+5
  5218  150E  160A  158A  200A  160A  118A  	fcall	stringdir
  5219  1513  00CE               	movwf	??_fround+6
  5220  1514  084E               	movf	??_fround+6,w
  5221  1515  00AD               	movwf	___flmul@b+3
  5222  1516  084D               	movf	??_fround+5,w
  5223  1517  00AC               	movwf	___flmul@b+2
  5224  1518  084C               	movf	??_fround+4,w
  5225  1519  00AB               	movwf	___flmul@b+1
  5226  151A  084B               	movf	??_fround+3,w
  5227  151B  00AA               	movwf	___flmul@b
  5228  151C  0856               	movf	_fround$1100+3,w
  5229  151D  00B1               	movwf	___flmul@a+3
  5230  151E  0855               	movf	_fround$1100+2,w
  5231  151F  00B0               	movwf	___flmul@a+2
  5232  1520  0854               	movf	_fround$1100+1,w
  5233  1521  00AF               	movwf	___flmul@a+1
  5234  1522  0853               	movf	_fround$1100,w
  5235  1523  00AE               	movwf	___flmul@a
  5236  1524  120A  158A  213C  160A  118A  	fcall	___flmul
  5237  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5238  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5239  152B  082D               	movf	?___flmul+3,w
  5240  152C  00C7               	movwf	?_fround+3
  5241  152D  082C               	movf	?___flmul+2,w
  5242  152E  00C6               	movwf	?_fround+2
  5243  152F  082B               	movf	?___flmul+1,w
  5244  1530  00C5               	movwf	?_fround+1
  5245  1531  082A               	movf	?___flmul,w
  5246  1532  00C4               	movwf	?_fround
  5247  1533  2D77               	goto	l279
  5248  1534                     l2933:	
  5249                           
  5250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  5251  1534  303F               	movlw	63
  5252  1535  00AD               	movwf	___flmul@b+3
  5253  1536  3000               	movlw	0
  5254  1537  00AC               	movwf	___flmul@b+2
  5255  1538  3000               	movlw	0
  5256  1539  00AB               	movwf	___flmul@b+1
  5257  153A  3000               	movlw	0
  5258  153B  00AA               	movwf	___flmul@b
  5259  153C  0857               	movf	fround@prec,w
  5260  153D  00C8               	movwf	??_fround
  5261  153E  3001               	movlw	1
  5262  153F                     u4375:	
  5263  153F  1003               	clrc
  5264  1540  0DC8               	rlf	??_fround,f
  5265  1541  3EFF               	addlw	-1
  5266  1542  1D03               	skipz
  5267  1543  2D3F               	goto	u4375
  5268  1544  1003               	clrc
  5269  1545  0D48               	rlf	??_fround,w
  5270  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5271  1547  0084               	movwf	4
  5272  1548  160A  158A  200A  160A  118A  	fcall	stringdir
  5273  154D  00C9               	movwf	??_fround+1
  5274  154E  160A  158A  200A  160A  118A  	fcall	stringdir
  5275  1553  00CA               	movwf	??_fround+2
  5276  1554  160A  158A  200A  160A  118A  	fcall	stringdir
  5277  1559  00CB               	movwf	??_fround+3
  5278  155A  160A  158A  200A  160A  118A  	fcall	stringdir
  5279  155F  00CC               	movwf	??_fround+4
  5280  1560  084C               	movf	??_fround+4,w
  5281  1561  00B1               	movwf	___flmul@a+3
  5282  1562  084B               	movf	??_fround+3,w
  5283  1563  00B0               	movwf	___flmul@a+2
  5284  1564  084A               	movf	??_fround+2,w
  5285  1565  00AF               	movwf	___flmul@a+1
  5286  1566  0849               	movf	??_fround+1,w
  5287  1567  00AE               	movwf	___flmul@a
  5288  1568  120A  158A  213C  160A  118A  	fcall	___flmul
  5289  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5290  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5291  156F  082D               	movf	?___flmul+3,w
  5292  1570  00C7               	movwf	?_fround+3
  5293  1571  082C               	movf	?___flmul+2,w
  5294  1572  00C6               	movwf	?_fround+2
  5295  1573  082B               	movf	?___flmul+1,w
  5296  1574  00C5               	movwf	?_fround+1
  5297  1575  082A               	movf	?___flmul,w
  5298  1576  00C4               	movwf	?_fround
  5299  1577                     l279:	
  5300  1577  0008               	return
  5301  1578                     __end_of_fround:	
  5302                           
  5303                           	psect	text7
  5304  1A96                     __ptext7:	
  5305 ;; *************** function ___lwmod *****************
  5306 ;; Defined at:
  5307 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;  divisor         2    3[COMMON] unsigned int 
  5310 ;;  dividend        2    5[COMMON] unsigned int 
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;  counter         1    8[COMMON] unsigned char 
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  2    3[COMMON] unsigned int 
  5315 ;; Registers used:
  5316 ;;		wreg, status,2, status,0
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5322 ;;      Params:         4       0       0       0       0
  5323 ;;      Locals:         1       0       0       0       0
  5324 ;;      Temps:          1       0       0       0       0
  5325 ;;      Totals:         6       0       0       0       0
  5326 ;;Total ram usage:        6 bytes
  5327 ;; Hardware stack levels used:    1
  5328 ;; Hardware stack levels required when called:    1
  5329 ;; This function calls:
  5330 ;;		Nothing
  5331 ;; This function is called by:
  5332 ;;		_fround
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           
  5337                           ;psect for function ___lwmod
  5338  1A96                     ___lwmod:	
  5339  1A96                     l2539:	
  5340                           ;incstack = 0
  5341                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5342                           
  5343  1A96  0873               	movf	___lwmod@divisor,w
  5344  1A97  0474               	iorwf	___lwmod@divisor+1,w
  5345  1A98  1903               	btfsc	3,2
  5346  1A99  2A9B               	goto	u3411
  5347  1A9A  2A9C               	goto	u3410
  5348  1A9B                     u3411:	
  5349  1A9B  2ACB               	goto	l2557
  5350  1A9C                     u3410:	
  5351  1A9C                     l2541:	
  5352  1A9C  01F8               	clrf	___lwmod@counter
  5353  1A9D  0AF8               	incf	___lwmod@counter,f
  5354  1A9E  2AAA               	goto	l2547
  5355  1A9F                     l2543:	
  5356  1A9F  3001               	movlw	1
  5357  1AA0                     u3425:	
  5358  1AA0  1003               	clrc
  5359  1AA1  0DF3               	rlf	___lwmod@divisor,f
  5360  1AA2  0DF4               	rlf	___lwmod@divisor+1,f
  5361  1AA3  3EFF               	addlw	-1
  5362  1AA4  1D03               	skipz
  5363  1AA5  2AA0               	goto	u3425
  5364  1AA6                     l2545:	
  5365  1AA6  3001               	movlw	1
  5366  1AA7  00F7               	movwf	??___lwmod
  5367  1AA8  0877               	movf	??___lwmod,w
  5368  1AA9  07F8               	addwf	___lwmod@counter,f
  5369  1AAA                     l2547:	
  5370  1AAA  1FF4               	btfss	___lwmod@divisor+1,7
  5371  1AAB  2AAD               	goto	u3431
  5372  1AAC  2AAE               	goto	u3430
  5373  1AAD                     u3431:	
  5374  1AAD  2A9F               	goto	l2543
  5375  1AAE                     u3430:	
  5376  1AAE                     l2549:	
  5377  1AAE  0874               	movf	___lwmod@divisor+1,w
  5378  1AAF  0276               	subwf	___lwmod@dividend+1,w
  5379  1AB0  1D03               	skipz
  5380  1AB1  2AB4               	goto	u3445
  5381  1AB2  0873               	movf	___lwmod@divisor,w
  5382  1AB3  0275               	subwf	___lwmod@dividend,w
  5383  1AB4                     u3445:	
  5384  1AB4  1C03               	skipc
  5385  1AB5  2AB7               	goto	u3441
  5386  1AB6  2AB8               	goto	u3440
  5387  1AB7                     u3441:	
  5388  1AB7  2ABE               	goto	l2553
  5389  1AB8                     u3440:	
  5390  1AB8                     l2551:	
  5391  1AB8  0873               	movf	___lwmod@divisor,w
  5392  1AB9  02F5               	subwf	___lwmod@dividend,f
  5393  1ABA  0874               	movf	___lwmod@divisor+1,w
  5394  1ABB  1C03               	skipc
  5395  1ABC  03F6               	decf	___lwmod@dividend+1,f
  5396  1ABD  02F6               	subwf	___lwmod@dividend+1,f
  5397  1ABE                     l2553:	
  5398  1ABE  3001               	movlw	1
  5399  1ABF                     u3455:	
  5400  1ABF  1003               	clrc
  5401  1AC0  0CF4               	rrf	___lwmod@divisor+1,f
  5402  1AC1  0CF3               	rrf	___lwmod@divisor,f
  5403  1AC2  3EFF               	addlw	-1
  5404  1AC3  1D03               	skipz
  5405  1AC4  2ABF               	goto	u3455
  5406  1AC5                     l2555:	
  5407  1AC5  3001               	movlw	1
  5408  1AC6  02F8               	subwf	___lwmod@counter,f
  5409  1AC7  1D03               	btfss	3,2
  5410  1AC8  2ACA               	goto	u3461
  5411  1AC9  2ACB               	goto	u3460
  5412  1ACA                     u3461:	
  5413  1ACA  2AAE               	goto	l2549
  5414  1ACB                     u3460:	
  5415  1ACB                     l2557:	
  5416  1ACB  0876               	movf	___lwmod@dividend+1,w
  5417  1ACC  00F4               	movwf	?___lwmod+1
  5418  1ACD  0875               	movf	___lwmod@dividend,w
  5419  1ACE  00F3               	movwf	?___lwmod
  5420  1ACF                     l672:	
  5421  1ACF  0008               	return
  5422  1AD0                     __end_of___lwmod:	
  5423                           
  5424                           	psect	text8
  5425  1AD0                     __ptext8:	
  5426 ;; *************** function ___lwdiv *****************
  5427 ;; Defined at:
  5428 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5429 ;; Parameters:    Size  Location     Type
  5430 ;;  divisor         2    0[BANK0 ] unsigned int 
  5431 ;;  dividend        2    2[BANK0 ] unsigned int 
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;  quotient        2    4[BANK0 ] unsigned int 
  5434 ;;  counter         1    6[BANK0 ] unsigned char 
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  2    0[BANK0 ] unsigned int 
  5437 ;; Registers used:
  5438 ;;		wreg, status,2, status,0
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5444 ;;      Params:         0       4       0       0       0
  5445 ;;      Locals:         0       3       0       0       0
  5446 ;;      Temps:          1       0       0       0       0
  5447 ;;      Totals:         1       7       0       0       0
  5448 ;;Total ram usage:        8 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:    1
  5451 ;; This function calls:
  5452 ;;		Nothing
  5453 ;; This function is called by:
  5454 ;;		_fround
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           
  5459                           ;psect for function ___lwdiv
  5460  1AD0                     ___lwdiv:	
  5461  1AD0                     l2513:	
  5462                           ;incstack = 0
  5463                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5464                           
  5465  1AD0  1283               	bcf	3,5	;RP0=0, select bank0
  5466  1AD1  1303               	bcf	3,6	;RP1=0, select bank0
  5467  1AD2  01A4               	clrf	___lwdiv@quotient
  5468  1AD3  01A5               	clrf	___lwdiv@quotient+1
  5469  1AD4                     l2515:	
  5470  1AD4  0820               	movf	___lwdiv@divisor,w
  5471  1AD5  0421               	iorwf	___lwdiv@divisor+1,w
  5472  1AD6  1903               	btfsc	3,2
  5473  1AD7  2AD9               	goto	u3341
  5474  1AD8  2ADA               	goto	u3340
  5475  1AD9                     u3341:	
  5476  1AD9  2B11               	goto	l2535
  5477  1ADA                     u3340:	
  5478  1ADA                     l2517:	
  5479  1ADA  01A6               	clrf	___lwdiv@counter
  5480  1ADB  0AA6               	incf	___lwdiv@counter,f
  5481  1ADC  2AE8               	goto	l2523
  5482  1ADD                     l2519:	
  5483  1ADD  3001               	movlw	1
  5484  1ADE                     u3355:	
  5485  1ADE  1003               	clrc
  5486  1ADF  0DA0               	rlf	___lwdiv@divisor,f
  5487  1AE0  0DA1               	rlf	___lwdiv@divisor+1,f
  5488  1AE1  3EFF               	addlw	-1
  5489  1AE2  1D03               	skipz
  5490  1AE3  2ADE               	goto	u3355
  5491  1AE4                     l2521:	
  5492  1AE4  3001               	movlw	1
  5493  1AE5  00F9               	movwf	??___lwdiv
  5494  1AE6  0879               	movf	??___lwdiv,w
  5495  1AE7  07A6               	addwf	___lwdiv@counter,f
  5496  1AE8                     l2523:	
  5497  1AE8  1FA1               	btfss	___lwdiv@divisor+1,7
  5498  1AE9  2AEB               	goto	u3361
  5499  1AEA  2AEC               	goto	u3360
  5500  1AEB                     u3361:	
  5501  1AEB  2ADD               	goto	l2519
  5502  1AEC                     u3360:	
  5503  1AEC                     l2525:	
  5504  1AEC  3001               	movlw	1
  5505  1AED                     u3375:	
  5506  1AED  1003               	clrc
  5507  1AEE  0DA4               	rlf	___lwdiv@quotient,f
  5508  1AEF  0DA5               	rlf	___lwdiv@quotient+1,f
  5509  1AF0  3EFF               	addlw	-1
  5510  1AF1  1D03               	skipz
  5511  1AF2  2AED               	goto	u3375
  5512  1AF3  0821               	movf	___lwdiv@divisor+1,w
  5513  1AF4  0223               	subwf	___lwdiv@dividend+1,w
  5514  1AF5  1D03               	skipz
  5515  1AF6  2AF9               	goto	u3385
  5516  1AF7  0820               	movf	___lwdiv@divisor,w
  5517  1AF8  0222               	subwf	___lwdiv@dividend,w
  5518  1AF9                     u3385:	
  5519  1AF9  1C03               	skipc
  5520  1AFA  2AFC               	goto	u3381
  5521  1AFB  2AFD               	goto	u3380
  5522  1AFC                     u3381:	
  5523  1AFC  2B04               	goto	l2531
  5524  1AFD                     u3380:	
  5525  1AFD                     l2527:	
  5526  1AFD  0820               	movf	___lwdiv@divisor,w
  5527  1AFE  02A2               	subwf	___lwdiv@dividend,f
  5528  1AFF  0821               	movf	___lwdiv@divisor+1,w
  5529  1B00  1C03               	skipc
  5530  1B01  03A3               	decf	___lwdiv@dividend+1,f
  5531  1B02  02A3               	subwf	___lwdiv@dividend+1,f
  5532  1B03                     l2529:	
  5533  1B03  1424               	bsf	___lwdiv@quotient,0
  5534  1B04                     l2531:	
  5535  1B04  3001               	movlw	1
  5536  1B05                     u3395:	
  5537  1B05  1003               	clrc
  5538  1B06  0CA1               	rrf	___lwdiv@divisor+1,f
  5539  1B07  0CA0               	rrf	___lwdiv@divisor,f
  5540  1B08  3EFF               	addlw	-1
  5541  1B09  1D03               	skipz
  5542  1B0A  2B05               	goto	u3395
  5543  1B0B                     l2533:	
  5544  1B0B  3001               	movlw	1
  5545  1B0C  02A6               	subwf	___lwdiv@counter,f
  5546  1B0D  1D03               	btfss	3,2
  5547  1B0E  2B10               	goto	u3401
  5548  1B0F  2B11               	goto	u3400
  5549  1B10                     u3401:	
  5550  1B10  2AEC               	goto	l2525
  5551  1B11                     u3400:	
  5552  1B11                     l2535:	
  5553  1B11  0825               	movf	___lwdiv@quotient+1,w
  5554  1B12  00A1               	movwf	?___lwdiv+1
  5555  1B13  0824               	movf	___lwdiv@quotient,w
  5556  1B14  00A0               	movwf	?___lwdiv
  5557  1B15                     l662:	
  5558  1B15  0008               	return
  5559  1B16                     __end_of___lwdiv:	
  5560                           
  5561                           	psect	text9
  5562  093C                     __ptext9:	
  5563 ;; *************** function ___flmul *****************
  5564 ;; Defined at:
  5565 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;  b               4   10[BANK0 ] unsigned int 
  5568 ;;  a               4   14[BANK0 ] unsigned int 
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;  prod            4   30[BANK0 ] struct .
  5571 ;;  grs             4   24[BANK0 ] unsigned long 
  5572 ;;  temp            2   34[BANK0 ] struct .
  5573 ;;  bexp            1   29[BANK0 ] unsigned char 
  5574 ;;  aexp            1   28[BANK0 ] unsigned char 
  5575 ;;  sign            1   23[BANK0 ] unsigned char 
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  4   10[BANK0 ] unsigned char 
  5578 ;; Registers used:
  5579 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5585 ;;      Params:         0       8       0       0       0
  5586 ;;      Locals:         0      13       0       0       0
  5587 ;;      Temps:          0       5       0       0       0
  5588 ;;      Totals:         0      26       0       0       0
  5589 ;;Total ram usage:       26 bytes
  5590 ;; Hardware stack levels used:    1
  5591 ;; Hardware stack levels required when called:    2
  5592 ;; This function calls:
  5593 ;;		__Umul8_16
  5594 ;; This function is called by:
  5595 ;;		_main
  5596 ;;		_fround
  5597 ;;		_scale
  5598 ;;		_sprintf
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           
  5603                           ;psect for function ___flmul
  5604  093C                     ___flmul:	
  5605  093C                     l2755:	
  5606                           ;incstack = 0
  5607                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5608                           
  5609  093C  1283               	bcf	3,5	;RP0=0, select bank0
  5610  093D  1303               	bcf	3,6	;RP1=0, select bank0
  5611  093E  082D               	movf	___flmul@b+3,w
  5612  093F  3980               	andlw	128
  5613  0940  00B2               	movwf	??___flmul
  5614  0941  0832               	movf	??___flmul,w
  5615  0942  00B7               	movwf	___flmul@sign
  5616  0943                     l2757:	
  5617  0943  082D               	movf	___flmul@b+3,w
  5618  0944  00B2               	movwf	??___flmul
  5619  0945  0732               	addwf	??___flmul,w
  5620  0946  00B3               	movwf	??___flmul+1
  5621  0947  0833               	movf	??___flmul+1,w
  5622  0948  00BD               	movwf	___flmul@bexp
  5623  0949                     l2759:	
  5624  0949  1FAC               	btfss	___flmul@b+2,7
  5625  094A  294C               	goto	u3931
  5626  094B  294D               	goto	u3930
  5627  094C                     u3931:	
  5628  094C  294E               	goto	l2763
  5629  094D                     u3930:	
  5630  094D                     l2761:	
  5631  094D  143D               	bsf	___flmul@bexp,0
  5632  094E                     l2763:	
  5633  094E  083D               	movf	___flmul@bexp,w
  5634  094F  1903               	btfsc	3,2
  5635  0950  2952               	goto	u3941
  5636  0951  2953               	goto	u3940
  5637  0952                     u3941:	
  5638  0952  2962               	goto	l2771
  5639  0953                     u3940:	
  5640  0953                     l2765:	
  5641  0953  0A3D               	incf	___flmul@bexp,w
  5642  0954  1D03               	btfss	3,2
  5643  0955  2957               	goto	u3951
  5644  0956  2958               	goto	u3950
  5645  0957                     u3951:	
  5646  0957  2960               	goto	l2769
  5647  0958                     u3950:	
  5648  0958                     l2767:	
  5649  0958  3000               	movlw	0
  5650  0959  00AD               	movwf	___flmul@b+3
  5651  095A  3000               	movlw	0
  5652  095B  00AC               	movwf	___flmul@b+2
  5653  095C  3000               	movlw	0
  5654  095D  00AB               	movwf	___flmul@b+1
  5655  095E  3000               	movlw	0
  5656  095F  00AA               	movwf	___flmul@b
  5657  0960                     l2769:	
  5658  0960  17AC               	bsf	___flmul@b+2,7
  5659  0961  296A               	goto	l2773
  5660  0962                     l2771:	
  5661  0962  3000               	movlw	0
  5662  0963  00AD               	movwf	___flmul@b+3
  5663  0964  3000               	movlw	0
  5664  0965  00AC               	movwf	___flmul@b+2
  5665  0966  3000               	movlw	0
  5666  0967  00AB               	movwf	___flmul@b+1
  5667  0968  3000               	movlw	0
  5668  0969  00AA               	movwf	___flmul@b
  5669  096A                     l2773:	
  5670  096A  0831               	movf	___flmul@a+3,w
  5671  096B  3980               	andlw	128
  5672  096C  00B2               	movwf	??___flmul
  5673  096D  0832               	movf	??___flmul,w
  5674  096E  06B7               	xorwf	___flmul@sign,f
  5675  096F                     l2775:	
  5676  096F  0831               	movf	___flmul@a+3,w
  5677  0970  00B2               	movwf	??___flmul
  5678  0971  0732               	addwf	??___flmul,w
  5679  0972  00B3               	movwf	??___flmul+1
  5680  0973  0833               	movf	??___flmul+1,w
  5681  0974  00BC               	movwf	___flmul@aexp
  5682  0975                     l2777:	
  5683  0975  1FB0               	btfss	___flmul@a+2,7
  5684  0976  2978               	goto	u3961
  5685  0977  2979               	goto	u3960
  5686  0978                     u3961:	
  5687  0978  297A               	goto	l2781
  5688  0979                     u3960:	
  5689  0979                     l2779:	
  5690  0979  143C               	bsf	___flmul@aexp,0
  5691  097A                     l2781:	
  5692  097A  083C               	movf	___flmul@aexp,w
  5693  097B  1903               	btfsc	3,2
  5694  097C  297E               	goto	u3971
  5695  097D  297F               	goto	u3970
  5696  097E                     u3971:	
  5697  097E  298E               	goto	l2789
  5698  097F                     u3970:	
  5699  097F                     l2783:	
  5700  097F  0A3C               	incf	___flmul@aexp,w
  5701  0980  1D03               	btfss	3,2
  5702  0981  2983               	goto	u3981
  5703  0982  2984               	goto	u3980
  5704  0983                     u3981:	
  5705  0983  298C               	goto	l2787
  5706  0984                     u3980:	
  5707  0984                     l2785:	
  5708  0984  3000               	movlw	0
  5709  0985  00B1               	movwf	___flmul@a+3
  5710  0986  3000               	movlw	0
  5711  0987  00B0               	movwf	___flmul@a+2
  5712  0988  3000               	movlw	0
  5713  0989  00AF               	movwf	___flmul@a+1
  5714  098A  3000               	movlw	0
  5715  098B  00AE               	movwf	___flmul@a
  5716  098C                     l2787:	
  5717  098C  17B0               	bsf	___flmul@a+2,7
  5718  098D  2996               	goto	l2791
  5719  098E                     l2789:	
  5720  098E  3000               	movlw	0
  5721  098F  00B1               	movwf	___flmul@a+3
  5722  0990  3000               	movlw	0
  5723  0991  00B0               	movwf	___flmul@a+2
  5724  0992  3000               	movlw	0
  5725  0993  00AF               	movwf	___flmul@a+1
  5726  0994  3000               	movlw	0
  5727  0995  00AE               	movwf	___flmul@a
  5728  0996                     l2791:	
  5729  0996  083C               	movf	___flmul@aexp,w
  5730  0997  1903               	btfsc	3,2
  5731  0998  299A               	goto	u3991
  5732  0999  299B               	goto	u3990
  5733  099A                     u3991:	
  5734  099A  29A0               	goto	l2795
  5735  099B                     u3990:	
  5736  099B                     l2793:	
  5737  099B  083D               	movf	___flmul@bexp,w
  5738  099C  1D03               	btfss	3,2
  5739  099D  299F               	goto	u4001
  5740  099E  29A0               	goto	u4000
  5741  099F                     u4001:	
  5742  099F  29A9               	goto	l2799
  5743  09A0                     u4000:	
  5744  09A0                     l2795:	
  5745  09A0  3000               	movlw	0
  5746  09A1  00AD               	movwf	?___flmul+3
  5747  09A2  3000               	movlw	0
  5748  09A3  00AC               	movwf	?___flmul+2
  5749  09A4  3000               	movlw	0
  5750  09A5  00AB               	movwf	?___flmul+1
  5751  09A6  3000               	movlw	0
  5752  09A7  00AA               	movwf	?___flmul
  5753  09A8  2C9C               	goto	l779
  5754  09A9                     l2799:	
  5755  09A9  082A               	movf	___flmul@b,w
  5756  09AA  00B2               	movwf	??___flmul
  5757  09AB  0832               	movf	??___flmul,w
  5758  09AC  00F3               	movwf	__Umul8_16@multiplicand
  5759  09AD  0830               	movf	___flmul@a+2,w
  5760  09AE  160A  158A  226D  120A  158A  	fcall	__Umul8_16
  5761  09B3  0874               	movf	?__Umul8_16+1,w
  5762  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  5763  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  5764  09B6  00C3               	movwf	___flmul@temp+1
  5765  09B7  0873               	movf	?__Umul8_16,w
  5766  09B8  00C2               	movwf	___flmul@temp
  5767  09B9                     l2801:	
  5768  09B9  0842               	movf	___flmul@temp,w
  5769  09BA  00B2               	movwf	??___flmul
  5770  09BB  01B3               	clrf	??___flmul+1
  5771  09BC  01B4               	clrf	??___flmul+2
  5772  09BD  01B5               	clrf	??___flmul+3
  5773  09BE  0835               	movf	??___flmul+3,w
  5774  09BF  00BB               	movwf	___flmul@grs+3
  5775  09C0  0834               	movf	??___flmul+2,w
  5776  09C1  00BA               	movwf	___flmul@grs+2
  5777  09C2  0833               	movf	??___flmul+1,w
  5778  09C3  00B9               	movwf	___flmul@grs+1
  5779  09C4  0832               	movf	??___flmul,w
  5780  09C5  00B8               	movwf	___flmul@grs
  5781  09C6                     l2803:	
  5782  09C6  0843               	movf	___flmul@temp+1,w
  5783  09C7  00B2               	movwf	??___flmul
  5784  09C8  01B3               	clrf	??___flmul+1
  5785  09C9  01B4               	clrf	??___flmul+2
  5786  09CA  01B5               	clrf	??___flmul+3
  5787  09CB  0835               	movf	??___flmul+3,w
  5788  09CC  00C1               	movwf	___flmul@prod+3
  5789  09CD  0834               	movf	??___flmul+2,w
  5790  09CE  00C0               	movwf	___flmul@prod+2
  5791  09CF  0833               	movf	??___flmul+1,w
  5792  09D0  00BF               	movwf	___flmul@prod+1
  5793  09D1  0832               	movf	??___flmul,w
  5794  09D2  00BE               	movwf	___flmul@prod
  5795  09D3  082B               	movf	___flmul@b+1,w
  5796  09D4  00B2               	movwf	??___flmul
  5797  09D5  0832               	movf	??___flmul,w
  5798  09D6  00F3               	movwf	__Umul8_16@multiplicand
  5799  09D7  082F               	movf	___flmul@a+1,w
  5800  09D8  160A  158A  226D  120A  158A  	fcall	__Umul8_16
  5801  09DD  0874               	movf	?__Umul8_16+1,w
  5802  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  5803  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  5804  09E0  00C3               	movwf	___flmul@temp+1
  5805  09E1  0873               	movf	?__Umul8_16,w
  5806  09E2  00C2               	movwf	___flmul@temp
  5807  09E3                     l2805:	
  5808  09E3  0842               	movf	___flmul@temp,w
  5809  09E4  00B2               	movwf	??___flmul
  5810  09E5  01B3               	clrf	??___flmul+1
  5811  09E6  01B4               	clrf	??___flmul+2
  5812  09E7  01B5               	clrf	??___flmul+3
  5813  09E8  0832               	movf	??___flmul,w
  5814  09E9  07B8               	addwf	___flmul@grs,f
  5815  09EA  0833               	movf	??___flmul+1,w
  5816  09EB  1103               	clrz
  5817  09EC  1803               	skipnc
  5818  09ED  3E01               	addlw	1
  5819  09EE  1903               	skipnz
  5820  09EF  29F1               	goto	u4011
  5821  09F0  07B9               	addwf	___flmul@grs+1,f
  5822  09F1                     u4011:	
  5823  09F1  0834               	movf	??___flmul+2,w
  5824  09F2  1103               	clrz
  5825  09F3  1803               	skipnc
  5826  09F4  3E01               	addlw	1
  5827  09F5  1903               	skipnz
  5828  09F6  29F8               	goto	u4012
  5829  09F7  07BA               	addwf	___flmul@grs+2,f
  5830  09F8                     u4012:	
  5831  09F8  0835               	movf	??___flmul+3,w
  5832  09F9  1103               	clrz
  5833  09FA  1803               	skipnc
  5834  09FB  3E01               	addlw	1
  5835  09FC  1903               	skipnz
  5836  09FD  29FF               	goto	u4013
  5837  09FE  07BB               	addwf	___flmul@grs+3,f
  5838  09FF                     u4013:	
  5839  09FF                     l2807:	
  5840  09FF  0843               	movf	___flmul@temp+1,w
  5841  0A00  00B2               	movwf	??___flmul
  5842  0A01  01B3               	clrf	??___flmul+1
  5843  0A02  01B4               	clrf	??___flmul+2
  5844  0A03  01B5               	clrf	??___flmul+3
  5845  0A04  0832               	movf	??___flmul,w
  5846  0A05  07BE               	addwf	___flmul@prod,f
  5847  0A06  0833               	movf	??___flmul+1,w
  5848  0A07  1103               	clrz
  5849  0A08  1803               	skipnc
  5850  0A09  3E01               	addlw	1
  5851  0A0A  1903               	skipnz
  5852  0A0B  2A0D               	goto	u4021
  5853  0A0C  07BF               	addwf	___flmul@prod+1,f
  5854  0A0D                     u4021:	
  5855  0A0D  0834               	movf	??___flmul+2,w
  5856  0A0E  1103               	clrz
  5857  0A0F  1803               	skipnc
  5858  0A10  3E01               	addlw	1
  5859  0A11  1903               	skipnz
  5860  0A12  2A14               	goto	u4022
  5861  0A13  07C0               	addwf	___flmul@prod+2,f
  5862  0A14                     u4022:	
  5863  0A14  0835               	movf	??___flmul+3,w
  5864  0A15  1103               	clrz
  5865  0A16  1803               	skipnc
  5866  0A17  3E01               	addlw	1
  5867  0A18  1903               	skipnz
  5868  0A19  2A1B               	goto	u4023
  5869  0A1A  07C1               	addwf	___flmul@prod+3,f
  5870  0A1B                     u4023:	
  5871  0A1B  082C               	movf	___flmul@b+2,w
  5872  0A1C  00B2               	movwf	??___flmul
  5873  0A1D  0832               	movf	??___flmul,w
  5874  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  5875  0A1F  082E               	movf	___flmul@a,w
  5876  0A20  160A  158A  226D  120A  158A  	fcall	__Umul8_16
  5877  0A25  0874               	movf	?__Umul8_16+1,w
  5878  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  5879  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  5880  0A28  00C3               	movwf	___flmul@temp+1
  5881  0A29  0873               	movf	?__Umul8_16,w
  5882  0A2A  00C2               	movwf	___flmul@temp
  5883  0A2B                     l2809:	
  5884  0A2B  0842               	movf	___flmul@temp,w
  5885  0A2C  00B2               	movwf	??___flmul
  5886  0A2D  01B3               	clrf	??___flmul+1
  5887  0A2E  01B4               	clrf	??___flmul+2
  5888  0A2F  01B5               	clrf	??___flmul+3
  5889  0A30  0832               	movf	??___flmul,w
  5890  0A31  07B8               	addwf	___flmul@grs,f
  5891  0A32  0833               	movf	??___flmul+1,w
  5892  0A33  1103               	clrz
  5893  0A34  1803               	skipnc
  5894  0A35  3E01               	addlw	1
  5895  0A36  1903               	skipnz
  5896  0A37  2A39               	goto	u4031
  5897  0A38  07B9               	addwf	___flmul@grs+1,f
  5898  0A39                     u4031:	
  5899  0A39  0834               	movf	??___flmul+2,w
  5900  0A3A  1103               	clrz
  5901  0A3B  1803               	skipnc
  5902  0A3C  3E01               	addlw	1
  5903  0A3D  1903               	skipnz
  5904  0A3E  2A40               	goto	u4032
  5905  0A3F  07BA               	addwf	___flmul@grs+2,f
  5906  0A40                     u4032:	
  5907  0A40  0835               	movf	??___flmul+3,w
  5908  0A41  1103               	clrz
  5909  0A42  1803               	skipnc
  5910  0A43  3E01               	addlw	1
  5911  0A44  1903               	skipnz
  5912  0A45  2A47               	goto	u4033
  5913  0A46  07BB               	addwf	___flmul@grs+3,f
  5914  0A47                     u4033:	
  5915  0A47                     l2811:	
  5916  0A47  0843               	movf	___flmul@temp+1,w
  5917  0A48  00B2               	movwf	??___flmul
  5918  0A49  01B3               	clrf	??___flmul+1
  5919  0A4A  01B4               	clrf	??___flmul+2
  5920  0A4B  01B5               	clrf	??___flmul+3
  5921  0A4C  0832               	movf	??___flmul,w
  5922  0A4D  07BE               	addwf	___flmul@prod,f
  5923  0A4E  0833               	movf	??___flmul+1,w
  5924  0A4F  1103               	clrz
  5925  0A50  1803               	skipnc
  5926  0A51  3E01               	addlw	1
  5927  0A52  1903               	skipnz
  5928  0A53  2A55               	goto	u4041
  5929  0A54  07BF               	addwf	___flmul@prod+1,f
  5930  0A55                     u4041:	
  5931  0A55  0834               	movf	??___flmul+2,w
  5932  0A56  1103               	clrz
  5933  0A57  1803               	skipnc
  5934  0A58  3E01               	addlw	1
  5935  0A59  1903               	skipnz
  5936  0A5A  2A5C               	goto	u4042
  5937  0A5B  07C0               	addwf	___flmul@prod+2,f
  5938  0A5C                     u4042:	
  5939  0A5C  0835               	movf	??___flmul+3,w
  5940  0A5D  1103               	clrz
  5941  0A5E  1803               	skipnc
  5942  0A5F  3E01               	addlw	1
  5943  0A60  1903               	skipnz
  5944  0A61  2A63               	goto	u4043
  5945  0A62  07C1               	addwf	___flmul@prod+3,f
  5946  0A63                     u4043:	
  5947  0A63                     l2813:	
  5948  0A63  3008               	movlw	8
  5949  0A64  00B2               	movwf	??___flmul
  5950  0A65                     u4055:	
  5951  0A65  1003               	clrc
  5952  0A66  0DB8               	rlf	___flmul@grs,f
  5953  0A67  0DB9               	rlf	___flmul@grs+1,f
  5954  0A68  0DBA               	rlf	___flmul@grs+2,f
  5955  0A69  0DBB               	rlf	___flmul@grs+3,f
  5956  0A6A  0BB2               	decfsz	??___flmul,f
  5957  0A6B  2A65               	goto	u4055
  5958  0A6C                     l2815:	
  5959  0A6C  082B               	movf	___flmul@b+1,w
  5960  0A6D  00B2               	movwf	??___flmul
  5961  0A6E  0832               	movf	??___flmul,w
  5962  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  5963  0A70  082E               	movf	___flmul@a,w
  5964  0A71  160A  158A  226D  120A  158A  	fcall	__Umul8_16
  5965  0A76  0874               	movf	?__Umul8_16+1,w
  5966  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  5967  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  5968  0A79  00C3               	movwf	___flmul@temp+1
  5969  0A7A  0873               	movf	?__Umul8_16,w
  5970  0A7B  00C2               	movwf	___flmul@temp
  5971  0A7C                     l2817:	
  5972  0A7C  0842               	movf	___flmul@temp,w
  5973  0A7D  00B2               	movwf	??___flmul
  5974  0A7E  0843               	movf	___flmul@temp+1,w
  5975  0A7F  00B3               	movwf	??___flmul+1
  5976  0A80  01B4               	clrf	??___flmul+2
  5977  0A81  01B5               	clrf	??___flmul+3
  5978  0A82  0832               	movf	??___flmul,w
  5979  0A83  07B8               	addwf	___flmul@grs,f
  5980  0A84  0833               	movf	??___flmul+1,w
  5981  0A85  1103               	clrz
  5982  0A86  1803               	skipnc
  5983  0A87  3E01               	addlw	1
  5984  0A88  1903               	skipnz
  5985  0A89  2A8B               	goto	u4061
  5986  0A8A  07B9               	addwf	___flmul@grs+1,f
  5987  0A8B                     u4061:	
  5988  0A8B  0834               	movf	??___flmul+2,w
  5989  0A8C  1103               	clrz
  5990  0A8D  1803               	skipnc
  5991  0A8E  3E01               	addlw	1
  5992  0A8F  1903               	skipnz
  5993  0A90  2A92               	goto	u4062
  5994  0A91  07BA               	addwf	___flmul@grs+2,f
  5995  0A92                     u4062:	
  5996  0A92  0835               	movf	??___flmul+3,w
  5997  0A93  1103               	clrz
  5998  0A94  1803               	skipnc
  5999  0A95  3E01               	addlw	1
  6000  0A96  1903               	skipnz
  6001  0A97  2A99               	goto	u4063
  6002  0A98  07BB               	addwf	___flmul@grs+3,f
  6003  0A99                     u4063:	
  6004  0A99                     l2819:	
  6005  0A99  082A               	movf	___flmul@b,w
  6006  0A9A  00B2               	movwf	??___flmul
  6007  0A9B  0832               	movf	??___flmul,w
  6008  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  6009  0A9D  082F               	movf	___flmul@a+1,w
  6010  0A9E  160A  158A  226D  120A  158A  	fcall	__Umul8_16
  6011  0AA3  0874               	movf	?__Umul8_16+1,w
  6012  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  6013  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  6014  0AA6  00C3               	movwf	___flmul@temp+1
  6015  0AA7  0873               	movf	?__Umul8_16,w
  6016  0AA8  00C2               	movwf	___flmul@temp
  6017  0AA9                     l2821:	
  6018  0AA9  0842               	movf	___flmul@temp,w
  6019  0AAA  00B2               	movwf	??___flmul
  6020  0AAB  0843               	movf	___flmul@temp+1,w
  6021  0AAC  00B3               	movwf	??___flmul+1
  6022  0AAD  01B4               	clrf	??___flmul+2
  6023  0AAE  01B5               	clrf	??___flmul+3
  6024  0AAF  0832               	movf	??___flmul,w
  6025  0AB0  07B8               	addwf	___flmul@grs,f
  6026  0AB1  0833               	movf	??___flmul+1,w
  6027  0AB2  1103               	clrz
  6028  0AB3  1803               	skipnc
  6029  0AB4  3E01               	addlw	1
  6030  0AB5  1903               	skipnz
  6031  0AB6  2AB8               	goto	u4071
  6032  0AB7  07B9               	addwf	___flmul@grs+1,f
  6033  0AB8                     u4071:	
  6034  0AB8  0834               	movf	??___flmul+2,w
  6035  0AB9  1103               	clrz
  6036  0ABA  1803               	skipnc
  6037  0ABB  3E01               	addlw	1
  6038  0ABC  1903               	skipnz
  6039  0ABD  2ABF               	goto	u4072
  6040  0ABE  07BA               	addwf	___flmul@grs+2,f
  6041  0ABF                     u4072:	
  6042  0ABF  0835               	movf	??___flmul+3,w
  6043  0AC0  1103               	clrz
  6044  0AC1  1803               	skipnc
  6045  0AC2  3E01               	addlw	1
  6046  0AC3  1903               	skipnz
  6047  0AC4  2AC6               	goto	u4073
  6048  0AC5  07BB               	addwf	___flmul@grs+3,f
  6049  0AC6                     u4073:	
  6050  0AC6                     l2823:	
  6051  0AC6  3008               	movlw	8
  6052  0AC7  00B2               	movwf	??___flmul
  6053  0AC8                     u4085:	
  6054  0AC8  1003               	clrc
  6055  0AC9  0DB8               	rlf	___flmul@grs,f
  6056  0ACA  0DB9               	rlf	___flmul@grs+1,f
  6057  0ACB  0DBA               	rlf	___flmul@grs+2,f
  6058  0ACC  0DBB               	rlf	___flmul@grs+3,f
  6059  0ACD  0BB2               	decfsz	??___flmul,f
  6060  0ACE  2AC8               	goto	u4085
  6061  0ACF  082A               	movf	___flmul@b,w
  6062  0AD0  00B2               	movwf	??___flmul
  6063  0AD1  0832               	movf	??___flmul,w
  6064  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  6065  0AD3  082E               	movf	___flmul@a,w
  6066  0AD4  160A  158A  226D  120A  158A  	fcall	__Umul8_16
  6067  0AD9  0874               	movf	?__Umul8_16+1,w
  6068  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  6069  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  6070  0ADC  00C3               	movwf	___flmul@temp+1
  6071  0ADD  0873               	movf	?__Umul8_16,w
  6072  0ADE  00C2               	movwf	___flmul@temp
  6073  0ADF                     l2825:	
  6074  0ADF  0842               	movf	___flmul@temp,w
  6075  0AE0  00B2               	movwf	??___flmul
  6076  0AE1  0843               	movf	___flmul@temp+1,w
  6077  0AE2  00B3               	movwf	??___flmul+1
  6078  0AE3  01B4               	clrf	??___flmul+2
  6079  0AE4  01B5               	clrf	??___flmul+3
  6080  0AE5  0832               	movf	??___flmul,w
  6081  0AE6  07B8               	addwf	___flmul@grs,f
  6082  0AE7  0833               	movf	??___flmul+1,w
  6083  0AE8  1103               	clrz
  6084  0AE9  1803               	skipnc
  6085  0AEA  3E01               	addlw	1
  6086  0AEB  1903               	skipnz
  6087  0AEC  2AEE               	goto	u4091
  6088  0AED  07B9               	addwf	___flmul@grs+1,f
  6089  0AEE                     u4091:	
  6090  0AEE  0834               	movf	??___flmul+2,w
  6091  0AEF  1103               	clrz
  6092  0AF0  1803               	skipnc
  6093  0AF1  3E01               	addlw	1
  6094  0AF2  1903               	skipnz
  6095  0AF3  2AF5               	goto	u4092
  6096  0AF4  07BA               	addwf	___flmul@grs+2,f
  6097  0AF5                     u4092:	
  6098  0AF5  0835               	movf	??___flmul+3,w
  6099  0AF6  1103               	clrz
  6100  0AF7  1803               	skipnc
  6101  0AF8  3E01               	addlw	1
  6102  0AF9  1903               	skipnz
  6103  0AFA  2AFC               	goto	u4093
  6104  0AFB  07BB               	addwf	___flmul@grs+3,f
  6105  0AFC                     u4093:	
  6106  0AFC                     l2827:	
  6107  0AFC  082B               	movf	___flmul@b+1,w
  6108  0AFD  00B2               	movwf	??___flmul
  6109  0AFE  0832               	movf	??___flmul,w
  6110  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  6111  0B00  0830               	movf	___flmul@a+2,w
  6112  0B01  160A  158A  226D  120A  158A  	fcall	__Umul8_16
  6113  0B06  0874               	movf	?__Umul8_16+1,w
  6114  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  6115  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  6116  0B09  00C3               	movwf	___flmul@temp+1
  6117  0B0A  0873               	movf	?__Umul8_16,w
  6118  0B0B  00C2               	movwf	___flmul@temp
  6119  0B0C  0842               	movf	___flmul@temp,w
  6120  0B0D  00B2               	movwf	??___flmul
  6121  0B0E  0843               	movf	___flmul@temp+1,w
  6122  0B0F  00B3               	movwf	??___flmul+1
  6123  0B10  01B4               	clrf	??___flmul+2
  6124  0B11  01B5               	clrf	??___flmul+3
  6125  0B12  0832               	movf	??___flmul,w
  6126  0B13  07BE               	addwf	___flmul@prod,f
  6127  0B14  0833               	movf	??___flmul+1,w
  6128  0B15  1103               	clrz
  6129  0B16  1803               	skipnc
  6130  0B17  3E01               	addlw	1
  6131  0B18  1903               	skipnz
  6132  0B19  2B1B               	goto	u4101
  6133  0B1A  07BF               	addwf	___flmul@prod+1,f
  6134  0B1B                     u4101:	
  6135  0B1B  0834               	movf	??___flmul+2,w
  6136  0B1C  1103               	clrz
  6137  0B1D  1803               	skipnc
  6138  0B1E  3E01               	addlw	1
  6139  0B1F  1903               	skipnz
  6140  0B20  2B22               	goto	u4102
  6141  0B21  07C0               	addwf	___flmul@prod+2,f
  6142  0B22                     u4102:	
  6143  0B22  0835               	movf	??___flmul+3,w
  6144  0B23  1103               	clrz
  6145  0B24  1803               	skipnc
  6146  0B25  3E01               	addlw	1
  6147  0B26  1903               	skipnz
  6148  0B27  2B29               	goto	u4103
  6149  0B28  07C1               	addwf	___flmul@prod+3,f
  6150  0B29                     u4103:	
  6151  0B29                     l2829:	
  6152  0B29  082C               	movf	___flmul@b+2,w
  6153  0B2A  00B2               	movwf	??___flmul
  6154  0B2B  0832               	movf	??___flmul,w
  6155  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  6156  0B2D  082F               	movf	___flmul@a+1,w
  6157  0B2E  160A  158A  226D  120A  158A  	fcall	__Umul8_16
  6158  0B33  0874               	movf	?__Umul8_16+1,w
  6159  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  6160  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  6161  0B36  00C3               	movwf	___flmul@temp+1
  6162  0B37  0873               	movf	?__Umul8_16,w
  6163  0B38  00C2               	movwf	___flmul@temp
  6164  0B39                     l2831:	
  6165  0B39  0842               	movf	___flmul@temp,w
  6166  0B3A  00B2               	movwf	??___flmul
  6167  0B3B  0843               	movf	___flmul@temp+1,w
  6168  0B3C  00B3               	movwf	??___flmul+1
  6169  0B3D  01B4               	clrf	??___flmul+2
  6170  0B3E  01B5               	clrf	??___flmul+3
  6171  0B3F  0832               	movf	??___flmul,w
  6172  0B40  07BE               	addwf	___flmul@prod,f
  6173  0B41  0833               	movf	??___flmul+1,w
  6174  0B42  1103               	clrz
  6175  0B43  1803               	skipnc
  6176  0B44  3E01               	addlw	1
  6177  0B45  1903               	skipnz
  6178  0B46  2B48               	goto	u4111
  6179  0B47  07BF               	addwf	___flmul@prod+1,f
  6180  0B48                     u4111:	
  6181  0B48  0834               	movf	??___flmul+2,w
  6182  0B49  1103               	clrz
  6183  0B4A  1803               	skipnc
  6184  0B4B  3E01               	addlw	1
  6185  0B4C  1903               	skipnz
  6186  0B4D  2B4F               	goto	u4112
  6187  0B4E  07C0               	addwf	___flmul@prod+2,f
  6188  0B4F                     u4112:	
  6189  0B4F  0835               	movf	??___flmul+3,w
  6190  0B50  1103               	clrz
  6191  0B51  1803               	skipnc
  6192  0B52  3E01               	addlw	1
  6193  0B53  1903               	skipnz
  6194  0B54  2B56               	goto	u4113
  6195  0B55  07C1               	addwf	___flmul@prod+3,f
  6196  0B56                     u4113:	
  6197  0B56  082C               	movf	___flmul@b+2,w
  6198  0B57  00B2               	movwf	??___flmul
  6199  0B58  0832               	movf	??___flmul,w
  6200  0B59  00F3               	movwf	__Umul8_16@multiplicand
  6201  0B5A  0830               	movf	___flmul@a+2,w
  6202  0B5B  160A  158A  226D  120A  158A  	fcall	__Umul8_16
  6203  0B60  0874               	movf	?__Umul8_16+1,w
  6204  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  6205  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  6206  0B63  00C3               	movwf	___flmul@temp+1
  6207  0B64  0873               	movf	?__Umul8_16,w
  6208  0B65  00C2               	movwf	___flmul@temp
  6209  0B66                     l2833:	
  6210  0B66  0842               	movf	___flmul@temp,w
  6211  0B67  00B2               	movwf	??___flmul
  6212  0B68  0843               	movf	___flmul@temp+1,w
  6213  0B69  00B3               	movwf	??___flmul+1
  6214  0B6A  01B4               	clrf	??___flmul+2
  6215  0B6B  01B5               	clrf	??___flmul+3
  6216  0B6C  3008               	movlw	8
  6217  0B6D                     u4125:	
  6218  0B6D  1003               	clrc
  6219  0B6E  0DB2               	rlf	??___flmul,f
  6220  0B6F  0DB3               	rlf	??___flmul+1,f
  6221  0B70  0DB4               	rlf	??___flmul+2,f
  6222  0B71  0DB5               	rlf	??___flmul+3,f
  6223  0B72                     u4120:	
  6224  0B72  3EFF               	addlw	-1
  6225  0B73  1D03               	skipz
  6226  0B74  2B6D               	goto	u4125
  6227  0B75  0832               	movf	??___flmul,w
  6228  0B76  07BE               	addwf	___flmul@prod,f
  6229  0B77  0833               	movf	??___flmul+1,w
  6230  0B78  1103               	clrz
  6231  0B79  1803               	skipnc
  6232  0B7A  3E01               	addlw	1
  6233  0B7B  1903               	skipnz
  6234  0B7C  2B7E               	goto	u4131
  6235  0B7D  07BF               	addwf	___flmul@prod+1,f
  6236  0B7E                     u4131:	
  6237  0B7E  0834               	movf	??___flmul+2,w
  6238  0B7F  1103               	clrz
  6239  0B80  1803               	skipnc
  6240  0B81  3E01               	addlw	1
  6241  0B82  1903               	skipnz
  6242  0B83  2B85               	goto	u4132
  6243  0B84  07C0               	addwf	___flmul@prod+2,f
  6244  0B85                     u4132:	
  6245  0B85  0835               	movf	??___flmul+3,w
  6246  0B86  1103               	clrz
  6247  0B87  1803               	skipnc
  6248  0B88  3E01               	addlw	1
  6249  0B89  1903               	skipnz
  6250  0B8A  2B8C               	goto	u4133
  6251  0B8B  07C1               	addwf	___flmul@prod+3,f
  6252  0B8C                     u4133:	
  6253  0B8C                     l2835:	
  6254  0B8C  0838               	movf	___flmul@grs,w
  6255  0B8D  00B2               	movwf	??___flmul
  6256  0B8E  0839               	movf	___flmul@grs+1,w
  6257  0B8F  00B3               	movwf	??___flmul+1
  6258  0B90  083A               	movf	___flmul@grs+2,w
  6259  0B91  00B4               	movwf	??___flmul+2
  6260  0B92  083B               	movf	___flmul@grs+3,w
  6261  0B93  00B5               	movwf	??___flmul+3
  6262  0B94  3018               	movlw	24
  6263  0B95                     u4145:	
  6264  0B95  1003               	clrc
  6265  0B96  0CB5               	rrf	??___flmul+3,f
  6266  0B97  0CB4               	rrf	??___flmul+2,f
  6267  0B98  0CB3               	rrf	??___flmul+1,f
  6268  0B99  0CB2               	rrf	??___flmul,f
  6269  0B9A                     u4140:	
  6270  0B9A  3EFF               	addlw	-1
  6271  0B9B  1D03               	skipz
  6272  0B9C  2B95               	goto	u4145
  6273  0B9D  0832               	movf	??___flmul,w
  6274  0B9E  07BE               	addwf	___flmul@prod,f
  6275  0B9F  0833               	movf	??___flmul+1,w
  6276  0BA0  1103               	clrz
  6277  0BA1  1803               	skipnc
  6278  0BA2  3E01               	addlw	1
  6279  0BA3  1903               	skipnz
  6280  0BA4  2BA6               	goto	u4151
  6281  0BA5  07BF               	addwf	___flmul@prod+1,f
  6282  0BA6                     u4151:	
  6283  0BA6  0834               	movf	??___flmul+2,w
  6284  0BA7  1103               	clrz
  6285  0BA8  1803               	skipnc
  6286  0BA9  3E01               	addlw	1
  6287  0BAA  1903               	skipnz
  6288  0BAB  2BAD               	goto	u4152
  6289  0BAC  07C0               	addwf	___flmul@prod+2,f
  6290  0BAD                     u4152:	
  6291  0BAD  0835               	movf	??___flmul+3,w
  6292  0BAE  1103               	clrz
  6293  0BAF  1803               	skipnc
  6294  0BB0  3E01               	addlw	1
  6295  0BB1  1903               	skipnz
  6296  0BB2  2BB4               	goto	u4153
  6297  0BB3  07C1               	addwf	___flmul@prod+3,f
  6298  0BB4                     u4153:	
  6299  0BB4                     l2837:	
  6300  0BB4  3008               	movlw	8
  6301  0BB5  00B2               	movwf	??___flmul
  6302  0BB6                     u4165:	
  6303  0BB6  1003               	clrc
  6304  0BB7  0DB8               	rlf	___flmul@grs,f
  6305  0BB8  0DB9               	rlf	___flmul@grs+1,f
  6306  0BB9  0DBA               	rlf	___flmul@grs+2,f
  6307  0BBA  0DBB               	rlf	___flmul@grs+3,f
  6308  0BBB  0BB2               	decfsz	??___flmul,f
  6309  0BBC  2BB6               	goto	u4165
  6310  0BBD                     l2839:	
  6311  0BBD  083D               	movf	___flmul@bexp,w
  6312  0BBE  073C               	addwf	___flmul@aexp,w
  6313  0BBF  00B2               	movwf	??___flmul
  6314  0BC0  01B3               	clrf	??___flmul+1
  6315  0BC1  0DB3               	rlf	??___flmul+1,f
  6316  0BC2  0832               	movf	??___flmul,w
  6317  0BC3  3E82               	addlw	130
  6318  0BC4  00C2               	movwf	___flmul@temp
  6319  0BC5  0833               	movf	??___flmul+1,w
  6320  0BC6  1803               	skipnc
  6321  0BC7  3E01               	addlw	1
  6322  0BC8  3EFF               	addlw	255
  6323  0BC9  00C3               	movwf	___flmul@temp+1
  6324  0BCA  2BE8               	goto	l2851
  6325  0BCB                     l2841:	
  6326  0BCB  3001               	movlw	1
  6327  0BCC  00B2               	movwf	??___flmul
  6328  0BCD                     u4175:	
  6329  0BCD  1003               	clrc
  6330  0BCE  0DBE               	rlf	___flmul@prod,f
  6331  0BCF  0DBF               	rlf	___flmul@prod+1,f
  6332  0BD0  0DC0               	rlf	___flmul@prod+2,f
  6333  0BD1  0DC1               	rlf	___flmul@prod+3,f
  6334  0BD2  0BB2               	decfsz	??___flmul,f
  6335  0BD3  2BCD               	goto	u4175
  6336  0BD4                     l2843:	
  6337  0BD4  1FBB               	btfss	___flmul@grs+3,7
  6338  0BD5  2BD7               	goto	u4181
  6339  0BD6  2BD8               	goto	u4180
  6340  0BD7                     u4181:	
  6341  0BD7  2BD9               	goto	l2847
  6342  0BD8                     u4180:	
  6343  0BD8                     l2845:	
  6344  0BD8  143E               	bsf	___flmul@prod,0
  6345  0BD9                     l2847:	
  6346  0BD9  3001               	movlw	1
  6347  0BDA  00B2               	movwf	??___flmul
  6348  0BDB                     u4195:	
  6349  0BDB  1003               	clrc
  6350  0BDC  0DB8               	rlf	___flmul@grs,f
  6351  0BDD  0DB9               	rlf	___flmul@grs+1,f
  6352  0BDE  0DBA               	rlf	___flmul@grs+2,f
  6353  0BDF  0DBB               	rlf	___flmul@grs+3,f
  6354  0BE0  0BB2               	decfsz	??___flmul,f
  6355  0BE1  2BDB               	goto	u4195
  6356  0BE2                     l2849:	
  6357  0BE2  30FF               	movlw	255
  6358  0BE3  07C2               	addwf	___flmul@temp,f
  6359  0BE4  1803               	skipnc
  6360  0BE5  0AC3               	incf	___flmul@temp+1,f
  6361  0BE6  30FF               	movlw	255
  6362  0BE7  07C3               	addwf	___flmul@temp+1,f
  6363  0BE8                     l2851:	
  6364  0BE8  1FC0               	btfss	___flmul@prod+2,7
  6365  0BE9  2BEB               	goto	u4201
  6366  0BEA  2BEC               	goto	u4200
  6367  0BEB                     u4201:	
  6368  0BEB  2BCB               	goto	l2841
  6369  0BEC                     u4200:	
  6370  0BEC                     l2853:	
  6371  0BEC  01BC               	clrf	___flmul@aexp
  6372  0BED                     l2855:	
  6373  0BED  1FBB               	btfss	___flmul@grs+3,7
  6374  0BEE  2BF0               	goto	u4211
  6375  0BEF  2BF1               	goto	u4210
  6376  0BF0                     u4211:	
  6377  0BF0  2C0D               	goto	l2863
  6378  0BF1                     u4210:	
  6379  0BF1                     l2857:	
  6380  0BF1  30FF               	movlw	255
  6381  0BF2  0538               	andwf	___flmul@grs,w
  6382  0BF3  00B2               	movwf	??___flmul
  6383  0BF4  30FF               	movlw	255
  6384  0BF5  0539               	andwf	___flmul@grs+1,w
  6385  0BF6  00B3               	movwf	??___flmul+1
  6386  0BF7  30FF               	movlw	255
  6387  0BF8  053A               	andwf	___flmul@grs+2,w
  6388  0BF9  00B4               	movwf	??___flmul+2
  6389  0BFA  307F               	movlw	127
  6390  0BFB  053B               	andwf	___flmul@grs+3,w
  6391  0BFC  00B5               	movwf	??___flmul+3
  6392  0BFD  0835               	movf	??___flmul+3,w
  6393  0BFE  0434               	iorwf	??___flmul+2,w
  6394  0BFF  0433               	iorwf	??___flmul+1,w
  6395  0C00  0432               	iorwf	??___flmul,w
  6396  0C01  1903               	skipnz
  6397  0C02  2C04               	goto	u4221
  6398  0C03  2C05               	goto	u4220
  6399  0C04                     u4221:	
  6400  0C04  2C08               	goto	l785
  6401  0C05                     u4220:	
  6402  0C05                     l2859:	
  6403  0C05  01BC               	clrf	___flmul@aexp
  6404  0C06  0ABC               	incf	___flmul@aexp,f
  6405  0C07  2C0D               	goto	l2863
  6406  0C08                     l785:	
  6407  0C08  1C3E               	btfss	___flmul@prod,0
  6408  0C09  2C0B               	goto	u4231
  6409  0C0A  2C0C               	goto	u4230
  6410  0C0B                     u4231:	
  6411  0C0B  2C0D               	goto	l2863
  6412  0C0C                     u4230:	
  6413  0C0C  2C05               	goto	l2859
  6414  0C0D                     l2863:	
  6415  0C0D  083C               	movf	___flmul@aexp,w
  6416  0C0E  1903               	btfsc	3,2
  6417  0C0F  2C11               	goto	u4241
  6418  0C10  2C12               	goto	u4240
  6419  0C11                     u4241:	
  6420  0C11  2C43               	goto	l2873
  6421  0C12                     u4240:	
  6422  0C12                     l2865:	
  6423  0C12  3001               	movlw	1
  6424  0C13  07BE               	addwf	___flmul@prod,f
  6425  0C14  3000               	movlw	0
  6426  0C15  1803               	skipnc
  6427  0C16  3001               	movlw	1
  6428  0C17  07BF               	addwf	___flmul@prod+1,f
  6429  0C18  3000               	movlw	0
  6430  0C19  1803               	skipnc
  6431  0C1A  3001               	movlw	1
  6432  0C1B  07C0               	addwf	___flmul@prod+2,f
  6433  0C1C  3000               	movlw	0
  6434  0C1D  1803               	skipnc
  6435  0C1E  3001               	movlw	1
  6436  0C1F  07C1               	addwf	___flmul@prod+3,f
  6437  0C20                     l2867:	
  6438  0C20  1C41               	btfss	___flmul@prod+3,0
  6439  0C21  2C23               	goto	u4251
  6440  0C22  2C24               	goto	u4250
  6441  0C23                     u4251:	
  6442  0C23  2C43               	goto	l2873
  6443  0C24                     u4250:	
  6444  0C24                     l2869:	
  6445  0C24  083E               	movf	___flmul@prod,w
  6446  0C25  00B2               	movwf	??___flmul
  6447  0C26  083F               	movf	___flmul@prod+1,w
  6448  0C27  00B3               	movwf	??___flmul+1
  6449  0C28  0840               	movf	___flmul@prod+2,w
  6450  0C29  00B4               	movwf	??___flmul+2
  6451  0C2A  0841               	movf	___flmul@prod+3,w
  6452  0C2B  00B5               	movwf	??___flmul+3
  6453  0C2C  3001               	movlw	1
  6454  0C2D  00B6               	movwf	??___flmul+4
  6455  0C2E                     u4265:	
  6456  0C2E  0D35               	rlf	??___flmul+3,w
  6457  0C2F  0CB5               	rrf	??___flmul+3,f
  6458  0C30  0CB4               	rrf	??___flmul+2,f
  6459  0C31  0CB3               	rrf	??___flmul+1,f
  6460  0C32  0CB2               	rrf	??___flmul,f
  6461  0C33                     u4260:	
  6462  0C33  0BB6               	decfsz	??___flmul+4,f
  6463  0C34  2C2E               	goto	u4265
  6464  0C35  0835               	movf	??___flmul+3,w
  6465  0C36  00C1               	movwf	___flmul@prod+3
  6466  0C37  0834               	movf	??___flmul+2,w
  6467  0C38  00C0               	movwf	___flmul@prod+2
  6468  0C39  0833               	movf	??___flmul+1,w
  6469  0C3A  00BF               	movwf	___flmul@prod+1
  6470  0C3B  0832               	movf	??___flmul,w
  6471  0C3C  00BE               	movwf	___flmul@prod
  6472  0C3D                     l2871:	
  6473  0C3D  3001               	movlw	1
  6474  0C3E  07C2               	addwf	___flmul@temp,f
  6475  0C3F  1803               	skipnc
  6476  0C40  0AC3               	incf	___flmul@temp+1,f
  6477  0C41  3000               	movlw	0
  6478  0C42  07C3               	addwf	___flmul@temp+1,f
  6479  0C43                     l2873:	
  6480  0C43  0843               	movf	___flmul@temp+1,w
  6481  0C44  3A80               	xorlw	128
  6482  0C45  00FF               	movwf	btemp+1
  6483  0C46  3080               	movlw	128
  6484  0C47  027F               	subwf	btemp+1,w
  6485  0C48  1D03               	skipz
  6486  0C49  2C4C               	goto	u4275
  6487  0C4A  30FF               	movlw	255
  6488  0C4B  0242               	subwf	___flmul@temp,w
  6489  0C4C                     u4275:	
  6490  0C4C  1C03               	skipc
  6491  0C4D  2C4F               	goto	u4271
  6492  0C4E  2C50               	goto	u4270
  6493  0C4F                     u4271:	
  6494  0C4F  2C5B               	goto	l2877
  6495  0C50                     u4270:	
  6496  0C50                     l2875:	
  6497  0C50  307F               	movlw	127
  6498  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  6499  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  6500  0C53  00C1               	movwf	___flmul@prod+3
  6501  0C54  3080               	movlw	128
  6502  0C55  00C0               	movwf	___flmul@prod+2
  6503  0C56  3000               	movlw	0
  6504  0C57  00BF               	movwf	___flmul@prod+1
  6505  0C58  3000               	movlw	0
  6506  0C59  00BE               	movwf	___flmul@prod
  6507  0C5A  2C90               	goto	l791
  6508  0C5B                     l2877:	
  6509  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  6510  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  6511  0C5D  0843               	movf	___flmul@temp+1,w
  6512  0C5E  3A80               	xorlw	128
  6513  0C5F  00FF               	movwf	btemp+1
  6514  0C60  3080               	movlw	128
  6515  0C61  027F               	subwf	btemp+1,w
  6516  0C62  1D03               	skipz
  6517  0C63  2C66               	goto	u4285
  6518  0C64  3001               	movlw	1
  6519  0C65  0242               	subwf	___flmul@temp,w
  6520  0C66                     u4285:	
  6521  0C66  1803               	skipnc
  6522  0C67  2C69               	goto	u4281
  6523  0C68  2C6A               	goto	u4280
  6524  0C69                     u4281:	
  6525  0C69  2C76               	goto	l2883
  6526  0C6A                     u4280:	
  6527  0C6A                     l2879:	
  6528  0C6A  3000               	movlw	0
  6529  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6530  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  6531  0C6D  00C1               	movwf	___flmul@prod+3
  6532  0C6E  3000               	movlw	0
  6533  0C6F  00C0               	movwf	___flmul@prod+2
  6534  0C70  3000               	movlw	0
  6535  0C71  00BF               	movwf	___flmul@prod+1
  6536  0C72  3000               	movlw	0
  6537  0C73  00BE               	movwf	___flmul@prod
  6538  0C74                     l2881:	
  6539  0C74  01B7               	clrf	___flmul@sign
  6540  0C75  2C90               	goto	l791
  6541  0C76                     l2883:	
  6542  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  6543  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  6544  0C78  0842               	movf	___flmul@temp,w
  6545  0C79  00B2               	movwf	??___flmul
  6546  0C7A  0832               	movf	??___flmul,w
  6547  0C7B  00BD               	movwf	___flmul@bexp
  6548  0C7C  30FF               	movlw	255
  6549  0C7D  05BE               	andwf	___flmul@prod,f
  6550  0C7E  30FF               	movlw	255
  6551  0C7F  05BF               	andwf	___flmul@prod+1,f
  6552  0C80  307F               	movlw	127
  6553  0C81  05C0               	andwf	___flmul@prod+2,f
  6554  0C82  3000               	movlw	0
  6555  0C83  05C1               	andwf	___flmul@prod+3,f
  6556  0C84                     l2885:	
  6557  0C84  1C3D               	btfss	___flmul@bexp,0
  6558  0C85  2C87               	goto	u4291
  6559  0C86  2C88               	goto	u4290
  6560  0C87                     u4291:	
  6561  0C87  2C89               	goto	l2889
  6562  0C88                     u4290:	
  6563  0C88                     l2887:	
  6564  0C88  17C0               	bsf	___flmul@prod+2,7
  6565  0C89                     l2889:	
  6566  0C89  083D               	movf	___flmul@bexp,w
  6567  0C8A  00B2               	movwf	??___flmul
  6568  0C8B  1003               	clrc
  6569  0C8C  0C32               	rrf	??___flmul,w
  6570  0C8D  00B3               	movwf	??___flmul+1
  6571  0C8E  0833               	movf	??___flmul+1,w
  6572  0C8F  00C1               	movwf	___flmul@prod+3
  6573  0C90                     l791:	
  6574  0C90  0837               	movf	___flmul@sign,w
  6575  0C91  00B2               	movwf	??___flmul
  6576  0C92  0832               	movf	??___flmul,w
  6577  0C93  04C1               	iorwf	___flmul@prod+3,f
  6578  0C94                     l2891:	
  6579  0C94  0841               	movf	___flmul@prod+3,w
  6580  0C95  00AD               	movwf	?___flmul+3
  6581  0C96  0840               	movf	___flmul@prod+2,w
  6582  0C97  00AC               	movwf	?___flmul+2
  6583  0C98  083F               	movf	___flmul@prod+1,w
  6584  0C99  00AB               	movwf	?___flmul+1
  6585  0C9A  083E               	movf	___flmul@prod,w
  6586  0C9B  00AA               	movwf	?___flmul
  6587  0C9C                     l779:	
  6588  0C9C  0008               	return
  6589  0C9D                     __end_of___flmul:	
  6590                           
  6591                           	psect	text10
  6592  1A6D                     __ptext10:	
  6593 ;; *************** function __Umul8_16 *****************
  6594 ;; Defined at:
  6595 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;  multiplier      1    wreg     unsigned char 
  6598 ;;  multiplicand    1    3[COMMON] unsigned char 
  6599 ;; Auto vars:     Size  Location     Type
  6600 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6601 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6602 ;;  product         2    0[BANK0 ] unsigned int 
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  2    3[COMMON] unsigned int 
  6605 ;; Registers used:
  6606 ;;		wreg, status,2, status,0
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6612 ;;      Params:         2       0       0       0       0
  6613 ;;      Locals:         0       5       0       0       0
  6614 ;;      Temps:          2       0       0       0       0
  6615 ;;      Totals:         4       5       0       0       0
  6616 ;;Total ram usage:        9 bytes
  6617 ;; Hardware stack levels used:    1
  6618 ;; Hardware stack levels required when called:    1
  6619 ;; This function calls:
  6620 ;;		Nothing
  6621 ;; This function is called by:
  6622 ;;		___flmul
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           
  6626                           
  6627                           ;psect for function __Umul8_16
  6628  1A6D                     __Umul8_16:	
  6629                           
  6630                           ;incstack = 0
  6631                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6632                           ;__Umul8_16@multiplier stored from wreg
  6633  1A6D  1283               	bcf	3,5	;RP0=0, select bank0
  6634  1A6E  1303               	bcf	3,6	;RP1=0, select bank0
  6635  1A6F  00A4               	movwf	__Umul8_16@multiplier
  6636  1A70                     l2407:	
  6637  1A70  01A0               	clrf	__Umul8_16@product
  6638  1A71  01A1               	clrf	__Umul8_16@product+1
  6639  1A72                     l2409:	
  6640  1A72  0873               	movf	__Umul8_16@multiplicand,w
  6641  1A73  00F5               	movwf	??__Umul8_16
  6642  1A74  01F6               	clrf	??__Umul8_16+1
  6643  1A75  0875               	movf	??__Umul8_16,w
  6644  1A76  00A2               	movwf	__Umul8_16@word_mpld
  6645  1A77  0876               	movf	??__Umul8_16+1,w
  6646  1A78  00A3               	movwf	__Umul8_16@word_mpld+1
  6647  1A79                     l2411:	
  6648  1A79  1C24               	btfss	__Umul8_16@multiplier,0
  6649  1A7A  2A7C               	goto	u3111
  6650  1A7B  2A7D               	goto	u3110
  6651  1A7C                     u3111:	
  6652  1A7C  2A83               	goto	l845
  6653  1A7D                     u3110:	
  6654  1A7D                     l2413:	
  6655  1A7D  0822               	movf	__Umul8_16@word_mpld,w
  6656  1A7E  07A0               	addwf	__Umul8_16@product,f
  6657  1A7F  1803               	skipnc
  6658  1A80  0AA1               	incf	__Umul8_16@product+1,f
  6659  1A81  0823               	movf	__Umul8_16@word_mpld+1,w
  6660  1A82  07A1               	addwf	__Umul8_16@product+1,f
  6661  1A83                     l845:	
  6662  1A83  3001               	movlw	1
  6663  1A84                     u3125:	
  6664  1A84  1003               	clrc
  6665  1A85  0DA2               	rlf	__Umul8_16@word_mpld,f
  6666  1A86  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6667  1A87  3EFF               	addlw	-1
  6668  1A88  1D03               	skipz
  6669  1A89  2A84               	goto	u3125
  6670  1A8A  1003               	clrc
  6671  1A8B  0CA4               	rrf	__Umul8_16@multiplier,f
  6672  1A8C                     l2415:	
  6673  1A8C  0824               	movf	__Umul8_16@multiplier,w
  6674  1A8D  1D03               	btfss	3,2
  6675  1A8E  2A90               	goto	u3131
  6676  1A8F  2A91               	goto	u3130
  6677  1A90                     u3131:	
  6678  1A90  2A79               	goto	l2411
  6679  1A91                     u3130:	
  6680  1A91                     l2417:	
  6681  1A91  0821               	movf	__Umul8_16@product+1,w
  6682  1A92  00F4               	movwf	?__Umul8_16+1
  6683  1A93  0820               	movf	__Umul8_16@product,w
  6684  1A94  00F3               	movwf	?__Umul8_16
  6685  1A95                     l847:	
  6686  1A95  0008               	return
  6687  1A96                     __end_of__Umul8_16:	
  6688                           
  6689                           	psect	text11
  6690  1011                     __ptext11:	
  6691 ;; *************** function __tdiv_to_l_ *****************
  6692 ;; Defined at:
  6693 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdivl.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;  f1              4    0[BANK0 ] float 
  6696 ;;  f2              4    4[BANK0 ] float 
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;  quot            4    8[BANK0 ] unsigned long 
  6699 ;;  exp1            1   13[BANK0 ] unsigned char 
  6700 ;;  cntr            1   12[BANK0 ] unsigned char 
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  4    0[BANK0 ] unsigned long 
  6703 ;; Registers used:
  6704 ;;		wreg, status,2, status,0
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6710 ;;      Params:         0       8       0       0       0
  6711 ;;      Locals:         0       6       0       0       0
  6712 ;;      Temps:          4       0       0       0       0
  6713 ;;      Totals:         4      14       0       0       0
  6714 ;;Total ram usage:       18 bytes
  6715 ;; Hardware stack levels used:    1
  6716 ;; Hardware stack levels required when called:    1
  6717 ;; This function calls:
  6718 ;;		Nothing
  6719 ;; This function is called by:
  6720 ;;		_sprintf
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           
  6725                           ;psect for function __tdiv_to_l_
  6726  1011                     __tdiv_to_l_:	
  6727  1011                     l3981:	
  6728                           ;incstack = 0
  6729                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6730                           
  6731  1011  1283               	bcf	3,5	;RP0=0, select bank0
  6732  1012  1303               	bcf	3,6	;RP1=0, select bank0
  6733  1013  0820               	movf	__tdiv_to_l_@f1,w
  6734  1014  00F3               	movwf	??__tdiv_to_l_
  6735  1015  0821               	movf	__tdiv_to_l_@f1+1,w
  6736  1016  00F4               	movwf	??__tdiv_to_l_+1
  6737  1017  0822               	movf	__tdiv_to_l_@f1+2,w
  6738  1018  00F5               	movwf	??__tdiv_to_l_+2
  6739  1019  1003               	clrc
  6740  101A  0D74               	rlf	??__tdiv_to_l_+1,w
  6741  101B  0D75               	rlf	??__tdiv_to_l_+2,w
  6742  101C  00F6               	movwf	??__tdiv_to_l_+3
  6743  101D  0876               	movf	??__tdiv_to_l_+3,w
  6744  101E  00AD               	movwf	__tdiv_to_l_@exp1
  6745  101F  082D               	movf	__tdiv_to_l_@exp1,w
  6746  1020  1D03               	btfss	3,2
  6747  1021  2823               	goto	u6481
  6748  1022  2824               	goto	u6480
  6749  1023                     u6481:	
  6750  1023  282D               	goto	l3987
  6751  1024                     u6480:	
  6752  1024                     l3983:	
  6753  1024  3000               	movlw	0
  6754  1025  00A3               	movwf	?__tdiv_to_l_+3
  6755  1026  3000               	movlw	0
  6756  1027  00A2               	movwf	?__tdiv_to_l_+2
  6757  1028  3000               	movlw	0
  6758  1029  00A1               	movwf	?__tdiv_to_l_+1
  6759  102A  3000               	movlw	0
  6760  102B  00A0               	movwf	?__tdiv_to_l_
  6761  102C  28CD               	goto	l573
  6762  102D                     l3987:	
  6763  102D  0824               	movf	__tdiv_to_l_@f2,w
  6764  102E  00F3               	movwf	??__tdiv_to_l_
  6765  102F  0825               	movf	__tdiv_to_l_@f2+1,w
  6766  1030  00F4               	movwf	??__tdiv_to_l_+1
  6767  1031  0826               	movf	__tdiv_to_l_@f2+2,w
  6768  1032  00F5               	movwf	??__tdiv_to_l_+2
  6769  1033  1003               	clrc
  6770  1034  0D74               	rlf	??__tdiv_to_l_+1,w
  6771  1035  0D75               	rlf	??__tdiv_to_l_+2,w
  6772  1036  00F6               	movwf	??__tdiv_to_l_+3
  6773  1037  0876               	movf	??__tdiv_to_l_+3,w
  6774  1038  00AC               	movwf	__tdiv_to_l_@cntr
  6775  1039  082C               	movf	__tdiv_to_l_@cntr,w
  6776  103A  1D03               	btfss	3,2
  6777  103B  283D               	goto	u6491
  6778  103C  283E               	goto	u6490
  6779  103D                     u6491:	
  6780  103D  283F               	goto	l574
  6781  103E                     u6490:	
  6782  103E  2824               	goto	l3983
  6783  103F                     l574:	
  6784  103F  17A1               	bsf	__tdiv_to_l_@f1+1,7
  6785  1040                     l3993:	
  6786  1040  30FF               	movlw	255
  6787  1041  05A0               	andwf	__tdiv_to_l_@f1,f
  6788  1042  30FF               	movlw	255
  6789  1043  05A1               	andwf	__tdiv_to_l_@f1+1,f
  6790  1044  3000               	movlw	0
  6791  1045  05A2               	andwf	__tdiv_to_l_@f1+2,f
  6792  1046                     l3995:	
  6793  1046  17A5               	bsf	__tdiv_to_l_@f2+1,7
  6794  1047  30FF               	movlw	255
  6795  1048  05A4               	andwf	__tdiv_to_l_@f2,f
  6796  1049  30FF               	movlw	255
  6797  104A  05A5               	andwf	__tdiv_to_l_@f2+1,f
  6798  104B  3000               	movlw	0
  6799  104C  05A6               	andwf	__tdiv_to_l_@f2+2,f
  6800  104D  3000               	movlw	0
  6801  104E  00AB               	movwf	__tdiv_to_l_@quot+3
  6802  104F  3000               	movlw	0
  6803  1050  00AA               	movwf	__tdiv_to_l_@quot+2
  6804  1051  3000               	movlw	0
  6805  1052  00A9               	movwf	__tdiv_to_l_@quot+1
  6806  1053  3000               	movlw	0
  6807  1054  00A8               	movwf	__tdiv_to_l_@quot
  6808  1055                     l3997:	
  6809  1055  307F               	movlw	127
  6810  1056  02AD               	subwf	__tdiv_to_l_@exp1,f
  6811  1057                     l3999:	
  6812  1057  3098               	movlw	152
  6813  1058  072C               	addwf	__tdiv_to_l_@cntr,w
  6814  1059  00F3               	movwf	??__tdiv_to_l_
  6815  105A  0873               	movf	??__tdiv_to_l_,w
  6816  105B  02AD               	subwf	__tdiv_to_l_@exp1,f
  6817  105C  3018               	movlw	24
  6818  105D  00F3               	movwf	??__tdiv_to_l_
  6819  105E  0873               	movf	??__tdiv_to_l_,w
  6820  105F  00AC               	movwf	__tdiv_to_l_@cntr
  6821  1060                     l4001:	
  6822  1060  3001               	movlw	1
  6823  1061  00F3               	movwf	??__tdiv_to_l_
  6824  1062                     u6505:	
  6825  1062  1003               	clrc
  6826  1063  0DA8               	rlf	__tdiv_to_l_@quot,f
  6827  1064  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  6828  1065  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  6829  1066  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  6830  1067  0BF3               	decfsz	??__tdiv_to_l_,f
  6831  1068  2862               	goto	u6505
  6832  1069                     l4003:	
  6833  1069  0826               	movf	__tdiv_to_l_@f2+2,w
  6834  106A  0222               	subwf	__tdiv_to_l_@f1+2,w
  6835  106B  1D03               	skipz
  6836  106C  2873               	goto	u6515
  6837  106D  0825               	movf	__tdiv_to_l_@f2+1,w
  6838  106E  0221               	subwf	__tdiv_to_l_@f1+1,w
  6839  106F  1D03               	skipz
  6840  1070  2873               	goto	u6515
  6841  1071  0824               	movf	__tdiv_to_l_@f2,w
  6842  1072  0220               	subwf	__tdiv_to_l_@f1,w
  6843  1073                     u6515:	
  6844  1073  1C03               	skipc
  6845  1074  2876               	goto	u6511
  6846  1075  2877               	goto	u6510
  6847  1076                     u6511:	
  6848  1076  2882               	goto	l4009
  6849  1077                     u6510:	
  6850  1077                     l4005:	
  6851  1077  0824               	movf	__tdiv_to_l_@f2,w
  6852  1078  02A0               	subwf	__tdiv_to_l_@f1,f
  6853  1079  0825               	movf	__tdiv_to_l_@f2+1,w
  6854  107A  1C03               	skipc
  6855  107B  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  6856  107C  02A1               	subwf	__tdiv_to_l_@f1+1,f
  6857  107D  0826               	movf	__tdiv_to_l_@f2+2,w
  6858  107E  1C03               	skipc
  6859  107F  0A26               	incf	__tdiv_to_l_@f2+2,w
  6860  1080  02A2               	subwf	__tdiv_to_l_@f1+2,f
  6861  1081                     l4007:	
  6862  1081  1428               	bsf	__tdiv_to_l_@quot,0
  6863  1082                     l4009:	
  6864  1082  3001               	movlw	1
  6865  1083                     u6525:	
  6866  1083  1003               	clrc
  6867  1084  0DA0               	rlf	__tdiv_to_l_@f1,f
  6868  1085  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  6869  1086  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  6870  1087  3EFF               	addlw	-1
  6871  1088  1D03               	skipz
  6872  1089  2883               	goto	u6525
  6873  108A                     l4011:	
  6874  108A  3001               	movlw	1
  6875  108B  02AC               	subwf	__tdiv_to_l_@cntr,f
  6876  108C  1D03               	btfss	3,2
  6877  108D  288F               	goto	u6531
  6878  108E  2890               	goto	u6530
  6879  108F                     u6531:	
  6880  108F  2860               	goto	l4001
  6881  1090                     u6530:	
  6882  1090                     l577:	
  6883  1090  1FAD               	btfss	__tdiv_to_l_@exp1,7
  6884  1091  2893               	goto	u6541
  6885  1092  2894               	goto	u6540
  6886  1093                     u6541:	
  6887  1093  28AE               	goto	l4021
  6888  1094                     u6540:	
  6889  1094                     l4013:	
  6890  1094  082D               	movf	__tdiv_to_l_@exp1,w
  6891  1095  3A80               	xorlw	128
  6892  1096  3E97               	addlw	151
  6893  1097  1803               	skipnc
  6894  1098  289A               	goto	u6551
  6895  1099  289B               	goto	u6550
  6896  109A                     u6551:	
  6897  109A  289C               	goto	l4019
  6898  109B                     u6550:	
  6899  109B  2824               	goto	l3983
  6900  109C                     l4019:	
  6901  109C  3001               	movlw	1
  6902  109D                     u6565:	
  6903  109D  1003               	clrc
  6904  109E  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  6905  109F  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  6906  10A0  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  6907  10A1  0CA8               	rrf	__tdiv_to_l_@quot,f
  6908  10A2  3EFF               	addlw	-1
  6909  10A3  1D03               	skipz
  6910  10A4  289D               	goto	u6565
  6911  10A5  3001               	movlw	1
  6912  10A6  00F3               	movwf	??__tdiv_to_l_
  6913  10A7  0873               	movf	??__tdiv_to_l_,w
  6914  10A8  07AD               	addwf	__tdiv_to_l_@exp1,f
  6915  10A9  1D03               	btfss	3,2
  6916  10AA  28AC               	goto	u6571
  6917  10AB  28AD               	goto	u6570
  6918  10AC                     u6571:	
  6919  10AC  289C               	goto	l4019
  6920  10AD                     u6570:	
  6921  10AD  28C5               	goto	l4029
  6922  10AE                     l4021:	
  6923  10AE  3018               	movlw	24
  6924  10AF  022D               	subwf	__tdiv_to_l_@exp1,w
  6925  10B0  1C03               	skipc
  6926  10B1  28B3               	goto	u6581
  6927  10B2  28B4               	goto	u6580
  6928  10B3                     u6581:	
  6929  10B3  28C0               	goto	l584
  6930  10B4                     u6580:	
  6931  10B4  2824               	goto	l3983
  6932  10B5                     l4027:	
  6933  10B5  3001               	movlw	1
  6934  10B6  00F3               	movwf	??__tdiv_to_l_
  6935  10B7                     u6595:	
  6936  10B7  1003               	clrc
  6937  10B8  0DA8               	rlf	__tdiv_to_l_@quot,f
  6938  10B9  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  6939  10BA  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  6940  10BB  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  6941  10BC  0BF3               	decfsz	??__tdiv_to_l_,f
  6942  10BD  28B7               	goto	u6595
  6943  10BE  3001               	movlw	1
  6944  10BF  02AD               	subwf	__tdiv_to_l_@exp1,f
  6945  10C0                     l584:	
  6946  10C0  082D               	movf	__tdiv_to_l_@exp1,w
  6947  10C1  1D03               	btfss	3,2
  6948  10C2  28C4               	goto	u6601
  6949  10C3  28C5               	goto	u6600
  6950  10C4                     u6601:	
  6951  10C4  28B5               	goto	l4027
  6952  10C5                     u6600:	
  6953  10C5                     l4029:	
  6954  10C5  082B               	movf	__tdiv_to_l_@quot+3,w
  6955  10C6  00A3               	movwf	?__tdiv_to_l_+3
  6956  10C7  082A               	movf	__tdiv_to_l_@quot+2,w
  6957  10C8  00A2               	movwf	?__tdiv_to_l_+2
  6958  10C9  0829               	movf	__tdiv_to_l_@quot+1,w
  6959  10CA  00A1               	movwf	?__tdiv_to_l_+1
  6960  10CB  0828               	movf	__tdiv_to_l_@quot,w
  6961  10CC  00A0               	movwf	?__tdiv_to_l_
  6962  10CD                     l573:	
  6963  10CD  0008               	return
  6964  10CE                     __end_of__tdiv_to_l_:	
  6965                           
  6966                           	psect	text12
  6967  10CE                     __ptext12:	
  6968 ;; *************** function __div_to_l_ *****************
  6969 ;; Defined at:
  6970 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fldivl.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;  f1              4    0[BANK0 ] unsigned long 
  6973 ;;  f2              4    4[BANK0 ] unsigned long 
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;  quot            4    4[COMMON] unsigned long 
  6976 ;;  exp1            1    9[COMMON] unsigned char 
  6977 ;;  cntr            1    8[COMMON] unsigned char 
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  4    0[BANK0 ] unsigned long 
  6980 ;; Registers used:
  6981 ;;		wreg, status,2, status,0
  6982 ;; Tracked objects:
  6983 ;;		On entry : 0/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6987 ;;      Params:         0       8       0       0       0
  6988 ;;      Locals:         6       0       0       0       0
  6989 ;;      Temps:          1       0       0       0       0
  6990 ;;      Totals:         7       8       0       0       0
  6991 ;;Total ram usage:       15 bytes
  6992 ;; Hardware stack levels used:    1
  6993 ;; Hardware stack levels required when called:    1
  6994 ;; This function calls:
  6995 ;;		Nothing
  6996 ;; This function is called by:
  6997 ;;		_sprintf
  6998 ;; This function uses a non-reentrant model
  6999 ;;
  7000                           
  7001                           
  7002                           ;psect for function __div_to_l_
  7003  10CE                     __div_to_l_:	
  7004  10CE                     l4033:	
  7005                           ;incstack = 0
  7006                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7007                           
  7008  10CE  1003               	clrc
  7009  10CF  1283               	bcf	3,5	;RP0=0, select bank0
  7010  10D0  1303               	bcf	3,6	;RP1=0, select bank0
  7011  10D1  0D22               	rlf	__div_to_l_@f1+2,w
  7012  10D2  0D23               	rlf	__div_to_l_@f1+3,w
  7013  10D3  00F3               	movwf	??__div_to_l_
  7014  10D4  0873               	movf	??__div_to_l_,w
  7015  10D5  00F9               	movwf	__div_to_l_@exp1
  7016  10D6  0879               	movf	__div_to_l_@exp1,w
  7017  10D7  1D03               	btfss	3,2
  7018  10D8  28DA               	goto	u6611
  7019  10D9  28DB               	goto	u6610
  7020  10DA                     u6611:	
  7021  10DA  28E4               	goto	l4039
  7022  10DB                     u6610:	
  7023  10DB                     l4035:	
  7024  10DB  3000               	movlw	0
  7025  10DC  00A3               	movwf	?__div_to_l_+3
  7026  10DD  3000               	movlw	0
  7027  10DE  00A2               	movwf	?__div_to_l_+2
  7028  10DF  3000               	movlw	0
  7029  10E0  00A1               	movwf	?__div_to_l_+1
  7030  10E1  3000               	movlw	0
  7031  10E2  00A0               	movwf	?__div_to_l_
  7032  10E3  298D               	goto	l526
  7033  10E4                     l4039:	
  7034  10E4  1003               	clrc
  7035  10E5  0D26               	rlf	__div_to_l_@f2+2,w
  7036  10E6  0D27               	rlf	__div_to_l_@f2+3,w
  7037  10E7  00F3               	movwf	??__div_to_l_
  7038  10E8  0873               	movf	??__div_to_l_,w
  7039  10E9  00F8               	movwf	__div_to_l_@cntr
  7040  10EA  0878               	movf	__div_to_l_@cntr,w
  7041  10EB  1D03               	btfss	3,2
  7042  10EC  28EE               	goto	u6621
  7043  10ED  28EF               	goto	u6620
  7044  10EE                     u6621:	
  7045  10EE  28F0               	goto	l527
  7046  10EF                     u6620:	
  7047  10EF  28DB               	goto	l4035
  7048  10F0                     l527:	
  7049  10F0  17A2               	bsf	__div_to_l_@f1+2,7
  7050  10F1                     l4045:	
  7051  10F1  30FF               	movlw	255
  7052  10F2  05A0               	andwf	__div_to_l_@f1,f
  7053  10F3  30FF               	movlw	255
  7054  10F4  05A1               	andwf	__div_to_l_@f1+1,f
  7055  10F5  30FF               	movlw	255
  7056  10F6  05A2               	andwf	__div_to_l_@f1+2,f
  7057  10F7  3000               	movlw	0
  7058  10F8  05A3               	andwf	__div_to_l_@f1+3,f
  7059  10F9                     l4047:	
  7060  10F9  17A6               	bsf	__div_to_l_@f2+2,7
  7061  10FA  30FF               	movlw	255
  7062  10FB  05A4               	andwf	__div_to_l_@f2,f
  7063  10FC  30FF               	movlw	255
  7064  10FD  05A5               	andwf	__div_to_l_@f2+1,f
  7065  10FE  30FF               	movlw	255
  7066  10FF  05A6               	andwf	__div_to_l_@f2+2,f
  7067  1100  3000               	movlw	0
  7068  1101  05A7               	andwf	__div_to_l_@f2+3,f
  7069  1102  3000               	movlw	0
  7070  1103  00F7               	movwf	__div_to_l_@quot+3
  7071  1104  3000               	movlw	0
  7072  1105  00F6               	movwf	__div_to_l_@quot+2
  7073  1106  3000               	movlw	0
  7074  1107  00F5               	movwf	__div_to_l_@quot+1
  7075  1108  3000               	movlw	0
  7076  1109  00F4               	movwf	__div_to_l_@quot
  7077  110A                     l4049:	
  7078  110A  307F               	movlw	127
  7079  110B  02F9               	subwf	__div_to_l_@exp1,f
  7080  110C                     l4051:	
  7081  110C  30A0               	movlw	160
  7082  110D  0778               	addwf	__div_to_l_@cntr,w
  7083  110E  00F3               	movwf	??__div_to_l_
  7084  110F  0873               	movf	??__div_to_l_,w
  7085  1110  02F9               	subwf	__div_to_l_@exp1,f
  7086  1111  3020               	movlw	32
  7087  1112  00F3               	movwf	??__div_to_l_
  7088  1113  0873               	movf	??__div_to_l_,w
  7089  1114  00F8               	movwf	__div_to_l_@cntr
  7090  1115                     l4053:	
  7091  1115  3001               	movlw	1
  7092  1116  00F3               	movwf	??__div_to_l_
  7093  1117                     u6635:	
  7094  1117  1003               	clrc
  7095  1118  0DF4               	rlf	__div_to_l_@quot,f
  7096  1119  0DF5               	rlf	__div_to_l_@quot+1,f
  7097  111A  0DF6               	rlf	__div_to_l_@quot+2,f
  7098  111B  0DF7               	rlf	__div_to_l_@quot+3,f
  7099  111C  0BF3               	decfsz	??__div_to_l_,f
  7100  111D  2917               	goto	u6635
  7101  111E                     l4055:	
  7102  111E  0827               	movf	__div_to_l_@f2+3,w
  7103  111F  0223               	subwf	__div_to_l_@f1+3,w
  7104  1120  1D03               	skipz
  7105  1121  292C               	goto	u6645
  7106  1122  0826               	movf	__div_to_l_@f2+2,w
  7107  1123  0222               	subwf	__div_to_l_@f1+2,w
  7108  1124  1D03               	skipz
  7109  1125  292C               	goto	u6645
  7110  1126  0825               	movf	__div_to_l_@f2+1,w
  7111  1127  0221               	subwf	__div_to_l_@f1+1,w
  7112  1128  1D03               	skipz
  7113  1129  292C               	goto	u6645
  7114  112A  0824               	movf	__div_to_l_@f2,w
  7115  112B  0220               	subwf	__div_to_l_@f1,w
  7116  112C                     u6645:	
  7117  112C  1C03               	skipc
  7118  112D  292F               	goto	u6641
  7119  112E  2930               	goto	u6640
  7120  112F                     u6641:	
  7121  112F  293F               	goto	l4061
  7122  1130                     u6640:	
  7123  1130                     l4057:	
  7124  1130  0824               	movf	__div_to_l_@f2,w
  7125  1131  02A0               	subwf	__div_to_l_@f1,f
  7126  1132  0825               	movf	__div_to_l_@f2+1,w
  7127  1133  1C03               	skipc
  7128  1134  0F25               	incfsz	__div_to_l_@f2+1,w
  7129  1135  02A1               	subwf	__div_to_l_@f1+1,f
  7130  1136  0826               	movf	__div_to_l_@f2+2,w
  7131  1137  1C03               	skipc
  7132  1138  0F26               	incfsz	__div_to_l_@f2+2,w
  7133  1139  02A2               	subwf	__div_to_l_@f1+2,f
  7134  113A  0827               	movf	__div_to_l_@f2+3,w
  7135  113B  1C03               	skipc
  7136  113C  0F27               	incfsz	__div_to_l_@f2+3,w
  7137  113D  02A3               	subwf	__div_to_l_@f1+3,f
  7138  113E                     l4059:	
  7139  113E  1474               	bsf	__div_to_l_@quot,0
  7140  113F                     l4061:	
  7141  113F  3001               	movlw	1
  7142  1140  00F3               	movwf	??__div_to_l_
  7143  1141                     u6655:	
  7144  1141  1003               	clrc
  7145  1142  0DA0               	rlf	__div_to_l_@f1,f
  7146  1143  0DA1               	rlf	__div_to_l_@f1+1,f
  7147  1144  0DA2               	rlf	__div_to_l_@f1+2,f
  7148  1145  0DA3               	rlf	__div_to_l_@f1+3,f
  7149  1146  0BF3               	decfsz	??__div_to_l_,f
  7150  1147  2941               	goto	u6655
  7151  1148                     l4063:	
  7152  1148  3001               	movlw	1
  7153  1149  02F8               	subwf	__div_to_l_@cntr,f
  7154  114A  1D03               	btfss	3,2
  7155  114B  294D               	goto	u6661
  7156  114C  294E               	goto	u6660
  7157  114D                     u6661:	
  7158  114D  2915               	goto	l4053
  7159  114E                     u6660:	
  7160  114E                     l530:	
  7161  114E  1FF9               	btfss	__div_to_l_@exp1,7
  7162  114F  2951               	goto	u6671
  7163  1150  2952               	goto	u6670
  7164  1151                     u6671:	
  7165  1151  296C               	goto	l4073
  7166  1152                     u6670:	
  7167  1152                     l4065:	
  7168  1152  0879               	movf	__div_to_l_@exp1,w
  7169  1153  3A80               	xorlw	128
  7170  1154  3E9F               	addlw	159
  7171  1155  1803               	skipnc
  7172  1156  2958               	goto	u6681
  7173  1157  2959               	goto	u6680
  7174  1158                     u6681:	
  7175  1158  295A               	goto	l4071
  7176  1159                     u6680:	
  7177  1159  28DB               	goto	l4035
  7178  115A                     l4071:	
  7179  115A  3001               	movlw	1
  7180  115B                     u6695:	
  7181  115B  1003               	clrc
  7182  115C  0CF7               	rrf	__div_to_l_@quot+3,f
  7183  115D  0CF6               	rrf	__div_to_l_@quot+2,f
  7184  115E  0CF5               	rrf	__div_to_l_@quot+1,f
  7185  115F  0CF4               	rrf	__div_to_l_@quot,f
  7186  1160  3EFF               	addlw	-1
  7187  1161  1D03               	skipz
  7188  1162  295B               	goto	u6695
  7189  1163  3001               	movlw	1
  7190  1164  00F3               	movwf	??__div_to_l_
  7191  1165  0873               	movf	??__div_to_l_,w
  7192  1166  07F9               	addwf	__div_to_l_@exp1,f
  7193  1167  1D03               	btfss	3,2
  7194  1168  296A               	goto	u6701
  7195  1169  296B               	goto	u6700
  7196  116A                     u6701:	
  7197  116A  295A               	goto	l4071
  7198  116B                     u6700:	
  7199  116B  2983               	goto	l4081
  7200  116C                     l4073:	
  7201  116C  3020               	movlw	32
  7202  116D  0279               	subwf	__div_to_l_@exp1,w
  7203  116E  1C03               	skipc
  7204  116F  2971               	goto	u6711
  7205  1170  2972               	goto	u6710
  7206  1171                     u6711:	
  7207  1171  297E               	goto	l537
  7208  1172                     u6710:	
  7209  1172  28DB               	goto	l4035
  7210  1173                     l4079:	
  7211  1173  3001               	movlw	1
  7212  1174  00F3               	movwf	??__div_to_l_
  7213  1175                     u6725:	
  7214  1175  1003               	clrc
  7215  1176  0DF4               	rlf	__div_to_l_@quot,f
  7216  1177  0DF5               	rlf	__div_to_l_@quot+1,f
  7217  1178  0DF6               	rlf	__div_to_l_@quot+2,f
  7218  1179  0DF7               	rlf	__div_to_l_@quot+3,f
  7219  117A  0BF3               	decfsz	??__div_to_l_,f
  7220  117B  2975               	goto	u6725
  7221  117C  3001               	movlw	1
  7222  117D  02F9               	subwf	__div_to_l_@exp1,f
  7223  117E                     l537:	
  7224  117E  0879               	movf	__div_to_l_@exp1,w
  7225  117F  1D03               	btfss	3,2
  7226  1180  2982               	goto	u6731
  7227  1181  2983               	goto	u6730
  7228  1182                     u6731:	
  7229  1182  2973               	goto	l4079
  7230  1183                     u6730:	
  7231  1183                     l4081:	
  7232  1183  0877               	movf	__div_to_l_@quot+3,w
  7233  1184  1283               	bcf	3,5	;RP0=0, select bank0
  7234  1185  1303               	bcf	3,6	;RP1=0, select bank0
  7235  1186  00A3               	movwf	?__div_to_l_+3
  7236  1187  0876               	movf	__div_to_l_@quot+2,w
  7237  1188  00A2               	movwf	?__div_to_l_+2
  7238  1189  0875               	movf	__div_to_l_@quot+1,w
  7239  118A  00A1               	movwf	?__div_to_l_+1
  7240  118B  0874               	movf	__div_to_l_@quot,w
  7241  118C  00A0               	movwf	?__div_to_l_
  7242  118D                     l526:	
  7243  118D  0008               	return
  7244  118E                     __end_of__div_to_l_:	
  7245                           
  7246                           	psect	text13
  7247  1F44                     __ptext13:	
  7248 ;; *************** function ___xxtofl *****************
  7249 ;; Defined at:
  7250 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;  sign            1    wreg     unsigned char 
  7253 ;;  val             4    3[COMMON] long 
  7254 ;; Auto vars:     Size  Location     Type
  7255 ;;  sign            1    4[BANK0 ] unsigned char 
  7256 ;;  arg             4    6[BANK0 ] unsigned long 
  7257 ;;  exp             1    5[BANK0 ] unsigned char 
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  4    3[COMMON] unsigned char 
  7260 ;; Registers used:
  7261 ;;		wreg, status,2, status,0
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7267 ;;      Params:         4       0       0       0       0
  7268 ;;      Locals:         0       6       0       0       0
  7269 ;;      Temps:          0       4       0       0       0
  7270 ;;      Totals:         4      10       0       0       0
  7271 ;;Total ram usage:       14 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:    1
  7274 ;; This function calls:
  7275 ;;		Nothing
  7276 ;; This function is called by:
  7277 ;;		_main
  7278 ;;		_sprintf
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           
  7283                           ;psect for function ___xxtofl
  7284  1F44                     ___xxtofl:	
  7285                           
  7286                           ;incstack = 0
  7287                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7288                           ;___xxtofl@sign stored from wreg
  7289  1F44  1283               	bcf	3,5	;RP0=0, select bank0
  7290  1F45  1303               	bcf	3,6	;RP1=0, select bank0
  7291  1F46  00A4               	movwf	___xxtofl@sign
  7292  1F47                     l4161:	
  7293  1F47  0824               	movf	___xxtofl@sign,w
  7294  1F48  1903               	btfsc	3,2
  7295  1F49  2F4B               	goto	u6971
  7296  1F4A  2F4C               	goto	u6970
  7297  1F4B                     u6971:	
  7298  1F4B  2F60               	goto	l4167
  7299  1F4C                     u6970:	
  7300  1F4C                     l4163:	
  7301  1F4C  1FF6               	btfss	___xxtofl@val+3,7
  7302  1F4D  2F4F               	goto	u6981
  7303  1F4E  2F50               	goto	u6980
  7304  1F4F                     u6981:	
  7305  1F4F  2F60               	goto	l4167
  7306  1F50                     u6980:	
  7307  1F50                     l4165:	
  7308  1F50  0973               	comf	___xxtofl@val,w
  7309  1F51  00A6               	movwf	___xxtofl@arg
  7310  1F52  0974               	comf	___xxtofl@val+1,w
  7311  1F53  00A7               	movwf	___xxtofl@arg+1
  7312  1F54  0975               	comf	___xxtofl@val+2,w
  7313  1F55  00A8               	movwf	___xxtofl@arg+2
  7314  1F56  0976               	comf	___xxtofl@val+3,w
  7315  1F57  00A9               	movwf	___xxtofl@arg+3
  7316  1F58  0AA6               	incf	___xxtofl@arg,f
  7317  1F59  1903               	skipnz
  7318  1F5A  0AA7               	incf	___xxtofl@arg+1,f
  7319  1F5B  1903               	skipnz
  7320  1F5C  0AA8               	incf	___xxtofl@arg+2,f
  7321  1F5D  1903               	skipnz
  7322  1F5E  0AA9               	incf	___xxtofl@arg+3,f
  7323  1F5F  2F68               	goto	l817
  7324  1F60                     l4167:	
  7325  1F60  0876               	movf	___xxtofl@val+3,w
  7326  1F61  00A9               	movwf	___xxtofl@arg+3
  7327  1F62  0875               	movf	___xxtofl@val+2,w
  7328  1F63  00A8               	movwf	___xxtofl@arg+2
  7329  1F64  0874               	movf	___xxtofl@val+1,w
  7330  1F65  00A7               	movwf	___xxtofl@arg+1
  7331  1F66  0873               	movf	___xxtofl@val,w
  7332  1F67  00A6               	movwf	___xxtofl@arg
  7333  1F68                     l817:	
  7334  1F68  0876               	movf	___xxtofl@val+3,w
  7335  1F69  0475               	iorwf	___xxtofl@val+2,w
  7336  1F6A  0474               	iorwf	___xxtofl@val+1,w
  7337  1F6B  0473               	iorwf	___xxtofl@val,w
  7338  1F6C  1D03               	skipz
  7339  1F6D  2F6F               	goto	u6991
  7340  1F6E  2F70               	goto	u6990
  7341  1F6F                     u6991:	
  7342  1F6F  2F79               	goto	l4173
  7343  1F70                     u6990:	
  7344  1F70                     l4169:	
  7345  1F70  3000               	movlw	0
  7346  1F71  00F6               	movwf	?___xxtofl+3
  7347  1F72  3000               	movlw	0
  7348  1F73  00F5               	movwf	?___xxtofl+2
  7349  1F74  3000               	movlw	0
  7350  1F75  00F4               	movwf	?___xxtofl+1
  7351  1F76  3000               	movlw	0
  7352  1F77  00F3               	movwf	?___xxtofl
  7353  1F78  2FFF               	goto	l819
  7354  1F79                     l4173:	
  7355  1F79  3096               	movlw	150
  7356  1F7A  00A0               	movwf	??___xxtofl
  7357  1F7B  0820               	movf	??___xxtofl,w
  7358  1F7C  00A5               	movwf	___xxtofl@exp
  7359  1F7D  2F8B               	goto	l4177
  7360  1F7E                     l4175:	
  7361  1F7E  3001               	movlw	1
  7362  1F7F  00A0               	movwf	??___xxtofl
  7363  1F80  0820               	movf	??___xxtofl,w
  7364  1F81  07A5               	addwf	___xxtofl@exp,f
  7365  1F82  3001               	movlw	1
  7366  1F83                     u7005:	
  7367  1F83  1003               	clrc
  7368  1F84  0CA9               	rrf	___xxtofl@arg+3,f
  7369  1F85  0CA8               	rrf	___xxtofl@arg+2,f
  7370  1F86  0CA7               	rrf	___xxtofl@arg+1,f
  7371  1F87  0CA6               	rrf	___xxtofl@arg,f
  7372  1F88  3EFF               	addlw	-1
  7373  1F89  1D03               	skipz
  7374  1F8A  2F83               	goto	u7005
  7375  1F8B                     l4177:	
  7376  1F8B  30FE               	movlw	254
  7377  1F8C  0529               	andwf	___xxtofl@arg+3,w
  7378  1F8D  1D03               	btfss	3,2
  7379  1F8E  2F90               	goto	u7011
  7380  1F8F  2F91               	goto	u7010
  7381  1F90                     u7011:	
  7382  1F90  2F7E               	goto	l4175
  7383  1F91                     u7010:	
  7384  1F91  2FAD               	goto	l823
  7385  1F92                     l4179:	
  7386  1F92  3001               	movlw	1
  7387  1F93  00A0               	movwf	??___xxtofl
  7388  1F94  0820               	movf	??___xxtofl,w
  7389  1F95  07A5               	addwf	___xxtofl@exp,f
  7390  1F96                     l4181:	
  7391  1F96  3001               	movlw	1
  7392  1F97  07A6               	addwf	___xxtofl@arg,f
  7393  1F98  3000               	movlw	0
  7394  1F99  1803               	skipnc
  7395  1F9A  3001               	movlw	1
  7396  1F9B  07A7               	addwf	___xxtofl@arg+1,f
  7397  1F9C  3000               	movlw	0
  7398  1F9D  1803               	skipnc
  7399  1F9E  3001               	movlw	1
  7400  1F9F  07A8               	addwf	___xxtofl@arg+2,f
  7401  1FA0  3000               	movlw	0
  7402  1FA1  1803               	skipnc
  7403  1FA2  3001               	movlw	1
  7404  1FA3  07A9               	addwf	___xxtofl@arg+3,f
  7405  1FA4                     l4183:	
  7406  1FA4  3001               	movlw	1
  7407  1FA5                     u7025:	
  7408  1FA5  1003               	clrc
  7409  1FA6  0CA9               	rrf	___xxtofl@arg+3,f
  7410  1FA7  0CA8               	rrf	___xxtofl@arg+2,f
  7411  1FA8  0CA7               	rrf	___xxtofl@arg+1,f
  7412  1FA9  0CA6               	rrf	___xxtofl@arg,f
  7413  1FAA  3EFF               	addlw	-1
  7414  1FAB  1D03               	skipz
  7415  1FAC  2FA5               	goto	u7025
  7416  1FAD                     l823:	
  7417  1FAD  30FF               	movlw	255
  7418  1FAE  0529               	andwf	___xxtofl@arg+3,w
  7419  1FAF  1D03               	btfss	3,2
  7420  1FB0  2FB2               	goto	u7031
  7421  1FB1  2FB3               	goto	u7030
  7422  1FB2                     u7031:	
  7423  1FB2  2F92               	goto	l4179
  7424  1FB3                     u7030:	
  7425  1FB3  2FBF               	goto	l4187
  7426  1FB4                     l4185:	
  7427  1FB4  3001               	movlw	1
  7428  1FB5  02A5               	subwf	___xxtofl@exp,f
  7429  1FB6  3001               	movlw	1
  7430  1FB7  00A0               	movwf	??___xxtofl
  7431  1FB8                     u7045:	
  7432  1FB8  1003               	clrc
  7433  1FB9  0DA6               	rlf	___xxtofl@arg,f
  7434  1FBA  0DA7               	rlf	___xxtofl@arg+1,f
  7435  1FBB  0DA8               	rlf	___xxtofl@arg+2,f
  7436  1FBC  0DA9               	rlf	___xxtofl@arg+3,f
  7437  1FBD  0BA0               	decfsz	??___xxtofl,f
  7438  1FBE  2FB8               	goto	u7045
  7439  1FBF                     l4187:	
  7440  1FBF  1BA8               	btfsc	___xxtofl@arg+2,7
  7441  1FC0  2FC2               	goto	u7051
  7442  1FC1  2FC3               	goto	u7050
  7443  1FC2                     u7051:	
  7444  1FC2  2FC9               	goto	l830
  7445  1FC3                     u7050:	
  7446  1FC3                     l4189:	
  7447  1FC3  3002               	movlw	2
  7448  1FC4  0225               	subwf	___xxtofl@exp,w
  7449  1FC5  1803               	skipnc
  7450  1FC6  2FC8               	goto	u7061
  7451  1FC7  2FC9               	goto	u7060
  7452  1FC8                     u7061:	
  7453  1FC8  2FB4               	goto	l4185
  7454  1FC9                     u7060:	
  7455  1FC9                     l830:	
  7456  1FC9  1825               	btfsc	___xxtofl@exp,0
  7457  1FCA  2FCC               	goto	u7071
  7458  1FCB  2FCD               	goto	u7070
  7459  1FCC                     u7071:	
  7460  1FCC  2FD5               	goto	l831
  7461  1FCD                     u7070:	
  7462  1FCD                     l4191:	
  7463  1FCD  30FF               	movlw	255
  7464  1FCE  05A6               	andwf	___xxtofl@arg,f
  7465  1FCF  30FF               	movlw	255
  7466  1FD0  05A7               	andwf	___xxtofl@arg+1,f
  7467  1FD1  307F               	movlw	127
  7468  1FD2  05A8               	andwf	___xxtofl@arg+2,f
  7469  1FD3  30FF               	movlw	255
  7470  1FD4  05A9               	andwf	___xxtofl@arg+3,f
  7471  1FD5                     l831:	
  7472  1FD5  1003               	clrc
  7473  1FD6  0CA5               	rrf	___xxtofl@exp,f
  7474  1FD7                     l4193:	
  7475  1FD7  0825               	movf	___xxtofl@exp,w
  7476  1FD8  00A0               	movwf	??___xxtofl
  7477  1FD9  01A1               	clrf	??___xxtofl+1
  7478  1FDA  01A2               	clrf	??___xxtofl+2
  7479  1FDB  01A3               	clrf	??___xxtofl+3
  7480  1FDC  3018               	movlw	24
  7481  1FDD                     u7085:	
  7482  1FDD  1003               	clrc
  7483  1FDE  0DA0               	rlf	??___xxtofl,f
  7484  1FDF  0DA1               	rlf	??___xxtofl+1,f
  7485  1FE0  0DA2               	rlf	??___xxtofl+2,f
  7486  1FE1  0DA3               	rlf	??___xxtofl+3,f
  7487  1FE2                     u7080:	
  7488  1FE2  3EFF               	addlw	-1
  7489  1FE3  1D03               	skipz
  7490  1FE4  2FDD               	goto	u7085
  7491  1FE5  0820               	movf	??___xxtofl,w
  7492  1FE6  04A6               	iorwf	___xxtofl@arg,f
  7493  1FE7  0821               	movf	??___xxtofl+1,w
  7494  1FE8  04A7               	iorwf	___xxtofl@arg+1,f
  7495  1FE9  0822               	movf	??___xxtofl+2,w
  7496  1FEA  04A8               	iorwf	___xxtofl@arg+2,f
  7497  1FEB  0823               	movf	??___xxtofl+3,w
  7498  1FEC  04A9               	iorwf	___xxtofl@arg+3,f
  7499  1FED                     l4195:	
  7500  1FED  0824               	movf	___xxtofl@sign,w
  7501  1FEE  1903               	btfsc	3,2
  7502  1FEF  2FF1               	goto	u7091
  7503  1FF0  2FF2               	goto	u7090
  7504  1FF1                     u7091:	
  7505  1FF1  2FF7               	goto	l4201
  7506  1FF2                     u7090:	
  7507  1FF2                     l4197:	
  7508  1FF2  1FF6               	btfss	___xxtofl@val+3,7
  7509  1FF3  2FF5               	goto	u7101
  7510  1FF4  2FF6               	goto	u7100
  7511  1FF5                     u7101:	
  7512  1FF5  2FF7               	goto	l4201
  7513  1FF6                     u7100:	
  7514  1FF6                     l4199:	
  7515  1FF6  17A9               	bsf	___xxtofl@arg+3,7
  7516  1FF7                     l4201:	
  7517  1FF7  0829               	movf	___xxtofl@arg+3,w
  7518  1FF8  00F6               	movwf	?___xxtofl+3
  7519  1FF9  0828               	movf	___xxtofl@arg+2,w
  7520  1FFA  00F5               	movwf	?___xxtofl+2
  7521  1FFB  0827               	movf	___xxtofl@arg+1,w
  7522  1FFC  00F4               	movwf	?___xxtofl+1
  7523  1FFD  0826               	movf	___xxtofl@arg,w
  7524  1FFE  00F3               	movwf	?___xxtofl
  7525  1FFF                     l819:	
  7526  1FFF  0008               	return
  7527  2000                     __end_of___xxtofl:	
  7528                           
  7529                           	psect	text14
  7530  1A22                     __ptext14:	
  7531 ;; *************** function ___wmul *****************
  7532 ;; Defined at:
  7533 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;  multiplier      2    3[COMMON] unsigned int 
  7536 ;;  multiplicand    2    5[COMMON] unsigned int 
  7537 ;; Auto vars:     Size  Location     Type
  7538 ;;  product         2    7[COMMON] unsigned int 
  7539 ;; Return value:  Size  Location     Type
  7540 ;;                  2    3[COMMON] unsigned int 
  7541 ;; Registers used:
  7542 ;;		wreg, status,2, status,0
  7543 ;; Tracked objects:
  7544 ;;		On entry : 0/0
  7545 ;;		On exit  : 0/0
  7546 ;;		Unchanged: 0/0
  7547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7548 ;;      Params:         4       0       0       0       0
  7549 ;;      Locals:         2       0       0       0       0
  7550 ;;      Temps:          0       0       0       0       0
  7551 ;;      Totals:         6       0       0       0       0
  7552 ;;Total ram usage:        6 bytes
  7553 ;; Hardware stack levels used:    1
  7554 ;; Hardware stack levels required when called:    1
  7555 ;; This function calls:
  7556 ;;		Nothing
  7557 ;; This function is called by:
  7558 ;;		_sprintf
  7559 ;; This function uses a non-reentrant model
  7560 ;;
  7561                           
  7562                           
  7563                           ;psect for function ___wmul
  7564  1A22                     ___wmul:	
  7565  1A22                     l3093:	
  7566                           ;incstack = 0
  7567                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7568                           
  7569  1A22  01F7               	clrf	___wmul@product
  7570  1A23  01F8               	clrf	___wmul@product+1
  7571  1A24                     l3095:	
  7572  1A24  1C73               	btfss	___wmul@multiplier,0
  7573  1A25  2A27               	goto	u4831
  7574  1A26  2A28               	goto	u4830
  7575  1A27                     u4831:	
  7576  1A27  2A2E               	goto	l356
  7577  1A28                     u4830:	
  7578  1A28                     l3097:	
  7579  1A28  0875               	movf	___wmul@multiplicand,w
  7580  1A29  07F7               	addwf	___wmul@product,f
  7581  1A2A  1803               	skipnc
  7582  1A2B  0AF8               	incf	___wmul@product+1,f
  7583  1A2C  0876               	movf	___wmul@multiplicand+1,w
  7584  1A2D  07F8               	addwf	___wmul@product+1,f
  7585  1A2E                     l356:	
  7586  1A2E  3001               	movlw	1
  7587  1A2F                     u4845:	
  7588  1A2F  1003               	clrc
  7589  1A30  0DF5               	rlf	___wmul@multiplicand,f
  7590  1A31  0DF6               	rlf	___wmul@multiplicand+1,f
  7591  1A32  3EFF               	addlw	-1
  7592  1A33  1D03               	skipz
  7593  1A34  2A2F               	goto	u4845
  7594  1A35                     l3099:	
  7595  1A35  3001               	movlw	1
  7596  1A36                     u4855:	
  7597  1A36  1003               	clrc
  7598  1A37  0CF4               	rrf	___wmul@multiplier+1,f
  7599  1A38  0CF3               	rrf	___wmul@multiplier,f
  7600  1A39  3EFF               	addlw	-1
  7601  1A3A  1D03               	skipz
  7602  1A3B  2A36               	goto	u4855
  7603  1A3C                     l3101:	
  7604  1A3C  0873               	movf	___wmul@multiplier,w
  7605  1A3D  0474               	iorwf	___wmul@multiplier+1,w
  7606  1A3E  1D03               	btfss	3,2
  7607  1A3F  2A41               	goto	u4861
  7608  1A40  2A42               	goto	u4860
  7609  1A41                     u4861:	
  7610  1A41  2A24               	goto	l3095
  7611  1A42                     u4860:	
  7612  1A42                     l3103:	
  7613  1A42  0878               	movf	___wmul@product+1,w
  7614  1A43  00F4               	movwf	?___wmul+1
  7615  1A44  0877               	movf	___wmul@product,w
  7616  1A45  00F3               	movwf	?___wmul
  7617  1A46                     l358:	
  7618  1A46  0008               	return
  7619  1A47                     __end_of___wmul:	
  7620                           
  7621                           	psect	text15
  7622  1C0C                     __ptext15:	
  7623 ;; *************** function ___llmod *****************
  7624 ;; Defined at:
  7625 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;  divisor         4    0[BANK0 ] unsigned long 
  7628 ;;  dividend        4    4[BANK0 ] unsigned long 
  7629 ;; Auto vars:     Size  Location     Type
  7630 ;;  counter         1    4[COMMON] unsigned char 
  7631 ;; Return value:  Size  Location     Type
  7632 ;;                  4    0[BANK0 ] unsigned long 
  7633 ;; Registers used:
  7634 ;;		wreg, status,2, status,0
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7640 ;;      Params:         0       8       0       0       0
  7641 ;;      Locals:         1       0       0       0       0
  7642 ;;      Temps:          1       0       0       0       0
  7643 ;;      Totals:         2       8       0       0       0
  7644 ;;Total ram usage:       10 bytes
  7645 ;; Hardware stack levels used:    1
  7646 ;; Hardware stack levels required when called:    1
  7647 ;; This function calls:
  7648 ;;		Nothing
  7649 ;; This function is called by:
  7650 ;;		_sprintf
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           
  7655                           ;psect for function ___llmod
  7656  1C0C                     ___llmod:	
  7657  1C0C                     l4141:	
  7658                           ;incstack = 0
  7659                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7660                           
  7661  1C0C  1283               	bcf	3,5	;RP0=0, select bank0
  7662  1C0D  1303               	bcf	3,6	;RP1=0, select bank0
  7663  1C0E  0823               	movf	___llmod@divisor+3,w
  7664  1C0F  0422               	iorwf	___llmod@divisor+2,w
  7665  1C10  0421               	iorwf	___llmod@divisor+1,w
  7666  1C11  0420               	iorwf	___llmod@divisor,w
  7667  1C12  1903               	skipnz
  7668  1C13  2C15               	goto	u6911
  7669  1C14  2C16               	goto	u6910
  7670  1C15                     u6911:	
  7671  1C15  2C59               	goto	l4157
  7672  1C16                     u6910:	
  7673  1C16                     l4143:	
  7674  1C16  01F4               	clrf	___llmod@counter
  7675  1C17  0AF4               	incf	___llmod@counter,f
  7676  1C18  2C26               	goto	l4147
  7677  1C19                     l4145:	
  7678  1C19  3001               	movlw	1
  7679  1C1A  00F3               	movwf	??___llmod
  7680  1C1B                     u6925:	
  7681  1C1B  1003               	clrc
  7682  1C1C  0DA0               	rlf	___llmod@divisor,f
  7683  1C1D  0DA1               	rlf	___llmod@divisor+1,f
  7684  1C1E  0DA2               	rlf	___llmod@divisor+2,f
  7685  1C1F  0DA3               	rlf	___llmod@divisor+3,f
  7686  1C20  0BF3               	decfsz	??___llmod,f
  7687  1C21  2C1B               	goto	u6925
  7688  1C22  3001               	movlw	1
  7689  1C23  00F3               	movwf	??___llmod
  7690  1C24  0873               	movf	??___llmod,w
  7691  1C25  07F4               	addwf	___llmod@counter,f
  7692  1C26                     l4147:	
  7693  1C26  1FA3               	btfss	___llmod@divisor+3,7
  7694  1C27  2C29               	goto	u6931
  7695  1C28  2C2A               	goto	u6930
  7696  1C29                     u6931:	
  7697  1C29  2C19               	goto	l4145
  7698  1C2A                     u6930:	
  7699  1C2A                     l4149:	
  7700  1C2A  0823               	movf	___llmod@divisor+3,w
  7701  1C2B  0227               	subwf	___llmod@dividend+3,w
  7702  1C2C  1D03               	skipz
  7703  1C2D  2C38               	goto	u6945
  7704  1C2E  0822               	movf	___llmod@divisor+2,w
  7705  1C2F  0226               	subwf	___llmod@dividend+2,w
  7706  1C30  1D03               	skipz
  7707  1C31  2C38               	goto	u6945
  7708  1C32  0821               	movf	___llmod@divisor+1,w
  7709  1C33  0225               	subwf	___llmod@dividend+1,w
  7710  1C34  1D03               	skipz
  7711  1C35  2C38               	goto	u6945
  7712  1C36  0820               	movf	___llmod@divisor,w
  7713  1C37  0224               	subwf	___llmod@dividend,w
  7714  1C38                     u6945:	
  7715  1C38  1C03               	skipc
  7716  1C39  2C3B               	goto	u6941
  7717  1C3A  2C3C               	goto	u6940
  7718  1C3B                     u6941:	
  7719  1C3B  2C4A               	goto	l4153
  7720  1C3C                     u6940:	
  7721  1C3C                     l4151:	
  7722  1C3C  0820               	movf	___llmod@divisor,w
  7723  1C3D  02A4               	subwf	___llmod@dividend,f
  7724  1C3E  0821               	movf	___llmod@divisor+1,w
  7725  1C3F  1C03               	skipc
  7726  1C40  0F21               	incfsz	___llmod@divisor+1,w
  7727  1C41  02A5               	subwf	___llmod@dividend+1,f
  7728  1C42  0822               	movf	___llmod@divisor+2,w
  7729  1C43  1C03               	skipc
  7730  1C44  0F22               	incfsz	___llmod@divisor+2,w
  7731  1C45  02A6               	subwf	___llmod@dividend+2,f
  7732  1C46  0823               	movf	___llmod@divisor+3,w
  7733  1C47  1C03               	skipc
  7734  1C48  0F23               	incfsz	___llmod@divisor+3,w
  7735  1C49  02A7               	subwf	___llmod@dividend+3,f
  7736  1C4A                     l4153:	
  7737  1C4A  3001               	movlw	1
  7738  1C4B                     u6955:	
  7739  1C4B  1003               	clrc
  7740  1C4C  0CA3               	rrf	___llmod@divisor+3,f
  7741  1C4D  0CA2               	rrf	___llmod@divisor+2,f
  7742  1C4E  0CA1               	rrf	___llmod@divisor+1,f
  7743  1C4F  0CA0               	rrf	___llmod@divisor,f
  7744  1C50  3EFF               	addlw	-1
  7745  1C51  1D03               	skipz
  7746  1C52  2C4B               	goto	u6955
  7747  1C53                     l4155:	
  7748  1C53  3001               	movlw	1
  7749  1C54  02F4               	subwf	___llmod@counter,f
  7750  1C55  1D03               	btfss	3,2
  7751  1C56  2C58               	goto	u6961
  7752  1C57  2C59               	goto	u6960
  7753  1C58                     u6961:	
  7754  1C58  2C2A               	goto	l4149
  7755  1C59                     u6960:	
  7756  1C59                     l4157:	
  7757  1C59  0827               	movf	___llmod@dividend+3,w
  7758  1C5A  00A3               	movwf	?___llmod+3
  7759  1C5B  0826               	movf	___llmod@dividend+2,w
  7760  1C5C  00A2               	movwf	?___llmod+2
  7761  1C5D  0825               	movf	___llmod@dividend+1,w
  7762  1C5E  00A1               	movwf	?___llmod+1
  7763  1C5F  0824               	movf	___llmod@dividend,w
  7764  1C60  00A0               	movwf	?___llmod
  7765  1C61                     l612:	
  7766  1C61  0008               	return
  7767  1C62                     __end_of___llmod:	
  7768                           
  7769                           	psect	text16
  7770  0800                     __ptext16:	
  7771 ;; *************** function ___lldiv *****************
  7772 ;; Defined at:
  7773 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  7774 ;; Parameters:    Size  Location     Type
  7775 ;;  divisor         4    0[BANK0 ] unsigned long 
  7776 ;;  dividend        4    4[BANK0 ] unsigned long 
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;  quotient        4    4[COMMON] unsigned long 
  7779 ;;  counter         1    8[COMMON] unsigned char 
  7780 ;; Return value:  Size  Location     Type
  7781 ;;                  4    0[BANK0 ] unsigned long 
  7782 ;; Registers used:
  7783 ;;		wreg, status,2, status,0
  7784 ;; Tracked objects:
  7785 ;;		On entry : 0/0
  7786 ;;		On exit  : 0/0
  7787 ;;		Unchanged: 0/0
  7788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7789 ;;      Params:         0       8       0       0       0
  7790 ;;      Locals:         5       0       0       0       0
  7791 ;;      Temps:          1       0       0       0       0
  7792 ;;      Totals:         6       8       0       0       0
  7793 ;;Total ram usage:       14 bytes
  7794 ;; Hardware stack levels used:    1
  7795 ;; Hardware stack levels required when called:    1
  7796 ;; This function calls:
  7797 ;;		Nothing
  7798 ;; This function is called by:
  7799 ;;		_sprintf
  7800 ;; This function uses a non-reentrant model
  7801 ;;
  7802                           
  7803                           
  7804                           ;psect for function ___lldiv
  7805  0800                     ___lldiv:	
  7806  0800                     l4085:	
  7807                           ;incstack = 0
  7808                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7809                           
  7810  0800  3000               	movlw	0
  7811  0801  00F7               	movwf	___lldiv@quotient+3
  7812  0802  3000               	movlw	0
  7813  0803  00F6               	movwf	___lldiv@quotient+2
  7814  0804  3000               	movlw	0
  7815  0805  00F5               	movwf	___lldiv@quotient+1
  7816  0806  3000               	movlw	0
  7817  0807  00F4               	movwf	___lldiv@quotient
  7818  0808  1283               	bcf	3,5	;RP0=0, select bank0
  7819  0809  1303               	bcf	3,6	;RP1=0, select bank0
  7820  080A  0823               	movf	___lldiv@divisor+3,w
  7821  080B  0422               	iorwf	___lldiv@divisor+2,w
  7822  080C  0421               	iorwf	___lldiv@divisor+1,w
  7823  080D  0420               	iorwf	___lldiv@divisor,w
  7824  080E  1903               	skipnz
  7825  080F  2811               	goto	u6741
  7826  0810  2812               	goto	u6740
  7827  0811                     u6741:	
  7828  0811  285F               	goto	l4105
  7829  0812                     u6740:	
  7830  0812                     l4087:	
  7831  0812  01F8               	clrf	___lldiv@counter
  7832  0813  0AF8               	incf	___lldiv@counter,f
  7833  0814  2822               	goto	l4091
  7834  0815                     l4089:	
  7835  0815  3001               	movlw	1
  7836  0816  00F3               	movwf	??___lldiv
  7837  0817                     u6755:	
  7838  0817  1003               	clrc
  7839  0818  0DA0               	rlf	___lldiv@divisor,f
  7840  0819  0DA1               	rlf	___lldiv@divisor+1,f
  7841  081A  0DA2               	rlf	___lldiv@divisor+2,f
  7842  081B  0DA3               	rlf	___lldiv@divisor+3,f
  7843  081C  0BF3               	decfsz	??___lldiv,f
  7844  081D  2817               	goto	u6755
  7845  081E  3001               	movlw	1
  7846  081F  00F3               	movwf	??___lldiv
  7847  0820  0873               	movf	??___lldiv,w
  7848  0821  07F8               	addwf	___lldiv@counter,f
  7849  0822                     l4091:	
  7850  0822  1FA3               	btfss	___lldiv@divisor+3,7
  7851  0823  2825               	goto	u6761
  7852  0824  2826               	goto	u6760
  7853  0825                     u6761:	
  7854  0825  2815               	goto	l4089
  7855  0826                     u6760:	
  7856  0826                     l4093:	
  7857  0826  3001               	movlw	1
  7858  0827  00F3               	movwf	??___lldiv
  7859  0828                     u6775:	
  7860  0828  1003               	clrc
  7861  0829  0DF4               	rlf	___lldiv@quotient,f
  7862  082A  0DF5               	rlf	___lldiv@quotient+1,f
  7863  082B  0DF6               	rlf	___lldiv@quotient+2,f
  7864  082C  0DF7               	rlf	___lldiv@quotient+3,f
  7865  082D  0BF3               	decfsz	??___lldiv,f
  7866  082E  2828               	goto	u6775
  7867  082F                     l4095:	
  7868  082F  0823               	movf	___lldiv@divisor+3,w
  7869  0830  0227               	subwf	___lldiv@dividend+3,w
  7870  0831  1D03               	skipz
  7871  0832  283D               	goto	u6785
  7872  0833  0822               	movf	___lldiv@divisor+2,w
  7873  0834  0226               	subwf	___lldiv@dividend+2,w
  7874  0835  1D03               	skipz
  7875  0836  283D               	goto	u6785
  7876  0837  0821               	movf	___lldiv@divisor+1,w
  7877  0838  0225               	subwf	___lldiv@dividend+1,w
  7878  0839  1D03               	skipz
  7879  083A  283D               	goto	u6785
  7880  083B  0820               	movf	___lldiv@divisor,w
  7881  083C  0224               	subwf	___lldiv@dividend,w
  7882  083D                     u6785:	
  7883  083D  1C03               	skipc
  7884  083E  2840               	goto	u6781
  7885  083F  2841               	goto	u6780
  7886  0840                     u6781:	
  7887  0840  2850               	goto	l4101
  7888  0841                     u6780:	
  7889  0841                     l4097:	
  7890  0841  0820               	movf	___lldiv@divisor,w
  7891  0842  02A4               	subwf	___lldiv@dividend,f
  7892  0843  0821               	movf	___lldiv@divisor+1,w
  7893  0844  1C03               	skipc
  7894  0845  0F21               	incfsz	___lldiv@divisor+1,w
  7895  0846  02A5               	subwf	___lldiv@dividend+1,f
  7896  0847  0822               	movf	___lldiv@divisor+2,w
  7897  0848  1C03               	skipc
  7898  0849  0F22               	incfsz	___lldiv@divisor+2,w
  7899  084A  02A6               	subwf	___lldiv@dividend+2,f
  7900  084B  0823               	movf	___lldiv@divisor+3,w
  7901  084C  1C03               	skipc
  7902  084D  0F23               	incfsz	___lldiv@divisor+3,w
  7903  084E  02A7               	subwf	___lldiv@dividend+3,f
  7904  084F                     l4099:	
  7905  084F  1474               	bsf	___lldiv@quotient,0
  7906  0850                     l4101:	
  7907  0850  3001               	movlw	1
  7908  0851                     u6795:	
  7909  0851  1003               	clrc
  7910  0852  0CA3               	rrf	___lldiv@divisor+3,f
  7911  0853  0CA2               	rrf	___lldiv@divisor+2,f
  7912  0854  0CA1               	rrf	___lldiv@divisor+1,f
  7913  0855  0CA0               	rrf	___lldiv@divisor,f
  7914  0856  3EFF               	addlw	-1
  7915  0857  1D03               	skipz
  7916  0858  2851               	goto	u6795
  7917  0859                     l4103:	
  7918  0859  3001               	movlw	1
  7919  085A  02F8               	subwf	___lldiv@counter,f
  7920  085B  1D03               	btfss	3,2
  7921  085C  285E               	goto	u6801
  7922  085D  285F               	goto	u6800
  7923  085E                     u6801:	
  7924  085E  2826               	goto	l4093
  7925  085F                     u6800:	
  7926  085F                     l4105:	
  7927  085F  0877               	movf	___lldiv@quotient+3,w
  7928  0860  00A3               	movwf	?___lldiv+3
  7929  0861  0876               	movf	___lldiv@quotient+2,w
  7930  0862  00A2               	movwf	?___lldiv+2
  7931  0863  0875               	movf	___lldiv@quotient+1,w
  7932  0864  00A1               	movwf	?___lldiv+1
  7933  0865  0874               	movf	___lldiv@quotient,w
  7934  0866  00A0               	movwf	?___lldiv
  7935  0867                     l392:	
  7936  0867  0008               	return
  7937  0868                     __end_of___lldiv:	
  7938                           
  7939                           	psect	text17
  7940  1D8B                     __ptext17:	
  7941 ;; *************** function ___fltol *****************
  7942 ;; Defined at:
  7943 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  7944 ;; Parameters:    Size  Location     Type
  7945 ;;  f1              4   55[BANK0 ] unsigned long 
  7946 ;; Auto vars:     Size  Location     Type
  7947 ;;  exp1            1   65[BANK0 ] unsigned char 
  7948 ;;  sign1           1   64[BANK0 ] unsigned char 
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  4   55[BANK0 ] long 
  7951 ;; Registers used:
  7952 ;;		wreg, status,2, status,0
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7958 ;;      Params:         0       4       0       0       0
  7959 ;;      Locals:         0       2       0       0       0
  7960 ;;      Temps:          0       5       0       0       0
  7961 ;;      Totals:         0      11       0       0       0
  7962 ;;Total ram usage:       11 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; Hardware stack levels required when called:    1
  7965 ;; This function calls:
  7966 ;;		Nothing
  7967 ;; This function is called by:
  7968 ;;		_sprintf
  7969 ;; This function uses a non-reentrant model
  7970 ;;
  7971                           
  7972                           
  7973                           ;psect for function ___fltol
  7974  1D8B                     ___fltol:	
  7975  1D8B                     l3171:	
  7976                           ;incstack = 0
  7977                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7978                           
  7979  1D8B  1003               	clrc
  7980  1D8C  1283               	bcf	3,5	;RP0=0, select bank0
  7981  1D8D  1303               	bcf	3,6	;RP1=0, select bank0
  7982  1D8E  0D59               	rlf	___fltol@f1+2,w
  7983  1D8F  0D5A               	rlf	___fltol@f1+3,w
  7984  1D90  00DB               	movwf	??___fltol
  7985  1D91  085B               	movf	??___fltol,w
  7986  1D92  00E1               	movwf	___fltol@exp1
  7987  1D93  0861               	movf	___fltol@exp1,w
  7988  1D94  1D03               	btfss	3,2
  7989  1D95  2D97               	goto	u5051
  7990  1D96  2D98               	goto	u5050
  7991  1D97                     u5051:	
  7992  1D97  2DA1               	goto	l3177
  7993  1D98                     u5050:	
  7994  1D98                     l3173:	
  7995  1D98  3000               	movlw	0
  7996  1D99  00DA               	movwf	?___fltol+3
  7997  1D9A  3000               	movlw	0
  7998  1D9B  00D9               	movwf	?___fltol+2
  7999  1D9C  3000               	movlw	0
  8000  1D9D  00D8               	movwf	?___fltol+1
  8001  1D9E  3000               	movlw	0
  8002  1D9F  00D7               	movwf	?___fltol
  8003  1DA0  2E06               	goto	l559
  8004  1DA1                     l3177:	
  8005  1DA1  0857               	movf	___fltol@f1,w
  8006  1DA2  00DB               	movwf	??___fltol
  8007  1DA3  0858               	movf	___fltol@f1+1,w
  8008  1DA4  00DC               	movwf	??___fltol+1
  8009  1DA5  0859               	movf	___fltol@f1+2,w
  8010  1DA6  00DD               	movwf	??___fltol+2
  8011  1DA7  085A               	movf	___fltol@f1+3,w
  8012  1DA8  00DE               	movwf	??___fltol+3
  8013  1DA9  301F               	movlw	31
  8014  1DAA                     u5065:	
  8015  1DAA  1003               	clrc
  8016  1DAB  0CDE               	rrf	??___fltol+3,f
  8017  1DAC  0CDD               	rrf	??___fltol+2,f
  8018  1DAD  0CDC               	rrf	??___fltol+1,f
  8019  1DAE  0CDB               	rrf	??___fltol,f
  8020  1DAF                     u5060:	
  8021  1DAF  3EFF               	addlw	-1
  8022  1DB0  1D03               	skipz
  8023  1DB1  2DAA               	goto	u5065
  8024  1DB2  085B               	movf	??___fltol,w
  8025  1DB3  00DF               	movwf	??___fltol+4
  8026  1DB4  085F               	movf	??___fltol+4,w
  8027  1DB5  00E0               	movwf	___fltol@sign1
  8028  1DB6                     l3179:	
  8029  1DB6  17D9               	bsf	___fltol@f1+2,7
  8030  1DB7                     l3181:	
  8031  1DB7  30FF               	movlw	255
  8032  1DB8  05D7               	andwf	___fltol@f1,f
  8033  1DB9  30FF               	movlw	255
  8034  1DBA  05D8               	andwf	___fltol@f1+1,f
  8035  1DBB  30FF               	movlw	255
  8036  1DBC  05D9               	andwf	___fltol@f1+2,f
  8037  1DBD  3000               	movlw	0
  8038  1DBE  05DA               	andwf	___fltol@f1+3,f
  8039  1DBF                     l3183:	
  8040  1DBF  3096               	movlw	150
  8041  1DC0  02E1               	subwf	___fltol@exp1,f
  8042  1DC1                     l3185:	
  8043  1DC1  1FE1               	btfss	___fltol@exp1,7
  8044  1DC2  2DC4               	goto	u5071
  8045  1DC3  2DC5               	goto	u5070
  8046  1DC4                     u5071:	
  8047  1DC4  2DDF               	goto	l3195
  8048  1DC5                     u5070:	
  8049  1DC5                     l3187:	
  8050  1DC5  0861               	movf	___fltol@exp1,w
  8051  1DC6  3A80               	xorlw	128
  8052  1DC7  3E97               	addlw	151
  8053  1DC8  1803               	skipnc
  8054  1DC9  2DCB               	goto	u5081
  8055  1DCA  2DCC               	goto	u5080
  8056  1DCB                     u5081:	
  8057  1DCB  2DCD               	goto	l3193
  8058  1DCC                     u5080:	
  8059  1DCC  2D98               	goto	l3173
  8060  1DCD                     l3193:	
  8061  1DCD  3001               	movlw	1
  8062  1DCE                     u5095:	
  8063  1DCE  1003               	clrc
  8064  1DCF  0CDA               	rrf	___fltol@f1+3,f
  8065  1DD0  0CD9               	rrf	___fltol@f1+2,f
  8066  1DD1  0CD8               	rrf	___fltol@f1+1,f
  8067  1DD2  0CD7               	rrf	___fltol@f1,f
  8068  1DD3  3EFF               	addlw	-1
  8069  1DD4  1D03               	skipz
  8070  1DD5  2DCE               	goto	u5095
  8071  1DD6  3001               	movlw	1
  8072  1DD7  00DB               	movwf	??___fltol
  8073  1DD8  085B               	movf	??___fltol,w
  8074  1DD9  07E1               	addwf	___fltol@exp1,f
  8075  1DDA  1D03               	btfss	3,2
  8076  1DDB  2DDD               	goto	u5101
  8077  1DDC  2DDE               	goto	u5100
  8078  1DDD                     u5101:	
  8079  1DDD  2DCD               	goto	l3193
  8080  1DDE                     u5100:	
  8081  1DDE  2DF6               	goto	l3203
  8082  1DDF                     l3195:	
  8083  1DDF  3020               	movlw	32
  8084  1DE0  0261               	subwf	___fltol@exp1,w
  8085  1DE1  1C03               	skipc
  8086  1DE2  2DE4               	goto	u5111
  8087  1DE3  2DE5               	goto	u5110
  8088  1DE4                     u5111:	
  8089  1DE4  2DF1               	goto	l566
  8090  1DE5                     u5110:	
  8091  1DE5  2D98               	goto	l3173
  8092  1DE6                     l3201:	
  8093  1DE6  3001               	movlw	1
  8094  1DE7  00DB               	movwf	??___fltol
  8095  1DE8                     u5125:	
  8096  1DE8  1003               	clrc
  8097  1DE9  0DD7               	rlf	___fltol@f1,f
  8098  1DEA  0DD8               	rlf	___fltol@f1+1,f
  8099  1DEB  0DD9               	rlf	___fltol@f1+2,f
  8100  1DEC  0DDA               	rlf	___fltol@f1+3,f
  8101  1DED  0BDB               	decfsz	??___fltol,f
  8102  1DEE  2DE8               	goto	u5125
  8103  1DEF  3001               	movlw	1
  8104  1DF0  02E1               	subwf	___fltol@exp1,f
  8105  1DF1                     l566:	
  8106  1DF1  0861               	movf	___fltol@exp1,w
  8107  1DF2  1D03               	btfss	3,2
  8108  1DF3  2DF5               	goto	u5131
  8109  1DF4  2DF6               	goto	u5130
  8110  1DF5                     u5131:	
  8111  1DF5  2DE6               	goto	l3201
  8112  1DF6                     u5130:	
  8113  1DF6                     l3203:	
  8114  1DF6  0860               	movf	___fltol@sign1,w
  8115  1DF7  1903               	btfsc	3,2
  8116  1DF8  2DFA               	goto	u5141
  8117  1DF9  2DFB               	goto	u5140
  8118  1DFA                     u5141:	
  8119  1DFA  2E06               	goto	l569
  8120  1DFB                     u5140:	
  8121  1DFB                     l3205:	
  8122  1DFB  09D7               	comf	___fltol@f1,f
  8123  1DFC  09D8               	comf	___fltol@f1+1,f
  8124  1DFD  09D9               	comf	___fltol@f1+2,f
  8125  1DFE  09DA               	comf	___fltol@f1+3,f
  8126  1DFF  0AD7               	incf	___fltol@f1,f
  8127  1E00  1903               	skipnz
  8128  1E01  0AD8               	incf	___fltol@f1+1,f
  8129  1E02  1903               	skipnz
  8130  1E03  0AD9               	incf	___fltol@f1+2,f
  8131  1E04  1903               	skipnz
  8132  1E05  0ADA               	incf	___fltol@f1+3,f
  8133  1E06                     l569:	
  8134  1E06                     l559:	
  8135  1E06  0008               	return
  8136  1E07                     __end_of___fltol:	
  8137                           
  8138                           	psect	text18
  8139  1B66                     __ptext18:	
  8140 ;; *************** function ___flsub *****************
  8141 ;; Defined at:
  8142 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  8143 ;; Parameters:    Size  Location     Type
  8144 ;;  a               4    0[BANK1 ] long 
  8145 ;;  b               4    4[BANK1 ] long 
  8146 ;; Auto vars:     Size  Location     Type
  8147 ;;		None
  8148 ;; Return value:  Size  Location     Type
  8149 ;;                  4    0[BANK1 ] long 
  8150 ;; Registers used:
  8151 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8152 ;; Tracked objects:
  8153 ;;		On entry : 0/0
  8154 ;;		On exit  : 0/0
  8155 ;;		Unchanged: 0/0
  8156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8157 ;;      Params:         0       0       8       0       0
  8158 ;;      Locals:         0       0       0       0       0
  8159 ;;      Temps:          0       0       0       0       0
  8160 ;;      Totals:         0       0       8       0       0
  8161 ;;Total ram usage:        8 bytes
  8162 ;; Hardware stack levels used:    1
  8163 ;; Hardware stack levels required when called:    2
  8164 ;; This function calls:
  8165 ;;		___fladd
  8166 ;; This function is called by:
  8167 ;;		_sprintf
  8168 ;; This function uses a non-reentrant model
  8169 ;;
  8170                           
  8171                           
  8172                           ;psect for function ___flsub
  8173  1B66                     ___flsub:	
  8174  1B66                     l3227:	
  8175                           ;incstack = 0
  8176                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8177                           
  8178  1B66  3080               	movlw	128
  8179  1B67  1683               	bsf	3,5	;RP0=1, select bank1
  8180  1B68  1303               	bcf	3,6	;RP1=0, select bank1
  8181  1B69  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  8182  1B6A                     l3229:	
  8183  1B6A  0827               	movf	(___flsub@b+3)^(0+128),w
  8184  1B6B  1283               	bcf	3,5	;RP0=0, select bank0
  8185  1B6C  1303               	bcf	3,6	;RP1=0, select bank0
  8186  1B6D  00DB               	movwf	___fladd@b+3
  8187  1B6E  1683               	bsf	3,5	;RP0=1, select bank1
  8188  1B6F  1303               	bcf	3,6	;RP1=0, select bank1
  8189  1B70  0826               	movf	(___flsub@b+2)^(0+128),w
  8190  1B71  1283               	bcf	3,5	;RP0=0, select bank0
  8191  1B72  1303               	bcf	3,6	;RP1=0, select bank0
  8192  1B73  00DA               	movwf	___fladd@b+2
  8193  1B74  1683               	bsf	3,5	;RP0=1, select bank1
  8194  1B75  1303               	bcf	3,6	;RP1=0, select bank1
  8195  1B76  0825               	movf	(___flsub@b+1)^(0+128),w
  8196  1B77  1283               	bcf	3,5	;RP0=0, select bank0
  8197  1B78  1303               	bcf	3,6	;RP1=0, select bank0
  8198  1B79  00D9               	movwf	___fladd@b+1
  8199  1B7A  1683               	bsf	3,5	;RP0=1, select bank1
  8200  1B7B  1303               	bcf	3,6	;RP1=0, select bank1
  8201  1B7C  0824               	movf	___flsub@b^(0+128),w
  8202  1B7D  1283               	bcf	3,5	;RP0=0, select bank0
  8203  1B7E  1303               	bcf	3,6	;RP1=0, select bank0
  8204  1B7F  00D8               	movwf	___fladd@b
  8205  1B80  1683               	bsf	3,5	;RP0=1, select bank1
  8206  1B81  1303               	bcf	3,6	;RP1=0, select bank1
  8207  1B82  0823               	movf	(___flsub@a+3)^(0+128),w
  8208  1B83  1283               	bcf	3,5	;RP0=0, select bank0
  8209  1B84  1303               	bcf	3,6	;RP1=0, select bank0
  8210  1B85  00DF               	movwf	___fladd@a+3
  8211  1B86  1683               	bsf	3,5	;RP0=1, select bank1
  8212  1B87  1303               	bcf	3,6	;RP1=0, select bank1
  8213  1B88  0822               	movf	(___flsub@a+2)^(0+128),w
  8214  1B89  1283               	bcf	3,5	;RP0=0, select bank0
  8215  1B8A  1303               	bcf	3,6	;RP1=0, select bank0
  8216  1B8B  00DE               	movwf	___fladd@a+2
  8217  1B8C  1683               	bsf	3,5	;RP0=1, select bank1
  8218  1B8D  1303               	bcf	3,6	;RP1=0, select bank1
  8219  1B8E  0821               	movf	(___flsub@a+1)^(0+128),w
  8220  1B8F  1283               	bcf	3,5	;RP0=0, select bank0
  8221  1B90  1303               	bcf	3,6	;RP1=0, select bank0
  8222  1B91  00DD               	movwf	___fladd@a+1
  8223  1B92  1683               	bsf	3,5	;RP0=1, select bank1
  8224  1B93  1303               	bcf	3,6	;RP1=0, select bank1
  8225  1B94  0820               	movf	___flsub@a^(0+128),w
  8226  1B95  1283               	bcf	3,5	;RP0=0, select bank0
  8227  1B96  1303               	bcf	3,6	;RP1=0, select bank0
  8228  1B97  00DC               	movwf	___fladd@a
  8229  1B98  160A  118A  2578  160A  158A  	fcall	___fladd
  8230  1B9D  1283               	bcf	3,5	;RP0=0, select bank0
  8231  1B9E  1303               	bcf	3,6	;RP1=0, select bank0
  8232  1B9F  085B               	movf	?___fladd+3,w
  8233  1BA0  1683               	bsf	3,5	;RP0=1, select bank1
  8234  1BA1  1303               	bcf	3,6	;RP1=0, select bank1
  8235  1BA2  00A3               	movwf	(?___flsub+3)^(0+128)
  8236  1BA3  1283               	bcf	3,5	;RP0=0, select bank0
  8237  1BA4  1303               	bcf	3,6	;RP1=0, select bank0
  8238  1BA5  085A               	movf	?___fladd+2,w
  8239  1BA6  1683               	bsf	3,5	;RP0=1, select bank1
  8240  1BA7  1303               	bcf	3,6	;RP1=0, select bank1
  8241  1BA8  00A2               	movwf	(?___flsub+2)^(0+128)
  8242  1BA9  1283               	bcf	3,5	;RP0=0, select bank0
  8243  1BAA  1303               	bcf	3,6	;RP1=0, select bank0
  8244  1BAB  0859               	movf	?___fladd+1,w
  8245  1BAC  1683               	bsf	3,5	;RP0=1, select bank1
  8246  1BAD  1303               	bcf	3,6	;RP1=0, select bank1
  8247  1BAE  00A1               	movwf	(?___flsub+1)^(0+128)
  8248  1BAF  1283               	bcf	3,5	;RP0=0, select bank0
  8249  1BB0  1303               	bcf	3,6	;RP1=0, select bank0
  8250  1BB1  0858               	movf	?___fladd,w
  8251  1BB2  1683               	bsf	3,5	;RP0=1, select bank1
  8252  1BB3  1303               	bcf	3,6	;RP1=0, select bank1
  8253  1BB4  00A0               	movwf	?___flsub^(0+128)
  8254  1BB5                     l729:	
  8255  1BB5  0008               	return
  8256  1BB6                     __end_of___flsub:	
  8257                           
  8258                           	psect	text19
  8259  1578                     __ptext19:	
  8260 ;; *************** function ___fladd *****************
  8261 ;; Defined at:
  8262 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  8263 ;; Parameters:    Size  Location     Type
  8264 ;;  b               4   56[BANK0 ] long 
  8265 ;;  a               4   60[BANK0 ] long 
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;  grs             1   75[BANK0 ] unsigned char 
  8268 ;;  bexp            1   74[BANK0 ] unsigned char 
  8269 ;;  aexp            1   73[BANK0 ] unsigned char 
  8270 ;;  signs           1   72[BANK0 ] unsigned char 
  8271 ;; Return value:  Size  Location     Type
  8272 ;;                  4   56[BANK0 ] unsigned char 
  8273 ;; Registers used:
  8274 ;;		wreg, status,2, status,0, btemp+1
  8275 ;; Tracked objects:
  8276 ;;		On entry : 0/0
  8277 ;;		On exit  : 0/0
  8278 ;;		Unchanged: 0/0
  8279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8280 ;;      Params:         0       8       0       0       0
  8281 ;;      Locals:         0       4       0       0       0
  8282 ;;      Temps:          0       8       0       0       0
  8283 ;;      Totals:         0      20       0       0       0
  8284 ;;Total ram usage:       20 bytes
  8285 ;; Hardware stack levels used:    1
  8286 ;; Hardware stack levels required when called:    1
  8287 ;; This function calls:
  8288 ;;		Nothing
  8289 ;; This function is called by:
  8290 ;;		_sprintf
  8291 ;;		___flsub
  8292 ;; This function uses a non-reentrant model
  8293 ;;
  8294                           
  8295                           
  8296                           ;psect for function ___fladd
  8297  1578                     ___fladd:	
  8298  1578                     l2561:	
  8299                           ;incstack = 0
  8300                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8301                           
  8302  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8303  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8304  157A  085B               	movf	___fladd@b+3,w
  8305  157B  3980               	andlw	128
  8306  157C  00E0               	movwf	??___fladd
  8307  157D  0860               	movf	??___fladd,w
  8308  157E  00E8               	movwf	___fladd@signs
  8309  157F                     l2563:	
  8310  157F  085B               	movf	___fladd@b+3,w
  8311  1580  00E0               	movwf	??___fladd
  8312  1581  0760               	addwf	??___fladd,w
  8313  1582  00E1               	movwf	??___fladd+1
  8314  1583  0861               	movf	??___fladd+1,w
  8315  1584  00EA               	movwf	___fladd@bexp
  8316  1585                     l2565:	
  8317  1585  1FDA               	btfss	___fladd@b+2,7
  8318  1586  2D88               	goto	u3471
  8319  1587  2D89               	goto	u3470
  8320  1588                     u3471:	
  8321  1588  2D8A               	goto	l2569
  8322  1589                     u3470:	
  8323  1589                     l2567:	
  8324  1589  146A               	bsf	___fladd@bexp,0
  8325  158A                     l2569:	
  8326  158A  086A               	movf	___fladd@bexp,w
  8327  158B  1903               	btfsc	3,2
  8328  158C  2D8E               	goto	u3481
  8329  158D  2D8F               	goto	u3480
  8330  158E                     u3481:	
  8331  158E  2D9F               	goto	l2579
  8332  158F                     u3480:	
  8333  158F                     l2571:	
  8334  158F  0A6A               	incf	___fladd@bexp,w
  8335  1590  1D03               	btfss	3,2
  8336  1591  2D93               	goto	u3491
  8337  1592  2D94               	goto	u3490
  8338  1593                     u3491:	
  8339  1593  2D9C               	goto	l2575
  8340  1594                     u3490:	
  8341  1594                     l2573:	
  8342  1594  3000               	movlw	0
  8343  1595  00DB               	movwf	___fladd@b+3
  8344  1596  3000               	movlw	0
  8345  1597  00DA               	movwf	___fladd@b+2
  8346  1598  3000               	movlw	0
  8347  1599  00D9               	movwf	___fladd@b+1
  8348  159A  3000               	movlw	0
  8349  159B  00D8               	movwf	___fladd@b
  8350  159C                     l2575:	
  8351  159C  17DA               	bsf	___fladd@b+2,7
  8352  159D                     l2577:	
  8353  159D  01DB               	clrf	___fladd@b+3
  8354  159E  2DA7               	goto	l2581
  8355  159F                     l2579:	
  8356  159F  3000               	movlw	0
  8357  15A0  00DB               	movwf	___fladd@b+3
  8358  15A1  3000               	movlw	0
  8359  15A2  00DA               	movwf	___fladd@b+2
  8360  15A3  3000               	movlw	0
  8361  15A4  00D9               	movwf	___fladd@b+1
  8362  15A5  3000               	movlw	0
  8363  15A6  00D8               	movwf	___fladd@b
  8364  15A7                     l2581:	
  8365  15A7  085F               	movf	___fladd@a+3,w
  8366  15A8  3980               	andlw	128
  8367  15A9  00E0               	movwf	??___fladd
  8368  15AA  0860               	movf	??___fladd,w
  8369  15AB  00E9               	movwf	___fladd@aexp
  8370  15AC                     l2583:	
  8371  15AC  0869               	movf	___fladd@aexp,w
  8372  15AD  0668               	xorwf	___fladd@signs,w
  8373  15AE  1903               	skipnz
  8374  15AF  2DB1               	goto	u3501
  8375  15B0  2DB2               	goto	u3500
  8376  15B1                     u3501:	
  8377  15B1  2DB3               	goto	l2587
  8378  15B2                     u3500:	
  8379  15B2                     l2585:	
  8380  15B2  1768               	bsf	___fladd@signs,6
  8381  15B3                     l2587:	
  8382  15B3  085F               	movf	___fladd@a+3,w
  8383  15B4  00E0               	movwf	??___fladd
  8384  15B5  0760               	addwf	??___fladd,w
  8385  15B6  00E1               	movwf	??___fladd+1
  8386  15B7  0861               	movf	??___fladd+1,w
  8387  15B8  00E9               	movwf	___fladd@aexp
  8388  15B9                     l2589:	
  8389  15B9  1FDE               	btfss	___fladd@a+2,7
  8390  15BA  2DBC               	goto	u3511
  8391  15BB  2DBD               	goto	u3510
  8392  15BC                     u3511:	
  8393  15BC  2DBE               	goto	l2593
  8394  15BD                     u3510:	
  8395  15BD                     l2591:	
  8396  15BD  1469               	bsf	___fladd@aexp,0
  8397  15BE                     l2593:	
  8398  15BE  0869               	movf	___fladd@aexp,w
  8399  15BF  1903               	btfsc	3,2
  8400  15C0  2DC2               	goto	u3521
  8401  15C1  2DC3               	goto	u3520
  8402  15C2                     u3521:	
  8403  15C2  2DD3               	goto	l2603
  8404  15C3                     u3520:	
  8405  15C3                     l2595:	
  8406  15C3  0A69               	incf	___fladd@aexp,w
  8407  15C4  1D03               	btfss	3,2
  8408  15C5  2DC7               	goto	u3531
  8409  15C6  2DC8               	goto	u3530
  8410  15C7                     u3531:	
  8411  15C7  2DD0               	goto	l2599
  8412  15C8                     u3530:	
  8413  15C8                     l2597:	
  8414  15C8  3000               	movlw	0
  8415  15C9  00DF               	movwf	___fladd@a+3
  8416  15CA  3000               	movlw	0
  8417  15CB  00DE               	movwf	___fladd@a+2
  8418  15CC  3000               	movlw	0
  8419  15CD  00DD               	movwf	___fladd@a+1
  8420  15CE  3000               	movlw	0
  8421  15CF  00DC               	movwf	___fladd@a
  8422  15D0                     l2599:	
  8423  15D0  17DE               	bsf	___fladd@a+2,7
  8424  15D1                     l2601:	
  8425  15D1  01DF               	clrf	___fladd@a+3
  8426  15D2  2DDB               	goto	l683
  8427  15D3                     l2603:	
  8428  15D3  3000               	movlw	0
  8429  15D4  00DF               	movwf	___fladd@a+3
  8430  15D5  3000               	movlw	0
  8431  15D6  00DE               	movwf	___fladd@a+2
  8432  15D7  3000               	movlw	0
  8433  15D8  00DD               	movwf	___fladd@a+1
  8434  15D9  3000               	movlw	0
  8435  15DA  00DC               	movwf	___fladd@a
  8436  15DB                     l683:	
  8437  15DB  086A               	movf	___fladd@bexp,w
  8438  15DC  0269               	subwf	___fladd@aexp,w
  8439  15DD  1803               	skipnc
  8440  15DE  2DE0               	goto	u3541
  8441  15DF  2DE1               	goto	u3540
  8442  15E0                     u3541:	
  8443  15E0  2E25               	goto	l2639
  8444  15E1                     u3540:	
  8445  15E1                     l2605:	
  8446  15E1  1F68               	btfss	___fladd@signs,6
  8447  15E2  2DE4               	goto	u3551
  8448  15E3  2DE5               	goto	u3550
  8449  15E4                     u3551:	
  8450  15E4  2DE9               	goto	l2609
  8451  15E5                     u3550:	
  8452  15E5                     l2607:	
  8453  15E5  3080               	movlw	128
  8454  15E6  00E0               	movwf	??___fladd
  8455  15E7  0860               	movf	??___fladd,w
  8456  15E8  06E8               	xorwf	___fladd@signs,f
  8457  15E9                     l2609:	
  8458  15E9  086A               	movf	___fladd@bexp,w
  8459  15EA  00E0               	movwf	??___fladd
  8460  15EB  0860               	movf	??___fladd,w
  8461  15EC  00EB               	movwf	___fladd@grs
  8462  15ED                     l2611:	
  8463  15ED  0869               	movf	___fladd@aexp,w
  8464  15EE  00E0               	movwf	??___fladd
  8465  15EF  0860               	movf	??___fladd,w
  8466  15F0  00EA               	movwf	___fladd@bexp
  8467  15F1                     l2613:	
  8468  15F1  086B               	movf	___fladd@grs,w
  8469  15F2  00E0               	movwf	??___fladd
  8470  15F3  0860               	movf	??___fladd,w
  8471  15F4  00E9               	movwf	___fladd@aexp
  8472  15F5                     l2615:	
  8473  15F5  0858               	movf	___fladd@b,w
  8474  15F6  00E0               	movwf	??___fladd
  8475  15F7  0860               	movf	??___fladd,w
  8476  15F8  00EB               	movwf	___fladd@grs
  8477  15F9                     l2617:	
  8478  15F9  085C               	movf	___fladd@a,w
  8479  15FA  00E0               	movwf	??___fladd
  8480  15FB  0860               	movf	??___fladd,w
  8481  15FC  00D8               	movwf	___fladd@b
  8482  15FD                     l2619:	
  8483  15FD  086B               	movf	___fladd@grs,w
  8484  15FE  00E0               	movwf	??___fladd
  8485  15FF  0860               	movf	??___fladd,w
  8486  1600  00DC               	movwf	___fladd@a
  8487  1601                     l2621:	
  8488  1601  0859               	movf	___fladd@b+1,w
  8489  1602  00E0               	movwf	??___fladd
  8490  1603  0860               	movf	??___fladd,w
  8491  1604  00EB               	movwf	___fladd@grs
  8492  1605                     l2623:	
  8493  1605  085D               	movf	___fladd@a+1,w
  8494  1606  00E0               	movwf	??___fladd
  8495  1607  0860               	movf	??___fladd,w
  8496  1608  00D9               	movwf	___fladd@b+1
  8497  1609                     l2625:	
  8498  1609  086B               	movf	___fladd@grs,w
  8499  160A  00E0               	movwf	??___fladd
  8500  160B  0860               	movf	??___fladd,w
  8501  160C  00DD               	movwf	___fladd@a+1
  8502  160D                     l2627:	
  8503  160D  085A               	movf	___fladd@b+2,w
  8504  160E  00E0               	movwf	??___fladd
  8505  160F  0860               	movf	??___fladd,w
  8506  1610  00EB               	movwf	___fladd@grs
  8507  1611                     l2629:	
  8508  1611  085E               	movf	___fladd@a+2,w
  8509  1612  00E0               	movwf	??___fladd
  8510  1613  0860               	movf	??___fladd,w
  8511  1614  00DA               	movwf	___fladd@b+2
  8512  1615                     l2631:	
  8513  1615  086B               	movf	___fladd@grs,w
  8514  1616  00E0               	movwf	??___fladd
  8515  1617  0860               	movf	??___fladd,w
  8516  1618  00DE               	movwf	___fladd@a+2
  8517  1619                     l2633:	
  8518  1619  085B               	movf	___fladd@b+3,w
  8519  161A  00E0               	movwf	??___fladd
  8520  161B  0860               	movf	??___fladd,w
  8521  161C  00EB               	movwf	___fladd@grs
  8522  161D                     l2635:	
  8523  161D  085F               	movf	___fladd@a+3,w
  8524  161E  00E0               	movwf	??___fladd
  8525  161F  0860               	movf	??___fladd,w
  8526  1620  00DB               	movwf	___fladd@b+3
  8527  1621                     l2637:	
  8528  1621  086B               	movf	___fladd@grs,w
  8529  1622  00E0               	movwf	??___fladd
  8530  1623  0860               	movf	??___fladd,w
  8531  1624  00DF               	movwf	___fladd@a+3
  8532  1625                     l2639:	
  8533  1625  01EB               	clrf	___fladd@grs
  8534  1626                     l2641:	
  8535  1626  0869               	movf	___fladd@aexp,w
  8536  1627  00E0               	movwf	??___fladd
  8537  1628  01E1               	clrf	??___fladd+1
  8538  1629  0861               	movf	??___fladd+1,w
  8539  162A  00E3               	movwf	??___fladd+3
  8540  162B  086A               	movf	___fladd@bexp,w
  8541  162C  0260               	subwf	??___fladd,w
  8542  162D  00E2               	movwf	??___fladd+2
  8543  162E  1C03               	skipc
  8544  162F  03E3               	decf	??___fladd+3,f
  8545  1630  0863               	movf	??___fladd+3,w
  8546  1631  3A80               	xorlw	128
  8547  1632  00FF               	movwf	btemp+1
  8548  1633  3080               	movlw	128
  8549  1634  027F               	subwf	btemp+1,w
  8550  1635  1D03               	skipz
  8551  1636  2E39               	goto	u3565
  8552  1637  301A               	movlw	26
  8553  1638  0262               	subwf	??___fladd+2,w
  8554  1639                     u3565:	
  8555  1639  1C03               	skipc
  8556  163A  2E3C               	goto	u3561
  8557  163B  2E3D               	goto	u3560
  8558  163C                     u3561:	
  8559  163C  2E7A               	goto	l2657
  8560  163D                     u3560:	
  8561  163D                     l2643:	
  8562  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8563  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8564  163F  085B               	movf	___fladd@b+3,w
  8565  1640  045A               	iorwf	___fladd@b+2,w
  8566  1641  0459               	iorwf	___fladd@b+1,w
  8567  1642  0458               	iorwf	___fladd@b,w
  8568  1643  1D03               	skipz
  8569  1644  2E46               	goto	u3571
  8570  1645  2E48               	goto	u3570
  8571  1646                     u3571:	
  8572  1646  3001               	movlw	1
  8573  1647  2E49               	goto	u3580
  8574  1648                     u3570:	
  8575  1648  3000               	movlw	0
  8576  1649                     u3580:	
  8577  1649  00E0               	movwf	??___fladd
  8578  164A  0860               	movf	??___fladd,w
  8579  164B  00EB               	movwf	___fladd@grs
  8580  164C  3000               	movlw	0
  8581  164D  00DB               	movwf	___fladd@b+3
  8582  164E  3000               	movlw	0
  8583  164F  00DA               	movwf	___fladd@b+2
  8584  1650  3000               	movlw	0
  8585  1651  00D9               	movwf	___fladd@b+1
  8586  1652  3000               	movlw	0
  8587  1653  00D8               	movwf	___fladd@b
  8588  1654  0869               	movf	___fladd@aexp,w
  8589  1655  00E0               	movwf	??___fladd
  8590  1656  0860               	movf	??___fladd,w
  8591  1657  00EA               	movwf	___fladd@bexp
  8592  1658  2E82               	goto	l687
  8593  1659                     l689:	
  8594  1659  1C6B               	btfss	___fladd@grs,0
  8595  165A  2E5C               	goto	u3591
  8596  165B  2E5D               	goto	u3590
  8597  165C                     u3591:	
  8598  165C  2E66               	goto	l2647
  8599  165D                     u3590:	
  8600  165D                     l2645:	
  8601  165D  086B               	movf	___fladd@grs,w
  8602  165E  00E0               	movwf	??___fladd
  8603  165F  1003               	clrc
  8604  1660  0C60               	rrf	??___fladd,w
  8605  1661  3801               	iorlw	1
  8606  1662  00E1               	movwf	??___fladd+1
  8607  1663  0861               	movf	??___fladd+1,w
  8608  1664  00EB               	movwf	___fladd@grs
  8609  1665  2E68               	goto	l2649
  8610  1666                     l2647:	
  8611  1666  1003               	clrc
  8612  1667  0CEB               	rrf	___fladd@grs,f
  8613  1668                     l2649:	
  8614  1668  1C58               	btfss	___fladd@b,0
  8615  1669  2E6B               	goto	u3601
  8616  166A  2E6C               	goto	u3600
  8617  166B                     u3601:	
  8618  166B  2E6D               	goto	l2653
  8619  166C                     u3600:	
  8620  166C                     l2651:	
  8621  166C  17EB               	bsf	___fladd@grs,7
  8622  166D                     l2653:	
  8623  166D  3001               	movlw	1
  8624  166E  00E0               	movwf	??___fladd
  8625  166F                     u3615:	
  8626  166F  0D5B               	rlf	___fladd@b+3,w
  8627  1670  0CDB               	rrf	___fladd@b+3,f
  8628  1671  0CDA               	rrf	___fladd@b+2,f
  8629  1672  0CD9               	rrf	___fladd@b+1,f
  8630  1673  0CD8               	rrf	___fladd@b,f
  8631  1674  0BE0               	decfsz	??___fladd& (0+127),f
  8632  1675  2E6F               	goto	u3615
  8633  1676                     l2655:	
  8634  1676  3001               	movlw	1
  8635  1677  00E0               	movwf	??___fladd
  8636  1678  0860               	movf	??___fladd,w
  8637  1679  07EA               	addwf	___fladd@bexp,f
  8638  167A                     l2657:	
  8639  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8640  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8641  167C  0869               	movf	___fladd@aexp,w
  8642  167D  026A               	subwf	___fladd@bexp,w
  8643  167E  1C03               	skipc
  8644  167F  2E81               	goto	u3621
  8645  1680  2E82               	goto	u3620
  8646  1681                     u3621:	
  8647  1681  2E59               	goto	l689
  8648  1682                     u3620:	
  8649  1682                     l687:	
  8650  1682  1B68               	btfsc	___fladd@signs,6
  8651  1683  2E85               	goto	u3631
  8652  1684  2E86               	goto	u3630
  8653  1685                     u3631:	
  8654  1685  2ED1               	goto	l2683
  8655  1686                     u3630:	
  8656  1686                     l2659:	
  8657  1686  086A               	movf	___fladd@bexp,w
  8658  1687  1D03               	btfss	3,2
  8659  1688  2E8A               	goto	u3641
  8660  1689  2E8B               	goto	u3640
  8661  168A                     u3641:	
  8662  168A  2E94               	goto	l2665
  8663  168B                     u3640:	
  8664  168B                     l2661:	
  8665  168B  3000               	movlw	0
  8666  168C  00DB               	movwf	?___fladd+3
  8667  168D  3000               	movlw	0
  8668  168E  00DA               	movwf	?___fladd+2
  8669  168F  3000               	movlw	0
  8670  1690  00D9               	movwf	?___fladd+1
  8671  1691  3000               	movlw	0
  8672  1692  00D8               	movwf	?___fladd
  8673  1693  2FFF               	goto	l696
  8674  1694                     l2665:	
  8675  1694  085C               	movf	___fladd@a,w
  8676  1695  07D8               	addwf	___fladd@b,f
  8677  1696  085D               	movf	___fladd@a+1,w
  8678  1697  1103               	clrz
  8679  1698  1803               	skipnc
  8680  1699  3E01               	addlw	1
  8681  169A  1903               	skipnz
  8682  169B  2E9D               	goto	u3651
  8683  169C  07D9               	addwf	___fladd@b+1,f
  8684  169D                     u3651:	
  8685  169D  085E               	movf	___fladd@a+2,w
  8686  169E  1103               	clrz
  8687  169F  1803               	skipnc
  8688  16A0  3E01               	addlw	1
  8689  16A1  1903               	skipnz
  8690  16A2  2EA4               	goto	u3652
  8691  16A3  07DA               	addwf	___fladd@b+2,f
  8692  16A4                     u3652:	
  8693  16A4  085F               	movf	___fladd@a+3,w
  8694  16A5  1103               	clrz
  8695  16A6  1803               	skipnc
  8696  16A7  3E01               	addlw	1
  8697  16A8  1903               	skipnz
  8698  16A9  2EAB               	goto	u3653
  8699  16AA  07DB               	addwf	___fladd@b+3,f
  8700  16AB                     u3653:	
  8701  16AB                     l2667:	
  8702  16AB  1C5B               	btfss	___fladd@b+3,0
  8703  16AC  2EAE               	goto	u3661
  8704  16AD  2EAF               	goto	u3660
  8705  16AE                     u3661:	
  8706  16AE  2F85               	goto	l2717
  8707  16AF                     u3660:	
  8708  16AF                     l2669:	
  8709  16AF  1C6B               	btfss	___fladd@grs,0
  8710  16B0  2EB2               	goto	u3671
  8711  16B1  2EB3               	goto	u3670
  8712  16B2                     u3671:	
  8713  16B2  2EBC               	goto	l2673
  8714  16B3                     u3670:	
  8715  16B3                     l2671:	
  8716  16B3  086B               	movf	___fladd@grs,w
  8717  16B4  00E0               	movwf	??___fladd
  8718  16B5  1003               	clrc
  8719  16B6  0C60               	rrf	??___fladd,w
  8720  16B7  3801               	iorlw	1
  8721  16B8  00E1               	movwf	??___fladd+1
  8722  16B9  0861               	movf	??___fladd+1,w
  8723  16BA  00EB               	movwf	___fladd@grs
  8724  16BB  2EBE               	goto	l2675
  8725  16BC                     l2673:	
  8726  16BC  1003               	clrc
  8727  16BD  0CEB               	rrf	___fladd@grs,f
  8728  16BE                     l2675:	
  8729  16BE  1C58               	btfss	___fladd@b,0
  8730  16BF  2EC1               	goto	u3681
  8731  16C0  2EC2               	goto	u3680
  8732  16C1                     u3681:	
  8733  16C1  2EC3               	goto	l2679
  8734  16C2                     u3680:	
  8735  16C2                     l2677:	
  8736  16C2  17EB               	bsf	___fladd@grs,7
  8737  16C3                     l2679:	
  8738  16C3  3001               	movlw	1
  8739  16C4  00E0               	movwf	??___fladd
  8740  16C5                     u3695:	
  8741  16C5  0D5B               	rlf	___fladd@b+3,w
  8742  16C6  0CDB               	rrf	___fladd@b+3,f
  8743  16C7  0CDA               	rrf	___fladd@b+2,f
  8744  16C8  0CD9               	rrf	___fladd@b+1,f
  8745  16C9  0CD8               	rrf	___fladd@b,f
  8746  16CA  0BE0               	decfsz	??___fladd& (0+127),f
  8747  16CB  2EC5               	goto	u3695
  8748  16CC                     l2681:	
  8749  16CC  3001               	movlw	1
  8750  16CD  00E0               	movwf	??___fladd
  8751  16CE  0860               	movf	??___fladd,w
  8752  16CF  07EA               	addwf	___fladd@bexp,f
  8753  16D0  2F85               	goto	l2717
  8754  16D1                     l2683:	
  8755  16D1  085B               	movf	___fladd@b+3,w
  8756  16D2  3A80               	xorlw	128
  8757  16D3  00FF               	movwf	btemp+1
  8758  16D4  085F               	movf	___fladd@a+3,w
  8759  16D5  3A80               	xorlw	128
  8760  16D6  027F               	subwf	btemp+1,w
  8761  16D7  1D03               	skipz
  8762  16D8  2EE3               	goto	u3703
  8763  16D9  085E               	movf	___fladd@a+2,w
  8764  16DA  025A               	subwf	___fladd@b+2,w
  8765  16DB  1D03               	skipz
  8766  16DC  2EE3               	goto	u3703
  8767  16DD  085D               	movf	___fladd@a+1,w
  8768  16DE  0259               	subwf	___fladd@b+1,w
  8769  16DF  1D03               	skipz
  8770  16E0  2EE3               	goto	u3703
  8771  16E1  085C               	movf	___fladd@a,w
  8772  16E2  0258               	subwf	___fladd@b,w
  8773  16E3                     u3703:	
  8774  16E3  1803               	skipnc
  8775  16E4  2EE6               	goto	u3701
  8776  16E5  2EE7               	goto	u3700
  8777  16E6                     u3701:	
  8778  16E6  2F3F               	goto	l2693
  8779  16E7                     u3700:	
  8780  16E7                     l2685:	
  8781  16E7  30FF               	movlw	255
  8782  16E8  00E0               	movwf	??___fladd
  8783  16E9  30FF               	movlw	255
  8784  16EA  00E1               	movwf	??___fladd+1
  8785  16EB  30FF               	movlw	255
  8786  16EC  00E2               	movwf	??___fladd+2
  8787  16ED  30FF               	movlw	255
  8788  16EE  00E3               	movwf	??___fladd+3
  8789  16EF  085C               	movf	___fladd@a,w
  8790  16F0  00E4               	movwf	??___fladd+4
  8791  16F1  085D               	movf	___fladd@a+1,w
  8792  16F2  00E5               	movwf	??___fladd+5
  8793  16F3  085E               	movf	___fladd@a+2,w
  8794  16F4  00E6               	movwf	??___fladd+6
  8795  16F5  085F               	movf	___fladd@a+3,w
  8796  16F6  00E7               	movwf	??___fladd+7
  8797  16F7  0858               	movf	___fladd@b,w
  8798  16F8  02E4               	subwf	??___fladd+4,f
  8799  16F9  0859               	movf	___fladd@b+1,w
  8800  16FA  1C03               	skipc
  8801  16FB  0F59               	incfsz	___fladd@b+1,w
  8802  16FC  2EFE               	goto	u3711
  8803  16FD  2EFF               	goto	u3712
  8804  16FE                     u3711:	
  8805  16FE  02E5               	subwf	??___fladd+5,f
  8806  16FF                     u3712:	
  8807  16FF  085A               	movf	___fladd@b+2,w
  8808  1700  1C03               	skipc
  8809  1701  0F5A               	incfsz	___fladd@b+2,w
  8810  1702  2F04               	goto	u3713
  8811  1703  2F05               	goto	u3714
  8812  1704                     u3713:	
  8813  1704  02E6               	subwf	??___fladd+6,f
  8814  1705                     u3714:	
  8815  1705  085B               	movf	___fladd@b+3,w
  8816  1706  1C03               	skipc
  8817  1707  0F5B               	incfsz	___fladd@b+3,w
  8818  1708  2F0A               	goto	u3715
  8819  1709  2F0B               	goto	u3716
  8820  170A                     u3715:	
  8821  170A  02E7               	subwf	??___fladd+7,f
  8822  170B                     u3716:	
  8823  170B  0864               	movf	??___fladd+4,w
  8824  170C  07E0               	addwf	??___fladd,f
  8825  170D  0865               	movf	??___fladd+5,w
  8826  170E  1803               	skipnc
  8827  170F  0F65               	incfsz	??___fladd+5,w
  8828  1710  2F12               	goto	u3720
  8829  1711  2F13               	goto	u3721
  8830  1712                     u3720:	
  8831  1712  07E1               	addwf	??___fladd+1,f
  8832  1713                     u3721:	
  8833  1713  0866               	movf	??___fladd+6,w
  8834  1714  1803               	skipnc
  8835  1715  0F66               	incfsz	??___fladd+6,w
  8836  1716  2F18               	goto	u3722
  8837  1717  2F19               	goto	u3723
  8838  1718                     u3722:	
  8839  1718  07E2               	addwf	??___fladd+2,f
  8840  1719                     u3723:	
  8841  1719  0867               	movf	??___fladd+7,w
  8842  171A  1803               	skipnc
  8843  171B  0A67               	incf	??___fladd+7,w
  8844  171C  07E3               	addwf	??___fladd+3,f
  8845  171D  0863               	movf	??___fladd+3,w
  8846  171E  00DB               	movwf	___fladd@b+3
  8847  171F  0862               	movf	??___fladd+2,w
  8848  1720  00DA               	movwf	___fladd@b+2
  8849  1721  0861               	movf	??___fladd+1,w
  8850  1722  00D9               	movwf	___fladd@b+1
  8851  1723  0860               	movf	??___fladd,w
  8852  1724  00D8               	movwf	___fladd@b
  8853  1725                     l2687:	
  8854  1725  3080               	movlw	128
  8855  1726  00E0               	movwf	??___fladd
  8856  1727  0860               	movf	??___fladd,w
  8857  1728  06E8               	xorwf	___fladd@signs,f
  8858  1729  09EB               	comf	___fladd@grs,f
  8859  172A  0AEB               	incf	___fladd@grs,f
  8860  172B                     l2689:	
  8861  172B  086B               	movf	___fladd@grs,w
  8862  172C  1D03               	btfss	3,2
  8863  172D  2F2F               	goto	u3731
  8864  172E  2F30               	goto	u3730
  8865  172F                     u3731:	
  8866  172F  2F4D               	goto	l704
  8867  1730                     u3730:	
  8868  1730                     l2691:	
  8869  1730  3001               	movlw	1
  8870  1731  07D8               	addwf	___fladd@b,f
  8871  1732  3000               	movlw	0
  8872  1733  1803               	skipnc
  8873  1734  3001               	movlw	1
  8874  1735  07D9               	addwf	___fladd@b+1,f
  8875  1736  3000               	movlw	0
  8876  1737  1803               	skipnc
  8877  1738  3001               	movlw	1
  8878  1739  07DA               	addwf	___fladd@b+2,f
  8879  173A  3000               	movlw	0
  8880  173B  1803               	skipnc
  8881  173C  3001               	movlw	1
  8882  173D  07DB               	addwf	___fladd@b+3,f
  8883  173E  2F4D               	goto	l704
  8884  173F                     l2693:	
  8885  173F  085C               	movf	___fladd@a,w
  8886  1740  02D8               	subwf	___fladd@b,f
  8887  1741  085D               	movf	___fladd@a+1,w
  8888  1742  1C03               	skipc
  8889  1743  0F5D               	incfsz	___fladd@a+1,w
  8890  1744  02D9               	subwf	___fladd@b+1,f
  8891  1745  085E               	movf	___fladd@a+2,w
  8892  1746  1C03               	skipc
  8893  1747  0F5E               	incfsz	___fladd@a+2,w
  8894  1748  02DA               	subwf	___fladd@b+2,f
  8895  1749  085F               	movf	___fladd@a+3,w
  8896  174A  1C03               	skipc
  8897  174B  0F5F               	incfsz	___fladd@a+3,w
  8898  174C  02DB               	subwf	___fladd@b+3,f
  8899  174D                     l704:	
  8900  174D  085B               	movf	___fladd@b+3,w
  8901  174E  045A               	iorwf	___fladd@b+2,w
  8902  174F  0459               	iorwf	___fladd@b+1,w
  8903  1750  0458               	iorwf	___fladd@b,w
  8904  1751  1D03               	skipz
  8905  1752  2F54               	goto	u3741
  8906  1753  2F55               	goto	u3740
  8907  1754                     u3741:	
  8908  1754  2F81               	goto	l2715
  8909  1755                     u3740:	
  8910  1755                     l2695:	
  8911  1755  086B               	movf	___fladd@grs,w
  8912  1756  1D03               	btfss	3,2
  8913  1757  2F59               	goto	u3751
  8914  1758  2F5A               	goto	u3750
  8915  1759                     u3751:	
  8916  1759  2F81               	goto	l2715
  8917  175A                     u3750:	
  8918  175A                     l2697:	
  8919  175A  3000               	movlw	0
  8920  175B  00DB               	movwf	?___fladd+3
  8921  175C  3000               	movlw	0
  8922  175D  00DA               	movwf	?___fladd+2
  8923  175E  3000               	movlw	0
  8924  175F  00D9               	movwf	?___fladd+1
  8925  1760  3000               	movlw	0
  8926  1761  00D8               	movwf	?___fladd
  8927  1762  2FFF               	goto	l696
  8928  1763                     l2701:	
  8929  1763  3001               	movlw	1
  8930  1764  00E0               	movwf	??___fladd
  8931  1765                     u3765:	
  8932  1765  1003               	clrc
  8933  1766  0DD8               	rlf	___fladd@b,f
  8934  1767  0DD9               	rlf	___fladd@b+1,f
  8935  1768  0DDA               	rlf	___fladd@b+2,f
  8936  1769  0DDB               	rlf	___fladd@b+3,f
  8937  176A  0BE0               	decfsz	??___fladd,f
  8938  176B  2F65               	goto	u3765
  8939  176C                     l2703:	
  8940  176C  1FEB               	btfss	___fladd@grs,7
  8941  176D  2F6F               	goto	u3771
  8942  176E  2F70               	goto	u3770
  8943  176F                     u3771:	
  8944  176F  2F71               	goto	l708
  8945  1770                     u3770:	
  8946  1770                     l2705:	
  8947  1770  1458               	bsf	___fladd@b,0
  8948  1771                     l708:	
  8949  1771  1C6B               	btfss	___fladd@grs,0
  8950  1772  2F74               	goto	u3781
  8951  1773  2F75               	goto	u3780
  8952  1774                     u3781:	
  8953  1774  2F78               	goto	l2709
  8954  1775                     u3780:	
  8955  1775                     l2707:	
  8956  1775  1403               	setc
  8957  1776  0DEB               	rlf	___fladd@grs,f
  8958  1777  2F7A               	goto	l2711
  8959  1778                     l2709:	
  8960  1778  1003               	clrc
  8961  1779  0DEB               	rlf	___fladd@grs,f
  8962  177A                     l2711:	
  8963  177A  086A               	movf	___fladd@bexp,w
  8964  177B  1903               	btfsc	3,2
  8965  177C  2F7E               	goto	u3791
  8966  177D  2F7F               	goto	u3790
  8967  177E                     u3791:	
  8968  177E  2F81               	goto	l2715
  8969  177F                     u3790:	
  8970  177F                     l2713:	
  8971  177F  3001               	movlw	1
  8972  1780  02EA               	subwf	___fladd@bexp,f
  8973  1781                     l2715:	
  8974  1781  1FDA               	btfss	___fladd@b+2,7
  8975  1782  2F84               	goto	u3801
  8976  1783  2F85               	goto	u3800
  8977  1784                     u3801:	
  8978  1784  2F63               	goto	l2701
  8979  1785                     u3800:	
  8980  1785                     l2717:	
  8981  1785  01E9               	clrf	___fladd@aexp
  8982  1786                     l2719:	
  8983  1786  1FEB               	btfss	___fladd@grs,7
  8984  1787  2F89               	goto	u3811
  8985  1788  2F8A               	goto	u3810
  8986  1789                     u3811:	
  8987  1789  2F98               	goto	l2727
  8988  178A                     u3810:	
  8989  178A                     l2721:	
  8990  178A  086B               	movf	___fladd@grs,w
  8991  178B  397F               	andlw	127
  8992  178C  1903               	btfsc	3,2
  8993  178D  2F8F               	goto	u3821
  8994  178E  2F90               	goto	u3820
  8995  178F                     u3821:	
  8996  178F  2F93               	goto	l714
  8997  1790                     u3820:	
  8998  1790                     l2723:	
  8999  1790  01E9               	clrf	___fladd@aexp
  9000  1791  0AE9               	incf	___fladd@aexp,f
  9001  1792  2F98               	goto	l2727
  9002  1793                     l714:	
  9003  1793  1C58               	btfss	___fladd@b,0
  9004  1794  2F96               	goto	u3831
  9005  1795  2F97               	goto	u3830
  9006  1796                     u3831:	
  9007  1796  2F98               	goto	l2727
  9008  1797                     u3830:	
  9009  1797  2F90               	goto	l2723
  9010  1798                     l2727:	
  9011  1798  0869               	movf	___fladd@aexp,w
  9012  1799  1903               	btfsc	3,2
  9013  179A  2F9C               	goto	u3841
  9014  179B  2F9D               	goto	u3840
  9015  179C                     u3841:	
  9016  179C  2FD1               	goto	l717
  9017  179D                     u3840:	
  9018  179D                     l2729:	
  9019  179D  3001               	movlw	1
  9020  179E  07D8               	addwf	___fladd@b,f
  9021  179F  3000               	movlw	0
  9022  17A0  1803               	skipnc
  9023  17A1  3001               	movlw	1
  9024  17A2  07D9               	addwf	___fladd@b+1,f
  9025  17A3  3000               	movlw	0
  9026  17A4  1803               	skipnc
  9027  17A5  3001               	movlw	1
  9028  17A6  07DA               	addwf	___fladd@b+2,f
  9029  17A7  3000               	movlw	0
  9030  17A8  1803               	skipnc
  9031  17A9  3001               	movlw	1
  9032  17AA  07DB               	addwf	___fladd@b+3,f
  9033  17AB                     l2731:	
  9034  17AB  1C5B               	btfss	___fladd@b+3,0
  9035  17AC  2FAE               	goto	u3851
  9036  17AD  2FAF               	goto	u3850
  9037  17AE                     u3851:	
  9038  17AE  2FD1               	goto	l717
  9039  17AF                     u3850:	
  9040  17AF                     l2733:	
  9041  17AF  0858               	movf	___fladd@b,w
  9042  17B0  00E0               	movwf	??___fladd
  9043  17B1  0859               	movf	___fladd@b+1,w
  9044  17B2  00E1               	movwf	??___fladd+1
  9045  17B3  085A               	movf	___fladd@b+2,w
  9046  17B4  00E2               	movwf	??___fladd+2
  9047  17B5  085B               	movf	___fladd@b+3,w
  9048  17B6  00E3               	movwf	??___fladd+3
  9049  17B7  3001               	movlw	1
  9050  17B8  00E4               	movwf	??___fladd+4
  9051  17B9                     u3865:	
  9052  17B9  0D63               	rlf	??___fladd+3,w
  9053  17BA  0CE3               	rrf	??___fladd+3,f
  9054  17BB  0CE2               	rrf	??___fladd+2,f
  9055  17BC  0CE1               	rrf	??___fladd+1,f
  9056  17BD  0CE0               	rrf	??___fladd,f
  9057  17BE                     u3860:	
  9058  17BE  0BE4               	decfsz	??___fladd+4,f
  9059  17BF  2FB9               	goto	u3865
  9060  17C0  0863               	movf	??___fladd+3,w
  9061  17C1  00DB               	movwf	___fladd@b+3
  9062  17C2  0862               	movf	??___fladd+2,w
  9063  17C3  00DA               	movwf	___fladd@b+2
  9064  17C4  0861               	movf	??___fladd+1,w
  9065  17C5  00D9               	movwf	___fladd@b+1
  9066  17C6  0860               	movf	??___fladd,w
  9067  17C7  00D8               	movwf	___fladd@b
  9068  17C8  0A6A               	incf	___fladd@bexp,w
  9069  17C9  1903               	btfsc	3,2
  9070  17CA  2FCC               	goto	u3871
  9071  17CB  2FCD               	goto	u3870
  9072  17CC                     u3871:	
  9073  17CC  2FD1               	goto	l717
  9074  17CD                     u3870:	
  9075  17CD                     l2735:	
  9076  17CD  3001               	movlw	1
  9077  17CE  00E0               	movwf	??___fladd
  9078  17CF  0860               	movf	??___fladd,w
  9079  17D0  07EA               	addwf	___fladd@bexp,f
  9080  17D1                     l717:	
  9081  17D1  0A6A               	incf	___fladd@bexp,w
  9082  17D2  1903               	btfsc	3,2
  9083  17D3  2FD5               	goto	u3881
  9084  17D4  2FD6               	goto	u3880
  9085  17D5                     u3881:	
  9086  17D5  2FDB               	goto	l2739
  9087  17D6                     u3880:	
  9088  17D6                     l2737:	
  9089  17D6  086A               	movf	___fladd@bexp,w
  9090  17D7  1D03               	btfss	3,2
  9091  17D8  2FDA               	goto	u3891
  9092  17D9  2FDB               	goto	u3890
  9093  17DA                     u3891:	
  9094  17DA  2FE9               	goto	l2745
  9095  17DB                     u3890:	
  9096  17DB                     l2739:	
  9097  17DB  3000               	movlw	0
  9098  17DC  00DB               	movwf	___fladd@b+3
  9099  17DD  3000               	movlw	0
  9100  17DE  00DA               	movwf	___fladd@b+2
  9101  17DF  3000               	movlw	0
  9102  17E0  00D9               	movwf	___fladd@b+1
  9103  17E1  3000               	movlw	0
  9104  17E2  00D8               	movwf	___fladd@b
  9105  17E3                     l2741:	
  9106  17E3  086A               	movf	___fladd@bexp,w
  9107  17E4  1D03               	btfss	3,2
  9108  17E5  2FE7               	goto	u3901
  9109  17E6  2FE8               	goto	u3900
  9110  17E7                     u3901:	
  9111  17E7  2FE9               	goto	l2745
  9112  17E8                     u3900:	
  9113  17E8                     l2743:	
  9114  17E8  01E8               	clrf	___fladd@signs
  9115  17E9                     l2745:	
  9116  17E9  1C6A               	btfss	___fladd@bexp,0
  9117  17EA  2FEC               	goto	u3911
  9118  17EB  2FED               	goto	u3910
  9119  17EC                     u3911:	
  9120  17EC  2FEF               	goto	l2749
  9121  17ED                     u3910:	
  9122  17ED                     l2747:	
  9123  17ED  17DA               	bsf	___fladd@b+2,7
  9124  17EE  2FF3               	goto	l725
  9125  17EF                     l2749:	
  9126  17EF  307F               	movlw	127
  9127  17F0  00E0               	movwf	??___fladd
  9128  17F1  0860               	movf	??___fladd,w
  9129  17F2  05DA               	andwf	___fladd@b+2,f
  9130  17F3                     l725:	
  9131  17F3  086A               	movf	___fladd@bexp,w
  9132  17F4  00E0               	movwf	??___fladd
  9133  17F5  1003               	clrc
  9134  17F6  0C60               	rrf	??___fladd,w
  9135  17F7  00E1               	movwf	??___fladd+1
  9136  17F8  0861               	movf	??___fladd+1,w
  9137  17F9  00DB               	movwf	___fladd@b+3
  9138  17FA                     l2751:	
  9139  17FA  1FE8               	btfss	___fladd@signs,7
  9140  17FB  2FFD               	goto	u3921
  9141  17FC  2FFE               	goto	u3920
  9142  17FD                     u3921:	
  9143  17FD  2FFF               	goto	l726
  9144  17FE                     u3920:	
  9145  17FE                     l2753:	
  9146  17FE  17DB               	bsf	___fladd@b+3,7
  9147  17FF                     l726:	
  9148  17FF                     l696:	
  9149  17FF  0008               	return
  9150  1800                     __end_of___fladd:	
  9151                           
  9152                           	psect	text20
  9153  1999                     __ptext20:	
  9154 ;; *************** function ___flneg *****************
  9155 ;; Defined at:
  9156 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flneg.c"
  9157 ;; Parameters:    Size  Location     Type
  9158 ;;  f1              4    3[COMMON] unsigned char 
  9159 ;; Auto vars:     Size  Location     Type
  9160 ;;		None
  9161 ;; Return value:  Size  Location     Type
  9162 ;;                  4    3[COMMON] unsigned char 
  9163 ;; Registers used:
  9164 ;;		wreg
  9165 ;; Tracked objects:
  9166 ;;		On entry : 0/0
  9167 ;;		On exit  : 0/0
  9168 ;;		Unchanged: 0/0
  9169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9170 ;;      Params:         4       0       0       0       0
  9171 ;;      Locals:         0       0       0       0       0
  9172 ;;      Temps:          0       0       0       0       0
  9173 ;;      Totals:         4       0       0       0       0
  9174 ;;Total ram usage:        4 bytes
  9175 ;; Hardware stack levels used:    1
  9176 ;; Hardware stack levels required when called:    1
  9177 ;; This function calls:
  9178 ;;		Nothing
  9179 ;; This function is called by:
  9180 ;;		_sprintf
  9181 ;; This function uses a non-reentrant model
  9182 ;;
  9183                           
  9184                           
  9185                           ;psect for function ___flneg
  9186  1999                     ___flneg:	
  9187  1999                     l3163:	
  9188                           ;incstack = 0
  9189                           ; Regs used in ___flneg: [wreg]
  9190                           
  9191  1999  0876               	movf	___flneg@f1+3,w
  9192  199A  0475               	iorwf	___flneg@f1+2,w
  9193  199B  0474               	iorwf	___flneg@f1+1,w
  9194  199C  0473               	iorwf	___flneg@f1,w
  9195  199D  1903               	skipnz
  9196  199E  29A0               	goto	u5041
  9197  199F  29A1               	goto	u5040
  9198  19A0                     u5041:	
  9199  19A0  29A3               	goto	l3167
  9200  19A1                     u5040:	
  9201  19A1                     l3165:	
  9202  19A1  3080               	movlw	128
  9203  19A2  06F6               	xorwf	___flneg@f1+3,f
  9204  19A3                     l3167:	
  9205  19A3                     l555:	
  9206  19A3  0008               	return
  9207  19A4                     __end_of___flneg:	
  9208                           
  9209                           	psect	text21
  9210  1EA0                     __ptext21:	
  9211 ;; *************** function ___flge *****************
  9212 ;; Defined at:
  9213 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  9214 ;; Parameters:    Size  Location     Type
  9215 ;;  ff1             4    0[BANK0 ] unsigned char 
  9216 ;;  ff2             4    4[BANK0 ] unsigned char 
  9217 ;; Auto vars:     Size  Location     Type
  9218 ;;		None
  9219 ;; Return value:  Size  Location     Type
  9220 ;;		None               void
  9221 ;; Registers used:
  9222 ;;		wreg, status,2, status,0
  9223 ;; Tracked objects:
  9224 ;;		On entry : 0/0
  9225 ;;		On exit  : 0/0
  9226 ;;		Unchanged: 0/0
  9227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9228 ;;      Params:         0       8       0       0       0
  9229 ;;      Locals:         0       0       0       0       0
  9230 ;;      Temps:          4       0       0       0       0
  9231 ;;      Totals:         4       8       0       0       0
  9232 ;;Total ram usage:       12 bytes
  9233 ;; Hardware stack levels used:    1
  9234 ;; Hardware stack levels required when called:    1
  9235 ;; This function calls:
  9236 ;;		Nothing
  9237 ;; This function is called by:
  9238 ;;		_sprintf
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242                           
  9243                           ;psect for function ___flge
  9244  1EA0                     ___flge:	
  9245  1EA0                     l4121:	
  9246                           ;incstack = 0
  9247                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9248                           
  9249  1EA0  3000               	movlw	0
  9250  1EA1  1283               	bcf	3,5	;RP0=0, select bank0
  9251  1EA2  1303               	bcf	3,6	;RP1=0, select bank0
  9252  1EA3  0520               	andwf	___flge@ff1,w
  9253  1EA4  00F3               	movwf	??___flge
  9254  1EA5  3000               	movlw	0
  9255  1EA6  0521               	andwf	___flge@ff1+1,w
  9256  1EA7  00F4               	movwf	??___flge+1
  9257  1EA8  3080               	movlw	128
  9258  1EA9  0522               	andwf	___flge@ff1+2,w
  9259  1EAA  00F5               	movwf	??___flge+2
  9260  1EAB  307F               	movlw	127
  9261  1EAC  0523               	andwf	___flge@ff1+3,w
  9262  1EAD  00F6               	movwf	??___flge+3
  9263  1EAE  0876               	movf	??___flge+3,w
  9264  1EAF  0475               	iorwf	??___flge+2,w
  9265  1EB0  0474               	iorwf	??___flge+1,w
  9266  1EB1  0473               	iorwf	??___flge,w
  9267  1EB2  1D03               	skipz
  9268  1EB3  2EB5               	goto	u6841
  9269  1EB4  2EB6               	goto	u6840
  9270  1EB5                     u6841:	
  9271  1EB5  2EBE               	goto	l547
  9272  1EB6                     u6840:	
  9273  1EB6                     l4123:	
  9274  1EB6  3000               	movlw	0
  9275  1EB7  00A3               	movwf	___flge@ff1+3
  9276  1EB8  3000               	movlw	0
  9277  1EB9  00A2               	movwf	___flge@ff1+2
  9278  1EBA  3000               	movlw	0
  9279  1EBB  00A1               	movwf	___flge@ff1+1
  9280  1EBC  3000               	movlw	0
  9281  1EBD  00A0               	movwf	___flge@ff1
  9282  1EBE                     l547:	
  9283  1EBE  3000               	movlw	0
  9284  1EBF  0524               	andwf	___flge@ff2,w
  9285  1EC0  00F3               	movwf	??___flge
  9286  1EC1  3000               	movlw	0
  9287  1EC2  0525               	andwf	___flge@ff2+1,w
  9288  1EC3  00F4               	movwf	??___flge+1
  9289  1EC4  3080               	movlw	128
  9290  1EC5  0526               	andwf	___flge@ff2+2,w
  9291  1EC6  00F5               	movwf	??___flge+2
  9292  1EC7  307F               	movlw	127
  9293  1EC8  0527               	andwf	___flge@ff2+3,w
  9294  1EC9  00F6               	movwf	??___flge+3
  9295  1ECA  0876               	movf	??___flge+3,w
  9296  1ECB  0475               	iorwf	??___flge+2,w
  9297  1ECC  0474               	iorwf	??___flge+1,w
  9298  1ECD  0473               	iorwf	??___flge,w
  9299  1ECE  1D03               	skipz
  9300  1ECF  2ED1               	goto	u6851
  9301  1ED0  2ED2               	goto	u6850
  9302  1ED1                     u6851:	
  9303  1ED1  2EDA               	goto	l4127
  9304  1ED2                     u6850:	
  9305  1ED2                     l4125:	
  9306  1ED2  3000               	movlw	0
  9307  1ED3  00A7               	movwf	___flge@ff2+3
  9308  1ED4  3000               	movlw	0
  9309  1ED5  00A6               	movwf	___flge@ff2+2
  9310  1ED6  3000               	movlw	0
  9311  1ED7  00A5               	movwf	___flge@ff2+1
  9312  1ED8  3000               	movlw	0
  9313  1ED9  00A4               	movwf	___flge@ff2
  9314  1EDA                     l4127:	
  9315  1EDA  1FA3               	btfss	___flge@ff1+3,7
  9316  1EDB  2EDD               	goto	u6861
  9317  1EDC  2EDE               	goto	u6860
  9318  1EDD                     u6861:	
  9319  1EDD  2F02               	goto	l4131
  9320  1EDE                     u6860:	
  9321  1EDE                     l4129:	
  9322  1EDE  3000               	movlw	0
  9323  1EDF  00F3               	movwf	??___flge
  9324  1EE0  3000               	movlw	0
  9325  1EE1  00F4               	movwf	??___flge+1
  9326  1EE2  3000               	movlw	0
  9327  1EE3  00F5               	movwf	??___flge+2
  9328  1EE4  3080               	movlw	128
  9329  1EE5  00F6               	movwf	??___flge+3
  9330  1EE6  0820               	movf	___flge@ff1,w
  9331  1EE7  02F3               	subwf	??___flge,f
  9332  1EE8  0821               	movf	___flge@ff1+1,w
  9333  1EE9  1C03               	skipc
  9334  1EEA  0F21               	incfsz	___flge@ff1+1,w
  9335  1EEB  2EED               	goto	u6871
  9336  1EEC  2EEE               	goto	u6872
  9337  1EED                     u6871:	
  9338  1EED  02F4               	subwf	??___flge+1,f
  9339  1EEE                     u6872:	
  9340  1EEE  0822               	movf	___flge@ff1+2,w
  9341  1EEF  1C03               	skipc
  9342  1EF0  0F22               	incfsz	___flge@ff1+2,w
  9343  1EF1  2EF3               	goto	u6873
  9344  1EF2  2EF4               	goto	u6874
  9345  1EF3                     u6873:	
  9346  1EF3  02F5               	subwf	??___flge+2,f
  9347  1EF4                     u6874:	
  9348  1EF4  0823               	movf	___flge@ff1+3,w
  9349  1EF5  1C03               	skipc
  9350  1EF6  0F23               	incfsz	___flge@ff1+3,w
  9351  1EF7  2EF9               	goto	u6875
  9352  1EF8  2EFA               	goto	u6876
  9353  1EF9                     u6875:	
  9354  1EF9  02F6               	subwf	??___flge+3,f
  9355  1EFA                     u6876:	
  9356  1EFA  0876               	movf	??___flge+3,w
  9357  1EFB  00A3               	movwf	___flge@ff1+3
  9358  1EFC  0875               	movf	??___flge+2,w
  9359  1EFD  00A2               	movwf	___flge@ff1+2
  9360  1EFE  0874               	movf	??___flge+1,w
  9361  1EFF  00A1               	movwf	___flge@ff1+1
  9362  1F00  0873               	movf	??___flge,w
  9363  1F01  00A0               	movwf	___flge@ff1
  9364  1F02                     l4131:	
  9365  1F02  1FA7               	btfss	___flge@ff2+3,7
  9366  1F03  2F05               	goto	u6881
  9367  1F04  2F06               	goto	u6880
  9368  1F05                     u6881:	
  9369  1F05  2F2A               	goto	l550
  9370  1F06                     u6880:	
  9371  1F06                     l4133:	
  9372  1F06  3000               	movlw	0
  9373  1F07  00F3               	movwf	??___flge
  9374  1F08  3000               	movlw	0
  9375  1F09  00F4               	movwf	??___flge+1
  9376  1F0A  3000               	movlw	0
  9377  1F0B  00F5               	movwf	??___flge+2
  9378  1F0C  3080               	movlw	128
  9379  1F0D  00F6               	movwf	??___flge+3
  9380  1F0E  0824               	movf	___flge@ff2,w
  9381  1F0F  02F3               	subwf	??___flge,f
  9382  1F10  0825               	movf	___flge@ff2+1,w
  9383  1F11  1C03               	skipc
  9384  1F12  0F25               	incfsz	___flge@ff2+1,w
  9385  1F13  2F15               	goto	u6891
  9386  1F14  2F16               	goto	u6892
  9387  1F15                     u6891:	
  9388  1F15  02F4               	subwf	??___flge+1,f
  9389  1F16                     u6892:	
  9390  1F16  0826               	movf	___flge@ff2+2,w
  9391  1F17  1C03               	skipc
  9392  1F18  0F26               	incfsz	___flge@ff2+2,w
  9393  1F19  2F1B               	goto	u6893
  9394  1F1A  2F1C               	goto	u6894
  9395  1F1B                     u6893:	
  9396  1F1B  02F5               	subwf	??___flge+2,f
  9397  1F1C                     u6894:	
  9398  1F1C  0827               	movf	___flge@ff2+3,w
  9399  1F1D  1C03               	skipc
  9400  1F1E  0F27               	incfsz	___flge@ff2+3,w
  9401  1F1F  2F21               	goto	u6895
  9402  1F20  2F22               	goto	u6896
  9403  1F21                     u6895:	
  9404  1F21  02F6               	subwf	??___flge+3,f
  9405  1F22                     u6896:	
  9406  1F22  0876               	movf	??___flge+3,w
  9407  1F23  00A7               	movwf	___flge@ff2+3
  9408  1F24  0875               	movf	??___flge+2,w
  9409  1F25  00A6               	movwf	___flge@ff2+2
  9410  1F26  0874               	movf	??___flge+1,w
  9411  1F27  00A5               	movwf	___flge@ff2+1
  9412  1F28  0873               	movf	??___flge,w
  9413  1F29  00A4               	movwf	___flge@ff2
  9414  1F2A                     l550:	
  9415  1F2A  3080               	movlw	128
  9416  1F2B  06A3               	xorwf	___flge@ff1+3,f
  9417  1F2C  3080               	movlw	128
  9418  1F2D  06A7               	xorwf	___flge@ff2+3,f
  9419  1F2E  0827               	movf	___flge@ff2+3,w
  9420  1F2F  0223               	subwf	___flge@ff1+3,w
  9421  1F30  1D03               	skipz
  9422  1F31  2F3C               	goto	u6905
  9423  1F32  0826               	movf	___flge@ff2+2,w
  9424  1F33  0222               	subwf	___flge@ff1+2,w
  9425  1F34  1D03               	skipz
  9426  1F35  2F3C               	goto	u6905
  9427  1F36  0825               	movf	___flge@ff2+1,w
  9428  1F37  0221               	subwf	___flge@ff1+1,w
  9429  1F38  1D03               	skipz
  9430  1F39  2F3C               	goto	u6905
  9431  1F3A  0824               	movf	___flge@ff2,w
  9432  1F3B  0220               	subwf	___flge@ff1,w
  9433  1F3C                     u6905:	
  9434  1F3C  1803               	skipnc
  9435  1F3D  2F3F               	goto	u6901
  9436  1F3E  2F40               	goto	u6900
  9437  1F3F                     u6901:	
  9438  1F3F  2F42               	goto	l4137
  9439  1F40                     u6900:	
  9440  1F40                     l4135:	
  9441  1F40  1003               	clrc
  9442  1F41  2F43               	goto	l551
  9443  1F42                     l4137:	
  9444  1F42  1403               	setc
  9445  1F43                     l551:	
  9446  1F43  0008               	return
  9447  1F44                     __end_of___flge:	
  9448                           
  9449                           	psect	text22
  9450  1B16                     __ptext22:	
  9451 ;; *************** function ___fleq *****************
  9452 ;; Defined at:
  9453 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  9454 ;; Parameters:    Size  Location     Type
  9455 ;;  ff1             4    0[BANK0 ] unsigned char 
  9456 ;;  ff2             4    4[BANK0 ] unsigned char 
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;		None
  9459 ;; Return value:  Size  Location     Type
  9460 ;;		None               void
  9461 ;; Registers used:
  9462 ;;		wreg, status,2, status,0
  9463 ;; Tracked objects:
  9464 ;;		On entry : 0/0
  9465 ;;		On exit  : 0/0
  9466 ;;		Unchanged: 0/0
  9467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9468 ;;      Params:         0       8       0       0       0
  9469 ;;      Locals:         0       0       0       0       0
  9470 ;;      Temps:          4       0       0       0       0
  9471 ;;      Totals:         4       8       0       0       0
  9472 ;;Total ram usage:       12 bytes
  9473 ;; Hardware stack levels used:    1
  9474 ;; Hardware stack levels required when called:    1
  9475 ;; This function calls:
  9476 ;;		Nothing
  9477 ;; This function is called by:
  9478 ;;		_sprintf
  9479 ;; This function uses a non-reentrant model
  9480 ;;
  9481                           
  9482                           
  9483                           ;psect for function ___fleq
  9484  1B16                     ___fleq:	
  9485  1B16                     l4109:	
  9486                           ;incstack = 0
  9487                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9488                           
  9489  1B16  3000               	movlw	0
  9490  1B17  1283               	bcf	3,5	;RP0=0, select bank0
  9491  1B18  1303               	bcf	3,6	;RP1=0, select bank0
  9492  1B19  0520               	andwf	___fleq@ff1,w
  9493  1B1A  00F3               	movwf	??___fleq
  9494  1B1B  3000               	movlw	0
  9495  1B1C  0521               	andwf	___fleq@ff1+1,w
  9496  1B1D  00F4               	movwf	??___fleq+1
  9497  1B1E  3080               	movlw	128
  9498  1B1F  0522               	andwf	___fleq@ff1+2,w
  9499  1B20  00F5               	movwf	??___fleq+2
  9500  1B21  307F               	movlw	127
  9501  1B22  0523               	andwf	___fleq@ff1+3,w
  9502  1B23  00F6               	movwf	??___fleq+3
  9503  1B24  0876               	movf	??___fleq+3,w
  9504  1B25  0475               	iorwf	??___fleq+2,w
  9505  1B26  0474               	iorwf	??___fleq+1,w
  9506  1B27  0473               	iorwf	??___fleq,w
  9507  1B28  1D03               	skipz
  9508  1B29  2B2B               	goto	u6811
  9509  1B2A  2B2C               	goto	u6810
  9510  1B2B                     u6811:	
  9511  1B2B  2B34               	goto	l542
  9512  1B2C                     u6810:	
  9513  1B2C                     l4111:	
  9514  1B2C  3000               	movlw	0
  9515  1B2D  00A3               	movwf	___fleq@ff1+3
  9516  1B2E  3000               	movlw	0
  9517  1B2F  00A2               	movwf	___fleq@ff1+2
  9518  1B30  3000               	movlw	0
  9519  1B31  00A1               	movwf	___fleq@ff1+1
  9520  1B32  3000               	movlw	0
  9521  1B33  00A0               	movwf	___fleq@ff1
  9522  1B34                     l542:	
  9523  1B34  3000               	movlw	0
  9524  1B35  0524               	andwf	___fleq@ff2,w
  9525  1B36  00F3               	movwf	??___fleq
  9526  1B37  3000               	movlw	0
  9527  1B38  0525               	andwf	___fleq@ff2+1,w
  9528  1B39  00F4               	movwf	??___fleq+1
  9529  1B3A  3080               	movlw	128
  9530  1B3B  0526               	andwf	___fleq@ff2+2,w
  9531  1B3C  00F5               	movwf	??___fleq+2
  9532  1B3D  307F               	movlw	127
  9533  1B3E  0527               	andwf	___fleq@ff2+3,w
  9534  1B3F  00F6               	movwf	??___fleq+3
  9535  1B40  0876               	movf	??___fleq+3,w
  9536  1B41  0475               	iorwf	??___fleq+2,w
  9537  1B42  0474               	iorwf	??___fleq+1,w
  9538  1B43  0473               	iorwf	??___fleq,w
  9539  1B44  1D03               	skipz
  9540  1B45  2B47               	goto	u6821
  9541  1B46  2B48               	goto	u6820
  9542  1B47                     u6821:	
  9543  1B47  2B50               	goto	l543
  9544  1B48                     u6820:	
  9545  1B48                     l4113:	
  9546  1B48  3000               	movlw	0
  9547  1B49  00A7               	movwf	___fleq@ff2+3
  9548  1B4A  3000               	movlw	0
  9549  1B4B  00A6               	movwf	___fleq@ff2+2
  9550  1B4C  3000               	movlw	0
  9551  1B4D  00A5               	movwf	___fleq@ff2+1
  9552  1B4E  3000               	movlw	0
  9553  1B4F  00A4               	movwf	___fleq@ff2
  9554  1B50                     l543:	
  9555  1B50  0827               	movf	___fleq@ff2+3,w
  9556  1B51  0623               	xorwf	___fleq@ff1+3,w
  9557  1B52  1D03               	skipz
  9558  1B53  2B5E               	goto	u6835
  9559  1B54  0826               	movf	___fleq@ff2+2,w
  9560  1B55  0622               	xorwf	___fleq@ff1+2,w
  9561  1B56  1D03               	skipz
  9562  1B57  2B5E               	goto	u6835
  9563  1B58  0825               	movf	___fleq@ff2+1,w
  9564  1B59  0621               	xorwf	___fleq@ff1+1,w
  9565  1B5A  1D03               	skipz
  9566  1B5B  2B5E               	goto	u6835
  9567  1B5C  0824               	movf	___fleq@ff2,w
  9568  1B5D  0620               	xorwf	___fleq@ff1,w
  9569  1B5E                     u6835:	
  9570  1B5E  1903               	skipnz
  9571  1B5F  2B61               	goto	u6831
  9572  1B60  2B62               	goto	u6830
  9573  1B61                     u6831:	
  9574  1B61  2B64               	goto	l4117
  9575  1B62                     u6830:	
  9576  1B62                     l4115:	
  9577  1B62  1003               	clrc
  9578  1B63  2B65               	goto	l544
  9579  1B64                     l4117:	
  9580  1B64  1403               	setc
  9581  1B65                     l544:	
  9582  1B65  0008               	return
  9583  1B66                     __end_of___fleq:	
  9584                           
  9585                           	psect	text23
  9586  19D4                     __ptext23:	
  9587 ;; *************** function _setup *****************
  9588 ;; Defined at:
  9589 ;;		line 99 in file "Lab3_v2.c"
  9590 ;; Parameters:    Size  Location     Type
  9591 ;;		None
  9592 ;; Auto vars:     Size  Location     Type
  9593 ;;		None
  9594 ;; Return value:  Size  Location     Type
  9595 ;;                  1    wreg      void 
  9596 ;; Registers used:
  9597 ;;		wreg, status,2
  9598 ;; Tracked objects:
  9599 ;;		On entry : 0/0
  9600 ;;		On exit  : 0/0
  9601 ;;		Unchanged: 0/0
  9602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9603 ;;      Params:         0       0       0       0       0
  9604 ;;      Locals:         0       0       0       0       0
  9605 ;;      Temps:          0       0       0       0       0
  9606 ;;      Totals:         0       0       0       0       0
  9607 ;;Total ram usage:        0 bytes
  9608 ;; Hardware stack levels used:    1
  9609 ;; Hardware stack levels required when called:    1
  9610 ;; This function calls:
  9611 ;;		Nothing
  9612 ;; This function is called by:
  9613 ;;		_main
  9614 ;; This function uses a non-reentrant model
  9615 ;;
  9616                           
  9617                           
  9618                           ;psect for function _setup
  9619  19D4                     _setup:	
  9620  19D4                     l3277:	
  9621                           ;incstack = 0
  9622                           ; Regs used in _setup: [wreg+status,2]
  9623                           
  9624                           
  9625                           ;Lab3_v2.c: 100:     TRISA = 0x00;
  9626  19D4  1683               	bsf	3,5	;RP0=1, select bank1
  9627  19D5  1303               	bcf	3,6	;RP1=0, select bank1
  9628  19D6  0185               	clrf	5	;volatile
  9629  19D7                     l3279:	
  9630                           
  9631                           ;Lab3_v2.c: 101:     TRISB = 0xFF;
  9632  19D7  30FF               	movlw	255
  9633  19D8  0086               	movwf	6	;volatile
  9634  19D9                     l3281:	
  9635                           
  9636                           ;Lab3_v2.c: 102:     TRISC = 0x00;
  9637  19D9  0187               	clrf	7	;volatile
  9638  19DA                     l3283:	
  9639                           
  9640                           ;Lab3_v2.c: 103:     TRISD = 0x00;
  9641  19DA  0188               	clrf	8	;volatile
  9642  19DB                     l3285:	
  9643                           
  9644                           ;Lab3_v2.c: 104:     ANSEL = 0x00;
  9645  19DB  1683               	bsf	3,5	;RP0=1, select bank3
  9646  19DC  1703               	bsf	3,6	;RP1=1, select bank3
  9647  19DD  0188               	clrf	8	;volatile
  9648  19DE                     l3287:	
  9649                           
  9650                           ;Lab3_v2.c: 105:     ANSELHbits.ANS13 = 1;
  9651  19DE  1689               	bsf	9,5	;volatile
  9652  19DF                     l3289:	
  9653                           
  9654                           ;Lab3_v2.c: 106:     ANSELHbits.ANS8 = 1;
  9655  19DF  1409               	bsf	9,0	;volatile
  9656  19E0                     l3291:	
  9657                           
  9658                           ;Lab3_v2.c: 107:     PORTA = 0x00;
  9659  19E0  1283               	bcf	3,5	;RP0=0, select bank0
  9660  19E1  1303               	bcf	3,6	;RP1=0, select bank0
  9661  19E2  0185               	clrf	5	;volatile
  9662  19E3                     l3293:	
  9663                           
  9664                           ;Lab3_v2.c: 108:     PORTB = 0x00;
  9665  19E3  0186               	clrf	6	;volatile
  9666  19E4                     l3295:	
  9667                           
  9668                           ;Lab3_v2.c: 109:     PORTC = 0x00;
  9669  19E4  0187               	clrf	7	;volatile
  9670  19E5                     l3297:	
  9671                           
  9672                           ;Lab3_v2.c: 110:     PORTD = 0x00;
  9673  19E5  0188               	clrf	8	;volatile
  9674  19E6                     l85:	
  9675  19E6  0008               	return
  9676  19E7                     __end_of_setup:	
  9677                           
  9678                           	psect	text24
  9679  078A                     __ptext24:	
  9680 ;; *************** function _oscInt *****************
  9681 ;; Defined at:
  9682 ;;		line 11 in file "lib_osccon.c"
  9683 ;; Parameters:    Size  Location     Type
  9684 ;;  freq            1    wreg     unsigned char 
  9685 ;; Auto vars:     Size  Location     Type
  9686 ;;  freq            1    5[COMMON] unsigned char 
  9687 ;; Return value:  Size  Location     Type
  9688 ;;                  1    wreg      unsigned char 
  9689 ;; Registers used:
  9690 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9691 ;; Tracked objects:
  9692 ;;		On entry : 0/0
  9693 ;;		On exit  : 0/0
  9694 ;;		Unchanged: 0/0
  9695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9696 ;;      Params:         0       0       0       0       0
  9697 ;;      Locals:         1       0       0       0       0
  9698 ;;      Temps:          2       0       0       0       0
  9699 ;;      Totals:         3       0       0       0       0
  9700 ;;Total ram usage:        3 bytes
  9701 ;; Hardware stack levels used:    1
  9702 ;; Hardware stack levels required when called:    1
  9703 ;; This function calls:
  9704 ;;		Nothing
  9705 ;; This function is called by:
  9706 ;;		_main
  9707 ;; This function uses a non-reentrant model
  9708 ;;
  9709                           
  9710                           
  9711                           ;psect for function _oscInt
  9712  078A                     _oscInt:	
  9713                           
  9714                           ;incstack = 0
  9715                           ; Regs used in _oscInt: [wreg-fsr0h+status,2+status,0]
  9716                           ;oscInt@freq stored from wreg
  9717  078A  00F5               	movwf	oscInt@freq
  9718  078B                     l3299:	
  9719                           
  9720                           ;lib_osccon.c: 12:     switch(freq){
  9721  078B  2FDC               	goto	l3303
  9722  078C                     l168:	
  9723                           ;lib_osccon.c: 13:         case 0:
  9724                           
  9725                           
  9726                           ;lib_osccon.c: 14:             OSCCONbits.IRCF2 = 1;
  9727  078C  1683               	bsf	3,5	;RP0=1, select bank1
  9728  078D  1303               	bcf	3,6	;RP1=0, select bank1
  9729  078E  170F               	bsf	15,6	;volatile
  9730                           
  9731                           ;lib_osccon.c: 15:             OSCCONbits.IRCF1 = 1;
  9732  078F  168F               	bsf	15,5	;volatile
  9733                           
  9734                           ;lib_osccon.c: 16:             OSCCONbits.IRCF0 = 1;
  9735  0790  160F               	bsf	15,4	;volatile
  9736                           
  9737                           ;lib_osccon.c: 17:             OSCCONbits.OSTS = 0;
  9738  0791  118F               	bcf	15,3	;volatile
  9739                           
  9740                           ;lib_osccon.c: 18:             OSCCONbits.HTS = 1;
  9741  0792  150F               	bsf	15,2	;volatile
  9742                           
  9743                           ;lib_osccon.c: 19:             OSCCONbits.LTS = 0;
  9744  0793  108F               	bcf	15,1	;volatile
  9745                           
  9746                           ;lib_osccon.c: 20:             OSCCONbits.SCS = 1;
  9747  0794  140F               	bsf	15,0	;volatile
  9748                           
  9749                           ;lib_osccon.c: 21:             break;
  9750  0795  2FFE               	goto	l177
  9751  0796                     l170:	
  9752                           ;lib_osccon.c: 22:         case 1:
  9753                           
  9754                           
  9755                           ;lib_osccon.c: 23:             OSCCONbits.IRCF2 = 1;
  9756  0796  1683               	bsf	3,5	;RP0=1, select bank1
  9757  0797  1303               	bcf	3,6	;RP1=0, select bank1
  9758  0798  170F               	bsf	15,6	;volatile
  9759                           
  9760                           ;lib_osccon.c: 24:             OSCCONbits.IRCF1 = 1;
  9761  0799  168F               	bsf	15,5	;volatile
  9762                           
  9763                           ;lib_osccon.c: 25:             OSCCONbits.IRCF0 = 0;
  9764  079A  120F               	bcf	15,4	;volatile
  9765                           
  9766                           ;lib_osccon.c: 26:             OSCCONbits.OSTS = 0;
  9767  079B  118F               	bcf	15,3	;volatile
  9768                           
  9769                           ;lib_osccon.c: 27:             OSCCONbits.HTS = 1;
  9770  079C  150F               	bsf	15,2	;volatile
  9771                           
  9772                           ;lib_osccon.c: 28:             OSCCONbits.LTS = 0;
  9773  079D  108F               	bcf	15,1	;volatile
  9774                           
  9775                           ;lib_osccon.c: 29:             OSCCONbits.SCS = 1;
  9776  079E  140F               	bsf	15,0	;volatile
  9777                           
  9778                           ;lib_osccon.c: 30:             break;
  9779  079F  2FFE               	goto	l177
  9780  07A0                     l171:	
  9781                           ;lib_osccon.c: 31:         case 2:
  9782                           
  9783                           
  9784                           ;lib_osccon.c: 32:             OSCCONbits.IRCF2 = 1;
  9785  07A0  1683               	bsf	3,5	;RP0=1, select bank1
  9786  07A1  1303               	bcf	3,6	;RP1=0, select bank1
  9787  07A2  170F               	bsf	15,6	;volatile
  9788                           
  9789                           ;lib_osccon.c: 33:             OSCCONbits.IRCF1 = 0;
  9790  07A3  128F               	bcf	15,5	;volatile
  9791                           
  9792                           ;lib_osccon.c: 34:             OSCCONbits.IRCF0 = 1;
  9793  07A4  160F               	bsf	15,4	;volatile
  9794                           
  9795                           ;lib_osccon.c: 35:             OSCCONbits.OSTS = 0;
  9796  07A5  118F               	bcf	15,3	;volatile
  9797                           
  9798                           ;lib_osccon.c: 36:             OSCCONbits.HTS = 1;
  9799  07A6  150F               	bsf	15,2	;volatile
  9800                           
  9801                           ;lib_osccon.c: 37:             OSCCONbits.LTS = 0;
  9802  07A7  108F               	bcf	15,1	;volatile
  9803                           
  9804                           ;lib_osccon.c: 38:             OSCCONbits.SCS = 1;
  9805  07A8  140F               	bsf	15,0	;volatile
  9806                           
  9807                           ;lib_osccon.c: 39:             break;
  9808  07A9  2FFE               	goto	l177
  9809  07AA                     l172:	
  9810                           ;lib_osccon.c: 40:         case 3:
  9811                           
  9812                           
  9813                           ;lib_osccon.c: 41:             OSCCONbits.IRCF2 = 1;
  9814  07AA  1683               	bsf	3,5	;RP0=1, select bank1
  9815  07AB  1303               	bcf	3,6	;RP1=0, select bank1
  9816  07AC  170F               	bsf	15,6	;volatile
  9817                           
  9818                           ;lib_osccon.c: 42:             OSCCONbits.IRCF1 = 0;
  9819  07AD  128F               	bcf	15,5	;volatile
  9820                           
  9821                           ;lib_osccon.c: 43:             OSCCONbits.IRCF0 = 0;
  9822  07AE  120F               	bcf	15,4	;volatile
  9823                           
  9824                           ;lib_osccon.c: 44:             OSCCONbits.OSTS = 0;
  9825  07AF  118F               	bcf	15,3	;volatile
  9826                           
  9827                           ;lib_osccon.c: 45:             OSCCONbits.HTS = 1;
  9828  07B0  150F               	bsf	15,2	;volatile
  9829                           
  9830                           ;lib_osccon.c: 46:             OSCCONbits.LTS = 0;
  9831  07B1  108F               	bcf	15,1	;volatile
  9832                           
  9833                           ;lib_osccon.c: 47:             OSCCONbits.SCS = 1;
  9834  07B2  140F               	bsf	15,0	;volatile
  9835                           
  9836                           ;lib_osccon.c: 48:             break;
  9837  07B3  2FFE               	goto	l177
  9838  07B4                     l173:	
  9839                           ;lib_osccon.c: 49:         case 4:
  9840                           
  9841                           
  9842                           ;lib_osccon.c: 50:             OSCCONbits.IRCF2 = 0;
  9843  07B4  1683               	bsf	3,5	;RP0=1, select bank1
  9844  07B5  1303               	bcf	3,6	;RP1=0, select bank1
  9845  07B6  130F               	bcf	15,6	;volatile
  9846                           
  9847                           ;lib_osccon.c: 51:             OSCCONbits.IRCF1 = 1;
  9848  07B7  168F               	bsf	15,5	;volatile
  9849                           
  9850                           ;lib_osccon.c: 52:             OSCCONbits.IRCF0 = 1;
  9851  07B8  160F               	bsf	15,4	;volatile
  9852                           
  9853                           ;lib_osccon.c: 53:             OSCCONbits.OSTS = 0;
  9854  07B9  118F               	bcf	15,3	;volatile
  9855                           
  9856                           ;lib_osccon.c: 54:             OSCCONbits.HTS = 1;
  9857  07BA  150F               	bsf	15,2	;volatile
  9858                           
  9859                           ;lib_osccon.c: 55:             OSCCONbits.LTS = 0;
  9860  07BB  108F               	bcf	15,1	;volatile
  9861                           
  9862                           ;lib_osccon.c: 56:             OSCCONbits.SCS = 1;
  9863  07BC  140F               	bsf	15,0	;volatile
  9864                           
  9865                           ;lib_osccon.c: 57:             break;
  9866  07BD  2FFE               	goto	l177
  9867  07BE                     l174:	
  9868                           ;lib_osccon.c: 58:         case 5:
  9869                           
  9870                           
  9871                           ;lib_osccon.c: 59:             OSCCONbits.IRCF2 = 0;
  9872  07BE  1683               	bsf	3,5	;RP0=1, select bank1
  9873  07BF  1303               	bcf	3,6	;RP1=0, select bank1
  9874  07C0  130F               	bcf	15,6	;volatile
  9875                           
  9876                           ;lib_osccon.c: 60:             OSCCONbits.IRCF1 = 1;
  9877  07C1  168F               	bsf	15,5	;volatile
  9878                           
  9879                           ;lib_osccon.c: 61:             OSCCONbits.IRCF0 = 0;
  9880  07C2  120F               	bcf	15,4	;volatile
  9881                           
  9882                           ;lib_osccon.c: 62:             OSCCONbits.OSTS = 0;
  9883  07C3  118F               	bcf	15,3	;volatile
  9884                           
  9885                           ;lib_osccon.c: 63:             OSCCONbits.HTS = 1;
  9886  07C4  150F               	bsf	15,2	;volatile
  9887                           
  9888                           ;lib_osccon.c: 64:             OSCCONbits.LTS = 0;
  9889  07C5  108F               	bcf	15,1	;volatile
  9890                           
  9891                           ;lib_osccon.c: 65:             OSCCONbits.SCS = 1;
  9892  07C6  140F               	bsf	15,0	;volatile
  9893                           
  9894                           ;lib_osccon.c: 66:             break;
  9895  07C7  2FFE               	goto	l177
  9896  07C8                     l175:	
  9897                           ;lib_osccon.c: 67:         case 6:
  9898                           
  9899                           
  9900                           ;lib_osccon.c: 68:             OSCCONbits.IRCF2 = 0;
  9901  07C8  1683               	bsf	3,5	;RP0=1, select bank1
  9902  07C9  1303               	bcf	3,6	;RP1=0, select bank1
  9903  07CA  130F               	bcf	15,6	;volatile
  9904                           
  9905                           ;lib_osccon.c: 69:             OSCCONbits.IRCF1 = 0;
  9906  07CB  128F               	bcf	15,5	;volatile
  9907                           
  9908                           ;lib_osccon.c: 70:             OSCCONbits.IRCF0 = 1;
  9909  07CC  160F               	bsf	15,4	;volatile
  9910                           
  9911                           ;lib_osccon.c: 71:             OSCCONbits.OSTS = 0;
  9912  07CD  118F               	bcf	15,3	;volatile
  9913                           
  9914                           ;lib_osccon.c: 72:             OSCCONbits.HTS = 1;
  9915  07CE  150F               	bsf	15,2	;volatile
  9916                           
  9917                           ;lib_osccon.c: 73:             OSCCONbits.LTS = 0;
  9918  07CF  108F               	bcf	15,1	;volatile
  9919                           
  9920                           ;lib_osccon.c: 74:             OSCCONbits.SCS = 1;
  9921  07D0  140F               	bsf	15,0	;volatile
  9922                           
  9923                           ;lib_osccon.c: 75:             break;
  9924  07D1  2FFE               	goto	l177
  9925  07D2                     l176:	
  9926                           ;lib_osccon.c: 76:         case 7:
  9927                           
  9928                           
  9929                           ;lib_osccon.c: 77:             OSCCONbits.IRCF2 = 0;
  9930  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  9931  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  9932  07D4  130F               	bcf	15,6	;volatile
  9933                           
  9934                           ;lib_osccon.c: 78:             OSCCONbits.IRCF1 = 0;
  9935  07D5  128F               	bcf	15,5	;volatile
  9936                           
  9937                           ;lib_osccon.c: 79:             OSCCONbits.IRCF0 = 0;
  9938  07D6  120F               	bcf	15,4	;volatile
  9939                           
  9940                           ;lib_osccon.c: 80:             OSCCONbits.OSTS = 0;
  9941  07D7  118F               	bcf	15,3	;volatile
  9942                           
  9943                           ;lib_osccon.c: 81:             OSCCONbits.HTS = 0;
  9944  07D8  110F               	bcf	15,2	;volatile
  9945                           
  9946                           ;lib_osccon.c: 82:             OSCCONbits.LTS = 1;
  9947  07D9  148F               	bsf	15,1	;volatile
  9948                           
  9949                           ;lib_osccon.c: 83:             OSCCONbits.SCS = 1;
  9950  07DA  140F               	bsf	15,0	;volatile
  9951                           
  9952                           ;lib_osccon.c: 84:             break;
  9953  07DB  2FFE               	goto	l177
  9954  07DC                     l3303:	
  9955  07DC  0875               	movf	oscInt@freq,w
  9956  07DD  00F3               	movwf	??_oscInt
  9957  07DE  01F4               	clrf	??_oscInt+1
  9958                           
  9959                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9960                           ; Switch size 1, requested type "simple"
  9961                           ; Number of cases is 1, Range of values is 0 to 0
  9962                           ; switch strategies available:
  9963                           ; Name         Instructions Cycles
  9964                           ; simple_byte            4     3 (average)
  9965                           ; direct_byte           11     8 (fixed)
  9966                           ; jumptable            260     6 (fixed)
  9967                           ;	Chosen strategy is simple_byte
  9968  07DF  0874               	movf	??_oscInt+1,w
  9969  07E0  3A00               	xorlw	0	; case 0
  9970  07E1  1903               	skipnz
  9971  07E2  2FE4               	goto	l4539
  9972  07E3  2FFE               	goto	l177
  9973  07E4                     l4539:	
  9974                           
  9975                           ; Switch size 1, requested type "simple"
  9976                           ; Number of cases is 8, Range of values is 0 to 7
  9977                           ; switch strategies available:
  9978                           ; Name         Instructions Cycles
  9979                           ; simple_byte           25    13 (average)
  9980                           ; direct_byte           32     8 (fixed)
  9981                           ; jumptable            260     6 (fixed)
  9982                           ;	Chosen strategy is simple_byte
  9983  07E4  0873               	movf	??_oscInt,w
  9984  07E5  3A00               	xorlw	0	; case 0
  9985  07E6  1903               	skipnz
  9986  07E7  2F8C               	goto	l168
  9987  07E8  3A01               	xorlw	1	; case 1
  9988  07E9  1903               	skipnz
  9989  07EA  2F96               	goto	l170
  9990  07EB  3A03               	xorlw	3	; case 2
  9991  07EC  1903               	skipnz
  9992  07ED  2FA0               	goto	l171
  9993  07EE  3A01               	xorlw	1	; case 3
  9994  07EF  1903               	skipnz
  9995  07F0  2FAA               	goto	l172
  9996  07F1  3A07               	xorlw	7	; case 4
  9997  07F2  1903               	skipnz
  9998  07F3  2FB4               	goto	l173
  9999  07F4  3A01               	xorlw	1	; case 5
 10000  07F5  1903               	skipnz
 10001  07F6  2FBE               	goto	l174
 10002  07F7  3A03               	xorlw	3	; case 6
 10003  07F8  1903               	skipnz
 10004  07F9  2FC8               	goto	l175
 10005  07FA  3A01               	xorlw	1	; case 7
 10006  07FB  1903               	skipnz
 10007  07FC  2FD2               	goto	l176
 10008  07FD  2FFE               	goto	l177
 10009  07FE                     l177:	
 10010  07FE  0008               	return
 10011  07FF                     __end_of_oscInt:	
 10012                           
 10013                           	psect	text25
 10014  1BB6                     __ptext25:	
 10015 ;; *************** function _lcd8_init2 *****************
 10016 ;; Defined at:
 10017 ;;		line 18 in file "LCDv1.c"
 10018 ;; Parameters:    Size  Location     Type
 10019 ;;		None
 10020 ;; Auto vars:     Size  Location     Type
 10021 ;;		None
 10022 ;; Return value:  Size  Location     Type
 10023 ;;                  1    wreg      void 
 10024 ;; Registers used:
 10025 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10026 ;; Tracked objects:
 10027 ;;		On entry : 0/0
 10028 ;;		On exit  : 0/0
 10029 ;;		Unchanged: 0/0
 10030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10031 ;;      Params:         0       0       0       0       0
 10032 ;;      Locals:         0       0       0       0       0
 10033 ;;      Temps:          2       0       0       0       0
 10034 ;;      Totals:         2       0       0       0       0
 10035 ;;Total ram usage:        2 bytes
 10036 ;; Hardware stack levels used:    1
 10037 ;; Hardware stack levels required when called:    3
 10038 ;; This function calls:
 10039 ;;		_lcd8_cmd
 10040 ;; This function is called by:
 10041 ;;		_main
 10042 ;; This function uses a non-reentrant model
 10043 ;;
 10044                           
 10045                           
 10046                           ;psect for function _lcd8_init2
 10047  1BB6                     _lcd8_init2:	
 10048  1BB6                     l3309:	
 10049                           ;incstack = 0
 10050                           ; Regs used in _lcd8_init2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10051                           
 10052                           
 10053                           ;LCDv1.c: 19:     _delay((unsigned long)((20)*(4000000/4000.0)));
 10054  1BB6  301A               	movlw	26
 10055  1BB7  00F7               	movwf	??_lcd8_init2+1
 10056  1BB8  30F8               	movlw	248
 10057  1BB9  00F6               	movwf	??_lcd8_init2
 10058  1BBA                     u7477:	
 10059  1BBA  0BF6               	decfsz	??_lcd8_init2,f
 10060  1BBB  2BBA               	goto	u7477
 10061  1BBC  0BF7               	decfsz	??_lcd8_init2+1,f
 10062  1BBD  2BBA               	goto	u7477
 10063  1BBE  0000               	nop
 10064  1BBF                     l3311:	
 10065                           
 10066                           ;LCDv1.c: 20:     lcd8_cmd(0x30);
 10067  1BBF  3030               	movlw	48
 10068  1BC0  160A  118A  2000  160A  158A  	fcall	_lcd8_cmd
 10069  1BC5                     l3313:	
 10070                           
 10071                           ;LCDv1.c: 21:     _delay((unsigned long)((5)*(4000000/4000.0)));
 10072  1BC5  3007               	movlw	7
 10073  1BC6  00F7               	movwf	??_lcd8_init2+1
 10074  1BC7  307D               	movlw	125
 10075  1BC8  00F6               	movwf	??_lcd8_init2
 10076  1BC9                     u7487:	
 10077  1BC9  0BF6               	decfsz	??_lcd8_init2,f
 10078  1BCA  2BC9               	goto	u7487
 10079  1BCB  0BF7               	decfsz	??_lcd8_init2+1,f
 10080  1BCC  2BC9               	goto	u7487
 10081                           
 10082                           ;LCDv1.c: 22:     lcd8_cmd(0x30);
 10083  1BCD  3030               	movlw	48
 10084  1BCE  160A  118A  2000  160A  158A  	fcall	_lcd8_cmd
 10085  1BD3                     l3315:	
 10086                           
 10087                           ;LCDv1.c: 23:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10088  1BD3  30C7               	movlw	199
 10089  1BD4  00F6               	movwf	??_lcd8_init2
 10090  1BD5                     u7497:	
 10091  1BD5  2BD6               	nop2
 10092  1BD6  0BF6               	decfsz	??_lcd8_init2,f
 10093  1BD7  2BD5               	goto	u7497
 10094  1BD8  2BD9               	nop2
 10095  1BD9  2BDA               	nop2
 10096  1BDA                     l3317:	
 10097                           
 10098                           ;LCDv1.c: 24:     lcd8_cmd(0x30);
 10099  1BDA  3030               	movlw	48
 10100  1BDB  160A  118A  2000  160A  158A  	fcall	_lcd8_cmd
 10101                           
 10102                           ;LCDv1.c: 25:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10103  1BE0  30C7               	movlw	199
 10104  1BE1  00F6               	movwf	??_lcd8_init2
 10105  1BE2                     u7507:	
 10106  1BE2  2BE3               	nop2
 10107  1BE3  0BF6               	decfsz	??_lcd8_init2,f
 10108  1BE4  2BE2               	goto	u7507
 10109  1BE5  2BE6               	nop2
 10110  1BE6  2BE7               	nop2
 10111  1BE7                     l3319:	
 10112                           
 10113                           ;LCDv1.c: 26:     lcd8_cmd(0x38);
 10114  1BE7  3038               	movlw	56
 10115  1BE8  160A  118A  2000  160A  158A  	fcall	_lcd8_cmd
 10116  1BED                     l3321:	
 10117                           
 10118                           ;LCDv1.c: 27:     lcd8_cmd(0x10);
 10119  1BED  3010               	movlw	16
 10120  1BEE  160A  118A  2000  160A  158A  	fcall	_lcd8_cmd
 10121  1BF3                     l3323:	
 10122                           
 10123                           ;LCDv1.c: 28:     lcd8_cmd(0x01);
 10124  1BF3  3001               	movlw	1
 10125  1BF4  160A  118A  2000  160A  158A  	fcall	_lcd8_cmd
 10126  1BF9                     l3325:	
 10127                           
 10128                           ;LCDv1.c: 29:     lcd8_cmd(0x06);
 10129  1BF9  3006               	movlw	6
 10130  1BFA  160A  118A  2000  160A  158A  	fcall	_lcd8_cmd
 10131  1BFF                     l3327:	
 10132                           
 10133                           ;LCDv1.c: 30:     lcd8_cmd(0x0C);
 10134  1BFF  300C               	movlw	12
 10135  1C00  160A  118A  2000  160A  158A  	fcall	_lcd8_cmd
 10136  1C05                     l3329:	
 10137                           
 10138                           ;LCDv1.c: 31:     lcd8_cmd(0x80);
 10139  1C05  3080               	movlw	128
 10140  1C06  160A  118A  2000  160A  158A  	fcall	_lcd8_cmd
 10141  1C0B                     l101:	
 10142  1C0B  0008               	return
 10143  1C0C                     __end_of_lcd8_init2:	
 10144                           
 10145                           	psect	text26
 10146  1000                     __ptext26:	
 10147 ;; *************** function _lcd8_cmd *****************
 10148 ;; Defined at:
 10149 ;;		line 34 in file "LCDv1.c"
 10150 ;; Parameters:    Size  Location     Type
 10151 ;;  cmd             1    wreg     unsigned char 
 10152 ;; Auto vars:     Size  Location     Type
 10153 ;;  cmd             1    5[COMMON] unsigned char 
 10154 ;; Return value:  Size  Location     Type
 10155 ;;                  1    wreg      void 
 10156 ;; Registers used:
 10157 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10158 ;; Tracked objects:
 10159 ;;		On entry : 0/0
 10160 ;;		On exit  : 0/0
 10161 ;;		Unchanged: 0/0
 10162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10163 ;;      Params:         0       0       0       0       0
 10164 ;;      Locals:         1       0       0       0       0
 10165 ;;      Temps:          0       0       0       0       0
 10166 ;;      Totals:         1       0       0       0       0
 10167 ;;Total ram usage:        1 bytes
 10168 ;; Hardware stack levels used:    1
 10169 ;; Hardware stack levels required when called:    2
 10170 ;; This function calls:
 10171 ;;		_delay_1ms2
 10172 ;; This function is called by:
 10173 ;;		_main
 10174 ;;		_lcd8_init2
 10175 ;;		_lcd8_setCursor
 10176 ;; This function uses a non-reentrant model
 10177 ;;
 10178                           
 10179                           
 10180                           ;psect for function _lcd8_cmd
 10181  1000                     _lcd8_cmd:	
 10182                           
 10183                           ;incstack = 0
 10184                           ; Regs used in _lcd8_cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10185                           ;lcd8_cmd@cmd stored from wreg
 10186  1000  00F5               	movwf	lcd8_cmd@cmd
 10187  1001                     l2895:	
 10188                           
 10189                           ;LCDv1.c: 35:     PORTA = cmd;
 10190  1001  0875               	movf	lcd8_cmd@cmd,w
 10191  1002  1283               	bcf	3,5	;RP0=0, select bank0
 10192  1003  1303               	bcf	3,6	;RP1=0, select bank0
 10193  1004  0085               	movwf	5	;volatile
 10194  1005                     l2897:	
 10195                           
 10196                           ;LCDv1.c: 36:     PORTCbits.RC0 = 0;
 10197  1005  1007               	bcf	7,0	;volatile
 10198  1006                     l2899:	
 10199                           
 10200                           ;LCDv1.c: 37:     PORTCbits.RC1 = 0;
 10201  1006  1087               	bcf	7,1	;volatile
 10202  1007                     l2901:	
 10203                           
 10204                           ;LCDv1.c: 38:     PORTCbits.RC2 = 1;
 10205  1007  1507               	bsf	7,2	;volatile
 10206  1008                     l2903:	
 10207                           
 10208                           ;LCDv1.c: 39:     delay_1ms2();
 10209  1008  160A  158A  21E7  160A  118A  	fcall	_delay_1ms2
 10210  100D                     l2905:	
 10211                           
 10212                           ;LCDv1.c: 40:     PORTCbits.RC2 = 0;
 10213  100D  1283               	bcf	3,5	;RP0=0, select bank0
 10214  100E  1303               	bcf	3,6	;RP1=0, select bank0
 10215  100F  1107               	bcf	7,2	;volatile
 10216  1010                     l104:	
 10217  1010  0008               	return
 10218  1011                     __end_of_lcd8_cmd:	
 10219                           
 10220                           	psect	text27
 10221  1A47                     __ptext27:	
 10222 ;; *************** function _lcd8_display *****************
 10223 ;; Defined at:
 10224 ;;		line 52 in file "LCDv1.c"
 10225 ;; Parameters:    Size  Location     Type
 10226 ;;  value           2    6[COMMON] PTR unsigned char 
 10227 ;;		 -> datos(10), STR_1(4), 
 10228 ;; Auto vars:     Size  Location     Type
 10229 ;;		None
 10230 ;; Return value:  Size  Location     Type
 10231 ;;                  1    wreg      void 
 10232 ;; Registers used:
 10233 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10234 ;; Tracked objects:
 10235 ;;		On entry : 0/0
 10236 ;;		On exit  : 0/0
 10237 ;;		Unchanged: 0/0
 10238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10239 ;;      Params:         2       0       0       0       0
 10240 ;;      Locals:         0       0       0       0       0
 10241 ;;      Temps:          0       0       0       0       0
 10242 ;;      Totals:         2       0       0       0       0
 10243 ;;Total ram usage:        2 bytes
 10244 ;; Hardware stack levels used:    1
 10245 ;; Hardware stack levels required when called:    3
 10246 ;; This function calls:
 10247 ;;		_lcd8_write
 10248 ;; This function is called by:
 10249 ;;		_main
 10250 ;; This function uses a non-reentrant model
 10251 ;;
 10252                           
 10253                           
 10254                           ;psect for function _lcd8_display
 10255  1A47                     _lcd8_display:	
 10256  1A47                     l3355:	
 10257                           ;incstack = 0
 10258                           ; Regs used in _lcd8_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10259                           
 10260                           
 10261                           ;LCDv1.c: 53:     while(*value){
 10262  1A47  2A5C               	goto	l3361
 10263  1A48                     l3357:	
 10264                           
 10265                           ;LCDv1.c: 54:         lcd8_write(*value++);
 10266  1A48  0877               	movf	lcd8_display@value+1,w
 10267  1A49  00FF               	movwf	btemp+1
 10268  1A4A  0876               	movf	lcd8_display@value,w
 10269  1A4B  0084               	movwf	4
 10270  1A4C  160A  158A  2000  160A  158A  	fcall	stringtab
 10271  1A51  160A  158A  21B1  160A  158A  	fcall	_lcd8_write
 10272  1A56                     l3359:	
 10273  1A56  3001               	movlw	1
 10274  1A57  07F6               	addwf	lcd8_display@value,f
 10275  1A58  1803               	skipnc
 10276  1A59  0AF7               	incf	lcd8_display@value+1,f
 10277  1A5A  3000               	movlw	0
 10278  1A5B  07F7               	addwf	lcd8_display@value+1,f
 10279  1A5C                     l3361:	
 10280                           
 10281                           ;LCDv1.c: 53:     while(*value){
 10282  1A5C  0877               	movf	lcd8_display@value+1,w
 10283  1A5D  1283               	bcf	3,5	;RP0=0, select bank0
 10284  1A5E  1303               	bcf	3,6	;RP1=0, select bank0
 10285  1A5F  00FF               	movwf	btemp+1
 10286  1A60  0876               	movf	lcd8_display@value,w
 10287  1A61  0084               	movwf	4
 10288  1A62  160A  158A  2000  160A  158A  	fcall	stringtab
 10289  1A67  3A00               	xorlw	0
 10290  1A68  1D03               	skipz
 10291  1A69  2A6B               	goto	u5351
 10292  1A6A  2A6C               	goto	u5350
 10293  1A6B                     u5351:	
 10294  1A6B  2A48               	goto	l3357
 10295  1A6C                     u5350:	
 10296  1A6C                     l113:	
 10297  1A6C  0008               	return
 10298  1A6D                     __end_of_lcd8_display:	
 10299                           
 10300                           	psect	text28
 10301  19B1                     __ptext28:	
 10302 ;; *************** function _lcd8_write *****************
 10303 ;; Defined at:
 10304 ;;		line 43 in file "LCDv1.c"
 10305 ;; Parameters:    Size  Location     Type
 10306 ;;  dat             1    wreg     unsigned char 
 10307 ;; Auto vars:     Size  Location     Type
 10308 ;;  dat             1    5[COMMON] unsigned char 
 10309 ;; Return value:  Size  Location     Type
 10310 ;;                  1    wreg      void 
 10311 ;; Registers used:
 10312 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10313 ;; Tracked objects:
 10314 ;;		On entry : 0/0
 10315 ;;		On exit  : 0/0
 10316 ;;		Unchanged: 0/0
 10317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10318 ;;      Params:         0       0       0       0       0
 10319 ;;      Locals:         1       0       0       0       0
 10320 ;;      Temps:          0       0       0       0       0
 10321 ;;      Totals:         1       0       0       0       0
 10322 ;;Total ram usage:        1 bytes
 10323 ;; Hardware stack levels used:    1
 10324 ;; Hardware stack levels required when called:    2
 10325 ;; This function calls:
 10326 ;;		_delay_1ms2
 10327 ;; This function is called by:
 10328 ;;		_lcd8_display
 10329 ;; This function uses a non-reentrant model
 10330 ;;
 10331                           
 10332                           
 10333                           ;psect for function _lcd8_write
 10334  19B1                     _lcd8_write:	
 10335                           
 10336                           ;incstack = 0
 10337                           ; Regs used in _lcd8_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10338                           ;lcd8_write@dat stored from wreg
 10339  19B1  00F5               	movwf	lcd8_write@dat
 10340  19B2                     l2907:	
 10341                           
 10342                           ;LCDv1.c: 44:     PORTA = dat;
 10343  19B2  0875               	movf	lcd8_write@dat,w
 10344  19B3  1283               	bcf	3,5	;RP0=0, select bank0
 10345  19B4  1303               	bcf	3,6	;RP1=0, select bank0
 10346  19B5  0085               	movwf	5	;volatile
 10347  19B6                     l2909:	
 10348                           
 10349                           ;LCDv1.c: 45:     PORTCbits.RC0 = 1;
 10350  19B6  1407               	bsf	7,0	;volatile
 10351  19B7                     l2911:	
 10352                           
 10353                           ;LCDv1.c: 46:     PORTCbits.RC1 = 0;
 10354  19B7  1087               	bcf	7,1	;volatile
 10355  19B8                     l2913:	
 10356                           
 10357                           ;LCDv1.c: 47:     PORTCbits.RC2 = 1;
 10358  19B8  1507               	bsf	7,2	;volatile
 10359  19B9                     l2915:	
 10360                           
 10361                           ;LCDv1.c: 48:     delay_1ms2();
 10362  19B9  160A  158A  21E7  160A  158A  	fcall	_delay_1ms2
 10363  19BE                     l2917:	
 10364                           
 10365                           ;LCDv1.c: 49:     PORTCbits.RC2 = 0;
 10366  19BE  1283               	bcf	3,5	;RP0=0, select bank0
 10367  19BF  1303               	bcf	3,6	;RP1=0, select bank0
 10368  19C0  1107               	bcf	7,2	;volatile
 10369  19C1                     l107:	
 10370  19C1  0008               	return
 10371  19C2                     __end_of_lcd8_write:	
 10372                           
 10373                           	psect	text29
 10374  19E7                     __ptext29:	
 10375 ;; *************** function _delay_1ms2 *****************
 10376 ;; Defined at:
 10377 ;;		line 67 in file "LCDv1.c"
 10378 ;; Parameters:    Size  Location     Type
 10379 ;;		None
 10380 ;; Auto vars:     Size  Location     Type
 10381 ;;  i               2    3[COMMON] int 
 10382 ;; Return value:  Size  Location     Type
 10383 ;;                  1    wreg      void 
 10384 ;; Registers used:
 10385 ;;		wreg, status,2, btemp+1
 10386 ;; Tracked objects:
 10387 ;;		On entry : 0/0
 10388 ;;		On exit  : 0/0
 10389 ;;		Unchanged: 0/0
 10390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10391 ;;      Params:         0       0       0       0       0
 10392 ;;      Locals:         2       0       0       0       0
 10393 ;;      Temps:          0       0       0       0       0
 10394 ;;      Totals:         2       0       0       0       0
 10395 ;;Total ram usage:        2 bytes
 10396 ;; Hardware stack levels used:    1
 10397 ;; Hardware stack levels required when called:    1
 10398 ;; This function calls:
 10399 ;;		Nothing
 10400 ;; This function is called by:
 10401 ;;		_main
 10402 ;;		_lcd8_cmd
 10403 ;;		_lcd8_write
 10404 ;; This function uses a non-reentrant model
 10405 ;;
 10406                           
 10407                           
 10408                           ;psect for function _delay_1ms2
 10409  19E7                     _delay_1ms2:	
 10410  19E7                     l2421:	
 10411                           ;incstack = 0
 10412                           ; Regs used in _delay_1ms2: [wreg+status,2+btemp+1]
 10413                           
 10414                           
 10415                           ;LCDv1.c: 68:     for (int i = 0; i < 50; i++);
 10416  19E7  01F3               	clrf	delay_1ms2@i
 10417  19E8  01F4               	clrf	delay_1ms2@i+1
 10418  19E9                     l2427:	
 10419  19E9  3001               	movlw	1
 10420  19EA  07F3               	addwf	delay_1ms2@i,f
 10421  19EB  1803               	skipnc
 10422  19EC  0AF4               	incf	delay_1ms2@i+1,f
 10423  19ED  3000               	movlw	0
 10424  19EE  07F4               	addwf	delay_1ms2@i+1,f
 10425  19EF                     l2429:	
 10426  19EF  0874               	movf	delay_1ms2@i+1,w
 10427  19F0  3A80               	xorlw	128
 10428  19F1  00FF               	movwf	btemp+1
 10429  19F2  3080               	movlw	128
 10430  19F3  027F               	subwf	btemp+1,w
 10431  19F4  1D03               	skipz
 10432  19F5  29F8               	goto	u3145
 10433  19F6  3032               	movlw	50
 10434  19F7  0273               	subwf	delay_1ms2@i,w
 10435  19F8                     u3145:	
 10436  19F8  1C03               	skipc
 10437  19F9  29FB               	goto	u3141
 10438  19FA  29FC               	goto	u3140
 10439  19FB                     u3141:	
 10440  19FB  29E9               	goto	l2427
 10441  19FC                     u3140:	
 10442  19FC                     l124:	
 10443  19FC  0008               	return
 10444  19FD                     __end_of_delay_1ms2:	
 10445                           
 10446                           	psect	text30
 10447  198B                     __ptext30:	
 10448 ;; *************** function _intEnable *****************
 10449 ;; Defined at:
 10450 ;;		line 113 in file "Lab3_v2.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;		None
 10453 ;; Auto vars:     Size  Location     Type
 10454 ;;		None
 10455 ;; Return value:  Size  Location     Type
 10456 ;;                  1    wreg      void 
 10457 ;; Registers used:
 10458 ;;		None
 10459 ;; Tracked objects:
 10460 ;;		On entry : 0/0
 10461 ;;		On exit  : 0/0
 10462 ;;		Unchanged: 0/0
 10463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10464 ;;      Params:         0       0       0       0       0
 10465 ;;      Locals:         0       0       0       0       0
 10466 ;;      Temps:          0       0       0       0       0
 10467 ;;      Totals:         0       0       0       0       0
 10468 ;;Total ram usage:        0 bytes
 10469 ;; Hardware stack levels used:    1
 10470 ;; Hardware stack levels required when called:    1
 10471 ;; This function calls:
 10472 ;;		Nothing
 10473 ;; This function is called by:
 10474 ;;		_main
 10475 ;; This function uses a non-reentrant model
 10476 ;;
 10477                           
 10478                           
 10479                           ;psect for function _intEnable
 10480  198B                     _intEnable:	
 10481  198B                     l3353:	
 10482                           ;incstack = 0
 10483                           ; Regs used in _intEnable: []
 10484                           
 10485                           
 10486                           ;Lab3_v2.c: 114:     INTCONbits.GIE = 1;
 10487  198B  178B               	bsf	11,7	;volatile
 10488                           
 10489                           ;Lab3_v2.c: 115:     INTCONbits.PEIE = 1;
 10490  198C  170B               	bsf	11,6	;volatile
 10491                           
 10492                           ;Lab3_v2.c: 116:     PIE1bits.ADIE = 1;
 10493  198D  1683               	bsf	3,5	;RP0=1, select bank1
 10494  198E  1303               	bcf	3,6	;RP1=0, select bank1
 10495  198F  170C               	bsf	12,6	;volatile
 10496  1990                     l88:	
 10497  1990  0008               	return
 10498  1991                     __end_of_intEnable:	
 10499                           
 10500                           	psect	text31
 10501  1E07                     __ptext31:	
 10502 ;; *************** function _analogInSel *****************
 10503 ;; Defined at:
 10504 ;;		line 21 in file "lib_adc.c"
 10505 ;; Parameters:    Size  Location     Type
 10506 ;;  analogIn        1    wreg     unsigned char 
 10507 ;; Auto vars:     Size  Location     Type
 10508 ;;  analogIn        1    5[COMMON] unsigned char 
 10509 ;; Return value:  Size  Location     Type
 10510 ;;                  1    wreg      unsigned char 
 10511 ;; Registers used:
 10512 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10513 ;; Tracked objects:
 10514 ;;		On entry : 0/0
 10515 ;;		On exit  : 0/0
 10516 ;;		Unchanged: 0/0
 10517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10518 ;;      Params:         0       0       0       0       0
 10519 ;;      Locals:         1       0       0       0       0
 10520 ;;      Temps:          2       0       0       0       0
 10521 ;;      Totals:         3       0       0       0       0
 10522 ;;Total ram usage:        3 bytes
 10523 ;; Hardware stack levels used:    1
 10524 ;; Hardware stack levels required when called:    1
 10525 ;; This function calls:
 10526 ;;		Nothing
 10527 ;; This function is called by:
 10528 ;;		_main
 10529 ;; This function uses a non-reentrant model
 10530 ;;
 10531                           
 10532                           
 10533                           ;psect for function _analogInSel
 10534  1E07                     _analogInSel:	
 10535                           
 10536                           ;incstack = 0
 10537                           ; Regs used in _analogInSel: [wreg-fsr0h+status,2+status,0]
 10538                           ;analogInSel@analogIn stored from wreg
 10539  1E07  00F5               	movwf	analogInSel@analogIn
 10540  1E08                     l3333:	
 10541                           
 10542                           ;lib_adc.c: 22:     switch(analogIn){
 10543  1E08  2E6B               	goto	l3337
 10544  1E09                     l139:	
 10545                           ;lib_adc.c: 23:         case 0:
 10546                           
 10547                           
 10548                           ;lib_adc.c: 24:             ADCON0bits.CHS3 = 0;
 10549  1E09  1283               	bcf	3,5	;RP0=0, select bank0
 10550  1E0A  1303               	bcf	3,6	;RP1=0, select bank0
 10551  1E0B  129F               	bcf	31,5	;volatile
 10552                           
 10553                           ;lib_adc.c: 25:             ADCON0bits.CHS2 = 0;
 10554  1E0C  121F               	bcf	31,4	;volatile
 10555                           
 10556                           ;lib_adc.c: 26:             ADCON0bits.CHS1 = 0;
 10557  1E0D  119F               	bcf	31,3	;volatile
 10558                           
 10559                           ;lib_adc.c: 27:             ADCON0bits.CHS0 = 0;
 10560  1E0E  111F               	bcf	31,2	;volatile
 10561                           
 10562                           ;lib_adc.c: 28:             break;
 10563  1E0F  2E9F               	goto	l154
 10564  1E10                     l141:	
 10565                           ;lib_adc.c: 29:         case 1:
 10566                           
 10567                           
 10568                           ;lib_adc.c: 30:             ADCON0bits.CHS3 = 0;
 10569  1E10  1283               	bcf	3,5	;RP0=0, select bank0
 10570  1E11  1303               	bcf	3,6	;RP1=0, select bank0
 10571  1E12  129F               	bcf	31,5	;volatile
 10572                           
 10573                           ;lib_adc.c: 31:             ADCON0bits.CHS2 = 0;
 10574  1E13  121F               	bcf	31,4	;volatile
 10575                           
 10576                           ;lib_adc.c: 32:             ADCON0bits.CHS1 = 0;
 10577  1E14  119F               	bcf	31,3	;volatile
 10578                           
 10579                           ;lib_adc.c: 33:             ADCON0bits.CHS0 = 1;
 10580  1E15  151F               	bsf	31,2	;volatile
 10581                           
 10582                           ;lib_adc.c: 34:             break;
 10583  1E16  2E9F               	goto	l154
 10584  1E17                     l142:	
 10585                           ;lib_adc.c: 35:         case 2:
 10586                           
 10587                           
 10588                           ;lib_adc.c: 36:             ADCON0bits.CHS3 = 0;
 10589  1E17  1283               	bcf	3,5	;RP0=0, select bank0
 10590  1E18  1303               	bcf	3,6	;RP1=0, select bank0
 10591  1E19  129F               	bcf	31,5	;volatile
 10592                           
 10593                           ;lib_adc.c: 37:             ADCON0bits.CHS2 = 0;
 10594  1E1A  121F               	bcf	31,4	;volatile
 10595                           
 10596                           ;lib_adc.c: 38:             ADCON0bits.CHS1 = 1;
 10597  1E1B  159F               	bsf	31,3	;volatile
 10598                           
 10599                           ;lib_adc.c: 39:             ADCON0bits.CHS0 = 0;
 10600  1E1C  111F               	bcf	31,2	;volatile
 10601                           
 10602                           ;lib_adc.c: 40:             break;
 10603  1E1D  2E9F               	goto	l154
 10604  1E1E                     l143:	
 10605                           ;lib_adc.c: 41:         case 3:
 10606                           
 10607                           
 10608                           ;lib_adc.c: 42:             ADCON0bits.CHS3 = 0;
 10609  1E1E  1283               	bcf	3,5	;RP0=0, select bank0
 10610  1E1F  1303               	bcf	3,6	;RP1=0, select bank0
 10611  1E20  129F               	bcf	31,5	;volatile
 10612                           
 10613                           ;lib_adc.c: 43:             ADCON0bits.CHS2 = 0;
 10614  1E21  121F               	bcf	31,4	;volatile
 10615                           
 10616                           ;lib_adc.c: 44:             ADCON0bits.CHS1 = 1;
 10617  1E22  159F               	bsf	31,3	;volatile
 10618                           
 10619                           ;lib_adc.c: 45:             ADCON0bits.CHS0 = 1;
 10620  1E23  151F               	bsf	31,2	;volatile
 10621                           
 10622                           ;lib_adc.c: 46:             break;
 10623  1E24  2E9F               	goto	l154
 10624  1E25                     l144:	
 10625                           ;lib_adc.c: 47:         case 4:
 10626                           
 10627                           
 10628                           ;lib_adc.c: 48:             ADCON0bits.CHS3 = 0;
 10629  1E25  1283               	bcf	3,5	;RP0=0, select bank0
 10630  1E26  1303               	bcf	3,6	;RP1=0, select bank0
 10631  1E27  129F               	bcf	31,5	;volatile
 10632                           
 10633                           ;lib_adc.c: 49:             ADCON0bits.CHS2 = 1;
 10634  1E28  161F               	bsf	31,4	;volatile
 10635                           
 10636                           ;lib_adc.c: 50:             ADCON0bits.CHS1 = 0;
 10637  1E29  119F               	bcf	31,3	;volatile
 10638                           
 10639                           ;lib_adc.c: 51:             ADCON0bits.CHS0 = 0;
 10640  1E2A  111F               	bcf	31,2	;volatile
 10641                           
 10642                           ;lib_adc.c: 52:             break;
 10643  1E2B  2E9F               	goto	l154
 10644  1E2C                     l145:	
 10645                           ;lib_adc.c: 53:         case 5:
 10646                           
 10647                           
 10648                           ;lib_adc.c: 54:             ADCON0bits.CHS3 = 0;
 10649  1E2C  1283               	bcf	3,5	;RP0=0, select bank0
 10650  1E2D  1303               	bcf	3,6	;RP1=0, select bank0
 10651  1E2E  129F               	bcf	31,5	;volatile
 10652                           
 10653                           ;lib_adc.c: 55:             ADCON0bits.CHS2 = 1;
 10654  1E2F  161F               	bsf	31,4	;volatile
 10655                           
 10656                           ;lib_adc.c: 56:             ADCON0bits.CHS1 = 0;
 10657  1E30  119F               	bcf	31,3	;volatile
 10658                           
 10659                           ;lib_adc.c: 57:             ADCON0bits.CHS0 = 1;
 10660  1E31  151F               	bsf	31,2	;volatile
 10661                           
 10662                           ;lib_adc.c: 58:             break;
 10663  1E32  2E9F               	goto	l154
 10664  1E33                     l146:	
 10665                           ;lib_adc.c: 59:         case 6:
 10666                           
 10667                           
 10668                           ;lib_adc.c: 60:             ADCON0bits.CHS3 = 0;
 10669  1E33  1283               	bcf	3,5	;RP0=0, select bank0
 10670  1E34  1303               	bcf	3,6	;RP1=0, select bank0
 10671  1E35  129F               	bcf	31,5	;volatile
 10672                           
 10673                           ;lib_adc.c: 61:             ADCON0bits.CHS2 = 1;
 10674  1E36  161F               	bsf	31,4	;volatile
 10675                           
 10676                           ;lib_adc.c: 62:             ADCON0bits.CHS1 = 1;
 10677  1E37  159F               	bsf	31,3	;volatile
 10678                           
 10679                           ;lib_adc.c: 63:             ADCON0bits.CHS0 = 0;
 10680  1E38  111F               	bcf	31,2	;volatile
 10681                           
 10682                           ;lib_adc.c: 64:             break;
 10683  1E39  2E9F               	goto	l154
 10684  1E3A                     l147:	
 10685                           ;lib_adc.c: 65:         case 7:
 10686                           
 10687                           
 10688                           ;lib_adc.c: 66:             ADCON0bits.CHS3 = 0;
 10689  1E3A  1283               	bcf	3,5	;RP0=0, select bank0
 10690  1E3B  1303               	bcf	3,6	;RP1=0, select bank0
 10691  1E3C  129F               	bcf	31,5	;volatile
 10692                           
 10693                           ;lib_adc.c: 67:             ADCON0bits.CHS2 = 1;
 10694  1E3D  161F               	bsf	31,4	;volatile
 10695                           
 10696                           ;lib_adc.c: 68:             ADCON0bits.CHS1 = 1;
 10697  1E3E  159F               	bsf	31,3	;volatile
 10698                           
 10699                           ;lib_adc.c: 69:             ADCON0bits.CHS0 = 1;
 10700  1E3F  151F               	bsf	31,2	;volatile
 10701                           
 10702                           ;lib_adc.c: 70:             break;
 10703  1E40  2E9F               	goto	l154
 10704  1E41                     l148:	
 10705                           ;lib_adc.c: 71:         case 8:
 10706                           
 10707                           
 10708                           ;lib_adc.c: 72:             ADCON0bits.CHS3 = 1;
 10709  1E41  1283               	bcf	3,5	;RP0=0, select bank0
 10710  1E42  1303               	bcf	3,6	;RP1=0, select bank0
 10711  1E43  169F               	bsf	31,5	;volatile
 10712                           
 10713                           ;lib_adc.c: 73:             ADCON0bits.CHS2 = 0;
 10714  1E44  121F               	bcf	31,4	;volatile
 10715                           
 10716                           ;lib_adc.c: 74:             ADCON0bits.CHS1 = 0;
 10717  1E45  119F               	bcf	31,3	;volatile
 10718                           
 10719                           ;lib_adc.c: 75:             ADCON0bits.CHS0 = 0;
 10720  1E46  111F               	bcf	31,2	;volatile
 10721                           
 10722                           ;lib_adc.c: 76:             break;
 10723  1E47  2E9F               	goto	l154
 10724  1E48                     l149:	
 10725                           ;lib_adc.c: 77:         case 9:
 10726                           
 10727                           
 10728                           ;lib_adc.c: 78:             ADCON0bits.CHS3 = 1;
 10729  1E48  1283               	bcf	3,5	;RP0=0, select bank0
 10730  1E49  1303               	bcf	3,6	;RP1=0, select bank0
 10731  1E4A  169F               	bsf	31,5	;volatile
 10732                           
 10733                           ;lib_adc.c: 79:             ADCON0bits.CHS2 = 0;
 10734  1E4B  121F               	bcf	31,4	;volatile
 10735                           
 10736                           ;lib_adc.c: 80:             ADCON0bits.CHS1 = 0;
 10737  1E4C  119F               	bcf	31,3	;volatile
 10738                           
 10739                           ;lib_adc.c: 81:             ADCON0bits.CHS0 = 1;
 10740  1E4D  151F               	bsf	31,2	;volatile
 10741                           
 10742                           ;lib_adc.c: 82:             break;
 10743  1E4E  2E9F               	goto	l154
 10744  1E4F                     l150:	
 10745                           ;lib_adc.c: 83:         case 10:
 10746                           
 10747                           
 10748                           ;lib_adc.c: 84:             ADCON0bits.CHS3 = 1;
 10749  1E4F  1283               	bcf	3,5	;RP0=0, select bank0
 10750  1E50  1303               	bcf	3,6	;RP1=0, select bank0
 10751  1E51  169F               	bsf	31,5	;volatile
 10752                           
 10753                           ;lib_adc.c: 85:             ADCON0bits.CHS2 = 0;
 10754  1E52  121F               	bcf	31,4	;volatile
 10755                           
 10756                           ;lib_adc.c: 86:             ADCON0bits.CHS1 = 1;
 10757  1E53  159F               	bsf	31,3	;volatile
 10758                           
 10759                           ;lib_adc.c: 87:             ADCON0bits.CHS0 = 0;
 10760  1E54  111F               	bcf	31,2	;volatile
 10761                           
 10762                           ;lib_adc.c: 88:             break;
 10763  1E55  2E9F               	goto	l154
 10764  1E56                     l151:	
 10765                           ;lib_adc.c: 89:         case 11:
 10766                           
 10767                           
 10768                           ;lib_adc.c: 90:             ADCON0bits.CHS3 = 1;
 10769  1E56  1283               	bcf	3,5	;RP0=0, select bank0
 10770  1E57  1303               	bcf	3,6	;RP1=0, select bank0
 10771  1E58  169F               	bsf	31,5	;volatile
 10772                           
 10773                           ;lib_adc.c: 91:             ADCON0bits.CHS2 = 0;
 10774  1E59  121F               	bcf	31,4	;volatile
 10775                           
 10776                           ;lib_adc.c: 92:             ADCON0bits.CHS1 = 1;
 10777  1E5A  159F               	bsf	31,3	;volatile
 10778                           
 10779                           ;lib_adc.c: 93:             ADCON0bits.CHS0 = 1;
 10780  1E5B  151F               	bsf	31,2	;volatile
 10781                           
 10782                           ;lib_adc.c: 94:             break;
 10783  1E5C  2E9F               	goto	l154
 10784  1E5D                     l152:	
 10785                           ;lib_adc.c: 95:         case 12:
 10786                           
 10787                           
 10788                           ;lib_adc.c: 96:             ADCON0bits.CHS3 = 1;
 10789  1E5D  1283               	bcf	3,5	;RP0=0, select bank0
 10790  1E5E  1303               	bcf	3,6	;RP1=0, select bank0
 10791  1E5F  169F               	bsf	31,5	;volatile
 10792                           
 10793                           ;lib_adc.c: 97:             ADCON0bits.CHS2 = 1;
 10794  1E60  161F               	bsf	31,4	;volatile
 10795                           
 10796                           ;lib_adc.c: 98:             ADCON0bits.CHS1 = 0;
 10797  1E61  119F               	bcf	31,3	;volatile
 10798                           
 10799                           ;lib_adc.c: 99:             ADCON0bits.CHS0 = 0;
 10800  1E62  111F               	bcf	31,2	;volatile
 10801                           
 10802                           ;lib_adc.c: 100:             break;
 10803  1E63  2E9F               	goto	l154
 10804  1E64                     l153:	
 10805                           ;lib_adc.c: 101:         case 13:
 10806                           
 10807                           
 10808                           ;lib_adc.c: 102:             ADCON0bits.CHS3 = 1;
 10809  1E64  1283               	bcf	3,5	;RP0=0, select bank0
 10810  1E65  1303               	bcf	3,6	;RP1=0, select bank0
 10811  1E66  169F               	bsf	31,5	;volatile
 10812                           
 10813                           ;lib_adc.c: 103:             ADCON0bits.CHS2 = 1;
 10814  1E67  161F               	bsf	31,4	;volatile
 10815                           
 10816                           ;lib_adc.c: 104:             ADCON0bits.CHS1 = 0;
 10817  1E68  119F               	bcf	31,3	;volatile
 10818                           
 10819                           ;lib_adc.c: 105:             ADCON0bits.CHS0 = 1;
 10820  1E69  151F               	bsf	31,2	;volatile
 10821                           
 10822                           ;lib_adc.c: 106:             break;
 10823  1E6A  2E9F               	goto	l154
 10824  1E6B                     l3337:	
 10825  1E6B  0875               	movf	analogInSel@analogIn,w
 10826  1E6C  00F3               	movwf	??_analogInSel
 10827  1E6D  01F4               	clrf	??_analogInSel+1
 10828                           
 10829                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10830                           ; Switch size 1, requested type "simple"
 10831                           ; Number of cases is 1, Range of values is 0 to 0
 10832                           ; switch strategies available:
 10833                           ; Name         Instructions Cycles
 10834                           ; simple_byte            4     3 (average)
 10835                           ; direct_byte           11     8 (fixed)
 10836                           ; jumptable            260     6 (fixed)
 10837                           ;	Chosen strategy is simple_byte
 10838  1E6E  0874               	movf	??_analogInSel+1,w
 10839  1E6F  3A00               	xorlw	0	; case 0
 10840  1E70  1903               	skipnz
 10841  1E71  2E73               	goto	l4541
 10842  1E72  2E9F               	goto	l154
 10843  1E73                     l4541:	
 10844                           
 10845                           ; Switch size 1, requested type "simple"
 10846                           ; Number of cases is 14, Range of values is 0 to 13
 10847                           ; switch strategies available:
 10848                           ; Name         Instructions Cycles
 10849                           ; simple_byte           43    22 (average)
 10850                           ; direct_byte           50     8 (fixed)
 10851                           ; jumptable            260     6 (fixed)
 10852                           ;	Chosen strategy is simple_byte
 10853  1E73  0873               	movf	??_analogInSel,w
 10854  1E74  3A00               	xorlw	0	; case 0
 10855  1E75  1903               	skipnz
 10856  1E76  2E09               	goto	l139
 10857  1E77  3A01               	xorlw	1	; case 1
 10858  1E78  1903               	skipnz
 10859  1E79  2E10               	goto	l141
 10860  1E7A  3A03               	xorlw	3	; case 2
 10861  1E7B  1903               	skipnz
 10862  1E7C  2E17               	goto	l142
 10863  1E7D  3A01               	xorlw	1	; case 3
 10864  1E7E  1903               	skipnz
 10865  1E7F  2E1E               	goto	l143
 10866  1E80  3A07               	xorlw	7	; case 4
 10867  1E81  1903               	skipnz
 10868  1E82  2E25               	goto	l144
 10869  1E83  3A01               	xorlw	1	; case 5
 10870  1E84  1903               	skipnz
 10871  1E85  2E2C               	goto	l145
 10872  1E86  3A03               	xorlw	3	; case 6
 10873  1E87  1903               	skipnz
 10874  1E88  2E33               	goto	l146
 10875  1E89  3A01               	xorlw	1	; case 7
 10876  1E8A  1903               	skipnz
 10877  1E8B  2E3A               	goto	l147
 10878  1E8C  3A0F               	xorlw	15	; case 8
 10879  1E8D  1903               	skipnz
 10880  1E8E  2E41               	goto	l148
 10881  1E8F  3A01               	xorlw	1	; case 9
 10882  1E90  1903               	skipnz
 10883  1E91  2E48               	goto	l149
 10884  1E92  3A03               	xorlw	3	; case 10
 10885  1E93  1903               	skipnz
 10886  1E94  2E4F               	goto	l150
 10887  1E95  3A01               	xorlw	1	; case 11
 10888  1E96  1903               	skipnz
 10889  1E97  2E56               	goto	l151
 10890  1E98  3A07               	xorlw	7	; case 12
 10891  1E99  1903               	skipnz
 10892  1E9A  2E5D               	goto	l152
 10893  1E9B  3A01               	xorlw	1	; case 13
 10894  1E9C  1903               	skipnz
 10895  1E9D  2E64               	goto	l153
 10896  1E9E  2E9F               	goto	l154
 10897  1E9F                     l154:	
 10898  1E9F  0008               	return
 10899  1EA0                     __end_of_analogInSel:	
 10900                           
 10901                           	psect	text32
 10902  19A4                     __ptext32:	
 10903 ;; *************** function _adcSetup *****************
 10904 ;; Defined at:
 10905 ;;		line 12 in file "lib_adc.c"
 10906 ;; Parameters:    Size  Location     Type
 10907 ;;		None
 10908 ;; Auto vars:     Size  Location     Type
 10909 ;;		None
 10910 ;; Return value:  Size  Location     Type
 10911 ;;                  1    wreg      void 
 10912 ;; Registers used:
 10913 ;;		None
 10914 ;; Tracked objects:
 10915 ;;		On entry : 0/0
 10916 ;;		On exit  : 0/0
 10917 ;;		Unchanged: 0/0
 10918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10919 ;;      Params:         0       0       0       0       0
 10920 ;;      Locals:         0       0       0       0       0
 10921 ;;      Temps:          0       0       0       0       0
 10922 ;;      Totals:         0       0       0       0       0
 10923 ;;Total ram usage:        0 bytes
 10924 ;; Hardware stack levels used:    1
 10925 ;; Hardware stack levels required when called:    1
 10926 ;; This function calls:
 10927 ;;		Nothing
 10928 ;; This function is called by:
 10929 ;;		_main
 10930 ;; This function uses a non-reentrant model
 10931 ;;
 10932                           
 10933                           
 10934                           ;psect for function _adcSetup
 10935  19A4                     _adcSetup:	
 10936  19A4                     l3331:	
 10937                           ;incstack = 0
 10938                           ; Regs used in _adcSetup: []
 10939                           
 10940                           
 10941                           ;lib_adc.c: 13:     ADCON0bits.ADON = 1;
 10942  19A4  1283               	bcf	3,5	;RP0=0, select bank0
 10943  19A5  1303               	bcf	3,6	;RP1=0, select bank0
 10944  19A6  141F               	bsf	31,0	;volatile
 10945                           
 10946                           ;lib_adc.c: 14:     ADCON1bits.ADFM = 0;
 10947  19A7  1683               	bsf	3,5	;RP0=1, select bank1
 10948  19A8  1303               	bcf	3,6	;RP1=0, select bank1
 10949  19A9  139F               	bcf	31,7	;volatile
 10950                           
 10951                           ;lib_adc.c: 15:     ADCON1bits.VCFG1 = 0;
 10952  19AA  129F               	bcf	31,5	;volatile
 10953                           
 10954                           ;lib_adc.c: 16:     ADCON1bits.VCFG0 = 0;
 10955  19AB  121F               	bcf	31,4	;volatile
 10956                           
 10957                           ;lib_adc.c: 17:     PIE1bits.ADIE = 1;
 10958  19AC  170C               	bsf	12,6	;volatile
 10959                           
 10960                           ;lib_adc.c: 18:     PIR1bits.ADIF = 0;
 10961  19AD  1283               	bcf	3,5	;RP0=0, select bank0
 10962  19AE  1303               	bcf	3,6	;RP1=0, select bank0
 10963  19AF  130C               	bcf	12,6	;volatile
 10964  19B0                     l135:	
 10965  19B0  0008               	return
 10966  19B1                     __end_of_adcSetup:	
 10967                           
 10968                           	psect	text33
 10969  19FD                     __ptext33:	
 10970 ;; *************** function _adcFoscSel *****************
 10971 ;; Defined at:
 10972 ;;		line 111 in file "lib_adc.c"
 10973 ;; Parameters:    Size  Location     Type
 10974 ;;  fosc            1    wreg     unsigned char 
 10975 ;; Auto vars:     Size  Location     Type
 10976 ;;  fosc            1    5[COMMON] unsigned char 
 10977 ;; Return value:  Size  Location     Type
 10978 ;;                  1    wreg      unsigned char 
 10979 ;; Registers used:
 10980 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10981 ;; Tracked objects:
 10982 ;;		On entry : 0/0
 10983 ;;		On exit  : 0/0
 10984 ;;		Unchanged: 0/0
 10985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10986 ;;      Params:         0       0       0       0       0
 10987 ;;      Locals:         1       0       0       0       0
 10988 ;;      Temps:          2       0       0       0       0
 10989 ;;      Totals:         3       0       0       0       0
 10990 ;;Total ram usage:        3 bytes
 10991 ;; Hardware stack levels used:    1
 10992 ;; Hardware stack levels required when called:    1
 10993 ;; This function calls:
 10994 ;;		Nothing
 10995 ;; This function is called by:
 10996 ;;		_main
 10997 ;; This function uses a non-reentrant model
 10998 ;;
 10999                           
 11000                           
 11001                           ;psect for function _adcFoscSel
 11002  19FD                     _adcFoscSel:	
 11003                           
 11004                           ;incstack = 0
 11005                           ; Regs used in _adcFoscSel: [wreg-fsr0h+status,2+status,0]
 11006                           ;adcFoscSel@fosc stored from wreg
 11007  19FD  00F5               	movwf	adcFoscSel@fosc
 11008  19FE                     l3343:	
 11009                           
 11010                           ;lib_adc.c: 112:     switch(fosc){
 11011  19FE  2A0E               	goto	l3347
 11012  19FF                     l158:	
 11013                           ;lib_adc.c: 113:         case 0:
 11014                           
 11015                           
 11016                           ;lib_adc.c: 114:             ADCON0bits.ADCS1 = 0;
 11017  19FF  1283               	bcf	3,5	;RP0=0, select bank0
 11018  1A00  1303               	bcf	3,6	;RP1=0, select bank0
 11019  1A01  139F               	bcf	31,7	;volatile
 11020                           
 11021                           ;lib_adc.c: 115:             ADCON0bits.ADCS0 = 0;
 11022  1A02  131F               	bcf	31,6	;volatile
 11023                           
 11024                           ;lib_adc.c: 116:             break;
 11025  1A03  2A21               	goto	l162
 11026  1A04                     l160:	
 11027                           ;lib_adc.c: 117:         case 1:
 11028                           
 11029                           
 11030                           ;lib_adc.c: 118:             ADCON0bits.ADCS1 = 0;
 11031  1A04  1283               	bcf	3,5	;RP0=0, select bank0
 11032  1A05  1303               	bcf	3,6	;RP1=0, select bank0
 11033  1A06  139F               	bcf	31,7	;volatile
 11034                           
 11035                           ;lib_adc.c: 119:             ADCON0bits.ADCS0 = 1;
 11036  1A07  171F               	bsf	31,6	;volatile
 11037                           
 11038                           ;lib_adc.c: 120:             break;
 11039  1A08  2A21               	goto	l162
 11040  1A09                     l161:	
 11041                           ;lib_adc.c: 121:         case 3:
 11042                           
 11043                           
 11044                           ;lib_adc.c: 122:             ADCON0bits.ADCS1 = 1;
 11045  1A09  1283               	bcf	3,5	;RP0=0, select bank0
 11046  1A0A  1303               	bcf	3,6	;RP1=0, select bank0
 11047  1A0B  179F               	bsf	31,7	;volatile
 11048                           
 11049                           ;lib_adc.c: 123:             ADCON0bits.ADCS0 = 0;
 11050  1A0C  131F               	bcf	31,6	;volatile
 11051                           
 11052                           ;lib_adc.c: 124:             break;
 11053  1A0D  2A21               	goto	l162
 11054  1A0E                     l3347:	
 11055  1A0E  0875               	movf	adcFoscSel@fosc,w
 11056  1A0F  00F3               	movwf	??_adcFoscSel
 11057  1A10  01F4               	clrf	??_adcFoscSel+1
 11058                           
 11059                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11060                           ; Switch size 1, requested type "simple"
 11061                           ; Number of cases is 1, Range of values is 0 to 0
 11062                           ; switch strategies available:
 11063                           ; Name         Instructions Cycles
 11064                           ; simple_byte            4     3 (average)
 11065                           ; direct_byte           11     8 (fixed)
 11066                           ; jumptable            260     6 (fixed)
 11067                           ;	Chosen strategy is simple_byte
 11068  1A11  0874               	movf	??_adcFoscSel+1,w
 11069  1A12  3A00               	xorlw	0	; case 0
 11070  1A13  1903               	skipnz
 11071  1A14  2A16               	goto	l4543
 11072  1A15  2A21               	goto	l162
 11073  1A16                     l4543:	
 11074                           
 11075                           ; Switch size 1, requested type "simple"
 11076                           ; Number of cases is 3, Range of values is 0 to 3
 11077                           ; switch strategies available:
 11078                           ; Name         Instructions Cycles
 11079                           ; simple_byte           10     6 (average)
 11080                           ; direct_byte           20     8 (fixed)
 11081                           ; jumptable            260     6 (fixed)
 11082                           ;	Chosen strategy is simple_byte
 11083  1A16  0873               	movf	??_adcFoscSel,w
 11084  1A17  3A00               	xorlw	0	; case 0
 11085  1A18  1903               	skipnz
 11086  1A19  29FF               	goto	l158
 11087  1A1A  3A01               	xorlw	1	; case 1
 11088  1A1B  1903               	skipnz
 11089  1A1C  2A04               	goto	l160
 11090  1A1D  3A02               	xorlw	2	; case 3
 11091  1A1E  1903               	skipnz
 11092  1A1F  2A09               	goto	l161
 11093  1A20  2A21               	goto	l162
 11094  1A21                     l162:	
 11095  1A21  0008               	return
 11096  1A22                     __end_of_adcFoscSel:	
 11097                           
 11098                           	psect	text34
 11099  118E                     __ptext34:	
 11100 ;; *************** function ___fldiv *****************
 11101 ;; Defined at:
 11102 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
 11103 ;; Parameters:    Size  Location     Type
 11104 ;;  a               4   36[BANK0 ] unsigned char 
 11105 ;;  b               4   40[BANK0 ] unsigned char 
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;  grs             4   56[BANK0 ] unsigned long 
 11108 ;;  rem             4   49[BANK0 ] unsigned long 
 11109 ;;  new_exp         2   54[BANK0 ] int 
 11110 ;;  aexp            1   61[BANK0 ] unsigned char 
 11111 ;;  bexp            1   60[BANK0 ] unsigned char 
 11112 ;;  sign            1   53[BANK0 ] unsigned char 
 11113 ;; Return value:  Size  Location     Type
 11114 ;;                  4   36[BANK0 ] unsigned char 
 11115 ;; Registers used:
 11116 ;;		wreg, status,2, status,0, btemp+1
 11117 ;; Tracked objects:
 11118 ;;		On entry : 0/0
 11119 ;;		On exit  : 0/0
 11120 ;;		Unchanged: 0/0
 11121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11122 ;;      Params:         0       8       0       0       0
 11123 ;;      Locals:         0      13       0       0       0
 11124 ;;      Temps:          0       5       0       0       0
 11125 ;;      Totals:         0      26       0       0       0
 11126 ;;Total ram usage:       26 bytes
 11127 ;; Hardware stack levels used:    1
 11128 ;; Hardware stack levels required when called:    1
 11129 ;; This function calls:
 11130 ;;		Nothing
 11131 ;; This function is called by:
 11132 ;;		_main
 11133 ;; This function uses a non-reentrant model
 11134 ;;
 11135                           
 11136                           
 11137                           ;psect for function ___fldiv
 11138  118E                     ___fldiv:	
 11139  118E                     l3569:	
 11140                           ;incstack = 0
 11141                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 11142                           
 11143  118E  1283               	bcf	3,5	;RP0=0, select bank0
 11144  118F  1303               	bcf	3,6	;RP1=0, select bank0
 11145  1190  084B               	movf	___fldiv@b+3,w
 11146  1191  3980               	andlw	128
 11147  1192  00CC               	movwf	??___fldiv
 11148  1193  084C               	movf	??___fldiv,w
 11149  1194  00D5               	movwf	___fldiv@sign
 11150  1195                     l3571:	
 11151  1195  084B               	movf	___fldiv@b+3,w
 11152  1196  00CC               	movwf	??___fldiv
 11153  1197  074C               	addwf	??___fldiv,w
 11154  1198  00CD               	movwf	??___fldiv+1
 11155  1199  084D               	movf	??___fldiv+1,w
 11156  119A  00DC               	movwf	___fldiv@bexp
 11157  119B                     l3573:	
 11158  119B  1FCA               	btfss	___fldiv@b+2,7
 11159  119C  299E               	goto	u5711
 11160  119D  299F               	goto	u5710
 11161  119E                     u5711:	
 11162  119E  29A0               	goto	l3577
 11163  119F                     u5710:	
 11164  119F                     l3575:	
 11165  119F  145C               	bsf	___fldiv@bexp,0
 11166  11A0                     l3577:	
 11167  11A0  085C               	movf	___fldiv@bexp,w
 11168  11A1  1903               	btfsc	3,2
 11169  11A2  29A4               	goto	u5721
 11170  11A3  29A5               	goto	u5720
 11171  11A4                     u5721:	
 11172  11A4  29B5               	goto	l3587
 11173  11A5                     u5720:	
 11174  11A5                     l3579:	
 11175  11A5  0A5C               	incf	___fldiv@bexp,w
 11176  11A6  1D03               	btfss	3,2
 11177  11A7  29A9               	goto	u5731
 11178  11A8  29AA               	goto	u5730
 11179  11A9                     u5731:	
 11180  11A9  29B2               	goto	l3583
 11181  11AA                     u5730:	
 11182  11AA                     l3581:	
 11183  11AA  3000               	movlw	0
 11184  11AB  00CB               	movwf	___fldiv@b+3
 11185  11AC  3000               	movlw	0
 11186  11AD  00CA               	movwf	___fldiv@b+2
 11187  11AE  3000               	movlw	0
 11188  11AF  00C9               	movwf	___fldiv@b+1
 11189  11B0  3000               	movlw	0
 11190  11B1  00C8               	movwf	___fldiv@b
 11191  11B2                     l3583:	
 11192  11B2  17CA               	bsf	___fldiv@b+2,7
 11193  11B3                     l3585:	
 11194  11B3  01CB               	clrf	___fldiv@b+3
 11195  11B4  29BD               	goto	l3589
 11196  11B5                     l3587:	
 11197  11B5  3000               	movlw	0
 11198  11B6  00CB               	movwf	___fldiv@b+3
 11199  11B7  3000               	movlw	0
 11200  11B8  00CA               	movwf	___fldiv@b+2
 11201  11B9  3000               	movlw	0
 11202  11BA  00C9               	movwf	___fldiv@b+1
 11203  11BB  3000               	movlw	0
 11204  11BC  00C8               	movwf	___fldiv@b
 11205  11BD                     l3589:	
 11206  11BD  0847               	movf	___fldiv@a+3,w
 11207  11BE  3980               	andlw	128
 11208  11BF  00CC               	movwf	??___fldiv
 11209  11C0  084C               	movf	??___fldiv,w
 11210  11C1  06D5               	xorwf	___fldiv@sign,f
 11211  11C2                     l3591:	
 11212  11C2  0847               	movf	___fldiv@a+3,w
 11213  11C3  00CC               	movwf	??___fldiv
 11214  11C4  074C               	addwf	??___fldiv,w
 11215  11C5  00CD               	movwf	??___fldiv+1
 11216  11C6  084D               	movf	??___fldiv+1,w
 11217  11C7  00DD               	movwf	___fldiv@aexp
 11218  11C8                     l3593:	
 11219  11C8  1FC6               	btfss	___fldiv@a+2,7
 11220  11C9  29CB               	goto	u5741
 11221  11CA  29CC               	goto	u5740
 11222  11CB                     u5741:	
 11223  11CB  29CD               	goto	l3597
 11224  11CC                     u5740:	
 11225  11CC                     l3595:	
 11226  11CC  145D               	bsf	___fldiv@aexp,0
 11227  11CD                     l3597:	
 11228  11CD  085D               	movf	___fldiv@aexp,w
 11229  11CE  1903               	btfsc	3,2
 11230  11CF  29D1               	goto	u5751
 11231  11D0  29D2               	goto	u5750
 11232  11D1                     u5751:	
 11233  11D1  29E2               	goto	l3607
 11234  11D2                     u5750:	
 11235  11D2                     l3599:	
 11236  11D2  0A5D               	incf	___fldiv@aexp,w
 11237  11D3  1D03               	btfss	3,2
 11238  11D4  29D6               	goto	u5761
 11239  11D5  29D7               	goto	u5760
 11240  11D6                     u5761:	
 11241  11D6  29DF               	goto	l3603
 11242  11D7                     u5760:	
 11243  11D7                     l3601:	
 11244  11D7  3000               	movlw	0
 11245  11D8  00C7               	movwf	___fldiv@a+3
 11246  11D9  3000               	movlw	0
 11247  11DA  00C6               	movwf	___fldiv@a+2
 11248  11DB  3000               	movlw	0
 11249  11DC  00C5               	movwf	___fldiv@a+1
 11250  11DD  3000               	movlw	0
 11251  11DE  00C4               	movwf	___fldiv@a
 11252  11DF                     l3603:	
 11253  11DF  17C6               	bsf	___fldiv@a+2,7
 11254  11E0                     l3605:	
 11255  11E0  01C7               	clrf	___fldiv@a+3
 11256  11E1  29EA               	goto	l739
 11257  11E2                     l3607:	
 11258  11E2  3000               	movlw	0
 11259  11E3  00C7               	movwf	___fldiv@a+3
 11260  11E4  3000               	movlw	0
 11261  11E5  00C6               	movwf	___fldiv@a+2
 11262  11E6  3000               	movlw	0
 11263  11E7  00C5               	movwf	___fldiv@a+1
 11264  11E8  3000               	movlw	0
 11265  11E9  00C4               	movwf	___fldiv@a
 11266  11EA                     l739:	
 11267  11EA  0847               	movf	___fldiv@a+3,w
 11268  11EB  0446               	iorwf	___fldiv@a+2,w
 11269  11EC  0445               	iorwf	___fldiv@a+1,w
 11270  11ED  0444               	iorwf	___fldiv@a,w
 11271  11EE  1D03               	skipz
 11272  11EF  29F1               	goto	u5771
 11273  11F0  29F2               	goto	u5770
 11274  11F1                     u5771:	
 11275  11F1  2A0B               	goto	l3617
 11276  11F2                     u5770:	
 11277  11F2                     l3609:	
 11278  11F2  3000               	movlw	0
 11279  11F3  00CB               	movwf	___fldiv@b+3
 11280  11F4  3000               	movlw	0
 11281  11F5  00CA               	movwf	___fldiv@b+2
 11282  11F6  3000               	movlw	0
 11283  11F7  00C9               	movwf	___fldiv@b+1
 11284  11F8  3000               	movlw	0
 11285  11F9  00C8               	movwf	___fldiv@b
 11286  11FA  3080               	movlw	128
 11287  11FB  04CA               	iorwf	___fldiv@b+2,f
 11288  11FC  307F               	movlw	127
 11289  11FD  04CB               	iorwf	___fldiv@b+3,f
 11290  11FE                     l3611:	
 11291  11FE  0855               	movf	___fldiv@sign,w
 11292  11FF  00CC               	movwf	??___fldiv
 11293  1200  084C               	movf	??___fldiv,w
 11294  1201  04CB               	iorwf	___fldiv@b+3,f
 11295  1202                     l3613:	
 11296  1202  084B               	movf	___fldiv@b+3,w
 11297  1203  00C7               	movwf	?___fldiv+3
 11298  1204  084A               	movf	___fldiv@b+2,w
 11299  1205  00C6               	movwf	?___fldiv+2
 11300  1206  0849               	movf	___fldiv@b+1,w
 11301  1207  00C5               	movwf	?___fldiv+1
 11302  1208  0848               	movf	___fldiv@b,w
 11303  1209  00C4               	movwf	?___fldiv
 11304  120A  2B6A               	goto	l741
 11305  120B                     l3617:	
 11306  120B  085C               	movf	___fldiv@bexp,w
 11307  120C  1D03               	btfss	3,2
 11308  120D  2A0F               	goto	u5781
 11309  120E  2A10               	goto	u5780
 11310  120F                     u5781:	
 11311  120F  2A19               	goto	l3623
 11312  1210                     u5780:	
 11313  1210                     l3619:	
 11314  1210  3000               	movlw	0
 11315  1211  00C7               	movwf	?___fldiv+3
 11316  1212  3000               	movlw	0
 11317  1213  00C6               	movwf	?___fldiv+2
 11318  1214  3000               	movlw	0
 11319  1215  00C5               	movwf	?___fldiv+1
 11320  1216  3000               	movlw	0
 11321  1217  00C4               	movwf	?___fldiv
 11322  1218  2B6A               	goto	l741
 11323  1219                     l3623:	
 11324  1219  085C               	movf	___fldiv@bexp,w
 11325  121A  00CC               	movwf	??___fldiv
 11326  121B  01CD               	clrf	??___fldiv+1
 11327  121C  084D               	movf	??___fldiv+1,w
 11328  121D  00CF               	movwf	??___fldiv+3
 11329  121E  085D               	movf	___fldiv@aexp,w
 11330  121F  024C               	subwf	??___fldiv,w
 11331  1220  00CE               	movwf	??___fldiv+2
 11332  1221  1C03               	skipc
 11333  1222  03CF               	decf	??___fldiv+3,f
 11334  1223  084E               	movf	??___fldiv+2,w
 11335  1224  3E7F               	addlw	127
 11336  1225  00D6               	movwf	___fldiv@new_exp
 11337  1226  084F               	movf	??___fldiv+3,w
 11338  1227  1803               	skipnc
 11339  1228  3E01               	addlw	1
 11340  1229  3E00               	addlw	0
 11341  122A  00D7               	movwf	___fldiv@new_exp+1
 11342  122B                     l3625:	
 11343  122B  084B               	movf	___fldiv@b+3,w
 11344  122C  00D4               	movwf	___fldiv@rem+3
 11345  122D  084A               	movf	___fldiv@b+2,w
 11346  122E  00D3               	movwf	___fldiv@rem+2
 11347  122F  0849               	movf	___fldiv@b+1,w
 11348  1230  00D2               	movwf	___fldiv@rem+1
 11349  1231  0848               	movf	___fldiv@b,w
 11350  1232  00D1               	movwf	___fldiv@rem
 11351  1233                     l3627:	
 11352  1233  3000               	movlw	0
 11353  1234  00CB               	movwf	___fldiv@b+3
 11354  1235  3000               	movlw	0
 11355  1236  00CA               	movwf	___fldiv@b+2
 11356  1237  3000               	movlw	0
 11357  1238  00C9               	movwf	___fldiv@b+1
 11358  1239  3000               	movlw	0
 11359  123A  00C8               	movwf	___fldiv@b
 11360  123B                     l3629:	
 11361  123B  3000               	movlw	0
 11362  123C  00DB               	movwf	___fldiv@grs+3
 11363  123D  3000               	movlw	0
 11364  123E  00DA               	movwf	___fldiv@grs+2
 11365  123F  3000               	movlw	0
 11366  1240  00D9               	movwf	___fldiv@grs+1
 11367  1241  3000               	movlw	0
 11368  1242  00D8               	movwf	___fldiv@grs
 11369  1243                     l3631:	
 11370  1243  01DD               	clrf	___fldiv@aexp
 11371  1244  2A8F               	goto	l3651
 11372  1245                     l3633:	
 11373  1245  085D               	movf	___fldiv@aexp,w
 11374  1246  1903               	btfsc	3,2
 11375  1247  2A49               	goto	u5791
 11376  1248  2A4A               	goto	u5790
 11377  1249                     u5791:	
 11378  1249  2A6A               	goto	l3643
 11379  124A                     u5790:	
 11380  124A                     l3635:	
 11381  124A  3001               	movlw	1
 11382  124B  00CC               	movwf	??___fldiv
 11383  124C                     u5805:	
 11384  124C  1003               	clrc
 11385  124D  0DD1               	rlf	___fldiv@rem,f
 11386  124E  0DD2               	rlf	___fldiv@rem+1,f
 11387  124F  0DD3               	rlf	___fldiv@rem+2,f
 11388  1250  0DD4               	rlf	___fldiv@rem+3,f
 11389  1251  0BCC               	decfsz	??___fldiv,f
 11390  1252  2A4C               	goto	u5805
 11391  1253  3001               	movlw	1
 11392  1254  00CC               	movwf	??___fldiv
 11393  1255                     u5815:	
 11394  1255  1003               	clrc
 11395  1256  0DC8               	rlf	___fldiv@b,f
 11396  1257  0DC9               	rlf	___fldiv@b+1,f
 11397  1258  0DCA               	rlf	___fldiv@b+2,f
 11398  1259  0DCB               	rlf	___fldiv@b+3,f
 11399  125A  0BCC               	decfsz	??___fldiv,f
 11400  125B  2A55               	goto	u5815
 11401  125C                     l3637:	
 11402  125C  1FDB               	btfss	___fldiv@grs+3,7
 11403  125D  2A5F               	goto	u5821
 11404  125E  2A60               	goto	u5820
 11405  125F                     u5821:	
 11406  125F  2A61               	goto	l3641
 11407  1260                     u5820:	
 11408  1260                     l3639:	
 11409  1260  1448               	bsf	___fldiv@b,0
 11410  1261                     l3641:	
 11411  1261  3001               	movlw	1
 11412  1262  00CC               	movwf	??___fldiv
 11413  1263                     u5835:	
 11414  1263  1003               	clrc
 11415  1264  0DD8               	rlf	___fldiv@grs,f
 11416  1265  0DD9               	rlf	___fldiv@grs+1,f
 11417  1266  0DDA               	rlf	___fldiv@grs+2,f
 11418  1267  0DDB               	rlf	___fldiv@grs+3,f
 11419  1268  0BCC               	decfsz	??___fldiv,f
 11420  1269  2A63               	goto	u5835
 11421  126A                     l3643:	
 11422  126A  0847               	movf	___fldiv@a+3,w
 11423  126B  0254               	subwf	___fldiv@rem+3,w
 11424  126C  1D03               	skipz
 11425  126D  2A78               	goto	u5845
 11426  126E  0846               	movf	___fldiv@a+2,w
 11427  126F  0253               	subwf	___fldiv@rem+2,w
 11428  1270  1D03               	skipz
 11429  1271  2A78               	goto	u5845
 11430  1272  0845               	movf	___fldiv@a+1,w
 11431  1273  0252               	subwf	___fldiv@rem+1,w
 11432  1274  1D03               	skipz
 11433  1275  2A78               	goto	u5845
 11434  1276  0844               	movf	___fldiv@a,w
 11435  1277  0251               	subwf	___fldiv@rem,w
 11436  1278                     u5845:	
 11437  1278  1C03               	skipc
 11438  1279  2A7B               	goto	u5841
 11439  127A  2A7C               	goto	u5840
 11440  127B                     u5841:	
 11441  127B  2A8B               	goto	l3649
 11442  127C                     u5840:	
 11443  127C                     l3645:	
 11444  127C  175B               	bsf	___fldiv@grs+3,6
 11445  127D                     l3647:	
 11446  127D  0844               	movf	___fldiv@a,w
 11447  127E  02D1               	subwf	___fldiv@rem,f
 11448  127F  0845               	movf	___fldiv@a+1,w
 11449  1280  1C03               	skipc
 11450  1281  0F45               	incfsz	___fldiv@a+1,w
 11451  1282  02D2               	subwf	___fldiv@rem+1,f
 11452  1283  0846               	movf	___fldiv@a+2,w
 11453  1284  1C03               	skipc
 11454  1285  0F46               	incfsz	___fldiv@a+2,w
 11455  1286  02D3               	subwf	___fldiv@rem+2,f
 11456  1287  0847               	movf	___fldiv@a+3,w
 11457  1288  1C03               	skipc
 11458  1289  0F47               	incfsz	___fldiv@a+3,w
 11459  128A  02D4               	subwf	___fldiv@rem+3,f
 11460  128B                     l3649:	
 11461  128B  3001               	movlw	1
 11462  128C  00CC               	movwf	??___fldiv
 11463  128D  084C               	movf	??___fldiv,w
 11464  128E  07DD               	addwf	___fldiv@aexp,f
 11465  128F                     l3651:	
 11466  128F  301A               	movlw	26
 11467  1290  025D               	subwf	___fldiv@aexp,w
 11468  1291  1C03               	skipc
 11469  1292  2A94               	goto	u5851
 11470  1293  2A95               	goto	u5850
 11471  1294                     u5851:	
 11472  1294  2A45               	goto	l3633
 11473  1295                     u5850:	
 11474  1295                     l3653:	
 11475  1295  0854               	movf	___fldiv@rem+3,w
 11476  1296  0453               	iorwf	___fldiv@rem+2,w
 11477  1297  0452               	iorwf	___fldiv@rem+1,w
 11478  1298  0451               	iorwf	___fldiv@rem,w
 11479  1299  1903               	skipnz
 11480  129A  2A9C               	goto	u5861
 11481  129B  2A9D               	goto	u5860
 11482  129C                     u5861:	
 11483  129C  2ABC               	goto	l3667
 11484  129D                     u5860:	
 11485  129D                     l3655:	
 11486  129D  1458               	bsf	___fldiv@grs,0
 11487  129E  2ABC               	goto	l3667
 11488  129F                     l3657:	
 11489  129F  3001               	movlw	1
 11490  12A0  00CC               	movwf	??___fldiv
 11491  12A1                     u5875:	
 11492  12A1  1003               	clrc
 11493  12A2  0DC8               	rlf	___fldiv@b,f
 11494  12A3  0DC9               	rlf	___fldiv@b+1,f
 11495  12A4  0DCA               	rlf	___fldiv@b+2,f
 11496  12A5  0DCB               	rlf	___fldiv@b+3,f
 11497  12A6  0BCC               	decfsz	??___fldiv,f
 11498  12A7  2AA1               	goto	u5875
 11499  12A8                     l3659:	
 11500  12A8  1FDB               	btfss	___fldiv@grs+3,7
 11501  12A9  2AAB               	goto	u5881
 11502  12AA  2AAC               	goto	u5880
 11503  12AB                     u5881:	
 11504  12AB  2AAD               	goto	l3663
 11505  12AC                     u5880:	
 11506  12AC                     l3661:	
 11507  12AC  1448               	bsf	___fldiv@b,0
 11508  12AD                     l3663:	
 11509  12AD  3001               	movlw	1
 11510  12AE  00CC               	movwf	??___fldiv
 11511  12AF                     u5895:	
 11512  12AF  1003               	clrc
 11513  12B0  0DD8               	rlf	___fldiv@grs,f
 11514  12B1  0DD9               	rlf	___fldiv@grs+1,f
 11515  12B2  0DDA               	rlf	___fldiv@grs+2,f
 11516  12B3  0DDB               	rlf	___fldiv@grs+3,f
 11517  12B4  0BCC               	decfsz	??___fldiv,f
 11518  12B5  2AAF               	goto	u5895
 11519  12B6                     l3665:	
 11520  12B6  30FF               	movlw	255
 11521  12B7  07D6               	addwf	___fldiv@new_exp,f
 11522  12B8  1803               	skipnc
 11523  12B9  0AD7               	incf	___fldiv@new_exp+1,f
 11524  12BA  30FF               	movlw	255
 11525  12BB  07D7               	addwf	___fldiv@new_exp+1,f
 11526  12BC                     l3667:	
 11527  12BC  1FCA               	btfss	___fldiv@b+2,7
 11528  12BD  2ABF               	goto	u5901
 11529  12BE  2AC0               	goto	u5900
 11530  12BF                     u5901:	
 11531  12BF  2A9F               	goto	l3657
 11532  12C0                     u5900:	
 11533  12C0                     l3669:	
 11534  12C0  01DD               	clrf	___fldiv@aexp
 11535  12C1                     l3671:	
 11536  12C1  1FDB               	btfss	___fldiv@grs+3,7
 11537  12C2  2AC4               	goto	u5911
 11538  12C3  2AC5               	goto	u5910
 11539  12C4                     u5911:	
 11540  12C4  2AE1               	goto	l3679
 11541  12C5                     u5910:	
 11542  12C5                     l3673:	
 11543  12C5  30FF               	movlw	255
 11544  12C6  0558               	andwf	___fldiv@grs,w
 11545  12C7  00CC               	movwf	??___fldiv
 11546  12C8  30FF               	movlw	255
 11547  12C9  0559               	andwf	___fldiv@grs+1,w
 11548  12CA  00CD               	movwf	??___fldiv+1
 11549  12CB  30FF               	movlw	255
 11550  12CC  055A               	andwf	___fldiv@grs+2,w
 11551  12CD  00CE               	movwf	??___fldiv+2
 11552  12CE  307F               	movlw	127
 11553  12CF  055B               	andwf	___fldiv@grs+3,w
 11554  12D0  00CF               	movwf	??___fldiv+3
 11555  12D1  084F               	movf	??___fldiv+3,w
 11556  12D2  044E               	iorwf	??___fldiv+2,w
 11557  12D3  044D               	iorwf	??___fldiv+1,w
 11558  12D4  044C               	iorwf	??___fldiv,w
 11559  12D5  1903               	skipnz
 11560  12D6  2AD8               	goto	u5921
 11561  12D7  2AD9               	goto	u5920
 11562  12D8                     u5921:	
 11563  12D8  2ADC               	goto	l755
 11564  12D9                     u5920:	
 11565  12D9                     l3675:	
 11566  12D9  01DD               	clrf	___fldiv@aexp
 11567  12DA  0ADD               	incf	___fldiv@aexp,f
 11568  12DB  2AE1               	goto	l3679
 11569  12DC                     l755:	
 11570  12DC  1C48               	btfss	___fldiv@b,0
 11571  12DD  2ADF               	goto	u5931
 11572  12DE  2AE0               	goto	u5930
 11573  12DF                     u5931:	
 11574  12DF  2AE1               	goto	l3679
 11575  12E0                     u5930:	
 11576  12E0  2AD9               	goto	l3675
 11577  12E1                     l3679:	
 11578  12E1  085D               	movf	___fldiv@aexp,w
 11579  12E2  1903               	btfsc	3,2
 11580  12E3  2AE5               	goto	u5941
 11581  12E4  2AE6               	goto	u5940
 11582  12E5                     u5941:	
 11583  12E5  2B17               	goto	l3689
 11584  12E6                     u5940:	
 11585  12E6                     l3681:	
 11586  12E6  3001               	movlw	1
 11587  12E7  07C8               	addwf	___fldiv@b,f
 11588  12E8  3000               	movlw	0
 11589  12E9  1803               	skipnc
 11590  12EA  3001               	movlw	1
 11591  12EB  07C9               	addwf	___fldiv@b+1,f
 11592  12EC  3000               	movlw	0
 11593  12ED  1803               	skipnc
 11594  12EE  3001               	movlw	1
 11595  12EF  07CA               	addwf	___fldiv@b+2,f
 11596  12F0  3000               	movlw	0
 11597  12F1  1803               	skipnc
 11598  12F2  3001               	movlw	1
 11599  12F3  07CB               	addwf	___fldiv@b+3,f
 11600  12F4                     l3683:	
 11601  12F4  1C4B               	btfss	___fldiv@b+3,0
 11602  12F5  2AF7               	goto	u5951
 11603  12F6  2AF8               	goto	u5950
 11604  12F7                     u5951:	
 11605  12F7  2B17               	goto	l3689
 11606  12F8                     u5950:	
 11607  12F8                     l3685:	
 11608  12F8  0848               	movf	___fldiv@b,w
 11609  12F9  00CC               	movwf	??___fldiv
 11610  12FA  0849               	movf	___fldiv@b+1,w
 11611  12FB  00CD               	movwf	??___fldiv+1
 11612  12FC  084A               	movf	___fldiv@b+2,w
 11613  12FD  00CE               	movwf	??___fldiv+2
 11614  12FE  084B               	movf	___fldiv@b+3,w
 11615  12FF  00CF               	movwf	??___fldiv+3
 11616  1300  3001               	movlw	1
 11617  1301  00D0               	movwf	??___fldiv+4
 11618  1302                     u5965:	
 11619  1302  0D4F               	rlf	??___fldiv+3,w
 11620  1303  0CCF               	rrf	??___fldiv+3,f
 11621  1304  0CCE               	rrf	??___fldiv+2,f
 11622  1305  0CCD               	rrf	??___fldiv+1,f
 11623  1306  0CCC               	rrf	??___fldiv,f
 11624  1307                     u5960:	
 11625  1307  0BD0               	decfsz	??___fldiv+4,f
 11626  1308  2B02               	goto	u5965
 11627  1309  084F               	movf	??___fldiv+3,w
 11628  130A  00CB               	movwf	___fldiv@b+3
 11629  130B  084E               	movf	??___fldiv+2,w
 11630  130C  00CA               	movwf	___fldiv@b+2
 11631  130D  084D               	movf	??___fldiv+1,w
 11632  130E  00C9               	movwf	___fldiv@b+1
 11633  130F  084C               	movf	??___fldiv,w
 11634  1310  00C8               	movwf	___fldiv@b
 11635  1311                     l3687:	
 11636  1311  3001               	movlw	1
 11637  1312  07D6               	addwf	___fldiv@new_exp,f
 11638  1313  1803               	skipnc
 11639  1314  0AD7               	incf	___fldiv@new_exp+1,f
 11640  1315  3000               	movlw	0
 11641  1316  07D7               	addwf	___fldiv@new_exp+1,f
 11642  1317                     l3689:	
 11643  1317  0857               	movf	___fldiv@new_exp+1,w
 11644  1318  3A80               	xorlw	128
 11645  1319  00FF               	movwf	btemp+1
 11646  131A  3080               	movlw	128
 11647  131B  027F               	subwf	btemp+1,w
 11648  131C  1D03               	skipz
 11649  131D  2B20               	goto	u5975
 11650  131E  30FF               	movlw	255
 11651  131F  0256               	subwf	___fldiv@new_exp,w
 11652  1320                     u5975:	
 11653  1320  1C03               	skipc
 11654  1321  2B23               	goto	u5971
 11655  1322  2B24               	goto	u5970
 11656  1323                     u5971:	
 11657  1323  2B32               	goto	l3693
 11658  1324                     u5970:	
 11659  1324                     l3691:	
 11660  1324  30FF               	movlw	255
 11661  1325  1283               	bcf	3,5	;RP0=0, select bank0
 11662  1326  1303               	bcf	3,6	;RP1=0, select bank0
 11663  1327  00D6               	movwf	___fldiv@new_exp
 11664  1328  3000               	movlw	0
 11665  1329  00D7               	movwf	___fldiv@new_exp+1
 11666  132A  3000               	movlw	0
 11667  132B  00CB               	movwf	___fldiv@b+3
 11668  132C  3000               	movlw	0
 11669  132D  00CA               	movwf	___fldiv@b+2
 11670  132E  3000               	movlw	0
 11671  132F  00C9               	movwf	___fldiv@b+1
 11672  1330  3000               	movlw	0
 11673  1331  00C8               	movwf	___fldiv@b
 11674  1332                     l3693:	
 11675  1332  1283               	bcf	3,5	;RP0=0, select bank0
 11676  1333  1303               	bcf	3,6	;RP1=0, select bank0
 11677  1334  0857               	movf	___fldiv@new_exp+1,w
 11678  1335  3A80               	xorlw	128
 11679  1336  00FF               	movwf	btemp+1
 11680  1337  3080               	movlw	128
 11681  1338  027F               	subwf	btemp+1,w
 11682  1339  1D03               	skipz
 11683  133A  2B3D               	goto	u5985
 11684  133B  3001               	movlw	1
 11685  133C  0256               	subwf	___fldiv@new_exp,w
 11686  133D                     u5985:	
 11687  133D  1803               	skipnc
 11688  133E  2B40               	goto	u5981
 11689  133F  2B41               	goto	u5980
 11690  1340                     u5981:	
 11691  1340  2B4E               	goto	l761
 11692  1341                     u5980:	
 11693  1341                     l3695:	
 11694  1341  1283               	bcf	3,5	;RP0=0, select bank0
 11695  1342  1303               	bcf	3,6	;RP1=0, select bank0
 11696  1343  01D6               	clrf	___fldiv@new_exp
 11697  1344  01D7               	clrf	___fldiv@new_exp+1
 11698  1345                     l3697:	
 11699  1345  3000               	movlw	0
 11700  1346  00CB               	movwf	___fldiv@b+3
 11701  1347  3000               	movlw	0
 11702  1348  00CA               	movwf	___fldiv@b+2
 11703  1349  3000               	movlw	0
 11704  134A  00C9               	movwf	___fldiv@b+1
 11705  134B  3000               	movlw	0
 11706  134C  00C8               	movwf	___fldiv@b
 11707  134D                     l3699:	
 11708  134D  01D5               	clrf	___fldiv@sign
 11709  134E                     l761:	
 11710  134E  1283               	bcf	3,5	;RP0=0, select bank0
 11711  134F  1303               	bcf	3,6	;RP1=0, select bank0
 11712  1350  0856               	movf	___fldiv@new_exp,w
 11713  1351  00CC               	movwf	??___fldiv
 11714  1352  084C               	movf	??___fldiv,w
 11715  1353  00DC               	movwf	___fldiv@bexp
 11716  1354                     l3701:	
 11717  1354  1C5C               	btfss	___fldiv@bexp,0
 11718  1355  2B57               	goto	u5991
 11719  1356  2B58               	goto	u5990
 11720  1357                     u5991:	
 11721  1357  2B5A               	goto	l3705
 11722  1358                     u5990:	
 11723  1358                     l3703:	
 11724  1358  17CA               	bsf	___fldiv@b+2,7
 11725  1359  2B5E               	goto	l763
 11726  135A                     l3705:	
 11727  135A  307F               	movlw	127
 11728  135B  00CC               	movwf	??___fldiv
 11729  135C  084C               	movf	??___fldiv,w
 11730  135D  05CA               	andwf	___fldiv@b+2,f
 11731  135E                     l763:	
 11732  135E  085C               	movf	___fldiv@bexp,w
 11733  135F  00CC               	movwf	??___fldiv
 11734  1360  1003               	clrc
 11735  1361  0C4C               	rrf	??___fldiv,w
 11736  1362  00CD               	movwf	??___fldiv+1
 11737  1363  084D               	movf	??___fldiv+1,w
 11738  1364  00CB               	movwf	___fldiv@b+3
 11739  1365  0855               	movf	___fldiv@sign,w
 11740  1366  00CC               	movwf	??___fldiv
 11741  1367  084C               	movf	??___fldiv,w
 11742  1368  04CB               	iorwf	___fldiv@b+3,f
 11743  1369  2A02               	goto	l3613
 11744  136A                     l741:	
 11745  136A  0008               	return
 11746  136B                     __end_of___fldiv:	
 11747                           
 11748                           	psect	text35
 11749  1CBB                     __ptext35:	
 11750 ;; *************** function _isr *****************
 11751 ;; Defined at:
 11752 ;;		line 49 in file "Lab3_v2.c"
 11753 ;; Parameters:    Size  Location     Type
 11754 ;;		None
 11755 ;; Auto vars:     Size  Location     Type
 11756 ;;		None
 11757 ;; Return value:  Size  Location     Type
 11758 ;;                  1    wreg      void 
 11759 ;; Registers used:
 11760 ;;		wreg
 11761 ;; Tracked objects:
 11762 ;;		On entry : 0/0
 11763 ;;		On exit  : 0/0
 11764 ;;		Unchanged: 0/0
 11765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11766 ;;      Params:         0       0       0       0       0
 11767 ;;      Locals:         0       0       0       0       0
 11768 ;;      Temps:          3       0       0       0       0
 11769 ;;      Totals:         3       0       0       0       0
 11770 ;;Total ram usage:        3 bytes
 11771 ;; Hardware stack levels used:    1
 11772 ;; This function calls:
 11773 ;;		Nothing
 11774 ;; This function is called by:
 11775 ;;		Interrupt level 1
 11776 ;; This function uses a non-reentrant model
 11777 ;;
 11778                           
 11779                           
 11780                           ;psect for function _isr
 11781  1CBB                     _isr:	
 11782  1CBB                     i1l3711:	
 11783                           
 11784                           ;Lab3_v2.c: 50:     (INTCONbits.GIE = 0);
 11785  1CBB  138B               	bcf	11,7	;volatile
 11786                           
 11787                           ;Lab3_v2.c: 51:     if (PIR1bits.ADIF == 1 && ADCON0bits.CHS3 == 1 && ADCON0bits.CHS2 ==
      +                           0 && ADCON0bits.CHS1 == 0 && ADCON0bits.CHS0 == 0){
 11788  1CBC  1283               	bcf	3,5	;RP0=0, select bank0
 11789  1CBD  1303               	bcf	3,6	;RP1=0, select bank0
 11790  1CBE  1F0C               	btfss	12,6	;volatile
 11791  1CBF  2CC1               	goto	u600_21
 11792  1CC0  2CC2               	goto	u600_20
 11793  1CC1                     u600_21:	
 11794  1CC1  2CD8               	goto	i1l67
 11795  1CC2                     u600_20:	
 11796  1CC2                     i1l3713:	
 11797  1CC2  1E9F               	btfss	31,5	;volatile
 11798  1CC3  2CC5               	goto	u601_21
 11799  1CC4  2CC6               	goto	u601_20
 11800  1CC5                     u601_21:	
 11801  1CC5  2CD8               	goto	i1l67
 11802  1CC6                     u601_20:	
 11803  1CC6                     i1l3715:	
 11804  1CC6  1A1F               	btfsc	31,4	;volatile
 11805  1CC7  2CC9               	goto	u602_21
 11806  1CC8  2CCA               	goto	u602_20
 11807  1CC9                     u602_21:	
 11808  1CC9  2CD8               	goto	i1l67
 11809  1CCA                     u602_20:	
 11810  1CCA                     i1l3717:	
 11811  1CCA  199F               	btfsc	31,3	;volatile
 11812  1CCB  2CCD               	goto	u603_21
 11813  1CCC  2CCE               	goto	u603_20
 11814  1CCD                     u603_21:	
 11815  1CCD  2CD8               	goto	i1l67
 11816  1CCE                     u603_20:	
 11817  1CCE                     i1l3719:	
 11818  1CCE  191F               	btfsc	31,2	;volatile
 11819  1CCF  2CD1               	goto	u604_21
 11820  1CD0  2CD2               	goto	u604_20
 11821  1CD1                     u604_21:	
 11822  1CD1  2CD8               	goto	i1l67
 11823  1CD2                     u604_20:	
 11824  1CD2                     i1l3721:	
 11825                           
 11826                           ;Lab3_v2.c: 52:         pot1 = ADRESH;
 11827  1CD2  081E               	movf	30,w	;volatile
 11828  1CD3  00F0               	movwf	??_isr
 11829  1CD4  0870               	movf	??_isr,w
 11830  1CD5  00EC               	movwf	_pot1
 11831  1CD6                     i1l3723:	
 11832                           
 11833                           ;Lab3_v2.c: 53:         PIR1bits.ADIF = 0;
 11834  1CD6  130C               	bcf	12,6	;volatile
 11835                           
 11836                           ;Lab3_v2.c: 54:     }
 11837  1CD7  2CF1               	goto	i1l3737
 11838  1CD8                     i1l67:	
 11839                           ;Lab3_v2.c: 55:     else if (PIR1bits.ADIF == 1 && ADCON0bits.CHS3 == 1 && ADCON0bits.CH
      +                          S2 == 1 && ADCON0bits.CHS1 == 0 && ADCON0bits.CHS0 == 1){
 11840                           
 11841  1CD8  1F0C               	btfss	12,6	;volatile
 11842  1CD9  2CDB               	goto	u605_21
 11843  1CDA  2CDC               	goto	u605_20
 11844  1CDB                     u605_21:	
 11845  1CDB  2CF1               	goto	i1l3737
 11846  1CDC                     u605_20:	
 11847  1CDC                     i1l3725:	
 11848  1CDC  1E9F               	btfss	31,5	;volatile
 11849  1CDD  2CDF               	goto	u606_21
 11850  1CDE  2CE0               	goto	u606_20
 11851  1CDF                     u606_21:	
 11852  1CDF  2CF1               	goto	i1l3737
 11853  1CE0                     u606_20:	
 11854  1CE0                     i1l3727:	
 11855  1CE0  1E1F               	btfss	31,4	;volatile
 11856  1CE1  2CE3               	goto	u607_21
 11857  1CE2  2CE4               	goto	u607_20
 11858  1CE3                     u607_21:	
 11859  1CE3  2CF1               	goto	i1l3737
 11860  1CE4                     u607_20:	
 11861  1CE4                     i1l3729:	
 11862  1CE4  199F               	btfsc	31,3	;volatile
 11863  1CE5  2CE7               	goto	u608_21
 11864  1CE6  2CE8               	goto	u608_20
 11865  1CE7                     u608_21:	
 11866  1CE7  2CF1               	goto	i1l3737
 11867  1CE8                     u608_20:	
 11868  1CE8                     i1l3731:	
 11869  1CE8  1D1F               	btfss	31,2	;volatile
 11870  1CE9  2CEB               	goto	u609_21
 11871  1CEA  2CEC               	goto	u609_20
 11872  1CEB                     u609_21:	
 11873  1CEB  2CF1               	goto	i1l3737
 11874  1CEC                     u609_20:	
 11875  1CEC                     i1l3733:	
 11876                           
 11877                           ;Lab3_v2.c: 56:         pot2 = ADRESH;
 11878  1CEC  081E               	movf	30,w	;volatile
 11879  1CED  00F0               	movwf	??_isr
 11880  1CEE  0870               	movf	??_isr,w
 11881  1CEF  00FA               	movwf	_pot2
 11882  1CF0                     i1l3735:	
 11883                           
 11884                           ;Lab3_v2.c: 57:         PIR1bits.ADIF = 0;
 11885  1CF0  130C               	bcf	12,6	;volatile
 11886  1CF1                     i1l3737:	
 11887                           
 11888                           ;Lab3_v2.c: 59:     if (ADCON0bits.CHS3 == 1 && ADCON0bits.CHS2 == 0 && ADCON0bits.CHS1 
      +                          == 0 && ADCON0bits.CHS0 == 0){
 11889  1CF1  1E9F               	btfss	31,5	;volatile
 11890  1CF2  2CF4               	goto	u610_21
 11891  1CF3  2CF5               	goto	u610_20
 11892  1CF4                     u610_21:	
 11893  1CF4  2D06               	goto	i1l70
 11894  1CF5                     u610_20:	
 11895  1CF5                     i1l3739:	
 11896  1CF5  1A1F               	btfsc	31,4	;volatile
 11897  1CF6  2CF8               	goto	u611_21
 11898  1CF7  2CF9               	goto	u611_20
 11899  1CF8                     u611_21:	
 11900  1CF8  2D06               	goto	i1l70
 11901  1CF9                     u611_20:	
 11902  1CF9                     i1l3741:	
 11903  1CF9  199F               	btfsc	31,3	;volatile
 11904  1CFA  2CFC               	goto	u612_21
 11905  1CFB  2CFD               	goto	u612_20
 11906  1CFC                     u612_21:	
 11907  1CFC  2D06               	goto	i1l70
 11908  1CFD                     u612_20:	
 11909  1CFD                     i1l3743:	
 11910  1CFD  191F               	btfsc	31,2	;volatile
 11911  1CFE  2D00               	goto	u613_21
 11912  1CFF  2D01               	goto	u613_20
 11913  1D00                     u613_21:	
 11914  1D00  2D06               	goto	i1l70
 11915  1D01                     u613_20:	
 11916  1D01                     i1l3745:	
 11917                           
 11918                           ;Lab3_v2.c: 60:         ADCON0bits.CHS3 = 1;
 11919  1D01  169F               	bsf	31,5	;volatile
 11920                           
 11921                           ;Lab3_v2.c: 61:         ADCON0bits.CHS2 = 1;
 11922  1D02  161F               	bsf	31,4	;volatile
 11923                           
 11924                           ;Lab3_v2.c: 62:         ADCON0bits.CHS1 = 0;
 11925  1D03  119F               	bcf	31,3	;volatile
 11926                           
 11927                           ;Lab3_v2.c: 63:         ADCON0bits.CHS0 = 1;
 11928  1D04  151F               	bsf	31,2	;volatile
 11929                           
 11930                           ;Lab3_v2.c: 64:     }
 11931  1D05  2D1A               	goto	i1l71
 11932  1D06                     i1l70:	
 11933                           ;Lab3_v2.c: 65:     else if (ADCON0bits.CHS3 == 1 && ADCON0bits.CHS2 == 1 && ADCON0bits.
      +                          CHS1 == 0 && ADCON0bits.CHS0 == 1){
 11934                           
 11935  1D06  1E9F               	btfss	31,5	;volatile
 11936  1D07  2D09               	goto	u614_21
 11937  1D08  2D0A               	goto	u614_20
 11938  1D09                     u614_21:	
 11939  1D09  2D1A               	goto	i1l71
 11940  1D0A                     u614_20:	
 11941  1D0A                     i1l3747:	
 11942  1D0A  1E1F               	btfss	31,4	;volatile
 11943  1D0B  2D0D               	goto	u615_21
 11944  1D0C  2D0E               	goto	u615_20
 11945  1D0D                     u615_21:	
 11946  1D0D  2D1A               	goto	i1l71
 11947  1D0E                     u615_20:	
 11948  1D0E                     i1l3749:	
 11949  1D0E  199F               	btfsc	31,3	;volatile
 11950  1D0F  2D11               	goto	u616_21
 11951  1D10  2D12               	goto	u616_20
 11952  1D11                     u616_21:	
 11953  1D11  2D1A               	goto	i1l71
 11954  1D12                     u616_20:	
 11955  1D12                     i1l3751:	
 11956  1D12  1D1F               	btfss	31,2	;volatile
 11957  1D13  2D15               	goto	u617_21
 11958  1D14  2D16               	goto	u617_20
 11959  1D15                     u617_21:	
 11960  1D15  2D1A               	goto	i1l71
 11961  1D16                     u617_20:	
 11962  1D16                     i1l3753:	
 11963                           
 11964                           ;Lab3_v2.c: 66:         ADCON0bits.CHS3 = 1;
 11965  1D16  169F               	bsf	31,5	;volatile
 11966                           
 11967                           ;Lab3_v2.c: 67:         ADCON0bits.CHS2 = 0;
 11968  1D17  121F               	bcf	31,4	;volatile
 11969                           
 11970                           ;Lab3_v2.c: 68:         ADCON0bits.CHS1 = 0;
 11971  1D18  119F               	bcf	31,3	;volatile
 11972                           
 11973                           ;Lab3_v2.c: 69:         ADCON0bits.CHS0 = 0;
 11974  1D19  111F               	bcf	31,2	;volatile
 11975  1D1A                     i1l71:	
 11976                           
 11977                           ;Lab3_v2.c: 71:     (INTCONbits.GIE = 1);
 11978  1D1A  178B               	bsf	11,7	;volatile
 11979  1D1B                     i1l73:	
 11980  1D1B  0872               	movf	??_isr+2,w
 11981  1D1C  008A               	movwf	10
 11982  1D1D  0E71               	swapf	(??_isr+1)^(0+4294967168),w
 11983  1D1E  0083               	movwf	3
 11984  1D1F  0EFE               	swapf	btemp,f
 11985  1D20  0E7E               	swapf	btemp,w
 11986  1D21  0009               	retfie
 11987  1D22                     __end_of_isr:	
 11988  007E                     btemp	set	126	;btemp
 11989  007E                     wtemp0	set	126
 11990                           
 11991                           	psect	intentry
 11992  0004                     __pintentry:	
 11993                           ;incstack = 0
 11994                           ; Regs used in _isr: [wreg]
 11995                           
 11996  0004                     interrupt_function:	
 11997  007E                     saved_w	set	btemp
 11998  0004  00FE               	movwf	btemp
 11999  0005  0E03               	swapf	3,w
 12000  0006  00F1               	movwf	??_isr+1
 12001  0007  080A               	movf	10,w
 12002  0008  00F2               	movwf	??_isr+2
 12003  0009  160A  158A  2CBB   	ljmp	_isr


Data Sizes:
    Strings     9
    Constant    144
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     76      77
    BANK1            80     47      65
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> datos(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    lcd8_display@value	PTR unsigned char  size(2) Largest target is 10
		 -> datos(BANK1[10]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _sprintf->__div_to_l_
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___awmod
    ___flmul->___lwdiv
    _lcd8_init2->_lcd8_cmd
    _lcd8_cmd->_delay_1ms2
    _lcd8_display->_lcd8_write
    _lcd8_write->_delay_1ms2

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   40841
                                             43 BANK1      4     4      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                         _adcFoscSel
                           _adcSetup
                        _analogInSel
                         _delay_1ms2
                          _intEnable
                           _lcd8_cmd
                       _lcd8_display
                         _lcd8_init2
                             _oscInt
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   33836
                                              8 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8087
                                             36 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              0 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             36 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                             10 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              3 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              3 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             55 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             56 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _oscInt                                               3     3      0      28
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd8_init2                                           2     2      0      68
                                              6 COMMON     2     2      0
                           _lcd8_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd8_cmd                                             1     1      0      68
                                              5 COMMON     1     1      0
                         _delay_1ms2
 ---------------------------------------------------------------------------------
 (1) _lcd8_display                                         2     0      2     265
                                              6 COMMON     2     0      2
                         _lcd8_write
 ---------------------------------------------------------------------------------
 (2) _lcd8_write                                           1     1      0      68
                                              5 COMMON     1     1      0
                         _delay_1ms2
 ---------------------------------------------------------------------------------
 (3) _delay_1ms2                                           2     2      0      46
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _intEnable                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _analogInSel                                          3     3      0      28
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _adcSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcFoscSel                                           3     3      0      28
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             36 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _adcFoscSel
   _adcSetup
   _analogInSel
   _delay_1ms2
   _intEnable
   _lcd8_cmd
     _delay_1ms2
   _lcd8_display
     _lcd8_write
       _delay_1ms2
   _lcd8_init2
     _lcd8_cmd
       _delay_1ms2
   _oscInt
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      99       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4D       5       96.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2F      41       7       81.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      99      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 10 17:39:52 2020

            ___fldiv@aexp 005D              ___fldiv@bexp 005C                         pc 0002  
            ___fldiv@sign 0055               __CFG_CP$OFF 0000                        l85 19E6  
                      l88 1990              ___awdiv@sign 0026                        fsr 0004  
     ___wmul@multiplicand 0075       __Umul8_16@word_mpld 0022                       l101 1C0B  
                     l104 1010                       l113 1A6C                       l107 19C1  
                     l124 19FC                       l141 1E10                       l150 1E4F  
                     l142 1E17                       l135 19B0                       l151 1E56  
                     l143 1E1E                       l160 1A04                       l152 1E5D  
                     l144 1E25                       l161 1A09                       l153 1E64  
                     l145 1E2C                       l305 0091                       l162 1A21  
                     l146 1E33                       l154 1E9F                       l170 0796  
                     l147 1E3A                       l139 1E09                       l171 07A0  
                     l331 0537                       l148 1E41                       l172 07AA  
                     l149 1E48                       l173 07B4                       l158 19FF  
                     l174 07BE                       l175 07C8                       l176 07D2  
                     l168 078C                       l352 0789                       l177 07FE  
                     l530 114E                       l522 1CBA                       l346 0742  
                     l338 057B                       l612 1C61                       l356 1A2E  
                     l509 1D8A                       l542 1B34                       l550 1F2A  
                     l358 1A46                       l526 118D                       l286 0FFF  
                     l543 1B50                       l551 1F43                       l527 10F0  
                     l279 1577                       l544 1B65                       l704 174D  
                     l392 0867                       l537 117E                       l714 1793  
                     l547 1EBE                       l555 19A3                       l708 1771  
                     l741 136A                       l725 17F3                       l717 17D1  
                     l573 10CD                       l726 17FF                       l566 1DF1  
                     l830 1FC9                       l574 103F                       l662 1B15  
                     l559 1E06                       l831 1FD5                       l823 1FAD  
                     l584 10C0                       l672 1ACF                       l761 134E  
                     l729 1BB5                       l569 1E06                       l817 1F68  
                     l577 1090                       l763 135E                       l755 12DC  
                     l739 11EA                       l683 15DB                       l819 1FFF  
                     l845 1A83                       l837 19D3                       l687 1682  
                     l847 1A95                       l791 0C90                       l696 17FF  
                     l689 1659                       l785 0C08                       l779 0C9C  
            __CFG_CPD$OFF 0000                       _isr 1CBB                       fsr0 0004  
                     indf 0000              ___awmod@sign 0079              ___flmul@aexp 003C  
            ___flmul@bexp 003D      __end_of_lcd8_display 1A6D              ___flmul@sign 0037  
            ___flmul@temp 0042              ___flmul@prod 003E       analogInSel@analogIn 0075  
            __CFG_LVP$OFF 0000              ___fltol@exp1 0061                      l3101 1A3C  
                    l3103 1A42                      l3201 1DE6                      l4001 1060  
                    l3203 1DF6                      l4011 108A                      l4003 1069  
                    l2411 1A79                      l2421 19E7                      l3205 1DFB  
                    l4101 0850                      l4013 1094                      l4021 10AE  
                    l4005 1077                      l2413 1A7D                      l2501 1C9F  
                    l3311 1BBF                      l3303 07DC                      l4111 1B2C  
                    l4103 0859                      l4007 1081                      l2415 1A8C  
                    l2407 1A70                      l2503 1CA6                      l3321 1BED  
                    l3313 1BC5                      l4113 1B48                      l4121 1EA0  
                    l2601 15D1                      l4105 085F                      l4201 1FF7  
                    l4033 10CE                      l4009 1082                      l2417 1A91  
                    l2409 1A72                      l2521 1AE4                      l2513 1AD0  
                    l2505 1CAC                      l3331 19A4                      l2427 19E9  
                    l3323 1BF3                      l3315 1BD3                      l4115 1B62  
                    l4131 1F02                      l4123 1EB6                      l3163 1999  
                    l2611 15ED                      l2603 15D3                      l3227 1B66  
                    l3171 1D8B                      l4051 110C                      l4035 10DB  
                    l4027 10B5                      l4019 109C                      l2531 1B04  
                    l2523 1AE8                      l2515 1AD4                      l2507 1CB1  
                    l4211 0035                      l3333 1E08                      l2429 19EF  
                    l3325 1BF9                      l3317 1BDA                      l3309 1BB6  
                    l4117 1B64                      l4109 1B16                      l4133 1F06  
                    l4125 1ED2                      l3165 19A1                      l2701 1763  
                    l2621 1601                      l2613 15F1                      l2605 15E1  
                    l3229 1B6A                      l3181 1DB7                      l3173 1D98  
                    l4141 1C0C                      l3093 1A22                      l4061 113F  
                    l4053 1115                      l4045 10F1                      l4029 10C5  
                    l2533 1B0B                      l2525 1AEC                      l2517 1ADA  
                    l2541 1A9C                      l2509 1CB6                      l4301 035E  
                    l4221 004D                      l4213 003A                      l4205 0023  
                    l3343 19FE                      l3327 1BFF                      l3319 1BE7  
                    l4135 1F40                      l4127 1EDA                      l3167 19A3  
                    l2711 177A                      l2703 176C                      l2631 1615  
                    l2623 1605                      l2615 15F5                      l2607 15E5  
                    l3183 1DBF                      l4151 1C3C                      l4143 1C16  
                    l3095 1A24                      l4071 115A                      l4063 1148  
                    l4055 111E                      l4047 10F9                      l4039 10E4  
                    l2527 1AFD                      l2519 1ADD                      l2535 1B11  
                    l2551 1AB8                      l2543 1A9F                      l4311 0405  
                    l4303 037C                      l4223 0050                      l4231 008D  
                    l4215 003C                      l4207 0028                      l3601 11D7  
                    l3337 1E6B                      l3353 198B                      l3361 1A5C  
                    l3329 1C05                      l3281 19D9                      l4137 1F42  
                    l4129 1EDE                      l2721 178A                      l2713 177F  
                    l2705 1770                      l2641 1626                      l2633 1619  
                    l2625 1609                      l2617 15F9                      l2609 15E9  
                    l2561 1578                      l3193 1DCD                      l3185 1DC1  
                    l3177 1DA1                      l4153 1C4A                      l4145 1C19  
                    l3097 1A28                      l4161 1F47                      l4081 1183  
                    l4065 1152                      l4073 116C                      l4057 1130  
                    l4049 110A                      l2801 09B9                      l2529 1B03  
                    l2553 1ABE                      l2545 1AA6                      l2481 1C6C  
                    l4321 0438                      l4313 0434                      l4241 00BB  
                    l4401 0785                      l4233 008F                      l4225 0065  
                    l4217 0048                      l4209 002E                      l3611 11FE  
                    l3603 11DF                      l3347 1A0E                      l3355 1A47  
                    l3291 19E0                      l3283 19DA                      l2731 17AB  
                    l2723 1790                      l2707 1775                      l2715 1781  
                    l2651 166C                      l2643 163D                      l2635 161D  
                    l2627 160D                      l2619 15FD                      l2571 158F  
                    l2563 157F                      l3187 1DC5                      l3195 1DDF  
                    l3179 1DB6                      l4091 0822                      l4155 1C53  
                    l4147 1C26                      l3099 1A35                      l4163 1F4C  
                    l4059 113E                      l2811 0A47                      l2803 09C6  
                    l2555 1AC5                      l2547 1AAA                      l2539 1A96  
                    l2491 1C80                      l2483 1C6E                      l2475 1C62  
                    l4331 048C                      l4315 0436                      l4307 03C7  
                    l4251 00FC                      l4243 00BF                      l4227 0078  
                    l4219 0049                      l4411 0868                      l3701 1354  
                    l3613 1202                      l3605 11E0                      l3357 1A48  
                    l2901 1007                      l3293 19E3                      l3285 19DB  
                    l3277 19D4                      l2741 17E3                      l2733 17AF  
                    l2709 1778                      l2717 1785                      l2661 168B  
                    l2653 166D                      l2645 165D                      l2637 1621  
                    l2629 1611                      l2581 15A7                      l2573 1594  
                    l2565 1585                      l4093 0826                      l4085 0800  
                    l4149 1C2A                      l4157 1C59                      l4181 1F96  
                    l4173 1F79                      l4165 1F50                      l2821 0AA9  
                    l2813 0A63                      l2805 09E3                      l2549 1AAE  
                    l2557 1ACB                      l2493 1C87                      l2485 1C72  
                    l2477 1C63                      l4341 0548                      l4333 0491  
                    l4325 046F                      l4309 03D0                      l4261 014F  
                    l4253 0115                      l4245 00C3                      l4237 0093  
                    l4229 007C                      l4421 0883                      l4413 086D  
                    l3703 1358                      l3631 1243                      l3623 1219  
                    l3607 11E2                      l2911 19B7                      l3359 1A56  
                    l2903 1008                      l3295 19E4                      l3287 19DE  
                    l3279 19D7                      l2751 17FA                      l2743 17E8  
                    l2735 17CD                      l2727 1798                      l2719 1786  
                    l2671 16B3                      l2655 1676                      l2647 1666  
                    l2639 1625                      l2591 15BD                      l2583 15AC  
                    l2575 159C                      l2567 1589                      l4095 082F  
                    l4087 0812                      l4191 1FCD                      l4183 1FA4  
                    l4175 1F7E                      l4167 1F60                      l4079 1173  
                    l2831 0B39                      l2823 0AC6                      l2815 0A6C  
                    l2807 09FF                      l2495 1C8B                      l2487 1C77  
                    l2479 1C67                      l4351 0575                      l4343 054C  
                    l4335 04EC                      l4327 0479                      l4271 0195  
                    l4263 0155                      l4255 0119                      l4247 00D1  
                    l4239 00AF                      l4431 08A0                      l4423 0889  
                    l4415 0873                      l3705 135A                      l3641 1261  
                    l3633 1245                      l3625 122B                      l3609 11F2  
                    l3617 120B                      l2913 19B8                      l2905 100D  
                    l3297 19E5                      l3289 19DF                      l2753 17FE  
                    l2745 17E9                      l2737 17D6                      l2729 179D  
                    l2681 16CC                      l2673 16BC                      l2665 1694  
                    l2649 1668                      l2657 167A                      l2593 15BE  
                    l2585 15B2                      l2577 159D                      l2569 158A  
                    l4097 0841                      l4089 0815                      l4193 1FD7  
                    l4185 1FB4                      l4177 1F8B                      l4169 1F70  
                    l2841 0BCB                      l2833 0B66                      l2825 0ADF  
                    l2817 0A7C                      l2809 0A2B                      l2761 094D  
                    l2921 1374                      l2497 1C8F                      l2489 1C7D  
                    l4361 05B2                      l4353 0584                      l4345 0552  
                    l4337 052B                      l4329 0485                      l4281 0258  
                    l4273 01B4                      l4265 0168                      l4257 011D  
                    l4249 00D5                      l4441 0916                      l4433 08A9  
                    l4425 088E                      l4417 0878                      l3635 124A  
                    l3643 126A                      l3651 128F                      l3627 1233  
                    l3619 1210                      l3571 1195                      l2915 19B9  
                    l2907 19B2                      l3299 078B                      l2747 17ED  
                    l2739 17DB                      l2691 1730                      l2675 16BE  
                    l2667 16AB                      l2659 1686                      l2683 16D1  
                    l2595 15C3                      l2587 15B3                      l2579 159F  
                    l4099 084F                      l4195 1FED                      l4187 1FBF  
                    l4179 1F92                      l2843 0BD4                      l2851 0BE8  
                    l2835 0B8C                      l2827 0AFC                      l2819 0A99  
                    l2771 0962                      l2763 094E                      l2755 093C  
                    l2499 1C99                      l4363 060D                      l4371 070E  
                    l4355 0589                      l4347 055F                      l4339 053F  
                    l4291 02EE                      l4275 01FF                      l4267 018B  
                    l4259 0144                      l4283 0260                      l4443 092A  
                    l4435 08AE                      l4427 0894                      l4419 087D  
                    l3661 12AC                      l3653 1295                      l3645 127C  
                    l3637 125C                      l3629 123B                      l3581 11AA  
                    l3573 119B                      l4541 1E73                      l2917 19BE  
                    l2909 19B6                      l2749 17EF                      l2685 16E7  
                    l2693 173F                      l2677 16C2                      l2669 16AF  
                    l2597 15C8                      l2589 15B9                      l4197 1FF2  
                    l4189 1FC3                      l2853 0BEC                      l2845 0BD8  
                    l2837 0BB4                      l2829 0B29                      l2781 097A  
                    l2773 096A                      l2765 0953                      l2757 0943  
                    l2933 1534                      l3901 1D29                      l4373 0716  
                    l4365 0668                      l4357 0590                      l4349 056E  
                    l4293 0315                      l4285 026F                      l4277 0226  
                    l4269 018F                      l4381 072E                      l4445 0933  
                    l4437 090B                      l4429 0895                      l3671 12C1  
                    l3663 12AD                      l3655 129D                      l3647 127D  
                    l3639 1260                      l3591 11C2                      l3583 11B2  
                    l3575 119F                      l4543 1A16                      l2695 1755  
                    l2687 1725                      l2679 16C3                      l2599 15D0  
                    l4199 1FF6                      l2871 0C3D                      l2863 0C0D  
                    l2855 0BED                      l2847 0BD9                      l2839 0BBD  
                    l2791 0996                      l2783 097F                      l2775 096F  
                    l2767 0958                      l2759 0949                      l2927 1483  
                    l2919 136E                      l3911 1D3D                      l3903 1D2E  
                    l4391 075D                      l4383 0734                      l4375 071D  
                    l4367 06A7                      l4359 0594                      l4295 0324  
                    l4287 02B6                      l4279 022F                      l4439 0911  
                    l3681 12E6                      l3673 12C5                      l3665 12B6  
                    l3657 129F                      l3649 128B                      l3593 11C8  
                    l3585 11B3                      l3577 11A0                      l3569 118E  
                    l2697 175A                      l2689 172B                      l2881 0C74  
                    l2865 0C12                      l2873 0C43                      l2857 0BF1  
                    l2849 0BE2                      l2793 099B                      l2785 0984  
                    l2777 0975                      l2769 0960                      l2929 1489  
                    l3921 1D53                      l3913 1D3F                      l3905 1D30  
                    l4393 075D                      l4385 073C                      l4377 0721  
                    l4369 06B3                      l4297 034D                      l4289 02C5  
                    l4537 00A7                      l3691 1324                      l3683 12F4  
                    l3675 12D9                      l3659 12A8                      l3667 12BC  
                    l3595 11CC                      l3579 11A5                      l3587 11B5  
                    l4539 07E4                      l2891 0C94                      l2883 0C76  
                    l2875 0C50                      l2867 0C20                      l2859 0C05  
                    l2795 09A0                      l2787 098C                      l2779 0979  
                    l3931 1D76                      l3923 1D57                      l3915 1D45  
                    l3907 1D34                      l4395 076B                      l4387 074D  
                    l4379 0727                      l4299 0356                      l3693 1332  
                    l3685 12F8                      l3669 12C0                      l3597 11CD  
                    l3589 11BD                      l2885 0C84                      l2877 0C5B  
                    l2869 0C24                      l2789 098E                      l2981 19CA  
                    l3925 1D68                      l3917 1D48                      l3933 1D7C  
                    l3909 1D39                      l3941 0CA0                      l4389 074E  
                    l3695 1341                      l3687 1311                      l3679 12E1  
                    l3599 11D2                      l2895 1001                      l2887 0C88  
                    l2879 0C6A                      l2799 09A9                      l2983 19D0  
                    l3935 1D81                      l3927 1D6E                      l3919 1D4F  
                    l3943 0CA4                      l4399 0773                      l3697 1345  
                    l3689 1317                      l2897 1005                      l2889 0C89  
                    l2985 19D2                      l2977 19C3                      l3937 1D86  
                    l3929 1D6F                      l3953 0D97                      l3945 0CA6  
                    l3699 134D                      l2899 1006                      l2979 19C4  
                    l3971 0F44                      l3955 0D9E                      l3947 0CAD  
                    l3963 0E53                      l3981 1011                      l3973 0F4B  
                    l3965 0E5A                      l3983 1024                      l3959 0E26  
                    l3993 1040                      l3897 1D22                      l3977 0FD3  
                    l3995 1046                      l3987 102D                      l3899 1D25  
                    ?_isr 0070                      l3997 1055                      l3999 1057  
                    STR_1 18A5                      STR_2 18A0                      u3110 1A7D  
                    u3111 1A7C                      u4000 09A0                      u4001 099F  
                    u3130 1A91                      u3131 1A90                      u4011 09F1  
                    u3140 19FC                      u4012 09F8                      u3300 1C99  
                    u3141 19FB                      u3125 1A84                      u4101 0B1B  
                    u4021 0A0D                      u4013 09FF                      u3301 1C98  
                    u4102 0B22                      u4022 0A14                      u4111 0B48  
                    u4103 0B29                      u4031 0A39                      u4023 0A1B  
                    u4200 0BEC                      u4120 0B72                      u4112 0B4F  
                    u4032 0A40                      u3400 1B11                      u3320 1CAC  
                    u3145 19F8                      u4201 0BEB                      u4113 0B56  
                    u4041 0A55                      u4033 0A47                      u3401 1B10  
                    u3321 1CAB                      u3305 1C95                      u4210 0BF1  
                    u4042 0A5C                      u3410 1A9C                      u3330 1CB1  
                    u3250 1C67                      u4211 0BF0                      u4131 0B7E  
                    u4043 0A63                      u3411 1A9B                      u3331 1CB0  
                    u3315 1CA0                      u3251 1C66                      u3500 15B2  
                    u5100 1DDE                      u4220 0C05                      u4140 0B9A  
                    u4132 0B85                      u3340 1ADA                      u4300 1374  
                    u3260 1C72                      u3501 15B1                      u5101 1DDD  
                    u4221 0C04                      u4133 0B8C                      u4125 0B6D  
                    u4061 0A8B                      u3341 1AD9                      u4301 1373  
                    u3261 1C71                      u3510 15BD                      u5110 1DE5  
                    u4230 0C0C                      u4062 0A92                      u3430 1AAE  
                    u3270 1C7D                      u3511 15BC                      u5111 1DE4  
                    u4231 0C0B                      u4151 0BA6                      u4071 0AB8  
                    u4063 0A99                      u4055 0A65                      u3431 1AAD  
                    u3271 1C7C                      u5040 19A1                      u3600 166C  
                    u3520 15C3                      u4240 0C12                      u4152 0BAD  
                    u4072 0ABF                      u3360 1AEC                      u3440 1AB8  
                    u5041 19A0                      u3601 166B                      u3521 15C2  
                    u4241 0C11                      u4153 0BB4                      u4145 0B95  
                    u4073 0AC6                      u3361 1AEB                      u3441 1AB7  
                    u3425 1AA0                      u3530 15C8                      u5130 1DF6  
                    u5050 1D98                      u4250 0C24                      u3290 1C8F  
                    u3531 15C7                      u5131 1DF5                      u5051 1D97  
                    u4251 0C23                      u4091 0AEE                      u3355 1ADE  
                    u4315 1391                      u3291 1C8E                      u3700 16E7  
                    u3620 1682                      u3540 15E1                      u5140 1DFB  
                    u5060 1DAF                      u4260 0C33                      u4180 0BD8  
                    u4092 0AF5                      u3380 1AFD                      u3460 1ACB  
                    u4340 1489                      u3701 16E6                      u3621 1681  
                    u3541 15E0                      u5141 1DFA                      u5125 1DE8  
                    u4181 0BD7                      u4165 0BB6                      u4093 0AFC  
                    u4085 0AC8                      u3381 1AFC                      u3461 1ACA  
                    u3445 1AB4                      u4341 1488                      u4325 13ED  
                    u3285 1C81                      u3630 1686                      u3550 15E5  
                    u3470 1589                      u5070 1DC5                      u4270 0C50  
                    u3711 16FE                      u3703 16E3                      u3631 1685  
                    u3615 166F                      u3551 15E4                      u3471 1588  
                    u5071 1DC4                      u4271 0C4F                      u4175 0BCD  
                    u3375 1AED                      u3455 1ABF                      u4335 1442  
                    u3800 1785                      u3720 1712                      u3712 16FF  
                    u3640 168B                      u3560 163D                      u3480 158F  
                    u5080 1DCC                      u4280 0C6A                      u3801 1784  
                    u3721 1713                      u3713 1704                      u3641 168A  
                    u3561 163C                      u3481 158E                      u5081 1DCB  
                    u5065 1DAA                      u4281 0C69                      u4265 0C2E  
                    u3385 1AF9                      u3810 178A                      u3730 1730  
                    u3722 1718                      u3714 1705                      u3570 1648  
                    u3490 1594                      u7010 1F91                      u4290 0C88  
                    u6210 1D29                      u3811 1789                      u3731 172F  
                    u3723 1719                      u3715 170A                      u3651 169D  
                    u3571 1646                      u3491 1593                      u7011 1F90  
                    u4291 0C87                      u4275 0C4C                      u4195 0BDB  
                    u3395 1B05                      u4355 14A6                      u6211 1D28  
                    u3900 17E8                      u3820 1790                      u3740 1755  
                    u3716 170B                      u3660 16AF                      u3652 16A4  
                    u3580 1649                      u7100 1FF6                      u6300 1D81  
                    u6220 1D34                      u3901 17E7                      u3821 178F  
                    u3741 1754                      u3661 16AE                      u3653 16AB  
                    u3565 1639                      u7101 1FF5                      u7005 1F83  
                    u4285 0C66                      u4365 14F3                      u6301 1D80  
                    u6221 1D33                      u5350 1A6C                      u3910 17ED  
                    u3830 1797                      u3750 175A                      u3670 16B3  
                    u3590 165D                      u7030 1FB3                      u4550 19CA  
                    u6230 1D45                      u6310 0CA4                      u7110 002E  
                    u5351 1A6B                      u3911 17EC                      u3831 1796  
                    u3751 1759                      u3671 16B2                      u3591 165C  
                    u5095 1DCE                      u7031 1FB2                      u4375 153F  
                    u4551 19C9                      u6231 1D44                      u6311 0CA3  
                    u7111 002D                      u3920 17FE                      u3840 179D  
                    u3680 16C2                      u4560 19D0                      u6400 0E5A  
                    u6320 0CAD                      u7200 0258                      u7120 0048  
                    u3921 17FD                      u3841 179C                      u3681 16C1  
                    u7025 1FA5                      u4561 19CF                      u6401 0E59  
                    u6321 0CAC                      u7201 0257                      u7121 0047  
                    u3850 17AF                      u3770 1770                      u7050 1FC3  
                    u3930 094D                      u6250 1D57                      u7210 026F  
                    u7130 008C                      u3851 17AE                      u3771 176F  
                    u7051 1FC2                      u3931 094C                      u6251 1D56  
                    u7211 026E                      u7131 008B                      u3860 17BE  
                    u3780 1775                      u7060 1FC9                      u3940 0953  
                    u7300 0485                      u7220 02C5                      u7140 00BB  
                    u3781 1774                      u3765 1765                      u7061 1FC8  
                    u7045 1FB8                      u3941 0952                      u6245 1D49  
                    u7301 0484                      u7221 02C4                      u7141 00BA  
                    i1l70 1D06                      u5710 119F                      u3870 17CD  
                    u3790 177F                      u4830 1A28                      u7070 1FCD  
                    u6510 1077                      u3950 0958                      u6270 1D68  
                    u7230 02EE                      u7150 00BF                      i1l71 1D1A  
                    u5711 119E                      u3871 17CC                      u3791 177E  
                    u3695 16C5                      u4831 1A27                      u7071 1FCC  
                    u6511 1076                      u3951 0957                      u6271 1D67  
                    u6415 0E7C                      u6335 0CCF                      u7231 02ED  
                    u7215 026B                      u7151 00BE                      u5720 11A5  
                    u3880 17D6                      u7080 1FE2                      u6600 10C5  
                    u3960 0979                      u6440 0F4B                      u6360 0D9E  
                    u7400 0734                      u7320 053E                      u7240 0315  
                    u7160 00FC                      i1l73 1D1B                      u5721 11A4  
                    u3881 17D5                      u3865 17B9                      u6601 10C4  
                    u6505 1062                      u3961 0978                      u6265 1D58  
                    u6441 0F4A                      u6425 0EB8                      u6361 0D9D  
                    u6345 0D0B                      u7401 0733                      u7321 053D  
                    u7241 0314                      u7225 02C1                      u7161 00FB  
                    u5730 11AA                      u3890 17DB                      u7090 1FF2  
                    u6610 10DB                      u6530 1090                      u3970 097F  
                    u6290 1D7C                      u7410 073C                      u7330 055F  
                    u7250 0324                      u7170 0144                      i1l67 1CD8  
                    u5731 11A9                      u3891 17DA                      u7091 1FF1  
                    u6611 10DA                      u6531 108F                      u6515 1073  
                    u3971 097E                      u6291 1D7B                      u6275 1D64  
                    u6435 0F03                      u6355 0D56                      u7411 073B  
                    u7331 055E                      u7315 0494                      u7251 0323  
                    u7171 0143                      u5900 12C0                      u5820 1260  
                    u5740 11CC                      u4860 1A42                      u6700 116B  
                    u6620 10EF                      u6540 1094                      u3980 0984  
                    u7420 074D                      u7340 056E                      u7260 034D  
                    u7180 018F                      u5901 12BF                      u5821 125F  
                    u5805 124C                      u5741 11CB                      u4861 1A41  
                    u4845 1A2F                      u7085 1FDD                      u6701 116A  
                    u6621 10EE                      u6541 1093                      u6525 1083  
                    u3981 0983                      u6285 1D70                      u7421 074C  
                    u7341 056D                      u7261 034C                      u7181 018E  
                    u5910 12C5                      u5750 11D2                      u6710 1172  
                    u6550 109B                      u3990 099B                      u7430 075D  
                    u7350 0589                      u7190 0226                      u5911 12C4  
                    u5815 1255                      u5751 11D1                      u4855 1A36  
                    u6711 1171                      u6551 109A                      u3991 099A  
                    u6455 0F5E                      u6375 0DB1                      u7431 075C  
                    u7351 0588                      u7335 055B                      u7255 0320  
                    u7191 0225                      u5920 12D9                      u5840 127C  
                    u5760 11D7                      u6800 085F                      u6640 1130  
                    u6480 1024                      u7440 076B                      u7280 046E  
                    u5921 12D8                      u5841 127B                      u5761 11D6  
                    u6801 085E                      u6641 112F                      u6481 1023  
                    u6465 0F9A                      u6385 0DED                      u7441 076A  
                    u7425 0749                      u7345 056A                      u7281 046D  
                    u5930 12E0                      u5850 1295                      u5770 11F2  
                    u6810 1B2C                      u6730 1183                      u6570 10AD  
                    u6490 103E                      u7450 0785                      u7290 0479  
                    u5931 12DF                      u5851 1294                      u5835 1263  
                    u5771 11F1                      u7507 1BE2                      u6811 1B2B  
                    u6731 1182                      u6635 1117                      u6571 10AC  
                    u6491 103D                      u6475 0FD6                      u6395 0E29  
                    u7451 0784                      u7435 0759                      u7291 0478  
                    u7275 043B                      u5940 12E6                      u5860 129D  
                    u5780 1210                      u6820 1B48                      u6900 1F40  
                    u6740 0812                      u6660 114E                      u6580 10B4  
                    u7380 0715                      u7460 0894                      u5941 12E5  
                    u5861 129C                      u5845 1278                      u5781 120F  
                    u6821 1B47                      u6901 1F3F                      u6741 0811  
                    u6725 1175                      u6661 114D                      u6645 112C  
                    u6581 10B3                      u6565 109D                      u7381 0714  
                    u7365 0610                      u7285 046A                      u7461 0893  
                    u5950 12F8                      u5790 124A                      u6830 1B62  
                    u6910 1C16                      u6670 1152                      u7390 072D  
                    u5951 12F7                      u5791 1249                      u6831 1B61  
                    u6911 1C15                      u6671 1151                      u6655 1141  
                    u7391 072C                      u7375 06B6                      u5960 1307  
                    u5880 12AC                      u6840 1EB6                      u6760 0826  
                    u6680 1159                      u5881 12AB                      u6905 1F3C  
                    u6841 1EB5                      u6761 0825                      u6681 1158  
                    u5970 1324                      u6850 1ED2                      u6930 1C2A  
                    u5971 1323                      u5875 12A1                      u6835 1B5E  
                    u6851 1ED1                      u6755 0817                      u6931 1C29  
                    u6595 10B7                      u5980 1341                      u6860 1EDE  
                    u6780 0841                      u6940 1C3C                      u5981 1340  
                    u5965 1302                      u7477 1BBA                      u6861 1EDD  
                    u6781 0840                      u6941 1C3B                      u6925 1C1B  
                    u5990 1358                      u5991 1357                      u5975 1320  
                    u5895 12AF                      u7487 1BC9                      u6871 1EED  
                    u6775 0828                      u6695 115B                      u6880 1F06  
                    u6872 1EEE                      u6960 1C59                      u5985 133D  
                    u7497 1BD5                      u6881 1F05                      u6873 1EF3  
                    u6785 083D                      u6961 1C58                      u6945 1C38  
                    u6874 1EF4                      u6970 1F4C                      u6891 1F15  
                    u6875 1EF9                      u6795 0851                      u6955 1C4B  
                    u6971 1F4B                      u6892 1F16                      u6876 1EFA  
                    u6980 1F50                      u6893 1F1B                      u6981 1F4F  
                    u6894 1F1C                      u6990 1F70                      u6895 1F21  
                    u6991 1F6F                      u6896 1F22              __CFG_WRT$OFF 0000  
                    _main 0868                      _pot1 006C                      _pot2 007A  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
         ___fldiv@new_exp 0056              _sprintf$1103 00B2                     ??_isr 0070  
           ___fltol@sign1 0060           __end_of___fladd 1800                     ?_main 0070  
         __end_of___fldiv 136B           __end_of___awdiv 1D8B           __end_of___flneg 19A4  
           __CFG_WDTE$OFF 0000           __end_of___awmod 1CBB           __end_of___flmul 0C9D  
         __end_of___flsub 1BB6           __end_of___fltol 1E07                     _ANSEL 0188  
         __end_of___lldiv 0868           ___awdiv@divisor 0020           __end_of___llmod 1C62  
         __end_of___lwdiv 1B16           __end_of___lwmod 1AD0           ___awdiv@counter 0025  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088            __CFG_FCMEN$OFF 0000  
                   _datos 00D7           __end_of_dpowers 18A0                     _scale 0C9D  
         __end_of_isdigit 19D4                     _setup 19D4            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 078A      __size_of_analogInSel 0099            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 093C                    ??_main 00CB  
    __size_of__tdiv_to_l_ 00BD          ___llmod@dividend 0024                    ?_scale 0044  
                  _ADRESH 001E          ___awdiv@dividend 0022                    ?_setup 0070  
        __end_of_adcSetup 19B1                    i1l3711 1CBB                    i1l3721 1CD2  
                  i1l3713 1CC2                    i1l3731 1CE8                    i1l3723 1CD6  
                  i1l3715 1CC6                    i1l3741 1CF9                    i1l3733 1CEC  
                  i1l3725 1CDC                    i1l3717 1CCA                    i1l3751 1D12  
                  i1l3743 1CFD                    i1l3735 1CF0                    i1l3727 1CE0  
                  i1l3719 1CCE                    i1l3753 1D16                    i1l3745 1D01  
                  i1l3729 1CE4                    i1l3737 1CF1                    i1l3747 1D0A  
                  i1l3739 1CF5                    i1l3749 1D0E                    u600_20 1CC2  
                  u600_21 1CC1                    u601_20 1CC6                    u601_21 1CC5  
                  u610_20 1CF5                    u602_20 1CCA                    u610_21 1CF4  
                  u602_21 1CC9                    u611_20 1CF9                    u603_20 1CCE  
                  u611_21 1CF8                    u603_21 1CCD                    u612_20 1CFD  
                  u604_20 1CD2                    u612_21 1CFC                    u604_21 1CD1  
                  u613_20 1D01                    u605_20 1CDC                    u613_21 1D00  
                  u605_21 1CDB                    u614_20 1D0A                    u606_20 1CE0  
                  u614_21 1D09                    u606_21 1CDF                    u615_20 1D0E  
                  u607_20 1CE4                    u615_21 1D0D                    u607_21 1CE3  
                  u616_20 1D12                    u608_20 1CE8                    u616_21 1D11  
                  u608_21 1CE7                    u617_20 1D16                    u609_20 1CEC  
                  u617_21 1D15                    u609_21 1CEB          __end_of___xxtofl 2000  
        __end_of_lcd8_cmd 1011            __CFG_PWRTE$OFF 0000          __end_of__powers_ 1844  
                  ___flge 1EA0                    ___fleq 1B16                 ??___fladd 0060  
                  ___wmul 1A22                 ??___fldiv 004C                 ??___awdiv 0024  
               ??___flneg 0077                 ??___awmod 0077                 ??___flmul 0032  
               ??___flsub 007A                 ??___fltol 005B                 ??___lldiv 0073  
               ??___llmod 0073                 ??___lwdiv 0079                 ??___lwmod 0077  
                  _fround 136B                    _oscInt 078A          ___awdiv@quotient 0027  
         ___awmod@divisor 0073           ___awmod@counter 0078     __size_of_lcd8_display 0026  
               ??_isdigit 0073        __size_of__Umul8_16 0029                    saved_w 007E  
               ??_sprintf 00AD                ___flge@ff1 0020                ___flge@ff2 0024  
            ___xxtofl@arg 0026              ___xxtofl@exp 0025              ___xxtofl@val 0073  
              ___fleq@ff1 0020                ___fleq@ff2 0024                _adcFoscSel 19FD  
 __end_of__initialization 001C                ___flneg@f1 0073                ___fltol@f1 0057  
          __pcstackCOMMON 0070              _lcd8_display 1A47             __end_of_scale 1000  
           __end_of_setup 19E7                __div_to_l_ 10CE           __div_to_l_@exp1 0079  
         __div_to_l_@cntr 0078                   ??_scale 0048           __div_to_l_@quot 0074  
                 ??_setup 0073                __pbssBANK0 006C                __pbssBANK1 00CF  
      __size_of_intEnable 0006                _lcd8_init2 1BB6                _delay_1ms2 19E7  
              _lcd8_write 19B1             __div_to_l_@f1 0020             __div_to_l_@f2 0024  
       __end_of__Umul8_16 1A96                __pmaintext 0868                   ?___flge 0020  
                 ?___fleq 0020                   ?___wmul 0073                __pintentry 0004  
                 ?_fround 0044                   ?_oscInt 0070                 ?_adcSetup 0070  
               ?___xxtofl 0073                 ?_lcd8_cmd 0070                __stringtab 1800  
             ?_adcFoscSel 0070         __end_of__npowers_ 1878                _scale$1102 0052  
         __size_of___flge 00A4           __size_of___fleq 0050                   ___fladd 1578  
                 ___fldiv 118E                   ___awdiv 1D22                   ___flneg 1999  
                 ___awmod 1C62                   ___flmul 093C                   ___flsub 1B66  
                 ___fltol 1D8B                   ___lldiv 0800           __size_of___wmul 0025  
                 ___llmod 1C0C                   ___lwdiv 1AD0                   ___lwmod 1A96  
              ??_adcSetup 0073         __end_of_intEnable 1991           __size_of_fround 020D  
         __size_of_oscInt 0075                   __ptext1 0020                   __ptext2 0C9D  
                 __ptext3 1C62                   __ptext4 1D22                   __ptext5 19C2  
                 __ptext6 136B                   __ptext7 1A96                   __ptext8 1AD0  
                 __ptext9 093C               ?__div_to_l_ 0020                   _dpowers 1878  
                 _isdigit 19C2              __size_of_isr 0067                ??___xxtofl 0020  
              ??_lcd8_cmd 0075          ___awmod@dividend 0075             lcd8_write@dat 0075  
                 _sprintf 0020                   clrloop0 1992             ??_analogInSel 0073  
    end_of_initialization 001C               ?_lcd8_init2 0070               ?_delay_1ms2 0070  
             ?_lcd8_write 0070           ___lldiv@divisor 0020           ___lldiv@counter 0078  
          __tdiv_to_l_@f1 0020            __tdiv_to_l_@f2 0024             ??__tdiv_to_l_ 0073  
               _PORTCbits 0007       __size_of_adcFoscSel 0025               ___fladd@grs 006B  
           ___xxtofl@sign 0024               ___fldiv@grs 0058               ___fldiv@rem 0051  
             ___flmul@grs 0038       __end_of_analogInSel 1EA0       __size_of__div_to_l_ 00C0  
          adcFoscSel@fosc 0075            __end_of___flge 1F44            __end_of___fleq 1B66  
          __end_of___wmul 1A47            __end_of_fround 1578            __end_of_oscInt 07FF  
     __size_of_lcd8_init2 0056       __size_of_delay_1ms2 0016       __size_of_lcd8_write 0011  
     start_initialization 000F         lcd8_display@value 0076       __end_of__tdiv_to_l_ 10CE  
             __end_of_isr 1D22           ___llmod@divisor 0020           ___llmod@counter 0074  
__CFG_FOSC$INTRC_NOCLKOUT 0000                  ??___flge 0073                  ??___fleq 0073  
                ??___wmul 0077                 __Umul8_16 1A6D                  ??_fround 0048  
                ??_oscInt 0073             sprintf@tmpval 00C0                 ___fladd@a 005C  
               ___fladd@b 0058                fround@prec 0057         __size_of_adcSetup 000D  
               ___fldiv@a 0044                 ___fldiv@b 0048                 ___flmul@a 002E  
               ___flmul@b 002A               __pbssCOMMON 007A                 ___flsub@a 00A0  
               ___flsub@b 00A4                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0         __size_of___xxtofl 00BC         __size_of_lcd8_cmd 0011  
             _analogInSel 1E07                oscInt@freq 0075              ??_adcFoscSel 0073  
             sprintf@flag 00B7               sprintf@eexp 00BD               sprintf@fval 00C6  
             sprintf@prec 00C4          ___lwdiv@dividend 0022                  ?___fladd 0058  
                ?___fldiv 0044                  ?___awdiv 0020                  ?___flneg 0073  
                ?___awmod 0073                  ?___flmul 002A                  ?___flsub 00A0  
                ?___fltol 0057                  ?___lldiv 0020                  ?___llmod 0020  
               __npowers_ 1844                ?__Umul8_16 0073                  ?___lwdiv 0020  
                ?___lwmod 0073                 __pstrings 1800               __tdiv_to_l_ 1011  
            ??__div_to_l_ 0073        __end_of_adcFoscSel 1A22                  ?_isdigit 0070  
               _intEnable 198B          ___lwdiv@quotient 0024                  ?_sprintf 00A8  
          __size_of_scale 0363            __size_of_setup 0013              ??_lcd8_init2 0076  
       interrupt_function 0004            ___wmul@product 0077              ??_delay_1ms2 0073  
            ??_lcd8_write 0075                 clear_ram0 1991                  _PIE1bits 008C  
                _PIR1bits 000C        __end_of__div_to_l_ 118E                _ADCON0bits 001F  
             __stringbase 180F                _ADCON1bits 009F         ___wmul@multiplier 0073  
      __end_of_lcd8_init2 1C0C                ?_intEnable 0070        __end_of_delay_1ms2 19FD  
      __end_of_lcd8_write 19C2             ?_lcd8_display 0076               ??__Umul8_16 0075  
        __size_of___fladd 0288          __size_of___fldiv 01DD          __size_of___awdiv 0069  
        __size_of___flneg 000B          __size_of___awmod 0059          __size_of___flmul 0361  
        __size_of___flsub 0050          __size_of___fltol 007C          __size_of___lldiv 0068  
        __size_of___llmod 0056          __size_of___lwdiv 0046          __size_of___lwmod 003A  
                _adcSetup 19A4               _fround$1100 0053               _fround$1101 004F  
      __end_of__stringtab 1810               _isdigit$921 0073                _ANSELHbits 0189  
              sprintf@val 00B9               lcd8_cmd@cmd 0075                  ___xxtofl 1F44  
                _lcd8_cmd 1000          __size_of_isdigit 0012           ___lwdiv@divisor 0020  
         ___lwdiv@counter 0026                  __ptext10 1A6D                  __ptext11 1011  
                __ptext20 1999                  __ptext12 10CE                  __ptext21 1EA0  
                __ptext13 1F44                  __ptext30 198B                  __ptext22 1B16  
                __ptext14 1A22                  __ptext31 1E07                  __ptext23 19D4  
                __ptext15 1C0C                  __ptext32 19A4                  __ptext24 078A  
                __ptext16 0800                  __ptext33 19FD                  __ptext25 1BB6  
                __ptext17 1D8B                  __ptext34 118E                  __ptext26 1000  
                __ptext18 1B66                  __ptext35 1CBB                  __ptext27 1A47  
                __ptext19 1578                  __ptext28 19B1                  __ptext29 19E7  
       __CFG_BOR4V$BOR40V 0000                  __powers_ 1810          __size_of_sprintf 076A  
           __size_of_main 00D4               delay_1ms2@i 0073                  _pot1_val 00D3  
                _pot2_val 00CF            ??_lcd8_display 0078                _INTCONbits 000B  
             ??_intEnable 0073                  isdigit@c 0074                  scale@scl 0056  
                intlevel1 0000              ?_analogInSel 0070                 sprintf@ap 00B6  
        __tdiv_to_l_@exp1 002D          __tdiv_to_l_@cntr 002C                 sprintf@sp 00BF  
        __tdiv_to_l_@quot 0028          ___lwmod@dividend 0075          ___lldiv@dividend 0024  
               stringcode 180A                _OSCCONbits 008F              ?__tdiv_to_l_ 0020  
  __Umul8_16@multiplicand 0073                  sprintf@c 00CA                  sprintf@f 00A8  
        ___lldiv@quotient 0074           ___lwmod@divisor 0073           ___lwmod@counter 0078  
                stringdir 180A                  stringtab 1800             ___fladd@signs 0068  
            ___fladd@aexp 0069              ___fladd@bexp 006A      __Umul8_16@multiplier 0024  
       __Umul8_16@product 0020  
